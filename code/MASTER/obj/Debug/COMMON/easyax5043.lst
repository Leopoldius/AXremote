                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.3.0 #8604 (Sep  2 2013) (Linux)
                              4 ; This file was generated Thu Feb 13 20:05:30 2014
                              5 ;--------------------------------------------------------
                              6 	.module easyax5043
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _ax5043_init_registers_rx
                             13 	.globl _ax5043_init_registers_tx
                             14 	.globl _dbglink_writestr
                             15 	.globl _dbglink_tx
                             16 	.globl _memset
                             17 	.globl _memcpy
                             18 	.globl _wtimer_remove_callback
                             19 	.globl _wtimer_add_callback
                             20 	.globl _wtimer_remove
                             21 	.globl _wtimer1_addrelative
                             22 	.globl _wtimer0_addrelative
                             23 	.globl _wtimer0_addabsolute
                             24 	.globl _wtimer0_curtime
                             25 	.globl _wtimer_runcallbacks
                             26 	.globl _wtimer_idle
                             27 	.globl _ax5043_writefifo
                             28 	.globl _ax5043_readfifo
                             29 	.globl _ax5043_wakeup_deepsleep
                             30 	.globl _ax5043_enter_deepsleep
                             31 	.globl _ax5043_reset
                             32 	.globl _radio_read24
                             33 	.globl _radio_read16
                             34 	.globl _pn9_buffer
                             35 	.globl _pn9_advance_byte
                             36 	.globl _pn9_advance_bits
                             37 	.globl _axradio_framing_append_crc
                             38 	.globl _axradio_framing_check_crc
                             39 	.globl _ax5043_set_registers_rx
                             40 	.globl _ax5043_set_registers_tx
                             41 	.globl _ax5043_set_registers
                             42 	.globl _axradio_statuschange
                             43 	.globl _axradio_conv_timeinterval_totimer0
                             44 	.globl _checksignedlimit32
                             45 	.globl _checksignedlimit16
                             46 	.globl _signedlimit16
                             47 	.globl _signextend24
                             48 	.globl _signextend20
                             49 	.globl _PORTC_7
                             50 	.globl _PORTC_6
                             51 	.globl _PORTC_5
                             52 	.globl _PORTC_4
                             53 	.globl _PORTC_3
                             54 	.globl _PORTC_2
                             55 	.globl _PORTC_1
                             56 	.globl _PORTC_0
                             57 	.globl _PORTB_7
                             58 	.globl _PORTB_6
                             59 	.globl _PORTB_5
                             60 	.globl _PORTB_4
                             61 	.globl _PORTB_3
                             62 	.globl _PORTB_2
                             63 	.globl _PORTB_1
                             64 	.globl _PORTB_0
                             65 	.globl _PORTA_7
                             66 	.globl _PORTA_6
                             67 	.globl _PORTA_5
                             68 	.globl _PORTA_4
                             69 	.globl _PORTA_3
                             70 	.globl _PORTA_2
                             71 	.globl _PORTA_1
                             72 	.globl _PORTA_0
                             73 	.globl _PINC_7
                             74 	.globl _PINC_6
                             75 	.globl _PINC_5
                             76 	.globl _PINC_4
                             77 	.globl _PINC_3
                             78 	.globl _PINC_2
                             79 	.globl _PINC_1
                             80 	.globl _PINC_0
                             81 	.globl _PINB_7
                             82 	.globl _PINB_6
                             83 	.globl _PINB_5
                             84 	.globl _PINB_4
                             85 	.globl _PINB_3
                             86 	.globl _PINB_2
                             87 	.globl _PINB_1
                             88 	.globl _PINB_0
                             89 	.globl _PINA_7
                             90 	.globl _PINA_6
                             91 	.globl _PINA_5
                             92 	.globl _PINA_4
                             93 	.globl _PINA_3
                             94 	.globl _PINA_2
                             95 	.globl _PINA_1
                             96 	.globl _PINA_0
                             97 	.globl _CY
                             98 	.globl _AC
                             99 	.globl _F0
                            100 	.globl _RS1
                            101 	.globl _RS0
                            102 	.globl _OV
                            103 	.globl _F1
                            104 	.globl _P
                            105 	.globl _IP_7
                            106 	.globl _IP_6
                            107 	.globl _IP_5
                            108 	.globl _IP_4
                            109 	.globl _IP_3
                            110 	.globl _IP_2
                            111 	.globl _IP_1
                            112 	.globl _IP_0
                            113 	.globl _EA
                            114 	.globl _IE_7
                            115 	.globl _IE_6
                            116 	.globl _IE_5
                            117 	.globl _IE_4
                            118 	.globl _IE_3
                            119 	.globl _IE_2
                            120 	.globl _IE_1
                            121 	.globl _IE_0
                            122 	.globl _EIP_7
                            123 	.globl _EIP_6
                            124 	.globl _EIP_5
                            125 	.globl _EIP_4
                            126 	.globl _EIP_3
                            127 	.globl _EIP_2
                            128 	.globl _EIP_1
                            129 	.globl _EIP_0
                            130 	.globl _EIE_7
                            131 	.globl _EIE_6
                            132 	.globl _EIE_5
                            133 	.globl _EIE_4
                            134 	.globl _EIE_3
                            135 	.globl _EIE_2
                            136 	.globl _EIE_1
                            137 	.globl _EIE_0
                            138 	.globl _E2IP_7
                            139 	.globl _E2IP_6
                            140 	.globl _E2IP_5
                            141 	.globl _E2IP_4
                            142 	.globl _E2IP_3
                            143 	.globl _E2IP_2
                            144 	.globl _E2IP_1
                            145 	.globl _E2IP_0
                            146 	.globl _E2IE_7
                            147 	.globl _E2IE_6
                            148 	.globl _E2IE_5
                            149 	.globl _E2IE_4
                            150 	.globl _E2IE_3
                            151 	.globl _E2IE_2
                            152 	.globl _E2IE_1
                            153 	.globl _E2IE_0
                            154 	.globl _B_7
                            155 	.globl _B_6
                            156 	.globl _B_5
                            157 	.globl _B_4
                            158 	.globl _B_3
                            159 	.globl _B_2
                            160 	.globl _B_1
                            161 	.globl _B_0
                            162 	.globl _ACC_7
                            163 	.globl _ACC_6
                            164 	.globl _ACC_5
                            165 	.globl _ACC_4
                            166 	.globl _ACC_3
                            167 	.globl _ACC_2
                            168 	.globl _ACC_1
                            169 	.globl _ACC_0
                            170 	.globl _WTSTAT
                            171 	.globl _WTIRQEN
                            172 	.globl _WTEVTD
                            173 	.globl _WTEVTD1
                            174 	.globl _WTEVTD0
                            175 	.globl _WTEVTC
                            176 	.globl _WTEVTC1
                            177 	.globl _WTEVTC0
                            178 	.globl _WTEVTB
                            179 	.globl _WTEVTB1
                            180 	.globl _WTEVTB0
                            181 	.globl _WTEVTA
                            182 	.globl _WTEVTA1
                            183 	.globl _WTEVTA0
                            184 	.globl _WTCNTR1
                            185 	.globl _WTCNTB
                            186 	.globl _WTCNTB1
                            187 	.globl _WTCNTB0
                            188 	.globl _WTCNTA
                            189 	.globl _WTCNTA1
                            190 	.globl _WTCNTA0
                            191 	.globl _WTCFGB
                            192 	.globl _WTCFGA
                            193 	.globl _WDTRESET
                            194 	.globl _WDTCFG
                            195 	.globl _U1STATUS
                            196 	.globl _U1SHREG
                            197 	.globl _U1MODE
                            198 	.globl _U1CTRL
                            199 	.globl _U0STATUS
                            200 	.globl _U0SHREG
                            201 	.globl _U0MODE
                            202 	.globl _U0CTRL
                            203 	.globl _T2STATUS
                            204 	.globl _T2PERIOD
                            205 	.globl _T2PERIOD1
                            206 	.globl _T2PERIOD0
                            207 	.globl _T2MODE
                            208 	.globl _T2CNT
                            209 	.globl _T2CNT1
                            210 	.globl _T2CNT0
                            211 	.globl _T2CLKSRC
                            212 	.globl _T1STATUS
                            213 	.globl _T1PERIOD
                            214 	.globl _T1PERIOD1
                            215 	.globl _T1PERIOD0
                            216 	.globl _T1MODE
                            217 	.globl _T1CNT
                            218 	.globl _T1CNT1
                            219 	.globl _T1CNT0
                            220 	.globl _T1CLKSRC
                            221 	.globl _T0STATUS
                            222 	.globl _T0PERIOD
                            223 	.globl _T0PERIOD1
                            224 	.globl _T0PERIOD0
                            225 	.globl _T0MODE
                            226 	.globl _T0CNT
                            227 	.globl _T0CNT1
                            228 	.globl _T0CNT0
                            229 	.globl _T0CLKSRC
                            230 	.globl _SPSTATUS
                            231 	.globl _SPSHREG
                            232 	.globl _SPMODE
                            233 	.globl _SPCLKSRC
                            234 	.globl _RADIOSTAT
                            235 	.globl _RADIOSTAT1
                            236 	.globl _RADIOSTAT0
                            237 	.globl _RADIODATA
                            238 	.globl _RADIODATA3
                            239 	.globl _RADIODATA2
                            240 	.globl _RADIODATA1
                            241 	.globl _RADIODATA0
                            242 	.globl _RADIOADDR
                            243 	.globl _RADIOADDR1
                            244 	.globl _RADIOADDR0
                            245 	.globl _RADIOACC
                            246 	.globl _OC1STATUS
                            247 	.globl _OC1PIN
                            248 	.globl _OC1MODE
                            249 	.globl _OC1COMP
                            250 	.globl _OC1COMP1
                            251 	.globl _OC1COMP0
                            252 	.globl _OC0STATUS
                            253 	.globl _OC0PIN
                            254 	.globl _OC0MODE
                            255 	.globl _OC0COMP
                            256 	.globl _OC0COMP1
                            257 	.globl _OC0COMP0
                            258 	.globl _NVSTATUS
                            259 	.globl _NVKEY
                            260 	.globl _NVDATA
                            261 	.globl _NVDATA1
                            262 	.globl _NVDATA0
                            263 	.globl _NVADDR
                            264 	.globl _NVADDR1
                            265 	.globl _NVADDR0
                            266 	.globl _IC1STATUS
                            267 	.globl _IC1MODE
                            268 	.globl _IC1CAPT
                            269 	.globl _IC1CAPT1
                            270 	.globl _IC1CAPT0
                            271 	.globl _IC0STATUS
                            272 	.globl _IC0MODE
                            273 	.globl _IC0CAPT
                            274 	.globl _IC0CAPT1
                            275 	.globl _IC0CAPT0
                            276 	.globl _PORTR
                            277 	.globl _PORTC
                            278 	.globl _PORTB
                            279 	.globl _PORTA
                            280 	.globl _PINR
                            281 	.globl _PINC
                            282 	.globl _PINB
                            283 	.globl _PINA
                            284 	.globl _DIRR
                            285 	.globl _DIRC
                            286 	.globl _DIRB
                            287 	.globl _DIRA
                            288 	.globl _DBGLNKSTAT
                            289 	.globl _DBGLNKBUF
                            290 	.globl _CODECONFIG
                            291 	.globl _CLKSTAT
                            292 	.globl _CLKCON
                            293 	.globl _ANALOGCOMP
                            294 	.globl _ADCCONV
                            295 	.globl _ADCCLKSRC
                            296 	.globl _ADCCH3CONFIG
                            297 	.globl _ADCCH2CONFIG
                            298 	.globl _ADCCH1CONFIG
                            299 	.globl _ADCCH0CONFIG
                            300 	.globl __XPAGE
                            301 	.globl _XPAGE
                            302 	.globl _SP
                            303 	.globl _PSW
                            304 	.globl _PCON
                            305 	.globl _IP
                            306 	.globl _IE
                            307 	.globl _EIP
                            308 	.globl _EIE
                            309 	.globl _E2IP
                            310 	.globl _E2IE
                            311 	.globl _DPS
                            312 	.globl _DPTR1
                            313 	.globl _DPTR0
                            314 	.globl _DPL1
                            315 	.globl _DPL
                            316 	.globl _DPH1
                            317 	.globl _DPH
                            318 	.globl _B
                            319 	.globl _ACC
                            320 	.globl _f33_saved
                            321 	.globl _f32_saved
                            322 	.globl _f31_saved
                            323 	.globl _f30_saved
                            324 	.globl _axradio_timer
                            325 	.globl _axradio_cb_transmitdata
                            326 	.globl _axradio_cb_transmitend
                            327 	.globl _axradio_cb_transmitstart
                            328 	.globl _axradio_cb_channelstate
                            329 	.globl _axradio_cb_receivesfd
                            330 	.globl _axradio_cb_receive
                            331 	.globl _axradio_rxbuffer
                            332 	.globl _axradio_txbuffer
                            333 	.globl _axradio_default_remoteaddr
                            334 	.globl _axradio_localaddr
                            335 	.globl _axradio_timeanchor
                            336 	.globl _axradio_sync_periodcorr
                            337 	.globl _axradio_sync_time
                            338 	.globl _axradio_ack_seqnr
                            339 	.globl _axradio_ack_count
                            340 	.globl _axradio_curfreqoffset
                            341 	.globl _axradio_curchannel
                            342 	.globl _axradio_txbuffer_cnt
                            343 	.globl _axradio_txbuffer_len
                            344 	.globl _axradio_syncstate
                            345 	.globl _AX5043_POWCTRL1
                            346 	.globl _AX5043_REF
                            347 	.globl _AX5043_0xF44
                            348 	.globl _AX5043_0xF35
                            349 	.globl _AX5043_0xF34
                            350 	.globl _AX5043_0xF33
                            351 	.globl _AX5043_0xF32
                            352 	.globl _AX5043_0xF31
                            353 	.globl _AX5043_0xF30
                            354 	.globl _AX5043_0xF2F
                            355 	.globl _AX5043_0xF26
                            356 	.globl _AX5043_0xF23
                            357 	.globl _AX5043_0xF22
                            358 	.globl _AX5043_0xF21
                            359 	.globl _AX5043_0xF1C
                            360 	.globl _AX5043_0xF18
                            361 	.globl _AX5043_0xF11
                            362 	.globl _AX5043_0xF10
                            363 	.globl _AX5043_0xF0C
                            364 	.globl _AX5043_0xF01
                            365 	.globl _AX5043_0xF00
                            366 	.globl _AX5043_TIMEGAIN3NB
                            367 	.globl _AX5043_TIMEGAIN2NB
                            368 	.globl _AX5043_TIMEGAIN1NB
                            369 	.globl _AX5043_TIMEGAIN0NB
                            370 	.globl _AX5043_RXPARAMSETSNB
                            371 	.globl _AX5043_RXPARAMCURSETNB
                            372 	.globl _AX5043_PKTMAXLENNB
                            373 	.globl _AX5043_PKTLENOFFSETNB
                            374 	.globl _AX5043_PKTLENCFGNB
                            375 	.globl _AX5043_PKTADDRMASK3NB
                            376 	.globl _AX5043_PKTADDRMASK2NB
                            377 	.globl _AX5043_PKTADDRMASK1NB
                            378 	.globl _AX5043_PKTADDRMASK0NB
                            379 	.globl _AX5043_PKTADDRCFGNB
                            380 	.globl _AX5043_PKTADDR3NB
                            381 	.globl _AX5043_PKTADDR2NB
                            382 	.globl _AX5043_PKTADDR1NB
                            383 	.globl _AX5043_PKTADDR0NB
                            384 	.globl _AX5043_PHASEGAIN3NB
                            385 	.globl _AX5043_PHASEGAIN2NB
                            386 	.globl _AX5043_PHASEGAIN1NB
                            387 	.globl _AX5043_PHASEGAIN0NB
                            388 	.globl _AX5043_FREQUENCYLEAKNB
                            389 	.globl _AX5043_FREQUENCYGAIND3NB
                            390 	.globl _AX5043_FREQUENCYGAIND2NB
                            391 	.globl _AX5043_FREQUENCYGAIND1NB
                            392 	.globl _AX5043_FREQUENCYGAIND0NB
                            393 	.globl _AX5043_FREQUENCYGAINC3NB
                            394 	.globl _AX5043_FREQUENCYGAINC2NB
                            395 	.globl _AX5043_FREQUENCYGAINC1NB
                            396 	.globl _AX5043_FREQUENCYGAINC0NB
                            397 	.globl _AX5043_FREQUENCYGAINB3NB
                            398 	.globl _AX5043_FREQUENCYGAINB2NB
                            399 	.globl _AX5043_FREQUENCYGAINB1NB
                            400 	.globl _AX5043_FREQUENCYGAINB0NB
                            401 	.globl _AX5043_FREQUENCYGAINA3NB
                            402 	.globl _AX5043_FREQUENCYGAINA2NB
                            403 	.globl _AX5043_FREQUENCYGAINA1NB
                            404 	.globl _AX5043_FREQUENCYGAINA0NB
                            405 	.globl _AX5043_FREQDEV13NB
                            406 	.globl _AX5043_FREQDEV12NB
                            407 	.globl _AX5043_FREQDEV11NB
                            408 	.globl _AX5043_FREQDEV10NB
                            409 	.globl _AX5043_FREQDEV03NB
                            410 	.globl _AX5043_FREQDEV02NB
                            411 	.globl _AX5043_FREQDEV01NB
                            412 	.globl _AX5043_FREQDEV00NB
                            413 	.globl _AX5043_FOURFSK3NB
                            414 	.globl _AX5043_FOURFSK2NB
                            415 	.globl _AX5043_FOURFSK1NB
                            416 	.globl _AX5043_FOURFSK0NB
                            417 	.globl _AX5043_DRGAIN3NB
                            418 	.globl _AX5043_DRGAIN2NB
                            419 	.globl _AX5043_DRGAIN1NB
                            420 	.globl _AX5043_DRGAIN0NB
                            421 	.globl _AX5043_BBOFFSRES3NB
                            422 	.globl _AX5043_BBOFFSRES2NB
                            423 	.globl _AX5043_BBOFFSRES1NB
                            424 	.globl _AX5043_BBOFFSRES0NB
                            425 	.globl _AX5043_AMPLITUDEGAIN3NB
                            426 	.globl _AX5043_AMPLITUDEGAIN2NB
                            427 	.globl _AX5043_AMPLITUDEGAIN1NB
                            428 	.globl _AX5043_AMPLITUDEGAIN0NB
                            429 	.globl _AX5043_AGCTARGET3NB
                            430 	.globl _AX5043_AGCTARGET2NB
                            431 	.globl _AX5043_AGCTARGET1NB
                            432 	.globl _AX5043_AGCTARGET0NB
                            433 	.globl _AX5043_AGCMINMAX3NB
                            434 	.globl _AX5043_AGCMINMAX2NB
                            435 	.globl _AX5043_AGCMINMAX1NB
                            436 	.globl _AX5043_AGCMINMAX0NB
                            437 	.globl _AX5043_AGCGAIN3NB
                            438 	.globl _AX5043_AGCGAIN2NB
                            439 	.globl _AX5043_AGCGAIN1NB
                            440 	.globl _AX5043_AGCGAIN0NB
                            441 	.globl _AX5043_AGCAHYST3NB
                            442 	.globl _AX5043_AGCAHYST2NB
                            443 	.globl _AX5043_AGCAHYST1NB
                            444 	.globl _AX5043_AGCAHYST0NB
                            445 	.globl _AX5043_XTALSTATUSNB
                            446 	.globl _AX5043_XTALCAPNB
                            447 	.globl _AX5043_WAKEUPXOEARLYNB
                            448 	.globl _AX5043_WAKEUPTIMER1NB
                            449 	.globl _AX5043_WAKEUPTIMER0NB
                            450 	.globl _AX5043_WAKEUPFREQ1NB
                            451 	.globl _AX5043_WAKEUPFREQ0NB
                            452 	.globl _AX5043_WAKEUP1NB
                            453 	.globl _AX5043_WAKEUP0NB
                            454 	.globl _AX5043_TXRATE2NB
                            455 	.globl _AX5043_TXRATE1NB
                            456 	.globl _AX5043_TXRATE0NB
                            457 	.globl _AX5043_TXPWRCOEFFE1NB
                            458 	.globl _AX5043_TXPWRCOEFFE0NB
                            459 	.globl _AX5043_TXPWRCOEFFD1NB
                            460 	.globl _AX5043_TXPWRCOEFFD0NB
                            461 	.globl _AX5043_TXPWRCOEFFC1NB
                            462 	.globl _AX5043_TXPWRCOEFFC0NB
                            463 	.globl _AX5043_TXPWRCOEFFB1NB
                            464 	.globl _AX5043_TXPWRCOEFFB0NB
                            465 	.globl _AX5043_TXPWRCOEFFA1NB
                            466 	.globl _AX5043_TXPWRCOEFFA0NB
                            467 	.globl _AX5043_TRKRFFREQ2NB
                            468 	.globl _AX5043_TRKRFFREQ1NB
                            469 	.globl _AX5043_TRKRFFREQ0NB
                            470 	.globl _AX5043_TRKPHASE1NB
                            471 	.globl _AX5043_TRKPHASE0NB
                            472 	.globl _AX5043_TRKFSKDEMOD1NB
                            473 	.globl _AX5043_TRKFSKDEMOD0NB
                            474 	.globl _AX5043_TRKFREQ1NB
                            475 	.globl _AX5043_TRKFREQ0NB
                            476 	.globl _AX5043_TRKDATARATE2NB
                            477 	.globl _AX5043_TRKDATARATE1NB
                            478 	.globl _AX5043_TRKDATARATE0NB
                            479 	.globl _AX5043_TRKAMPLITUDE1NB
                            480 	.globl _AX5043_TRKAMPLITUDE0NB
                            481 	.globl _AX5043_TRKAFSKDEMOD1NB
                            482 	.globl _AX5043_TRKAFSKDEMOD0NB
                            483 	.globl _AX5043_TMGTXSETTLENB
                            484 	.globl _AX5043_TMGTXBOOSTNB
                            485 	.globl _AX5043_TMGRXSETTLENB
                            486 	.globl _AX5043_TMGRXRSSINB
                            487 	.globl _AX5043_TMGRXPREAMBLE3NB
                            488 	.globl _AX5043_TMGRXPREAMBLE2NB
                            489 	.globl _AX5043_TMGRXPREAMBLE1NB
                            490 	.globl _AX5043_TMGRXOFFSACQNB
                            491 	.globl _AX5043_TMGRXCOARSEAGCNB
                            492 	.globl _AX5043_TMGRXBOOSTNB
                            493 	.globl _AX5043_TMGRXAGCNB
                            494 	.globl _AX5043_TIMER2NB
                            495 	.globl _AX5043_TIMER1NB
                            496 	.globl _AX5043_TIMER0NB
                            497 	.globl _AX5043_SILICONREVISIONNB
                            498 	.globl _AX5043_SCRATCHNB
                            499 	.globl _AX5043_RXDATARATE2NB
                            500 	.globl _AX5043_RXDATARATE1NB
                            501 	.globl _AX5043_RXDATARATE0NB
                            502 	.globl _AX5043_RSSIREFERENCENB
                            503 	.globl _AX5043_RSSIABSTHRNB
                            504 	.globl _AX5043_RSSINB
                            505 	.globl _AX5043_RADIOSTATENB
                            506 	.globl _AX5043_RADIOEVENTREQ1NB
                            507 	.globl _AX5043_RADIOEVENTREQ0NB
                            508 	.globl _AX5043_RADIOEVENTMASK1NB
                            509 	.globl _AX5043_RADIOEVENTMASK0NB
                            510 	.globl _AX5043_PWRMODENB
                            511 	.globl _AX5043_PWRAMPNB
                            512 	.globl _AX5043_POWSTICKYSTATNB
                            513 	.globl _AX5043_POWSTATNB
                            514 	.globl _AX5043_POWIRQMASKNB
                            515 	.globl _AX5043_PLLVCOIRNB
                            516 	.globl _AX5043_PLLVCOINB
                            517 	.globl _AX5043_PLLVCODIVNB
                            518 	.globl _AX5043_PLLRNGCLKNB
                            519 	.globl _AX5043_PLLRANGINGBNB
                            520 	.globl _AX5043_PLLRANGINGANB
                            521 	.globl _AX5043_PLLLOOPBOOSTNB
                            522 	.globl _AX5043_PLLLOOPNB
                            523 	.globl _AX5043_PLLLOCKDETNB
                            524 	.globl _AX5043_PLLCPIBOOSTNB
                            525 	.globl _AX5043_PLLCPINB
                            526 	.globl _AX5043_PKTSTOREFLAGSNB
                            527 	.globl _AX5043_PKTMISCFLAGSNB
                            528 	.globl _AX5043_PKTCHUNKSIZENB
                            529 	.globl _AX5043_PKTACCEPTFLAGSNB
                            530 	.globl _AX5043_PINSTATENB
                            531 	.globl _AX5043_PINFUNCSYSCLKNB
                            532 	.globl _AX5043_PINFUNCPWRAMPNB
                            533 	.globl _AX5043_PINFUNCIRQNB
                            534 	.globl _AX5043_PINFUNCDCLKNB
                            535 	.globl _AX5043_PINFUNCDATANB
                            536 	.globl _AX5043_PINFUNCANTSELNB
                            537 	.globl _AX5043_MODULATIONNB
                            538 	.globl _AX5043_MODCFGFNB
                            539 	.globl _AX5043_MODCFGANB
                            540 	.globl _AX5043_MAXRFOFFSET2NB
                            541 	.globl _AX5043_MAXRFOFFSET1NB
                            542 	.globl _AX5043_MAXRFOFFSET0NB
                            543 	.globl _AX5043_MAXDROFFSET2NB
                            544 	.globl _AX5043_MAXDROFFSET1NB
                            545 	.globl _AX5043_MAXDROFFSET0NB
                            546 	.globl _AX5043_MATCH1PAT1NB
                            547 	.globl _AX5043_MATCH1PAT0NB
                            548 	.globl _AX5043_MATCH1MINNB
                            549 	.globl _AX5043_MATCH1MAXNB
                            550 	.globl _AX5043_MATCH1LENNB
                            551 	.globl _AX5043_MATCH0PAT3NB
                            552 	.globl _AX5043_MATCH0PAT2NB
                            553 	.globl _AX5043_MATCH0PAT1NB
                            554 	.globl _AX5043_MATCH0PAT0NB
                            555 	.globl _AX5043_MATCH0MINNB
                            556 	.globl _AX5043_MATCH0MAXNB
                            557 	.globl _AX5043_MATCH0LENNB
                            558 	.globl _AX5043_LPOSCSTATUSNB
                            559 	.globl _AX5043_LPOSCREF1NB
                            560 	.globl _AX5043_LPOSCREF0NB
                            561 	.globl _AX5043_LPOSCPER1NB
                            562 	.globl _AX5043_LPOSCPER0NB
                            563 	.globl _AX5043_LPOSCKFILT1NB
                            564 	.globl _AX5043_LPOSCKFILT0NB
                            565 	.globl _AX5043_LPOSCFREQ1NB
                            566 	.globl _AX5043_LPOSCFREQ0NB
                            567 	.globl _AX5043_LPOSCCONFIGNB
                            568 	.globl _AX5043_IRQREQUEST1NB
                            569 	.globl _AX5043_IRQREQUEST0NB
                            570 	.globl _AX5043_IRQMASK1NB
                            571 	.globl _AX5043_IRQMASK0NB
                            572 	.globl _AX5043_IRQINVERSION1NB
                            573 	.globl _AX5043_IRQINVERSION0NB
                            574 	.globl _AX5043_IFFREQ1NB
                            575 	.globl _AX5043_IFFREQ0NB
                            576 	.globl _AX5043_GPADCPERIODNB
                            577 	.globl _AX5043_GPADCCTRLNB
                            578 	.globl _AX5043_GPADC13VALUE1NB
                            579 	.globl _AX5043_GPADC13VALUE0NB
                            580 	.globl _AX5043_FSKDMIN1NB
                            581 	.globl _AX5043_FSKDMIN0NB
                            582 	.globl _AX5043_FSKDMAX1NB
                            583 	.globl _AX5043_FSKDMAX0NB
                            584 	.globl _AX5043_FSKDEV2NB
                            585 	.globl _AX5043_FSKDEV1NB
                            586 	.globl _AX5043_FSKDEV0NB
                            587 	.globl _AX5043_FREQB3NB
                            588 	.globl _AX5043_FREQB2NB
                            589 	.globl _AX5043_FREQB1NB
                            590 	.globl _AX5043_FREQB0NB
                            591 	.globl _AX5043_FREQA3NB
                            592 	.globl _AX5043_FREQA2NB
                            593 	.globl _AX5043_FREQA1NB
                            594 	.globl _AX5043_FREQA0NB
                            595 	.globl _AX5043_FRAMINGNB
                            596 	.globl _AX5043_FIFOTHRESH1NB
                            597 	.globl _AX5043_FIFOTHRESH0NB
                            598 	.globl _AX5043_FIFOSTATNB
                            599 	.globl _AX5043_FIFOFREE1NB
                            600 	.globl _AX5043_FIFOFREE0NB
                            601 	.globl _AX5043_FIFODATANB
                            602 	.globl _AX5043_FIFOCOUNT1NB
                            603 	.globl _AX5043_FIFOCOUNT0NB
                            604 	.globl _AX5043_FECSYNCNB
                            605 	.globl _AX5043_FECSTATUSNB
                            606 	.globl _AX5043_FECNB
                            607 	.globl _AX5043_ENCODINGNB
                            608 	.globl _AX5043_DIVERSITYNB
                            609 	.globl _AX5043_DECIMATIONNB
                            610 	.globl _AX5043_DACVALUE1NB
                            611 	.globl _AX5043_DACVALUE0NB
                            612 	.globl _AX5043_DACCONFIGNB
                            613 	.globl _AX5043_CRCINIT3NB
                            614 	.globl _AX5043_CRCINIT2NB
                            615 	.globl _AX5043_CRCINIT1NB
                            616 	.globl _AX5043_CRCINIT0NB
                            617 	.globl _AX5043_BGNDRSSITHRNB
                            618 	.globl _AX5043_BGNDRSSIGAINNB
                            619 	.globl _AX5043_BGNDRSSINB
                            620 	.globl _AX5043_BBTUNENB
                            621 	.globl _AX5043_BBOFFSCAPNB
                            622 	.globl _AX5043_AMPLFILTERNB
                            623 	.globl _AX5043_AGCCOUNTERNB
                            624 	.globl _AX5043_AFSKSPACE1NB
                            625 	.globl _AX5043_AFSKSPACE0NB
                            626 	.globl _AX5043_AFSKMARK1NB
                            627 	.globl _AX5043_AFSKMARK0NB
                            628 	.globl _AX5043_AFSKCTRLNB
                            629 	.globl _AX5043_TIMEGAIN3
                            630 	.globl _AX5043_TIMEGAIN2
                            631 	.globl _AX5043_TIMEGAIN1
                            632 	.globl _AX5043_TIMEGAIN0
                            633 	.globl _AX5043_RXPARAMSETS
                            634 	.globl _AX5043_RXPARAMCURSET
                            635 	.globl _AX5043_PKTMAXLEN
                            636 	.globl _AX5043_PKTLENOFFSET
                            637 	.globl _AX5043_PKTLENCFG
                            638 	.globl _AX5043_PKTADDRMASK3
                            639 	.globl _AX5043_PKTADDRMASK2
                            640 	.globl _AX5043_PKTADDRMASK1
                            641 	.globl _AX5043_PKTADDRMASK0
                            642 	.globl _AX5043_PKTADDRCFG
                            643 	.globl _AX5043_PKTADDR3
                            644 	.globl _AX5043_PKTADDR2
                            645 	.globl _AX5043_PKTADDR1
                            646 	.globl _AX5043_PKTADDR0
                            647 	.globl _AX5043_PHASEGAIN3
                            648 	.globl _AX5043_PHASEGAIN2
                            649 	.globl _AX5043_PHASEGAIN1
                            650 	.globl _AX5043_PHASEGAIN0
                            651 	.globl _AX5043_FREQUENCYLEAK
                            652 	.globl _AX5043_FREQUENCYGAIND3
                            653 	.globl _AX5043_FREQUENCYGAIND2
                            654 	.globl _AX5043_FREQUENCYGAIND1
                            655 	.globl _AX5043_FREQUENCYGAIND0
                            656 	.globl _AX5043_FREQUENCYGAINC3
                            657 	.globl _AX5043_FREQUENCYGAINC2
                            658 	.globl _AX5043_FREQUENCYGAINC1
                            659 	.globl _AX5043_FREQUENCYGAINC0
                            660 	.globl _AX5043_FREQUENCYGAINB3
                            661 	.globl _AX5043_FREQUENCYGAINB2
                            662 	.globl _AX5043_FREQUENCYGAINB1
                            663 	.globl _AX5043_FREQUENCYGAINB0
                            664 	.globl _AX5043_FREQUENCYGAINA3
                            665 	.globl _AX5043_FREQUENCYGAINA2
                            666 	.globl _AX5043_FREQUENCYGAINA1
                            667 	.globl _AX5043_FREQUENCYGAINA0
                            668 	.globl _AX5043_FREQDEV13
                            669 	.globl _AX5043_FREQDEV12
                            670 	.globl _AX5043_FREQDEV11
                            671 	.globl _AX5043_FREQDEV10
                            672 	.globl _AX5043_FREQDEV03
                            673 	.globl _AX5043_FREQDEV02
                            674 	.globl _AX5043_FREQDEV01
                            675 	.globl _AX5043_FREQDEV00
                            676 	.globl _AX5043_FOURFSK3
                            677 	.globl _AX5043_FOURFSK2
                            678 	.globl _AX5043_FOURFSK1
                            679 	.globl _AX5043_FOURFSK0
                            680 	.globl _AX5043_DRGAIN3
                            681 	.globl _AX5043_DRGAIN2
                            682 	.globl _AX5043_DRGAIN1
                            683 	.globl _AX5043_DRGAIN0
                            684 	.globl _AX5043_BBOFFSRES3
                            685 	.globl _AX5043_BBOFFSRES2
                            686 	.globl _AX5043_BBOFFSRES1
                            687 	.globl _AX5043_BBOFFSRES0
                            688 	.globl _AX5043_AMPLITUDEGAIN3
                            689 	.globl _AX5043_AMPLITUDEGAIN2
                            690 	.globl _AX5043_AMPLITUDEGAIN1
                            691 	.globl _AX5043_AMPLITUDEGAIN0
                            692 	.globl _AX5043_AGCTARGET3
                            693 	.globl _AX5043_AGCTARGET2
                            694 	.globl _AX5043_AGCTARGET1
                            695 	.globl _AX5043_AGCTARGET0
                            696 	.globl _AX5043_AGCMINMAX3
                            697 	.globl _AX5043_AGCMINMAX2
                            698 	.globl _AX5043_AGCMINMAX1
                            699 	.globl _AX5043_AGCMINMAX0
                            700 	.globl _AX5043_AGCGAIN3
                            701 	.globl _AX5043_AGCGAIN2
                            702 	.globl _AX5043_AGCGAIN1
                            703 	.globl _AX5043_AGCGAIN0
                            704 	.globl _AX5043_AGCAHYST3
                            705 	.globl _AX5043_AGCAHYST2
                            706 	.globl _AX5043_AGCAHYST1
                            707 	.globl _AX5043_AGCAHYST0
                            708 	.globl _AX5043_XTALSTATUS
                            709 	.globl _AX5043_XTALCAP
                            710 	.globl _AX5043_WAKEUPXOEARLY
                            711 	.globl _AX5043_WAKEUPTIMER1
                            712 	.globl _AX5043_WAKEUPTIMER0
                            713 	.globl _AX5043_WAKEUPFREQ1
                            714 	.globl _AX5043_WAKEUPFREQ0
                            715 	.globl _AX5043_WAKEUP1
                            716 	.globl _AX5043_WAKEUP0
                            717 	.globl _AX5043_TXRATE2
                            718 	.globl _AX5043_TXRATE1
                            719 	.globl _AX5043_TXRATE0
                            720 	.globl _AX5043_TXPWRCOEFFE1
                            721 	.globl _AX5043_TXPWRCOEFFE0
                            722 	.globl _AX5043_TXPWRCOEFFD1
                            723 	.globl _AX5043_TXPWRCOEFFD0
                            724 	.globl _AX5043_TXPWRCOEFFC1
                            725 	.globl _AX5043_TXPWRCOEFFC0
                            726 	.globl _AX5043_TXPWRCOEFFB1
                            727 	.globl _AX5043_TXPWRCOEFFB0
                            728 	.globl _AX5043_TXPWRCOEFFA1
                            729 	.globl _AX5043_TXPWRCOEFFA0
                            730 	.globl _AX5043_TRKRFFREQ2
                            731 	.globl _AX5043_TRKRFFREQ1
                            732 	.globl _AX5043_TRKRFFREQ0
                            733 	.globl _AX5043_TRKPHASE1
                            734 	.globl _AX5043_TRKPHASE0
                            735 	.globl _AX5043_TRKFSKDEMOD1
                            736 	.globl _AX5043_TRKFSKDEMOD0
                            737 	.globl _AX5043_TRKFREQ1
                            738 	.globl _AX5043_TRKFREQ0
                            739 	.globl _AX5043_TRKDATARATE2
                            740 	.globl _AX5043_TRKDATARATE1
                            741 	.globl _AX5043_TRKDATARATE0
                            742 	.globl _AX5043_TRKAMPLITUDE1
                            743 	.globl _AX5043_TRKAMPLITUDE0
                            744 	.globl _AX5043_TRKAFSKDEMOD1
                            745 	.globl _AX5043_TRKAFSKDEMOD0
                            746 	.globl _AX5043_TMGTXSETTLE
                            747 	.globl _AX5043_TMGTXBOOST
                            748 	.globl _AX5043_TMGRXSETTLE
                            749 	.globl _AX5043_TMGRXRSSI
                            750 	.globl _AX5043_TMGRXPREAMBLE3
                            751 	.globl _AX5043_TMGRXPREAMBLE2
                            752 	.globl _AX5043_TMGRXPREAMBLE1
                            753 	.globl _AX5043_TMGRXOFFSACQ
                            754 	.globl _AX5043_TMGRXCOARSEAGC
                            755 	.globl _AX5043_TMGRXBOOST
                            756 	.globl _AX5043_TMGRXAGC
                            757 	.globl _AX5043_TIMER2
                            758 	.globl _AX5043_TIMER1
                            759 	.globl _AX5043_TIMER0
                            760 	.globl _AX5043_SILICONREVISION
                            761 	.globl _AX5043_SCRATCH
                            762 	.globl _AX5043_RXDATARATE2
                            763 	.globl _AX5043_RXDATARATE1
                            764 	.globl _AX5043_RXDATARATE0
                            765 	.globl _AX5043_RSSIREFERENCE
                            766 	.globl _AX5043_RSSIABSTHR
                            767 	.globl _AX5043_RSSI
                            768 	.globl _AX5043_RADIOSTATE
                            769 	.globl _AX5043_RADIOEVENTREQ1
                            770 	.globl _AX5043_RADIOEVENTREQ0
                            771 	.globl _AX5043_RADIOEVENTMASK1
                            772 	.globl _AX5043_RADIOEVENTMASK0
                            773 	.globl _AX5043_PWRMODE
                            774 	.globl _AX5043_PWRAMP
                            775 	.globl _AX5043_POWSTICKYSTAT
                            776 	.globl _AX5043_POWSTAT
                            777 	.globl _AX5043_POWIRQMASK
                            778 	.globl _AX5043_PLLVCOIR
                            779 	.globl _AX5043_PLLVCOI
                            780 	.globl _AX5043_PLLVCODIV
                            781 	.globl _AX5043_PLLRNGCLK
                            782 	.globl _AX5043_PLLRANGINGB
                            783 	.globl _AX5043_PLLRANGINGA
                            784 	.globl _AX5043_PLLLOOPBOOST
                            785 	.globl _AX5043_PLLLOOP
                            786 	.globl _AX5043_PLLLOCKDET
                            787 	.globl _AX5043_PLLCPIBOOST
                            788 	.globl _AX5043_PLLCPI
                            789 	.globl _AX5043_PKTSTOREFLAGS
                            790 	.globl _AX5043_PKTMISCFLAGS
                            791 	.globl _AX5043_PKTCHUNKSIZE
                            792 	.globl _AX5043_PKTACCEPTFLAGS
                            793 	.globl _AX5043_PINSTATE
                            794 	.globl _AX5043_PINFUNCSYSCLK
                            795 	.globl _AX5043_PINFUNCPWRAMP
                            796 	.globl _AX5043_PINFUNCIRQ
                            797 	.globl _AX5043_PINFUNCDCLK
                            798 	.globl _AX5043_PINFUNCDATA
                            799 	.globl _AX5043_PINFUNCANTSEL
                            800 	.globl _AX5043_MODULATION
                            801 	.globl _AX5043_MODCFGF
                            802 	.globl _AX5043_MODCFGA
                            803 	.globl _AX5043_MAXRFOFFSET2
                            804 	.globl _AX5043_MAXRFOFFSET1
                            805 	.globl _AX5043_MAXRFOFFSET0
                            806 	.globl _AX5043_MAXDROFFSET2
                            807 	.globl _AX5043_MAXDROFFSET1
                            808 	.globl _AX5043_MAXDROFFSET0
                            809 	.globl _AX5043_MATCH1PAT1
                            810 	.globl _AX5043_MATCH1PAT0
                            811 	.globl _AX5043_MATCH1MIN
                            812 	.globl _AX5043_MATCH1MAX
                            813 	.globl _AX5043_MATCH1LEN
                            814 	.globl _AX5043_MATCH0PAT3
                            815 	.globl _AX5043_MATCH0PAT2
                            816 	.globl _AX5043_MATCH0PAT1
                            817 	.globl _AX5043_MATCH0PAT0
                            818 	.globl _AX5043_MATCH0MIN
                            819 	.globl _AX5043_MATCH0MAX
                            820 	.globl _AX5043_MATCH0LEN
                            821 	.globl _AX5043_LPOSCSTATUS
                            822 	.globl _AX5043_LPOSCREF1
                            823 	.globl _AX5043_LPOSCREF0
                            824 	.globl _AX5043_LPOSCPER1
                            825 	.globl _AX5043_LPOSCPER0
                            826 	.globl _AX5043_LPOSCKFILT1
                            827 	.globl _AX5043_LPOSCKFILT0
                            828 	.globl _AX5043_LPOSCFREQ1
                            829 	.globl _AX5043_LPOSCFREQ0
                            830 	.globl _AX5043_LPOSCCONFIG
                            831 	.globl _AX5043_IRQREQUEST1
                            832 	.globl _AX5043_IRQREQUEST0
                            833 	.globl _AX5043_IRQMASK1
                            834 	.globl _AX5043_IRQMASK0
                            835 	.globl _AX5043_IRQINVERSION1
                            836 	.globl _AX5043_IRQINVERSION0
                            837 	.globl _AX5043_IFFREQ1
                            838 	.globl _AX5043_IFFREQ0
                            839 	.globl _AX5043_GPADCPERIOD
                            840 	.globl _AX5043_GPADCCTRL
                            841 	.globl _AX5043_GPADC13VALUE1
                            842 	.globl _AX5043_GPADC13VALUE0
                            843 	.globl _AX5043_FSKDMIN1
                            844 	.globl _AX5043_FSKDMIN0
                            845 	.globl _AX5043_FSKDMAX1
                            846 	.globl _AX5043_FSKDMAX0
                            847 	.globl _AX5043_FSKDEV2
                            848 	.globl _AX5043_FSKDEV1
                            849 	.globl _AX5043_FSKDEV0
                            850 	.globl _AX5043_FREQB3
                            851 	.globl _AX5043_FREQB2
                            852 	.globl _AX5043_FREQB1
                            853 	.globl _AX5043_FREQB0
                            854 	.globl _AX5043_FREQA3
                            855 	.globl _AX5043_FREQA2
                            856 	.globl _AX5043_FREQA1
                            857 	.globl _AX5043_FREQA0
                            858 	.globl _AX5043_FRAMING
                            859 	.globl _AX5043_FIFOTHRESH1
                            860 	.globl _AX5043_FIFOTHRESH0
                            861 	.globl _AX5043_FIFOSTAT
                            862 	.globl _AX5043_FIFOFREE1
                            863 	.globl _AX5043_FIFOFREE0
                            864 	.globl _AX5043_FIFODATA
                            865 	.globl _AX5043_FIFOCOUNT1
                            866 	.globl _AX5043_FIFOCOUNT0
                            867 	.globl _AX5043_FECSYNC
                            868 	.globl _AX5043_FECSTATUS
                            869 	.globl _AX5043_FEC
                            870 	.globl _AX5043_ENCODING
                            871 	.globl _AX5043_DIVERSITY
                            872 	.globl _AX5043_DECIMATION
                            873 	.globl _AX5043_DACVALUE1
                            874 	.globl _AX5043_DACVALUE0
                            875 	.globl _AX5043_DACCONFIG
                            876 	.globl _AX5043_CRCINIT3
                            877 	.globl _AX5043_CRCINIT2
                            878 	.globl _AX5043_CRCINIT1
                            879 	.globl _AX5043_CRCINIT0
                            880 	.globl _AX5043_BGNDRSSITHR
                            881 	.globl _AX5043_BGNDRSSIGAIN
                            882 	.globl _AX5043_BGNDRSSI
                            883 	.globl _AX5043_BBTUNE
                            884 	.globl _AX5043_BBOFFSCAP
                            885 	.globl _AX5043_AMPLFILTER
                            886 	.globl _AX5043_AGCCOUNTER
                            887 	.globl _AX5043_AFSKSPACE1
                            888 	.globl _AX5043_AFSKSPACE0
                            889 	.globl _AX5043_AFSKMARK1
                            890 	.globl _AX5043_AFSKMARK0
                            891 	.globl _AX5043_AFSKCTRL
                            892 	.globl _XWTSTAT
                            893 	.globl _XWTIRQEN
                            894 	.globl _XWTEVTD
                            895 	.globl _XWTEVTD1
                            896 	.globl _XWTEVTD0
                            897 	.globl _XWTEVTC
                            898 	.globl _XWTEVTC1
                            899 	.globl _XWTEVTC0
                            900 	.globl _XWTEVTB
                            901 	.globl _XWTEVTB1
                            902 	.globl _XWTEVTB0
                            903 	.globl _XWTEVTA
                            904 	.globl _XWTEVTA1
                            905 	.globl _XWTEVTA0
                            906 	.globl _XWTCNTR1
                            907 	.globl _XWTCNTB
                            908 	.globl _XWTCNTB1
                            909 	.globl _XWTCNTB0
                            910 	.globl _XWTCNTA
                            911 	.globl _XWTCNTA1
                            912 	.globl _XWTCNTA0
                            913 	.globl _XWTCFGB
                            914 	.globl _XWTCFGA
                            915 	.globl _XWDTRESET
                            916 	.globl _XWDTCFG
                            917 	.globl _XU1STATUS
                            918 	.globl _XU1SHREG
                            919 	.globl _XU1MODE
                            920 	.globl _XU1CTRL
                            921 	.globl _XU0STATUS
                            922 	.globl _XU0SHREG
                            923 	.globl _XU0MODE
                            924 	.globl _XU0CTRL
                            925 	.globl _XT2STATUS
                            926 	.globl _XT2PERIOD
                            927 	.globl _XT2PERIOD1
                            928 	.globl _XT2PERIOD0
                            929 	.globl _XT2MODE
                            930 	.globl _XT2CNT
                            931 	.globl _XT2CNT1
                            932 	.globl _XT2CNT0
                            933 	.globl _XT2CLKSRC
                            934 	.globl _XT1STATUS
                            935 	.globl _XT1PERIOD
                            936 	.globl _XT1PERIOD1
                            937 	.globl _XT1PERIOD0
                            938 	.globl _XT1MODE
                            939 	.globl _XT1CNT
                            940 	.globl _XT1CNT1
                            941 	.globl _XT1CNT0
                            942 	.globl _XT1CLKSRC
                            943 	.globl _XT0STATUS
                            944 	.globl _XT0PERIOD
                            945 	.globl _XT0PERIOD1
                            946 	.globl _XT0PERIOD0
                            947 	.globl _XT0MODE
                            948 	.globl _XT0CNT
                            949 	.globl _XT0CNT1
                            950 	.globl _XT0CNT0
                            951 	.globl _XT0CLKSRC
                            952 	.globl _XSPSTATUS
                            953 	.globl _XSPSHREG
                            954 	.globl _XSPMODE
                            955 	.globl _XSPCLKSRC
                            956 	.globl _XRADIOSTAT
                            957 	.globl _XRADIOSTAT1
                            958 	.globl _XRADIOSTAT0
                            959 	.globl _XRADIODATA3
                            960 	.globl _XRADIODATA2
                            961 	.globl _XRADIODATA1
                            962 	.globl _XRADIODATA0
                            963 	.globl _XRADIOADDR1
                            964 	.globl _XRADIOADDR0
                            965 	.globl _XRADIOACC
                            966 	.globl _XOC1STATUS
                            967 	.globl _XOC1PIN
                            968 	.globl _XOC1MODE
                            969 	.globl _XOC1COMP
                            970 	.globl _XOC1COMP1
                            971 	.globl _XOC1COMP0
                            972 	.globl _XOC0STATUS
                            973 	.globl _XOC0PIN
                            974 	.globl _XOC0MODE
                            975 	.globl _XOC0COMP
                            976 	.globl _XOC0COMP1
                            977 	.globl _XOC0COMP0
                            978 	.globl _XNVSTATUS
                            979 	.globl _XNVKEY
                            980 	.globl _XNVDATA
                            981 	.globl _XNVDATA1
                            982 	.globl _XNVDATA0
                            983 	.globl _XNVADDR
                            984 	.globl _XNVADDR1
                            985 	.globl _XNVADDR0
                            986 	.globl _XIC1STATUS
                            987 	.globl _XIC1MODE
                            988 	.globl _XIC1CAPT
                            989 	.globl _XIC1CAPT1
                            990 	.globl _XIC1CAPT0
                            991 	.globl _XIC0STATUS
                            992 	.globl _XIC0MODE
                            993 	.globl _XIC0CAPT
                            994 	.globl _XIC0CAPT1
                            995 	.globl _XIC0CAPT0
                            996 	.globl _XPORTR
                            997 	.globl _XPORTC
                            998 	.globl _XPORTB
                            999 	.globl _XPORTA
                           1000 	.globl _XPINR
                           1001 	.globl _XPINC
                           1002 	.globl _XPINB
                           1003 	.globl _XPINA
                           1004 	.globl _XDIRR
                           1005 	.globl _XDIRC
                           1006 	.globl _XDIRB
                           1007 	.globl _XDIRA
                           1008 	.globl _XDBGLNKSTAT
                           1009 	.globl _XDBGLNKBUF
                           1010 	.globl _XCODECONFIG
                           1011 	.globl _XCLKSTAT
                           1012 	.globl _XCLKCON
                           1013 	.globl _XANALOGCOMP
                           1014 	.globl _XADCCONV
                           1015 	.globl _XADCCLKSRC
                           1016 	.globl _XADCCH3CONFIG
                           1017 	.globl _XADCCH2CONFIG
                           1018 	.globl _XADCCH1CONFIG
                           1019 	.globl _XADCCH0CONFIG
                           1020 	.globl _XPCON
                           1021 	.globl _XIP
                           1022 	.globl _XIE
                           1023 	.globl _XDPTR1
                           1024 	.globl _XDPTR0
                           1025 	.globl _XTALREADY
                           1026 	.globl _XTALOSC
                           1027 	.globl _XTALAMPL
                           1028 	.globl _SILICONREV
                           1029 	.globl _SCRATCH3
                           1030 	.globl _SCRATCH2
                           1031 	.globl _SCRATCH1
                           1032 	.globl _SCRATCH0
                           1033 	.globl _RADIOMUX
                           1034 	.globl _RADIOFSTATADDR
                           1035 	.globl _RADIOFSTATADDR1
                           1036 	.globl _RADIOFSTATADDR0
                           1037 	.globl _RADIOFDATAADDR
                           1038 	.globl _RADIOFDATAADDR1
                           1039 	.globl _RADIOFDATAADDR0
                           1040 	.globl _OSCRUN
                           1041 	.globl _OSCREADY
                           1042 	.globl _OSCFORCERUN
                           1043 	.globl _OSCCALIB
                           1044 	.globl _MISCCTRL
                           1045 	.globl _LPXOSCGM
                           1046 	.globl _LPOSCREF
                           1047 	.globl _LPOSCREF1
                           1048 	.globl _LPOSCREF0
                           1049 	.globl _LPOSCPER
                           1050 	.globl _LPOSCPER1
                           1051 	.globl _LPOSCPER0
                           1052 	.globl _LPOSCKFILT
                           1053 	.globl _LPOSCKFILT1
                           1054 	.globl _LPOSCKFILT0
                           1055 	.globl _LPOSCFREQ
                           1056 	.globl _LPOSCFREQ1
                           1057 	.globl _LPOSCFREQ0
                           1058 	.globl _LPOSCCONFIG
                           1059 	.globl _PINSEL
                           1060 	.globl _PINCHGC
                           1061 	.globl _PINCHGB
                           1062 	.globl _PINCHGA
                           1063 	.globl _PALTRADIO
                           1064 	.globl _PALTC
                           1065 	.globl _PALTB
                           1066 	.globl _PALTA
                           1067 	.globl _INTCHGC
                           1068 	.globl _INTCHGB
                           1069 	.globl _INTCHGA
                           1070 	.globl _EXTIRQ
                           1071 	.globl _GPIOENABLE
                           1072 	.globl _ANALOGA
                           1073 	.globl _FRCOSCREF
                           1074 	.globl _FRCOSCREF1
                           1075 	.globl _FRCOSCREF0
                           1076 	.globl _FRCOSCPER
                           1077 	.globl _FRCOSCPER1
                           1078 	.globl _FRCOSCPER0
                           1079 	.globl _FRCOSCKFILT
                           1080 	.globl _FRCOSCKFILT1
                           1081 	.globl _FRCOSCKFILT0
                           1082 	.globl _FRCOSCFREQ
                           1083 	.globl _FRCOSCFREQ1
                           1084 	.globl _FRCOSCFREQ0
                           1085 	.globl _FRCOSCCTRL
                           1086 	.globl _FRCOSCCONFIG
                           1087 	.globl _DMA1CONFIG
                           1088 	.globl _DMA1ADDR
                           1089 	.globl _DMA1ADDR1
                           1090 	.globl _DMA1ADDR0
                           1091 	.globl _DMA0CONFIG
                           1092 	.globl _DMA0ADDR
                           1093 	.globl _DMA0ADDR1
                           1094 	.globl _DMA0ADDR0
                           1095 	.globl _ADCTUNE2
                           1096 	.globl _ADCTUNE1
                           1097 	.globl _ADCTUNE0
                           1098 	.globl _ADCCH3VAL
                           1099 	.globl _ADCCH3VAL1
                           1100 	.globl _ADCCH3VAL0
                           1101 	.globl _ADCCH2VAL
                           1102 	.globl _ADCCH2VAL1
                           1103 	.globl _ADCCH2VAL0
                           1104 	.globl _ADCCH1VAL
                           1105 	.globl _ADCCH1VAL1
                           1106 	.globl _ADCCH1VAL0
                           1107 	.globl _ADCCH0VAL
                           1108 	.globl _ADCCH0VAL1
                           1109 	.globl _ADCCH0VAL0
                           1110 	.globl _axradio_transmit_PARM_3
                           1111 	.globl _axradio_transmit_PARM_2
                           1112 	.globl _axradio_trxstate
                           1113 	.globl _axradio_mode
                           1114 	.globl _axradio_conv_time_totimer0
                           1115 	.globl _axradio_isr
                           1116 	.globl _ax5043_receiver_on_continuous
                           1117 	.globl _ax5043_receiver_on_wor
                           1118 	.globl _ax5043_prepare_tx
                           1119 	.globl _ax5043_off
                           1120 	.globl _ax5043_off_xtal
                           1121 	.globl _axradio_wait_for_xtal
                           1122 	.globl _axradio_init
                           1123 	.globl _axradio_cansleep
                           1124 	.globl _axradio_set_mode
                           1125 	.globl _axradio_get_mode
                           1126 	.globl _axradio_set_channel
                           1127 	.globl _axradio_get_channel
                           1128 	.globl _axradio_get_pllrange
                           1129 	.globl _axradio_get_pllrange_tx
                           1130 	.globl _axradio_set_freqoffset
                           1131 	.globl _axradio_get_freqoffset
                           1132 	.globl _axradio_set_local_address
                           1133 	.globl _axradio_get_local_address
                           1134 	.globl _axradio_set_default_remote_address
                           1135 	.globl _axradio_get_default_remote_address
                           1136 	.globl _axradio_transmit
                           1137 	.globl _axradio_agc_freeze
                           1138 	.globl _axradio_agc_thaw
                           1139 ;--------------------------------------------------------
                           1140 ; special function registers
                           1141 ;--------------------------------------------------------
                           1142 	.area RSEG    (ABS,DATA)
   0000                    1143 	.org 0x0000
                     00E0  1144 G$ACC$0$0 == 0x00e0
                     00E0  1145 _ACC	=	0x00e0
                     00F0  1146 G$B$0$0 == 0x00f0
                     00F0  1147 _B	=	0x00f0
                     0083  1148 G$DPH$0$0 == 0x0083
                     0083  1149 _DPH	=	0x0083
                     0085  1150 G$DPH1$0$0 == 0x0085
                     0085  1151 _DPH1	=	0x0085
                     0082  1152 G$DPL$0$0 == 0x0082
                     0082  1153 _DPL	=	0x0082
                     0084  1154 G$DPL1$0$0 == 0x0084
                     0084  1155 _DPL1	=	0x0084
                     8382  1156 G$DPTR0$0$0 == 0x8382
                     8382  1157 _DPTR0	=	0x8382
                     8584  1158 G$DPTR1$0$0 == 0x8584
                     8584  1159 _DPTR1	=	0x8584
                     0086  1160 G$DPS$0$0 == 0x0086
                     0086  1161 _DPS	=	0x0086
                     00A0  1162 G$E2IE$0$0 == 0x00a0
                     00A0  1163 _E2IE	=	0x00a0
                     00C0  1164 G$E2IP$0$0 == 0x00c0
                     00C0  1165 _E2IP	=	0x00c0
                     0098  1166 G$EIE$0$0 == 0x0098
                     0098  1167 _EIE	=	0x0098
                     00B0  1168 G$EIP$0$0 == 0x00b0
                     00B0  1169 _EIP	=	0x00b0
                     00A8  1170 G$IE$0$0 == 0x00a8
                     00A8  1171 _IE	=	0x00a8
                     00B8  1172 G$IP$0$0 == 0x00b8
                     00B8  1173 _IP	=	0x00b8
                     0087  1174 G$PCON$0$0 == 0x0087
                     0087  1175 _PCON	=	0x0087
                     00D0  1176 G$PSW$0$0 == 0x00d0
                     00D0  1177 _PSW	=	0x00d0
                     0081  1178 G$SP$0$0 == 0x0081
                     0081  1179 _SP	=	0x0081
                     00D9  1180 G$XPAGE$0$0 == 0x00d9
                     00D9  1181 _XPAGE	=	0x00d9
                     00D9  1182 G$_XPAGE$0$0 == 0x00d9
                     00D9  1183 __XPAGE	=	0x00d9
                     00CA  1184 G$ADCCH0CONFIG$0$0 == 0x00ca
                     00CA  1185 _ADCCH0CONFIG	=	0x00ca
                     00CB  1186 G$ADCCH1CONFIG$0$0 == 0x00cb
                     00CB  1187 _ADCCH1CONFIG	=	0x00cb
                     00D2  1188 G$ADCCH2CONFIG$0$0 == 0x00d2
                     00D2  1189 _ADCCH2CONFIG	=	0x00d2
                     00D3  1190 G$ADCCH3CONFIG$0$0 == 0x00d3
                     00D3  1191 _ADCCH3CONFIG	=	0x00d3
                     00D1  1192 G$ADCCLKSRC$0$0 == 0x00d1
                     00D1  1193 _ADCCLKSRC	=	0x00d1
                     00C9  1194 G$ADCCONV$0$0 == 0x00c9
                     00C9  1195 _ADCCONV	=	0x00c9
                     00E1  1196 G$ANALOGCOMP$0$0 == 0x00e1
                     00E1  1197 _ANALOGCOMP	=	0x00e1
                     00C6  1198 G$CLKCON$0$0 == 0x00c6
                     00C6  1199 _CLKCON	=	0x00c6
                     00C7  1200 G$CLKSTAT$0$0 == 0x00c7
                     00C7  1201 _CLKSTAT	=	0x00c7
                     0097  1202 G$CODECONFIG$0$0 == 0x0097
                     0097  1203 _CODECONFIG	=	0x0097
                     00E3  1204 G$DBGLNKBUF$0$0 == 0x00e3
                     00E3  1205 _DBGLNKBUF	=	0x00e3
                     00E2  1206 G$DBGLNKSTAT$0$0 == 0x00e2
                     00E2  1207 _DBGLNKSTAT	=	0x00e2
                     0089  1208 G$DIRA$0$0 == 0x0089
                     0089  1209 _DIRA	=	0x0089
                     008A  1210 G$DIRB$0$0 == 0x008a
                     008A  1211 _DIRB	=	0x008a
                     008B  1212 G$DIRC$0$0 == 0x008b
                     008B  1213 _DIRC	=	0x008b
                     008E  1214 G$DIRR$0$0 == 0x008e
                     008E  1215 _DIRR	=	0x008e
                     00C8  1216 G$PINA$0$0 == 0x00c8
                     00C8  1217 _PINA	=	0x00c8
                     00E8  1218 G$PINB$0$0 == 0x00e8
                     00E8  1219 _PINB	=	0x00e8
                     00F8  1220 G$PINC$0$0 == 0x00f8
                     00F8  1221 _PINC	=	0x00f8
                     008D  1222 G$PINR$0$0 == 0x008d
                     008D  1223 _PINR	=	0x008d
                     0080  1224 G$PORTA$0$0 == 0x0080
                     0080  1225 _PORTA	=	0x0080
                     0088  1226 G$PORTB$0$0 == 0x0088
                     0088  1227 _PORTB	=	0x0088
                     0090  1228 G$PORTC$0$0 == 0x0090
                     0090  1229 _PORTC	=	0x0090
                     008C  1230 G$PORTR$0$0 == 0x008c
                     008C  1231 _PORTR	=	0x008c
                     00CE  1232 G$IC0CAPT0$0$0 == 0x00ce
                     00CE  1233 _IC0CAPT0	=	0x00ce
                     00CF  1234 G$IC0CAPT1$0$0 == 0x00cf
                     00CF  1235 _IC0CAPT1	=	0x00cf
                     CFCE  1236 G$IC0CAPT$0$0 == 0xcfce
                     CFCE  1237 _IC0CAPT	=	0xcfce
                     00CC  1238 G$IC0MODE$0$0 == 0x00cc
                     00CC  1239 _IC0MODE	=	0x00cc
                     00CD  1240 G$IC0STATUS$0$0 == 0x00cd
                     00CD  1241 _IC0STATUS	=	0x00cd
                     00D6  1242 G$IC1CAPT0$0$0 == 0x00d6
                     00D6  1243 _IC1CAPT0	=	0x00d6
                     00D7  1244 G$IC1CAPT1$0$0 == 0x00d7
                     00D7  1245 _IC1CAPT1	=	0x00d7
                     D7D6  1246 G$IC1CAPT$0$0 == 0xd7d6
                     D7D6  1247 _IC1CAPT	=	0xd7d6
                     00D4  1248 G$IC1MODE$0$0 == 0x00d4
                     00D4  1249 _IC1MODE	=	0x00d4
                     00D5  1250 G$IC1STATUS$0$0 == 0x00d5
                     00D5  1251 _IC1STATUS	=	0x00d5
                     0092  1252 G$NVADDR0$0$0 == 0x0092
                     0092  1253 _NVADDR0	=	0x0092
                     0093  1254 G$NVADDR1$0$0 == 0x0093
                     0093  1255 _NVADDR1	=	0x0093
                     9392  1256 G$NVADDR$0$0 == 0x9392
                     9392  1257 _NVADDR	=	0x9392
                     0094  1258 G$NVDATA0$0$0 == 0x0094
                     0094  1259 _NVDATA0	=	0x0094
                     0095  1260 G$NVDATA1$0$0 == 0x0095
                     0095  1261 _NVDATA1	=	0x0095
                     9594  1262 G$NVDATA$0$0 == 0x9594
                     9594  1263 _NVDATA	=	0x9594
                     0096  1264 G$NVKEY$0$0 == 0x0096
                     0096  1265 _NVKEY	=	0x0096
                     0091  1266 G$NVSTATUS$0$0 == 0x0091
                     0091  1267 _NVSTATUS	=	0x0091
                     00BC  1268 G$OC0COMP0$0$0 == 0x00bc
                     00BC  1269 _OC0COMP0	=	0x00bc
                     00BD  1270 G$OC0COMP1$0$0 == 0x00bd
                     00BD  1271 _OC0COMP1	=	0x00bd
                     BDBC  1272 G$OC0COMP$0$0 == 0xbdbc
                     BDBC  1273 _OC0COMP	=	0xbdbc
                     00B9  1274 G$OC0MODE$0$0 == 0x00b9
                     00B9  1275 _OC0MODE	=	0x00b9
                     00BA  1276 G$OC0PIN$0$0 == 0x00ba
                     00BA  1277 _OC0PIN	=	0x00ba
                     00BB  1278 G$OC0STATUS$0$0 == 0x00bb
                     00BB  1279 _OC0STATUS	=	0x00bb
                     00C4  1280 G$OC1COMP0$0$0 == 0x00c4
                     00C4  1281 _OC1COMP0	=	0x00c4
                     00C5  1282 G$OC1COMP1$0$0 == 0x00c5
                     00C5  1283 _OC1COMP1	=	0x00c5
                     C5C4  1284 G$OC1COMP$0$0 == 0xc5c4
                     C5C4  1285 _OC1COMP	=	0xc5c4
                     00C1  1286 G$OC1MODE$0$0 == 0x00c1
                     00C1  1287 _OC1MODE	=	0x00c1
                     00C2  1288 G$OC1PIN$0$0 == 0x00c2
                     00C2  1289 _OC1PIN	=	0x00c2
                     00C3  1290 G$OC1STATUS$0$0 == 0x00c3
                     00C3  1291 _OC1STATUS	=	0x00c3
                     00B1  1292 G$RADIOACC$0$0 == 0x00b1
                     00B1  1293 _RADIOACC	=	0x00b1
                     00B3  1294 G$RADIOADDR0$0$0 == 0x00b3
                     00B3  1295 _RADIOADDR0	=	0x00b3
                     00B2  1296 G$RADIOADDR1$0$0 == 0x00b2
                     00B2  1297 _RADIOADDR1	=	0x00b2
                     B2B3  1298 G$RADIOADDR$0$0 == 0xb2b3
                     B2B3  1299 _RADIOADDR	=	0xb2b3
                     00B7  1300 G$RADIODATA0$0$0 == 0x00b7
                     00B7  1301 _RADIODATA0	=	0x00b7
                     00B6  1302 G$RADIODATA1$0$0 == 0x00b6
                     00B6  1303 _RADIODATA1	=	0x00b6
                     00B5  1304 G$RADIODATA2$0$0 == 0x00b5
                     00B5  1305 _RADIODATA2	=	0x00b5
                     00B4  1306 G$RADIODATA3$0$0 == 0x00b4
                     00B4  1307 _RADIODATA3	=	0x00b4
                     B4B5B6B7  1308 G$RADIODATA$0$0 == 0xb4b5b6b7
                     B4B5B6B7  1309 _RADIODATA	=	0xb4b5b6b7
                     00BE  1310 G$RADIOSTAT0$0$0 == 0x00be
                     00BE  1311 _RADIOSTAT0	=	0x00be
                     00BF  1312 G$RADIOSTAT1$0$0 == 0x00bf
                     00BF  1313 _RADIOSTAT1	=	0x00bf
                     BFBE  1314 G$RADIOSTAT$0$0 == 0xbfbe
                     BFBE  1315 _RADIOSTAT	=	0xbfbe
                     00DF  1316 G$SPCLKSRC$0$0 == 0x00df
                     00DF  1317 _SPCLKSRC	=	0x00df
                     00DC  1318 G$SPMODE$0$0 == 0x00dc
                     00DC  1319 _SPMODE	=	0x00dc
                     00DE  1320 G$SPSHREG$0$0 == 0x00de
                     00DE  1321 _SPSHREG	=	0x00de
                     00DD  1322 G$SPSTATUS$0$0 == 0x00dd
                     00DD  1323 _SPSTATUS	=	0x00dd
                     009A  1324 G$T0CLKSRC$0$0 == 0x009a
                     009A  1325 _T0CLKSRC	=	0x009a
                     009C  1326 G$T0CNT0$0$0 == 0x009c
                     009C  1327 _T0CNT0	=	0x009c
                     009D  1328 G$T0CNT1$0$0 == 0x009d
                     009D  1329 _T0CNT1	=	0x009d
                     9D9C  1330 G$T0CNT$0$0 == 0x9d9c
                     9D9C  1331 _T0CNT	=	0x9d9c
                     0099  1332 G$T0MODE$0$0 == 0x0099
                     0099  1333 _T0MODE	=	0x0099
                     009E  1334 G$T0PERIOD0$0$0 == 0x009e
                     009E  1335 _T0PERIOD0	=	0x009e
                     009F  1336 G$T0PERIOD1$0$0 == 0x009f
                     009F  1337 _T0PERIOD1	=	0x009f
                     9F9E  1338 G$T0PERIOD$0$0 == 0x9f9e
                     9F9E  1339 _T0PERIOD	=	0x9f9e
                     009B  1340 G$T0STATUS$0$0 == 0x009b
                     009B  1341 _T0STATUS	=	0x009b
                     00A2  1342 G$T1CLKSRC$0$0 == 0x00a2
                     00A2  1343 _T1CLKSRC	=	0x00a2
                     00A4  1344 G$T1CNT0$0$0 == 0x00a4
                     00A4  1345 _T1CNT0	=	0x00a4
                     00A5  1346 G$T1CNT1$0$0 == 0x00a5
                     00A5  1347 _T1CNT1	=	0x00a5
                     A5A4  1348 G$T1CNT$0$0 == 0xa5a4
                     A5A4  1349 _T1CNT	=	0xa5a4
                     00A1  1350 G$T1MODE$0$0 == 0x00a1
                     00A1  1351 _T1MODE	=	0x00a1
                     00A6  1352 G$T1PERIOD0$0$0 == 0x00a6
                     00A6  1353 _T1PERIOD0	=	0x00a6
                     00A7  1354 G$T1PERIOD1$0$0 == 0x00a7
                     00A7  1355 _T1PERIOD1	=	0x00a7
                     A7A6  1356 G$T1PERIOD$0$0 == 0xa7a6
                     A7A6  1357 _T1PERIOD	=	0xa7a6
                     00A3  1358 G$T1STATUS$0$0 == 0x00a3
                     00A3  1359 _T1STATUS	=	0x00a3
                     00AA  1360 G$T2CLKSRC$0$0 == 0x00aa
                     00AA  1361 _T2CLKSRC	=	0x00aa
                     00AC  1362 G$T2CNT0$0$0 == 0x00ac
                     00AC  1363 _T2CNT0	=	0x00ac
                     00AD  1364 G$T2CNT1$0$0 == 0x00ad
                     00AD  1365 _T2CNT1	=	0x00ad
                     ADAC  1366 G$T2CNT$0$0 == 0xadac
                     ADAC  1367 _T2CNT	=	0xadac
                     00A9  1368 G$T2MODE$0$0 == 0x00a9
                     00A9  1369 _T2MODE	=	0x00a9
                     00AE  1370 G$T2PERIOD0$0$0 == 0x00ae
                     00AE  1371 _T2PERIOD0	=	0x00ae
                     00AF  1372 G$T2PERIOD1$0$0 == 0x00af
                     00AF  1373 _T2PERIOD1	=	0x00af
                     AFAE  1374 G$T2PERIOD$0$0 == 0xafae
                     AFAE  1375 _T2PERIOD	=	0xafae
                     00AB  1376 G$T2STATUS$0$0 == 0x00ab
                     00AB  1377 _T2STATUS	=	0x00ab
                     00E4  1378 G$U0CTRL$0$0 == 0x00e4
                     00E4  1379 _U0CTRL	=	0x00e4
                     00E7  1380 G$U0MODE$0$0 == 0x00e7
                     00E7  1381 _U0MODE	=	0x00e7
                     00E6  1382 G$U0SHREG$0$0 == 0x00e6
                     00E6  1383 _U0SHREG	=	0x00e6
                     00E5  1384 G$U0STATUS$0$0 == 0x00e5
                     00E5  1385 _U0STATUS	=	0x00e5
                     00EC  1386 G$U1CTRL$0$0 == 0x00ec
                     00EC  1387 _U1CTRL	=	0x00ec
                     00EF  1388 G$U1MODE$0$0 == 0x00ef
                     00EF  1389 _U1MODE	=	0x00ef
                     00EE  1390 G$U1SHREG$0$0 == 0x00ee
                     00EE  1391 _U1SHREG	=	0x00ee
                     00ED  1392 G$U1STATUS$0$0 == 0x00ed
                     00ED  1393 _U1STATUS	=	0x00ed
                     00DA  1394 G$WDTCFG$0$0 == 0x00da
                     00DA  1395 _WDTCFG	=	0x00da
                     00DB  1396 G$WDTRESET$0$0 == 0x00db
                     00DB  1397 _WDTRESET	=	0x00db
                     00F1  1398 G$WTCFGA$0$0 == 0x00f1
                     00F1  1399 _WTCFGA	=	0x00f1
                     00F9  1400 G$WTCFGB$0$0 == 0x00f9
                     00F9  1401 _WTCFGB	=	0x00f9
                     00F2  1402 G$WTCNTA0$0$0 == 0x00f2
                     00F2  1403 _WTCNTA0	=	0x00f2
                     00F3  1404 G$WTCNTA1$0$0 == 0x00f3
                     00F3  1405 _WTCNTA1	=	0x00f3
                     F3F2  1406 G$WTCNTA$0$0 == 0xf3f2
                     F3F2  1407 _WTCNTA	=	0xf3f2
                     00FA  1408 G$WTCNTB0$0$0 == 0x00fa
                     00FA  1409 _WTCNTB0	=	0x00fa
                     00FB  1410 G$WTCNTB1$0$0 == 0x00fb
                     00FB  1411 _WTCNTB1	=	0x00fb
                     FBFA  1412 G$WTCNTB$0$0 == 0xfbfa
                     FBFA  1413 _WTCNTB	=	0xfbfa
                     00EB  1414 G$WTCNTR1$0$0 == 0x00eb
                     00EB  1415 _WTCNTR1	=	0x00eb
                     00F4  1416 G$WTEVTA0$0$0 == 0x00f4
                     00F4  1417 _WTEVTA0	=	0x00f4
                     00F5  1418 G$WTEVTA1$0$0 == 0x00f5
                     00F5  1419 _WTEVTA1	=	0x00f5
                     F5F4  1420 G$WTEVTA$0$0 == 0xf5f4
                     F5F4  1421 _WTEVTA	=	0xf5f4
                     00F6  1422 G$WTEVTB0$0$0 == 0x00f6
                     00F6  1423 _WTEVTB0	=	0x00f6
                     00F7  1424 G$WTEVTB1$0$0 == 0x00f7
                     00F7  1425 _WTEVTB1	=	0x00f7
                     F7F6  1426 G$WTEVTB$0$0 == 0xf7f6
                     F7F6  1427 _WTEVTB	=	0xf7f6
                     00FC  1428 G$WTEVTC0$0$0 == 0x00fc
                     00FC  1429 _WTEVTC0	=	0x00fc
                     00FD  1430 G$WTEVTC1$0$0 == 0x00fd
                     00FD  1431 _WTEVTC1	=	0x00fd
                     FDFC  1432 G$WTEVTC$0$0 == 0xfdfc
                     FDFC  1433 _WTEVTC	=	0xfdfc
                     00FE  1434 G$WTEVTD0$0$0 == 0x00fe
                     00FE  1435 _WTEVTD0	=	0x00fe
                     00FF  1436 G$WTEVTD1$0$0 == 0x00ff
                     00FF  1437 _WTEVTD1	=	0x00ff
                     FFFE  1438 G$WTEVTD$0$0 == 0xfffe
                     FFFE  1439 _WTEVTD	=	0xfffe
                     00E9  1440 G$WTIRQEN$0$0 == 0x00e9
                     00E9  1441 _WTIRQEN	=	0x00e9
                     00EA  1442 G$WTSTAT$0$0 == 0x00ea
                     00EA  1443 _WTSTAT	=	0x00ea
                           1444 ;--------------------------------------------------------
                           1445 ; special function bits
                           1446 ;--------------------------------------------------------
                           1447 	.area RSEG    (ABS,DATA)
   0000                    1448 	.org 0x0000
                     00E0  1449 G$ACC_0$0$0 == 0x00e0
                     00E0  1450 _ACC_0	=	0x00e0
                     00E1  1451 G$ACC_1$0$0 == 0x00e1
                     00E1  1452 _ACC_1	=	0x00e1
                     00E2  1453 G$ACC_2$0$0 == 0x00e2
                     00E2  1454 _ACC_2	=	0x00e2
                     00E3  1455 G$ACC_3$0$0 == 0x00e3
                     00E3  1456 _ACC_3	=	0x00e3
                     00E4  1457 G$ACC_4$0$0 == 0x00e4
                     00E4  1458 _ACC_4	=	0x00e4
                     00E5  1459 G$ACC_5$0$0 == 0x00e5
                     00E5  1460 _ACC_5	=	0x00e5
                     00E6  1461 G$ACC_6$0$0 == 0x00e6
                     00E6  1462 _ACC_6	=	0x00e6
                     00E7  1463 G$ACC_7$0$0 == 0x00e7
                     00E7  1464 _ACC_7	=	0x00e7
                     00F0  1465 G$B_0$0$0 == 0x00f0
                     00F0  1466 _B_0	=	0x00f0
                     00F1  1467 G$B_1$0$0 == 0x00f1
                     00F1  1468 _B_1	=	0x00f1
                     00F2  1469 G$B_2$0$0 == 0x00f2
                     00F2  1470 _B_2	=	0x00f2
                     00F3  1471 G$B_3$0$0 == 0x00f3
                     00F3  1472 _B_3	=	0x00f3
                     00F4  1473 G$B_4$0$0 == 0x00f4
                     00F4  1474 _B_4	=	0x00f4
                     00F5  1475 G$B_5$0$0 == 0x00f5
                     00F5  1476 _B_5	=	0x00f5
                     00F6  1477 G$B_6$0$0 == 0x00f6
                     00F6  1478 _B_6	=	0x00f6
                     00F7  1479 G$B_7$0$0 == 0x00f7
                     00F7  1480 _B_7	=	0x00f7
                     00A0  1481 G$E2IE_0$0$0 == 0x00a0
                     00A0  1482 _E2IE_0	=	0x00a0
                     00A1  1483 G$E2IE_1$0$0 == 0x00a1
                     00A1  1484 _E2IE_1	=	0x00a1
                     00A2  1485 G$E2IE_2$0$0 == 0x00a2
                     00A2  1486 _E2IE_2	=	0x00a2
                     00A3  1487 G$E2IE_3$0$0 == 0x00a3
                     00A3  1488 _E2IE_3	=	0x00a3
                     00A4  1489 G$E2IE_4$0$0 == 0x00a4
                     00A4  1490 _E2IE_4	=	0x00a4
                     00A5  1491 G$E2IE_5$0$0 == 0x00a5
                     00A5  1492 _E2IE_5	=	0x00a5
                     00A6  1493 G$E2IE_6$0$0 == 0x00a6
                     00A6  1494 _E2IE_6	=	0x00a6
                     00A7  1495 G$E2IE_7$0$0 == 0x00a7
                     00A7  1496 _E2IE_7	=	0x00a7
                     00C0  1497 G$E2IP_0$0$0 == 0x00c0
                     00C0  1498 _E2IP_0	=	0x00c0
                     00C1  1499 G$E2IP_1$0$0 == 0x00c1
                     00C1  1500 _E2IP_1	=	0x00c1
                     00C2  1501 G$E2IP_2$0$0 == 0x00c2
                     00C2  1502 _E2IP_2	=	0x00c2
                     00C3  1503 G$E2IP_3$0$0 == 0x00c3
                     00C3  1504 _E2IP_3	=	0x00c3
                     00C4  1505 G$E2IP_4$0$0 == 0x00c4
                     00C4  1506 _E2IP_4	=	0x00c4
                     00C5  1507 G$E2IP_5$0$0 == 0x00c5
                     00C5  1508 _E2IP_5	=	0x00c5
                     00C6  1509 G$E2IP_6$0$0 == 0x00c6
                     00C6  1510 _E2IP_6	=	0x00c6
                     00C7  1511 G$E2IP_7$0$0 == 0x00c7
                     00C7  1512 _E2IP_7	=	0x00c7
                     0098  1513 G$EIE_0$0$0 == 0x0098
                     0098  1514 _EIE_0	=	0x0098
                     0099  1515 G$EIE_1$0$0 == 0x0099
                     0099  1516 _EIE_1	=	0x0099
                     009A  1517 G$EIE_2$0$0 == 0x009a
                     009A  1518 _EIE_2	=	0x009a
                     009B  1519 G$EIE_3$0$0 == 0x009b
                     009B  1520 _EIE_3	=	0x009b
                     009C  1521 G$EIE_4$0$0 == 0x009c
                     009C  1522 _EIE_4	=	0x009c
                     009D  1523 G$EIE_5$0$0 == 0x009d
                     009D  1524 _EIE_5	=	0x009d
                     009E  1525 G$EIE_6$0$0 == 0x009e
                     009E  1526 _EIE_6	=	0x009e
                     009F  1527 G$EIE_7$0$0 == 0x009f
                     009F  1528 _EIE_7	=	0x009f
                     00B0  1529 G$EIP_0$0$0 == 0x00b0
                     00B0  1530 _EIP_0	=	0x00b0
                     00B1  1531 G$EIP_1$0$0 == 0x00b1
                     00B1  1532 _EIP_1	=	0x00b1
                     00B2  1533 G$EIP_2$0$0 == 0x00b2
                     00B2  1534 _EIP_2	=	0x00b2
                     00B3  1535 G$EIP_3$0$0 == 0x00b3
                     00B3  1536 _EIP_3	=	0x00b3
                     00B4  1537 G$EIP_4$0$0 == 0x00b4
                     00B4  1538 _EIP_4	=	0x00b4
                     00B5  1539 G$EIP_5$0$0 == 0x00b5
                     00B5  1540 _EIP_5	=	0x00b5
                     00B6  1541 G$EIP_6$0$0 == 0x00b6
                     00B6  1542 _EIP_6	=	0x00b6
                     00B7  1543 G$EIP_7$0$0 == 0x00b7
                     00B7  1544 _EIP_7	=	0x00b7
                     00A8  1545 G$IE_0$0$0 == 0x00a8
                     00A8  1546 _IE_0	=	0x00a8
                     00A9  1547 G$IE_1$0$0 == 0x00a9
                     00A9  1548 _IE_1	=	0x00a9
                     00AA  1549 G$IE_2$0$0 == 0x00aa
                     00AA  1550 _IE_2	=	0x00aa
                     00AB  1551 G$IE_3$0$0 == 0x00ab
                     00AB  1552 _IE_3	=	0x00ab
                     00AC  1553 G$IE_4$0$0 == 0x00ac
                     00AC  1554 _IE_4	=	0x00ac
                     00AD  1555 G$IE_5$0$0 == 0x00ad
                     00AD  1556 _IE_5	=	0x00ad
                     00AE  1557 G$IE_6$0$0 == 0x00ae
                     00AE  1558 _IE_6	=	0x00ae
                     00AF  1559 G$IE_7$0$0 == 0x00af
                     00AF  1560 _IE_7	=	0x00af
                     00AF  1561 G$EA$0$0 == 0x00af
                     00AF  1562 _EA	=	0x00af
                     00B8  1563 G$IP_0$0$0 == 0x00b8
                     00B8  1564 _IP_0	=	0x00b8
                     00B9  1565 G$IP_1$0$0 == 0x00b9
                     00B9  1566 _IP_1	=	0x00b9
                     00BA  1567 G$IP_2$0$0 == 0x00ba
                     00BA  1568 _IP_2	=	0x00ba
                     00BB  1569 G$IP_3$0$0 == 0x00bb
                     00BB  1570 _IP_3	=	0x00bb
                     00BC  1571 G$IP_4$0$0 == 0x00bc
                     00BC  1572 _IP_4	=	0x00bc
                     00BD  1573 G$IP_5$0$0 == 0x00bd
                     00BD  1574 _IP_5	=	0x00bd
                     00BE  1575 G$IP_6$0$0 == 0x00be
                     00BE  1576 _IP_6	=	0x00be
                     00BF  1577 G$IP_7$0$0 == 0x00bf
                     00BF  1578 _IP_7	=	0x00bf
                     00D0  1579 G$P$0$0 == 0x00d0
                     00D0  1580 _P	=	0x00d0
                     00D1  1581 G$F1$0$0 == 0x00d1
                     00D1  1582 _F1	=	0x00d1
                     00D2  1583 G$OV$0$0 == 0x00d2
                     00D2  1584 _OV	=	0x00d2
                     00D3  1585 G$RS0$0$0 == 0x00d3
                     00D3  1586 _RS0	=	0x00d3
                     00D4  1587 G$RS1$0$0 == 0x00d4
                     00D4  1588 _RS1	=	0x00d4
                     00D5  1589 G$F0$0$0 == 0x00d5
                     00D5  1590 _F0	=	0x00d5
                     00D6  1591 G$AC$0$0 == 0x00d6
                     00D6  1592 _AC	=	0x00d6
                     00D7  1593 G$CY$0$0 == 0x00d7
                     00D7  1594 _CY	=	0x00d7
                     00C8  1595 G$PINA_0$0$0 == 0x00c8
                     00C8  1596 _PINA_0	=	0x00c8
                     00C9  1597 G$PINA_1$0$0 == 0x00c9
                     00C9  1598 _PINA_1	=	0x00c9
                     00CA  1599 G$PINA_2$0$0 == 0x00ca
                     00CA  1600 _PINA_2	=	0x00ca
                     00CB  1601 G$PINA_3$0$0 == 0x00cb
                     00CB  1602 _PINA_3	=	0x00cb
                     00CC  1603 G$PINA_4$0$0 == 0x00cc
                     00CC  1604 _PINA_4	=	0x00cc
                     00CD  1605 G$PINA_5$0$0 == 0x00cd
                     00CD  1606 _PINA_5	=	0x00cd
                     00CE  1607 G$PINA_6$0$0 == 0x00ce
                     00CE  1608 _PINA_6	=	0x00ce
                     00CF  1609 G$PINA_7$0$0 == 0x00cf
                     00CF  1610 _PINA_7	=	0x00cf
                     00E8  1611 G$PINB_0$0$0 == 0x00e8
                     00E8  1612 _PINB_0	=	0x00e8
                     00E9  1613 G$PINB_1$0$0 == 0x00e9
                     00E9  1614 _PINB_1	=	0x00e9
                     00EA  1615 G$PINB_2$0$0 == 0x00ea
                     00EA  1616 _PINB_2	=	0x00ea
                     00EB  1617 G$PINB_3$0$0 == 0x00eb
                     00EB  1618 _PINB_3	=	0x00eb
                     00EC  1619 G$PINB_4$0$0 == 0x00ec
                     00EC  1620 _PINB_4	=	0x00ec
                     00ED  1621 G$PINB_5$0$0 == 0x00ed
                     00ED  1622 _PINB_5	=	0x00ed
                     00EE  1623 G$PINB_6$0$0 == 0x00ee
                     00EE  1624 _PINB_6	=	0x00ee
                     00EF  1625 G$PINB_7$0$0 == 0x00ef
                     00EF  1626 _PINB_7	=	0x00ef
                     00F8  1627 G$PINC_0$0$0 == 0x00f8
                     00F8  1628 _PINC_0	=	0x00f8
                     00F9  1629 G$PINC_1$0$0 == 0x00f9
                     00F9  1630 _PINC_1	=	0x00f9
                     00FA  1631 G$PINC_2$0$0 == 0x00fa
                     00FA  1632 _PINC_2	=	0x00fa
                     00FB  1633 G$PINC_3$0$0 == 0x00fb
                     00FB  1634 _PINC_3	=	0x00fb
                     00FC  1635 G$PINC_4$0$0 == 0x00fc
                     00FC  1636 _PINC_4	=	0x00fc
                     00FD  1637 G$PINC_5$0$0 == 0x00fd
                     00FD  1638 _PINC_5	=	0x00fd
                     00FE  1639 G$PINC_6$0$0 == 0x00fe
                     00FE  1640 _PINC_6	=	0x00fe
                     00FF  1641 G$PINC_7$0$0 == 0x00ff
                     00FF  1642 _PINC_7	=	0x00ff
                     0080  1643 G$PORTA_0$0$0 == 0x0080
                     0080  1644 _PORTA_0	=	0x0080
                     0081  1645 G$PORTA_1$0$0 == 0x0081
                     0081  1646 _PORTA_1	=	0x0081
                     0082  1647 G$PORTA_2$0$0 == 0x0082
                     0082  1648 _PORTA_2	=	0x0082
                     0083  1649 G$PORTA_3$0$0 == 0x0083
                     0083  1650 _PORTA_3	=	0x0083
                     0084  1651 G$PORTA_4$0$0 == 0x0084
                     0084  1652 _PORTA_4	=	0x0084
                     0085  1653 G$PORTA_5$0$0 == 0x0085
                     0085  1654 _PORTA_5	=	0x0085
                     0086  1655 G$PORTA_6$0$0 == 0x0086
                     0086  1656 _PORTA_6	=	0x0086
                     0087  1657 G$PORTA_7$0$0 == 0x0087
                     0087  1658 _PORTA_7	=	0x0087
                     0088  1659 G$PORTB_0$0$0 == 0x0088
                     0088  1660 _PORTB_0	=	0x0088
                     0089  1661 G$PORTB_1$0$0 == 0x0089
                     0089  1662 _PORTB_1	=	0x0089
                     008A  1663 G$PORTB_2$0$0 == 0x008a
                     008A  1664 _PORTB_2	=	0x008a
                     008B  1665 G$PORTB_3$0$0 == 0x008b
                     008B  1666 _PORTB_3	=	0x008b
                     008C  1667 G$PORTB_4$0$0 == 0x008c
                     008C  1668 _PORTB_4	=	0x008c
                     008D  1669 G$PORTB_5$0$0 == 0x008d
                     008D  1670 _PORTB_5	=	0x008d
                     008E  1671 G$PORTB_6$0$0 == 0x008e
                     008E  1672 _PORTB_6	=	0x008e
                     008F  1673 G$PORTB_7$0$0 == 0x008f
                     008F  1674 _PORTB_7	=	0x008f
                     0090  1675 G$PORTC_0$0$0 == 0x0090
                     0090  1676 _PORTC_0	=	0x0090
                     0091  1677 G$PORTC_1$0$0 == 0x0091
                     0091  1678 _PORTC_1	=	0x0091
                     0092  1679 G$PORTC_2$0$0 == 0x0092
                     0092  1680 _PORTC_2	=	0x0092
                     0093  1681 G$PORTC_3$0$0 == 0x0093
                     0093  1682 _PORTC_3	=	0x0093
                     0094  1683 G$PORTC_4$0$0 == 0x0094
                     0094  1684 _PORTC_4	=	0x0094
                     0095  1685 G$PORTC_5$0$0 == 0x0095
                     0095  1686 _PORTC_5	=	0x0095
                     0096  1687 G$PORTC_6$0$0 == 0x0096
                     0096  1688 _PORTC_6	=	0x0096
                     0097  1689 G$PORTC_7$0$0 == 0x0097
                     0097  1690 _PORTC_7	=	0x0097
                           1691 ;--------------------------------------------------------
                           1692 ; overlayable register banks
                           1693 ;--------------------------------------------------------
                           1694 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                    1695 	.ds 8
                           1696 ;--------------------------------------------------------
                           1697 ; overlayable bit register bank
                           1698 ;--------------------------------------------------------
                           1699 	.area BIT_BANK	(REL,OVR,DATA)
   0000                    1700 bits:
   0000                    1701 	.ds 1
                     8000  1702 	b0 = bits[0]
                     8100  1703 	b1 = bits[1]
                     8200  1704 	b2 = bits[2]
                     8300  1705 	b3 = bits[3]
                     8400  1706 	b4 = bits[4]
                     8500  1707 	b5 = bits[5]
                     8600  1708 	b6 = bits[6]
                     8700  1709 	b7 = bits[7]
                           1710 ;--------------------------------------------------------
                           1711 ; internal ram data
                           1712 ;--------------------------------------------------------
                           1713 	.area DSEG    (DATA)
                     0000  1714 G$axradio_mode$0$0==.
   0000                    1715 _axradio_mode::
   0000                    1716 	.ds 1
                     0001  1717 G$axradio_trxstate$0$0==.
   0001                    1718 _axradio_trxstate::
   0001                    1719 	.ds 1
                     0002  1720 Leasyax5043.axradio_transmit$pkt$1$395==.
   0002                    1721 _axradio_transmit_PARM_2:
   0002                    1722 	.ds 3
                     0005  1723 Leasyax5043.axradio_transmit$pktlen$1$395==.
   0005                    1724 _axradio_transmit_PARM_3:
   0005                    1725 	.ds 2
                           1726 ;--------------------------------------------------------
                           1727 ; overlayable items in internal ram 
                           1728 ;--------------------------------------------------------
                           1729 	.area	OSEG    (OVR,DATA)
                     0000  1730 Leasyax5043.axradio_set_channel$rng$1$370==.
   0000                    1731 _axradio_set_channel_rng_1_370:
   0000                    1732 	.ds 1
                           1733 ;--------------------------------------------------------
                           1734 ; indirectly addressable internal ram data
                           1735 ;--------------------------------------------------------
                           1736 	.area ISEG    (DATA)
                           1737 ;--------------------------------------------------------
                           1738 ; absolute internal ram data
                           1739 ;--------------------------------------------------------
                           1740 	.area IABS    (ABS,DATA)
                           1741 	.area IABS    (ABS,DATA)
                           1742 ;--------------------------------------------------------
                           1743 ; bit data
                           1744 ;--------------------------------------------------------
                           1745 	.area BSEG    (BIT)
                           1746 ;--------------------------------------------------------
                           1747 ; paged external ram data
                           1748 ;--------------------------------------------------------
                           1749 	.area PSEG    (PAG,XDATA)
                           1750 ;--------------------------------------------------------
                           1751 ; external ram data
                           1752 ;--------------------------------------------------------
                           1753 	.area XSEG    (XDATA)
                     7020  1754 G$ADCCH0VAL0$0$0 == 0x7020
                     7020  1755 _ADCCH0VAL0	=	0x7020
                     7021  1756 G$ADCCH0VAL1$0$0 == 0x7021
                     7021  1757 _ADCCH0VAL1	=	0x7021
                     7020  1758 G$ADCCH0VAL$0$0 == 0x7020
                     7020  1759 _ADCCH0VAL	=	0x7020
                     7022  1760 G$ADCCH1VAL0$0$0 == 0x7022
                     7022  1761 _ADCCH1VAL0	=	0x7022
                     7023  1762 G$ADCCH1VAL1$0$0 == 0x7023
                     7023  1763 _ADCCH1VAL1	=	0x7023
                     7022  1764 G$ADCCH1VAL$0$0 == 0x7022
                     7022  1765 _ADCCH1VAL	=	0x7022
                     7024  1766 G$ADCCH2VAL0$0$0 == 0x7024
                     7024  1767 _ADCCH2VAL0	=	0x7024
                     7025  1768 G$ADCCH2VAL1$0$0 == 0x7025
                     7025  1769 _ADCCH2VAL1	=	0x7025
                     7024  1770 G$ADCCH2VAL$0$0 == 0x7024
                     7024  1771 _ADCCH2VAL	=	0x7024
                     7026  1772 G$ADCCH3VAL0$0$0 == 0x7026
                     7026  1773 _ADCCH3VAL0	=	0x7026
                     7027  1774 G$ADCCH3VAL1$0$0 == 0x7027
                     7027  1775 _ADCCH3VAL1	=	0x7027
                     7026  1776 G$ADCCH3VAL$0$0 == 0x7026
                     7026  1777 _ADCCH3VAL	=	0x7026
                     7028  1778 G$ADCTUNE0$0$0 == 0x7028
                     7028  1779 _ADCTUNE0	=	0x7028
                     7029  1780 G$ADCTUNE1$0$0 == 0x7029
                     7029  1781 _ADCTUNE1	=	0x7029
                     702A  1782 G$ADCTUNE2$0$0 == 0x702a
                     702A  1783 _ADCTUNE2	=	0x702a
                     7010  1784 G$DMA0ADDR0$0$0 == 0x7010
                     7010  1785 _DMA0ADDR0	=	0x7010
                     7011  1786 G$DMA0ADDR1$0$0 == 0x7011
                     7011  1787 _DMA0ADDR1	=	0x7011
                     7010  1788 G$DMA0ADDR$0$0 == 0x7010
                     7010  1789 _DMA0ADDR	=	0x7010
                     7014  1790 G$DMA0CONFIG$0$0 == 0x7014
                     7014  1791 _DMA0CONFIG	=	0x7014
                     7012  1792 G$DMA1ADDR0$0$0 == 0x7012
                     7012  1793 _DMA1ADDR0	=	0x7012
                     7013  1794 G$DMA1ADDR1$0$0 == 0x7013
                     7013  1795 _DMA1ADDR1	=	0x7013
                     7012  1796 G$DMA1ADDR$0$0 == 0x7012
                     7012  1797 _DMA1ADDR	=	0x7012
                     7015  1798 G$DMA1CONFIG$0$0 == 0x7015
                     7015  1799 _DMA1CONFIG	=	0x7015
                     7070  1800 G$FRCOSCCONFIG$0$0 == 0x7070
                     7070  1801 _FRCOSCCONFIG	=	0x7070
                     7071  1802 G$FRCOSCCTRL$0$0 == 0x7071
                     7071  1803 _FRCOSCCTRL	=	0x7071
                     7076  1804 G$FRCOSCFREQ0$0$0 == 0x7076
                     7076  1805 _FRCOSCFREQ0	=	0x7076
                     7077  1806 G$FRCOSCFREQ1$0$0 == 0x7077
                     7077  1807 _FRCOSCFREQ1	=	0x7077
                     7076  1808 G$FRCOSCFREQ$0$0 == 0x7076
                     7076  1809 _FRCOSCFREQ	=	0x7076
                     7072  1810 G$FRCOSCKFILT0$0$0 == 0x7072
                     7072  1811 _FRCOSCKFILT0	=	0x7072
                     7073  1812 G$FRCOSCKFILT1$0$0 == 0x7073
                     7073  1813 _FRCOSCKFILT1	=	0x7073
                     7072  1814 G$FRCOSCKFILT$0$0 == 0x7072
                     7072  1815 _FRCOSCKFILT	=	0x7072
                     7078  1816 G$FRCOSCPER0$0$0 == 0x7078
                     7078  1817 _FRCOSCPER0	=	0x7078
                     7079  1818 G$FRCOSCPER1$0$0 == 0x7079
                     7079  1819 _FRCOSCPER1	=	0x7079
                     7078  1820 G$FRCOSCPER$0$0 == 0x7078
                     7078  1821 _FRCOSCPER	=	0x7078
                     7074  1822 G$FRCOSCREF0$0$0 == 0x7074
                     7074  1823 _FRCOSCREF0	=	0x7074
                     7075  1824 G$FRCOSCREF1$0$0 == 0x7075
                     7075  1825 _FRCOSCREF1	=	0x7075
                     7074  1826 G$FRCOSCREF$0$0 == 0x7074
                     7074  1827 _FRCOSCREF	=	0x7074
                     7007  1828 G$ANALOGA$0$0 == 0x7007
                     7007  1829 _ANALOGA	=	0x7007
                     700C  1830 G$GPIOENABLE$0$0 == 0x700c
                     700C  1831 _GPIOENABLE	=	0x700c
                     7003  1832 G$EXTIRQ$0$0 == 0x7003
                     7003  1833 _EXTIRQ	=	0x7003
                     7000  1834 G$INTCHGA$0$0 == 0x7000
                     7000  1835 _INTCHGA	=	0x7000
                     7001  1836 G$INTCHGB$0$0 == 0x7001
                     7001  1837 _INTCHGB	=	0x7001
                     7002  1838 G$INTCHGC$0$0 == 0x7002
                     7002  1839 _INTCHGC	=	0x7002
                     7008  1840 G$PALTA$0$0 == 0x7008
                     7008  1841 _PALTA	=	0x7008
                     7009  1842 G$PALTB$0$0 == 0x7009
                     7009  1843 _PALTB	=	0x7009
                     700A  1844 G$PALTC$0$0 == 0x700a
                     700A  1845 _PALTC	=	0x700a
                     7046  1846 G$PALTRADIO$0$0 == 0x7046
                     7046  1847 _PALTRADIO	=	0x7046
                     7004  1848 G$PINCHGA$0$0 == 0x7004
                     7004  1849 _PINCHGA	=	0x7004
                     7005  1850 G$PINCHGB$0$0 == 0x7005
                     7005  1851 _PINCHGB	=	0x7005
                     7006  1852 G$PINCHGC$0$0 == 0x7006
                     7006  1853 _PINCHGC	=	0x7006
                     700B  1854 G$PINSEL$0$0 == 0x700b
                     700B  1855 _PINSEL	=	0x700b
                     7060  1856 G$LPOSCCONFIG$0$0 == 0x7060
                     7060  1857 _LPOSCCONFIG	=	0x7060
                     7066  1858 G$LPOSCFREQ0$0$0 == 0x7066
                     7066  1859 _LPOSCFREQ0	=	0x7066
                     7067  1860 G$LPOSCFREQ1$0$0 == 0x7067
                     7067  1861 _LPOSCFREQ1	=	0x7067
                     7066  1862 G$LPOSCFREQ$0$0 == 0x7066
                     7066  1863 _LPOSCFREQ	=	0x7066
                     7062  1864 G$LPOSCKFILT0$0$0 == 0x7062
                     7062  1865 _LPOSCKFILT0	=	0x7062
                     7063  1866 G$LPOSCKFILT1$0$0 == 0x7063
                     7063  1867 _LPOSCKFILT1	=	0x7063
                     7062  1868 G$LPOSCKFILT$0$0 == 0x7062
                     7062  1869 _LPOSCKFILT	=	0x7062
                     7068  1870 G$LPOSCPER0$0$0 == 0x7068
                     7068  1871 _LPOSCPER0	=	0x7068
                     7069  1872 G$LPOSCPER1$0$0 == 0x7069
                     7069  1873 _LPOSCPER1	=	0x7069
                     7068  1874 G$LPOSCPER$0$0 == 0x7068
                     7068  1875 _LPOSCPER	=	0x7068
                     7064  1876 G$LPOSCREF0$0$0 == 0x7064
                     7064  1877 _LPOSCREF0	=	0x7064
                     7065  1878 G$LPOSCREF1$0$0 == 0x7065
                     7065  1879 _LPOSCREF1	=	0x7065
                     7064  1880 G$LPOSCREF$0$0 == 0x7064
                     7064  1881 _LPOSCREF	=	0x7064
                     7054  1882 G$LPXOSCGM$0$0 == 0x7054
                     7054  1883 _LPXOSCGM	=	0x7054
                     7F01  1884 G$MISCCTRL$0$0 == 0x7f01
                     7F01  1885 _MISCCTRL	=	0x7f01
                     7053  1886 G$OSCCALIB$0$0 == 0x7053
                     7053  1887 _OSCCALIB	=	0x7053
                     7050  1888 G$OSCFORCERUN$0$0 == 0x7050
                     7050  1889 _OSCFORCERUN	=	0x7050
                     7052  1890 G$OSCREADY$0$0 == 0x7052
                     7052  1891 _OSCREADY	=	0x7052
                     7051  1892 G$OSCRUN$0$0 == 0x7051
                     7051  1893 _OSCRUN	=	0x7051
                     7040  1894 G$RADIOFDATAADDR0$0$0 == 0x7040
                     7040  1895 _RADIOFDATAADDR0	=	0x7040
                     7041  1896 G$RADIOFDATAADDR1$0$0 == 0x7041
                     7041  1897 _RADIOFDATAADDR1	=	0x7041
                     7040  1898 G$RADIOFDATAADDR$0$0 == 0x7040
                     7040  1899 _RADIOFDATAADDR	=	0x7040
                     7042  1900 G$RADIOFSTATADDR0$0$0 == 0x7042
                     7042  1901 _RADIOFSTATADDR0	=	0x7042
                     7043  1902 G$RADIOFSTATADDR1$0$0 == 0x7043
                     7043  1903 _RADIOFSTATADDR1	=	0x7043
                     7042  1904 G$RADIOFSTATADDR$0$0 == 0x7042
                     7042  1905 _RADIOFSTATADDR	=	0x7042
                     7044  1906 G$RADIOMUX$0$0 == 0x7044
                     7044  1907 _RADIOMUX	=	0x7044
                     7084  1908 G$SCRATCH0$0$0 == 0x7084
                     7084  1909 _SCRATCH0	=	0x7084
                     7085  1910 G$SCRATCH1$0$0 == 0x7085
                     7085  1911 _SCRATCH1	=	0x7085
                     7086  1912 G$SCRATCH2$0$0 == 0x7086
                     7086  1913 _SCRATCH2	=	0x7086
                     7087  1914 G$SCRATCH3$0$0 == 0x7087
                     7087  1915 _SCRATCH3	=	0x7087
                     7F00  1916 G$SILICONREV$0$0 == 0x7f00
                     7F00  1917 _SILICONREV	=	0x7f00
                     7F19  1918 G$XTALAMPL$0$0 == 0x7f19
                     7F19  1919 _XTALAMPL	=	0x7f19
                     7F18  1920 G$XTALOSC$0$0 == 0x7f18
                     7F18  1921 _XTALOSC	=	0x7f18
                     7F1A  1922 G$XTALREADY$0$0 == 0x7f1a
                     7F1A  1923 _XTALREADY	=	0x7f1a
                     3F82  1924 G$XDPTR0$0$0 == 0x3f82
                     3F82  1925 _XDPTR0	=	0x3f82
                     3F84  1926 G$XDPTR1$0$0 == 0x3f84
                     3F84  1927 _XDPTR1	=	0x3f84
                     3FA8  1928 G$XIE$0$0 == 0x3fa8
                     3FA8  1929 _XIE	=	0x3fa8
                     3FB8  1930 G$XIP$0$0 == 0x3fb8
                     3FB8  1931 _XIP	=	0x3fb8
                     3F87  1932 G$XPCON$0$0 == 0x3f87
                     3F87  1933 _XPCON	=	0x3f87
                     3FCA  1934 G$XADCCH0CONFIG$0$0 == 0x3fca
                     3FCA  1935 _XADCCH0CONFIG	=	0x3fca
                     3FCB  1936 G$XADCCH1CONFIG$0$0 == 0x3fcb
                     3FCB  1937 _XADCCH1CONFIG	=	0x3fcb
                     3FD2  1938 G$XADCCH2CONFIG$0$0 == 0x3fd2
                     3FD2  1939 _XADCCH2CONFIG	=	0x3fd2
                     3FD3  1940 G$XADCCH3CONFIG$0$0 == 0x3fd3
                     3FD3  1941 _XADCCH3CONFIG	=	0x3fd3
                     3FD1  1942 G$XADCCLKSRC$0$0 == 0x3fd1
                     3FD1  1943 _XADCCLKSRC	=	0x3fd1
                     3FC9  1944 G$XADCCONV$0$0 == 0x3fc9
                     3FC9  1945 _XADCCONV	=	0x3fc9
                     3FE1  1946 G$XANALOGCOMP$0$0 == 0x3fe1
                     3FE1  1947 _XANALOGCOMP	=	0x3fe1
                     3FC6  1948 G$XCLKCON$0$0 == 0x3fc6
                     3FC6  1949 _XCLKCON	=	0x3fc6
                     3FC7  1950 G$XCLKSTAT$0$0 == 0x3fc7
                     3FC7  1951 _XCLKSTAT	=	0x3fc7
                     3F97  1952 G$XCODECONFIG$0$0 == 0x3f97
                     3F97  1953 _XCODECONFIG	=	0x3f97
                     3FE3  1954 G$XDBGLNKBUF$0$0 == 0x3fe3
                     3FE3  1955 _XDBGLNKBUF	=	0x3fe3
                     3FE2  1956 G$XDBGLNKSTAT$0$0 == 0x3fe2
                     3FE2  1957 _XDBGLNKSTAT	=	0x3fe2
                     3F89  1958 G$XDIRA$0$0 == 0x3f89
                     3F89  1959 _XDIRA	=	0x3f89
                     3F8A  1960 G$XDIRB$0$0 == 0x3f8a
                     3F8A  1961 _XDIRB	=	0x3f8a
                     3F8B  1962 G$XDIRC$0$0 == 0x3f8b
                     3F8B  1963 _XDIRC	=	0x3f8b
                     3F8E  1964 G$XDIRR$0$0 == 0x3f8e
                     3F8E  1965 _XDIRR	=	0x3f8e
                     3FC8  1966 G$XPINA$0$0 == 0x3fc8
                     3FC8  1967 _XPINA	=	0x3fc8
                     3FE8  1968 G$XPINB$0$0 == 0x3fe8
                     3FE8  1969 _XPINB	=	0x3fe8
                     3FF8  1970 G$XPINC$0$0 == 0x3ff8
                     3FF8  1971 _XPINC	=	0x3ff8
                     3F8D  1972 G$XPINR$0$0 == 0x3f8d
                     3F8D  1973 _XPINR	=	0x3f8d
                     3F80  1974 G$XPORTA$0$0 == 0x3f80
                     3F80  1975 _XPORTA	=	0x3f80
                     3F88  1976 G$XPORTB$0$0 == 0x3f88
                     3F88  1977 _XPORTB	=	0x3f88
                     3F90  1978 G$XPORTC$0$0 == 0x3f90
                     3F90  1979 _XPORTC	=	0x3f90
                     3F8C  1980 G$XPORTR$0$0 == 0x3f8c
                     3F8C  1981 _XPORTR	=	0x3f8c
                     3FCE  1982 G$XIC0CAPT0$0$0 == 0x3fce
                     3FCE  1983 _XIC0CAPT0	=	0x3fce
                     3FCF  1984 G$XIC0CAPT1$0$0 == 0x3fcf
                     3FCF  1985 _XIC0CAPT1	=	0x3fcf
                     3FCE  1986 G$XIC0CAPT$0$0 == 0x3fce
                     3FCE  1987 _XIC0CAPT	=	0x3fce
                     3FCC  1988 G$XIC0MODE$0$0 == 0x3fcc
                     3FCC  1989 _XIC0MODE	=	0x3fcc
                     3FCD  1990 G$XIC0STATUS$0$0 == 0x3fcd
                     3FCD  1991 _XIC0STATUS	=	0x3fcd
                     3FD6  1992 G$XIC1CAPT0$0$0 == 0x3fd6
                     3FD6  1993 _XIC1CAPT0	=	0x3fd6
                     3FD7  1994 G$XIC1CAPT1$0$0 == 0x3fd7
                     3FD7  1995 _XIC1CAPT1	=	0x3fd7
                     3FD6  1996 G$XIC1CAPT$0$0 == 0x3fd6
                     3FD6  1997 _XIC1CAPT	=	0x3fd6
                     3FD4  1998 G$XIC1MODE$0$0 == 0x3fd4
                     3FD4  1999 _XIC1MODE	=	0x3fd4
                     3FD5  2000 G$XIC1STATUS$0$0 == 0x3fd5
                     3FD5  2001 _XIC1STATUS	=	0x3fd5
                     3F92  2002 G$XNVADDR0$0$0 == 0x3f92
                     3F92  2003 _XNVADDR0	=	0x3f92
                     3F93  2004 G$XNVADDR1$0$0 == 0x3f93
                     3F93  2005 _XNVADDR1	=	0x3f93
                     3F92  2006 G$XNVADDR$0$0 == 0x3f92
                     3F92  2007 _XNVADDR	=	0x3f92
                     3F94  2008 G$XNVDATA0$0$0 == 0x3f94
                     3F94  2009 _XNVDATA0	=	0x3f94
                     3F95  2010 G$XNVDATA1$0$0 == 0x3f95
                     3F95  2011 _XNVDATA1	=	0x3f95
                     3F94  2012 G$XNVDATA$0$0 == 0x3f94
                     3F94  2013 _XNVDATA	=	0x3f94
                     3F96  2014 G$XNVKEY$0$0 == 0x3f96
                     3F96  2015 _XNVKEY	=	0x3f96
                     3F91  2016 G$XNVSTATUS$0$0 == 0x3f91
                     3F91  2017 _XNVSTATUS	=	0x3f91
                     3FBC  2018 G$XOC0COMP0$0$0 == 0x3fbc
                     3FBC  2019 _XOC0COMP0	=	0x3fbc
                     3FBD  2020 G$XOC0COMP1$0$0 == 0x3fbd
                     3FBD  2021 _XOC0COMP1	=	0x3fbd
                     3FBC  2022 G$XOC0COMP$0$0 == 0x3fbc
                     3FBC  2023 _XOC0COMP	=	0x3fbc
                     3FB9  2024 G$XOC0MODE$0$0 == 0x3fb9
                     3FB9  2025 _XOC0MODE	=	0x3fb9
                     3FBA  2026 G$XOC0PIN$0$0 == 0x3fba
                     3FBA  2027 _XOC0PIN	=	0x3fba
                     3FBB  2028 G$XOC0STATUS$0$0 == 0x3fbb
                     3FBB  2029 _XOC0STATUS	=	0x3fbb
                     3FC4  2030 G$XOC1COMP0$0$0 == 0x3fc4
                     3FC4  2031 _XOC1COMP0	=	0x3fc4
                     3FC5  2032 G$XOC1COMP1$0$0 == 0x3fc5
                     3FC5  2033 _XOC1COMP1	=	0x3fc5
                     3FC4  2034 G$XOC1COMP$0$0 == 0x3fc4
                     3FC4  2035 _XOC1COMP	=	0x3fc4
                     3FC1  2036 G$XOC1MODE$0$0 == 0x3fc1
                     3FC1  2037 _XOC1MODE	=	0x3fc1
                     3FC2  2038 G$XOC1PIN$0$0 == 0x3fc2
                     3FC2  2039 _XOC1PIN	=	0x3fc2
                     3FC3  2040 G$XOC1STATUS$0$0 == 0x3fc3
                     3FC3  2041 _XOC1STATUS	=	0x3fc3
                     3FB1  2042 G$XRADIOACC$0$0 == 0x3fb1
                     3FB1  2043 _XRADIOACC	=	0x3fb1
                     3FB3  2044 G$XRADIOADDR0$0$0 == 0x3fb3
                     3FB3  2045 _XRADIOADDR0	=	0x3fb3
                     3FB2  2046 G$XRADIOADDR1$0$0 == 0x3fb2
                     3FB2  2047 _XRADIOADDR1	=	0x3fb2
                     3FB7  2048 G$XRADIODATA0$0$0 == 0x3fb7
                     3FB7  2049 _XRADIODATA0	=	0x3fb7
                     3FB6  2050 G$XRADIODATA1$0$0 == 0x3fb6
                     3FB6  2051 _XRADIODATA1	=	0x3fb6
                     3FB5  2052 G$XRADIODATA2$0$0 == 0x3fb5
                     3FB5  2053 _XRADIODATA2	=	0x3fb5
                     3FB4  2054 G$XRADIODATA3$0$0 == 0x3fb4
                     3FB4  2055 _XRADIODATA3	=	0x3fb4
                     3FBE  2056 G$XRADIOSTAT0$0$0 == 0x3fbe
                     3FBE  2057 _XRADIOSTAT0	=	0x3fbe
                     3FBF  2058 G$XRADIOSTAT1$0$0 == 0x3fbf
                     3FBF  2059 _XRADIOSTAT1	=	0x3fbf
                     3FBE  2060 G$XRADIOSTAT$0$0 == 0x3fbe
                     3FBE  2061 _XRADIOSTAT	=	0x3fbe
                     3FDF  2062 G$XSPCLKSRC$0$0 == 0x3fdf
                     3FDF  2063 _XSPCLKSRC	=	0x3fdf
                     3FDC  2064 G$XSPMODE$0$0 == 0x3fdc
                     3FDC  2065 _XSPMODE	=	0x3fdc
                     3FDE  2066 G$XSPSHREG$0$0 == 0x3fde
                     3FDE  2067 _XSPSHREG	=	0x3fde
                     3FDD  2068 G$XSPSTATUS$0$0 == 0x3fdd
                     3FDD  2069 _XSPSTATUS	=	0x3fdd
                     3F9A  2070 G$XT0CLKSRC$0$0 == 0x3f9a
                     3F9A  2071 _XT0CLKSRC	=	0x3f9a
                     3F9C  2072 G$XT0CNT0$0$0 == 0x3f9c
                     3F9C  2073 _XT0CNT0	=	0x3f9c
                     3F9D  2074 G$XT0CNT1$0$0 == 0x3f9d
                     3F9D  2075 _XT0CNT1	=	0x3f9d
                     3F9C  2076 G$XT0CNT$0$0 == 0x3f9c
                     3F9C  2077 _XT0CNT	=	0x3f9c
                     3F99  2078 G$XT0MODE$0$0 == 0x3f99
                     3F99  2079 _XT0MODE	=	0x3f99
                     3F9E  2080 G$XT0PERIOD0$0$0 == 0x3f9e
                     3F9E  2081 _XT0PERIOD0	=	0x3f9e
                     3F9F  2082 G$XT0PERIOD1$0$0 == 0x3f9f
                     3F9F  2083 _XT0PERIOD1	=	0x3f9f
                     3F9E  2084 G$XT0PERIOD$0$0 == 0x3f9e
                     3F9E  2085 _XT0PERIOD	=	0x3f9e
                     3F9B  2086 G$XT0STATUS$0$0 == 0x3f9b
                     3F9B  2087 _XT0STATUS	=	0x3f9b
                     3FA2  2088 G$XT1CLKSRC$0$0 == 0x3fa2
                     3FA2  2089 _XT1CLKSRC	=	0x3fa2
                     3FA4  2090 G$XT1CNT0$0$0 == 0x3fa4
                     3FA4  2091 _XT1CNT0	=	0x3fa4
                     3FA5  2092 G$XT1CNT1$0$0 == 0x3fa5
                     3FA5  2093 _XT1CNT1	=	0x3fa5
                     3FA4  2094 G$XT1CNT$0$0 == 0x3fa4
                     3FA4  2095 _XT1CNT	=	0x3fa4
                     3FA1  2096 G$XT1MODE$0$0 == 0x3fa1
                     3FA1  2097 _XT1MODE	=	0x3fa1
                     3FA6  2098 G$XT1PERIOD0$0$0 == 0x3fa6
                     3FA6  2099 _XT1PERIOD0	=	0x3fa6
                     3FA7  2100 G$XT1PERIOD1$0$0 == 0x3fa7
                     3FA7  2101 _XT1PERIOD1	=	0x3fa7
                     3FA6  2102 G$XT1PERIOD$0$0 == 0x3fa6
                     3FA6  2103 _XT1PERIOD	=	0x3fa6
                     3FA3  2104 G$XT1STATUS$0$0 == 0x3fa3
                     3FA3  2105 _XT1STATUS	=	0x3fa3
                     3FAA  2106 G$XT2CLKSRC$0$0 == 0x3faa
                     3FAA  2107 _XT2CLKSRC	=	0x3faa
                     3FAC  2108 G$XT2CNT0$0$0 == 0x3fac
                     3FAC  2109 _XT2CNT0	=	0x3fac
                     3FAD  2110 G$XT2CNT1$0$0 == 0x3fad
                     3FAD  2111 _XT2CNT1	=	0x3fad
                     3FAC  2112 G$XT2CNT$0$0 == 0x3fac
                     3FAC  2113 _XT2CNT	=	0x3fac
                     3FA9  2114 G$XT2MODE$0$0 == 0x3fa9
                     3FA9  2115 _XT2MODE	=	0x3fa9
                     3FAE  2116 G$XT2PERIOD0$0$0 == 0x3fae
                     3FAE  2117 _XT2PERIOD0	=	0x3fae
                     3FAF  2118 G$XT2PERIOD1$0$0 == 0x3faf
                     3FAF  2119 _XT2PERIOD1	=	0x3faf
                     3FAE  2120 G$XT2PERIOD$0$0 == 0x3fae
                     3FAE  2121 _XT2PERIOD	=	0x3fae
                     3FAB  2122 G$XT2STATUS$0$0 == 0x3fab
                     3FAB  2123 _XT2STATUS	=	0x3fab
                     3FE4  2124 G$XU0CTRL$0$0 == 0x3fe4
                     3FE4  2125 _XU0CTRL	=	0x3fe4
                     3FE7  2126 G$XU0MODE$0$0 == 0x3fe7
                     3FE7  2127 _XU0MODE	=	0x3fe7
                     3FE6  2128 G$XU0SHREG$0$0 == 0x3fe6
                     3FE6  2129 _XU0SHREG	=	0x3fe6
                     3FE5  2130 G$XU0STATUS$0$0 == 0x3fe5
                     3FE5  2131 _XU0STATUS	=	0x3fe5
                     3FEC  2132 G$XU1CTRL$0$0 == 0x3fec
                     3FEC  2133 _XU1CTRL	=	0x3fec
                     3FEF  2134 G$XU1MODE$0$0 == 0x3fef
                     3FEF  2135 _XU1MODE	=	0x3fef
                     3FEE  2136 G$XU1SHREG$0$0 == 0x3fee
                     3FEE  2137 _XU1SHREG	=	0x3fee
                     3FED  2138 G$XU1STATUS$0$0 == 0x3fed
                     3FED  2139 _XU1STATUS	=	0x3fed
                     3FDA  2140 G$XWDTCFG$0$0 == 0x3fda
                     3FDA  2141 _XWDTCFG	=	0x3fda
                     3FDB  2142 G$XWDTRESET$0$0 == 0x3fdb
                     3FDB  2143 _XWDTRESET	=	0x3fdb
                     3FF1  2144 G$XWTCFGA$0$0 == 0x3ff1
                     3FF1  2145 _XWTCFGA	=	0x3ff1
                     3FF9  2146 G$XWTCFGB$0$0 == 0x3ff9
                     3FF9  2147 _XWTCFGB	=	0x3ff9
                     3FF2  2148 G$XWTCNTA0$0$0 == 0x3ff2
                     3FF2  2149 _XWTCNTA0	=	0x3ff2
                     3FF3  2150 G$XWTCNTA1$0$0 == 0x3ff3
                     3FF3  2151 _XWTCNTA1	=	0x3ff3
                     3FF2  2152 G$XWTCNTA$0$0 == 0x3ff2
                     3FF2  2153 _XWTCNTA	=	0x3ff2
                     3FFA  2154 G$XWTCNTB0$0$0 == 0x3ffa
                     3FFA  2155 _XWTCNTB0	=	0x3ffa
                     3FFB  2156 G$XWTCNTB1$0$0 == 0x3ffb
                     3FFB  2157 _XWTCNTB1	=	0x3ffb
                     3FFA  2158 G$XWTCNTB$0$0 == 0x3ffa
                     3FFA  2159 _XWTCNTB	=	0x3ffa
                     3FEB  2160 G$XWTCNTR1$0$0 == 0x3feb
                     3FEB  2161 _XWTCNTR1	=	0x3feb
                     3FF4  2162 G$XWTEVTA0$0$0 == 0x3ff4
                     3FF4  2163 _XWTEVTA0	=	0x3ff4
                     3FF5  2164 G$XWTEVTA1$0$0 == 0x3ff5
                     3FF5  2165 _XWTEVTA1	=	0x3ff5
                     3FF4  2166 G$XWTEVTA$0$0 == 0x3ff4
                     3FF4  2167 _XWTEVTA	=	0x3ff4
                     3FF6  2168 G$XWTEVTB0$0$0 == 0x3ff6
                     3FF6  2169 _XWTEVTB0	=	0x3ff6
                     3FF7  2170 G$XWTEVTB1$0$0 == 0x3ff7
                     3FF7  2171 _XWTEVTB1	=	0x3ff7
                     3FF6  2172 G$XWTEVTB$0$0 == 0x3ff6
                     3FF6  2173 _XWTEVTB	=	0x3ff6
                     3FFC  2174 G$XWTEVTC0$0$0 == 0x3ffc
                     3FFC  2175 _XWTEVTC0	=	0x3ffc
                     3FFD  2176 G$XWTEVTC1$0$0 == 0x3ffd
                     3FFD  2177 _XWTEVTC1	=	0x3ffd
                     3FFC  2178 G$XWTEVTC$0$0 == 0x3ffc
                     3FFC  2179 _XWTEVTC	=	0x3ffc
                     3FFE  2180 G$XWTEVTD0$0$0 == 0x3ffe
                     3FFE  2181 _XWTEVTD0	=	0x3ffe
                     3FFF  2182 G$XWTEVTD1$0$0 == 0x3fff
                     3FFF  2183 _XWTEVTD1	=	0x3fff
                     3FFE  2184 G$XWTEVTD$0$0 == 0x3ffe
                     3FFE  2185 _XWTEVTD	=	0x3ffe
                     3FE9  2186 G$XWTIRQEN$0$0 == 0x3fe9
                     3FE9  2187 _XWTIRQEN	=	0x3fe9
                     3FEA  2188 G$XWTSTAT$0$0 == 0x3fea
                     3FEA  2189 _XWTSTAT	=	0x3fea
                     4114  2190 G$AX5043_AFSKCTRL$0$0 == 0x4114
                     4114  2191 _AX5043_AFSKCTRL	=	0x4114
                     4113  2192 G$AX5043_AFSKMARK0$0$0 == 0x4113
                     4113  2193 _AX5043_AFSKMARK0	=	0x4113
                     4112  2194 G$AX5043_AFSKMARK1$0$0 == 0x4112
                     4112  2195 _AX5043_AFSKMARK1	=	0x4112
                     4111  2196 G$AX5043_AFSKSPACE0$0$0 == 0x4111
                     4111  2197 _AX5043_AFSKSPACE0	=	0x4111
                     4110  2198 G$AX5043_AFSKSPACE1$0$0 == 0x4110
                     4110  2199 _AX5043_AFSKSPACE1	=	0x4110
                     4043  2200 G$AX5043_AGCCOUNTER$0$0 == 0x4043
                     4043  2201 _AX5043_AGCCOUNTER	=	0x4043
                     4115  2202 G$AX5043_AMPLFILTER$0$0 == 0x4115
                     4115  2203 _AX5043_AMPLFILTER	=	0x4115
                     4189  2204 G$AX5043_BBOFFSCAP$0$0 == 0x4189
                     4189  2205 _AX5043_BBOFFSCAP	=	0x4189
                     4188  2206 G$AX5043_BBTUNE$0$0 == 0x4188
                     4188  2207 _AX5043_BBTUNE	=	0x4188
                     4041  2208 G$AX5043_BGNDRSSI$0$0 == 0x4041
                     4041  2209 _AX5043_BGNDRSSI	=	0x4041
                     422E  2210 G$AX5043_BGNDRSSIGAIN$0$0 == 0x422e
                     422E  2211 _AX5043_BGNDRSSIGAIN	=	0x422e
                     422F  2212 G$AX5043_BGNDRSSITHR$0$0 == 0x422f
                     422F  2213 _AX5043_BGNDRSSITHR	=	0x422f
                     4017  2214 G$AX5043_CRCINIT0$0$0 == 0x4017
                     4017  2215 _AX5043_CRCINIT0	=	0x4017
                     4016  2216 G$AX5043_CRCINIT1$0$0 == 0x4016
                     4016  2217 _AX5043_CRCINIT1	=	0x4016
                     4015  2218 G$AX5043_CRCINIT2$0$0 == 0x4015
                     4015  2219 _AX5043_CRCINIT2	=	0x4015
                     4014  2220 G$AX5043_CRCINIT3$0$0 == 0x4014
                     4014  2221 _AX5043_CRCINIT3	=	0x4014
                     4332  2222 G$AX5043_DACCONFIG$0$0 == 0x4332
                     4332  2223 _AX5043_DACCONFIG	=	0x4332
                     4331  2224 G$AX5043_DACVALUE0$0$0 == 0x4331
                     4331  2225 _AX5043_DACVALUE0	=	0x4331
                     4330  2226 G$AX5043_DACVALUE1$0$0 == 0x4330
                     4330  2227 _AX5043_DACVALUE1	=	0x4330
                     4102  2228 G$AX5043_DECIMATION$0$0 == 0x4102
                     4102  2229 _AX5043_DECIMATION	=	0x4102
                     4042  2230 G$AX5043_DIVERSITY$0$0 == 0x4042
                     4042  2231 _AX5043_DIVERSITY	=	0x4042
                     4011  2232 G$AX5043_ENCODING$0$0 == 0x4011
                     4011  2233 _AX5043_ENCODING	=	0x4011
                     4018  2234 G$AX5043_FEC$0$0 == 0x4018
                     4018  2235 _AX5043_FEC	=	0x4018
                     401A  2236 G$AX5043_FECSTATUS$0$0 == 0x401a
                     401A  2237 _AX5043_FECSTATUS	=	0x401a
                     4019  2238 G$AX5043_FECSYNC$0$0 == 0x4019
                     4019  2239 _AX5043_FECSYNC	=	0x4019
                     402B  2240 G$AX5043_FIFOCOUNT0$0$0 == 0x402b
                     402B  2241 _AX5043_FIFOCOUNT0	=	0x402b
                     402A  2242 G$AX5043_FIFOCOUNT1$0$0 == 0x402a
                     402A  2243 _AX5043_FIFOCOUNT1	=	0x402a
                     4029  2244 G$AX5043_FIFODATA$0$0 == 0x4029
                     4029  2245 _AX5043_FIFODATA	=	0x4029
                     402D  2246 G$AX5043_FIFOFREE0$0$0 == 0x402d
                     402D  2247 _AX5043_FIFOFREE0	=	0x402d
                     402C  2248 G$AX5043_FIFOFREE1$0$0 == 0x402c
                     402C  2249 _AX5043_FIFOFREE1	=	0x402c
                     4028  2250 G$AX5043_FIFOSTAT$0$0 == 0x4028
                     4028  2251 _AX5043_FIFOSTAT	=	0x4028
                     402F  2252 G$AX5043_FIFOTHRESH0$0$0 == 0x402f
                     402F  2253 _AX5043_FIFOTHRESH0	=	0x402f
                     402E  2254 G$AX5043_FIFOTHRESH1$0$0 == 0x402e
                     402E  2255 _AX5043_FIFOTHRESH1	=	0x402e
                     4012  2256 G$AX5043_FRAMING$0$0 == 0x4012
                     4012  2257 _AX5043_FRAMING	=	0x4012
                     4037  2258 G$AX5043_FREQA0$0$0 == 0x4037
                     4037  2259 _AX5043_FREQA0	=	0x4037
                     4036  2260 G$AX5043_FREQA1$0$0 == 0x4036
                     4036  2261 _AX5043_FREQA1	=	0x4036
                     4035  2262 G$AX5043_FREQA2$0$0 == 0x4035
                     4035  2263 _AX5043_FREQA2	=	0x4035
                     4034  2264 G$AX5043_FREQA3$0$0 == 0x4034
                     4034  2265 _AX5043_FREQA3	=	0x4034
                     403F  2266 G$AX5043_FREQB0$0$0 == 0x403f
                     403F  2267 _AX5043_FREQB0	=	0x403f
                     403E  2268 G$AX5043_FREQB1$0$0 == 0x403e
                     403E  2269 _AX5043_FREQB1	=	0x403e
                     403D  2270 G$AX5043_FREQB2$0$0 == 0x403d
                     403D  2271 _AX5043_FREQB2	=	0x403d
                     403C  2272 G$AX5043_FREQB3$0$0 == 0x403c
                     403C  2273 _AX5043_FREQB3	=	0x403c
                     4163  2274 G$AX5043_FSKDEV0$0$0 == 0x4163
                     4163  2275 _AX5043_FSKDEV0	=	0x4163
                     4162  2276 G$AX5043_FSKDEV1$0$0 == 0x4162
                     4162  2277 _AX5043_FSKDEV1	=	0x4162
                     4161  2278 G$AX5043_FSKDEV2$0$0 == 0x4161
                     4161  2279 _AX5043_FSKDEV2	=	0x4161
                     410D  2280 G$AX5043_FSKDMAX0$0$0 == 0x410d
                     410D  2281 _AX5043_FSKDMAX0	=	0x410d
                     410C  2282 G$AX5043_FSKDMAX1$0$0 == 0x410c
                     410C  2283 _AX5043_FSKDMAX1	=	0x410c
                     410F  2284 G$AX5043_FSKDMIN0$0$0 == 0x410f
                     410F  2285 _AX5043_FSKDMIN0	=	0x410f
                     410E  2286 G$AX5043_FSKDMIN1$0$0 == 0x410e
                     410E  2287 _AX5043_FSKDMIN1	=	0x410e
                     4309  2288 G$AX5043_GPADC13VALUE0$0$0 == 0x4309
                     4309  2289 _AX5043_GPADC13VALUE0	=	0x4309
                     4308  2290 G$AX5043_GPADC13VALUE1$0$0 == 0x4308
                     4308  2291 _AX5043_GPADC13VALUE1	=	0x4308
                     4300  2292 G$AX5043_GPADCCTRL$0$0 == 0x4300
                     4300  2293 _AX5043_GPADCCTRL	=	0x4300
                     4301  2294 G$AX5043_GPADCPERIOD$0$0 == 0x4301
                     4301  2295 _AX5043_GPADCPERIOD	=	0x4301
                     4101  2296 G$AX5043_IFFREQ0$0$0 == 0x4101
                     4101  2297 _AX5043_IFFREQ0	=	0x4101
                     4100  2298 G$AX5043_IFFREQ1$0$0 == 0x4100
                     4100  2299 _AX5043_IFFREQ1	=	0x4100
                     400B  2300 G$AX5043_IRQINVERSION0$0$0 == 0x400b
                     400B  2301 _AX5043_IRQINVERSION0	=	0x400b
                     400A  2302 G$AX5043_IRQINVERSION1$0$0 == 0x400a
                     400A  2303 _AX5043_IRQINVERSION1	=	0x400a
                     4007  2304 G$AX5043_IRQMASK0$0$0 == 0x4007
                     4007  2305 _AX5043_IRQMASK0	=	0x4007
                     4006  2306 G$AX5043_IRQMASK1$0$0 == 0x4006
                     4006  2307 _AX5043_IRQMASK1	=	0x4006
                     400D  2308 G$AX5043_IRQREQUEST0$0$0 == 0x400d
                     400D  2309 _AX5043_IRQREQUEST0	=	0x400d
                     400C  2310 G$AX5043_IRQREQUEST1$0$0 == 0x400c
                     400C  2311 _AX5043_IRQREQUEST1	=	0x400c
                     4310  2312 G$AX5043_LPOSCCONFIG$0$0 == 0x4310
                     4310  2313 _AX5043_LPOSCCONFIG	=	0x4310
                     4317  2314 G$AX5043_LPOSCFREQ0$0$0 == 0x4317
                     4317  2315 _AX5043_LPOSCFREQ0	=	0x4317
                     4316  2316 G$AX5043_LPOSCFREQ1$0$0 == 0x4316
                     4316  2317 _AX5043_LPOSCFREQ1	=	0x4316
                     4313  2318 G$AX5043_LPOSCKFILT0$0$0 == 0x4313
                     4313  2319 _AX5043_LPOSCKFILT0	=	0x4313
                     4312  2320 G$AX5043_LPOSCKFILT1$0$0 == 0x4312
                     4312  2321 _AX5043_LPOSCKFILT1	=	0x4312
                     4319  2322 G$AX5043_LPOSCPER0$0$0 == 0x4319
                     4319  2323 _AX5043_LPOSCPER0	=	0x4319
                     4318  2324 G$AX5043_LPOSCPER1$0$0 == 0x4318
                     4318  2325 _AX5043_LPOSCPER1	=	0x4318
                     4315  2326 G$AX5043_LPOSCREF0$0$0 == 0x4315
                     4315  2327 _AX5043_LPOSCREF0	=	0x4315
                     4314  2328 G$AX5043_LPOSCREF1$0$0 == 0x4314
                     4314  2329 _AX5043_LPOSCREF1	=	0x4314
                     4311  2330 G$AX5043_LPOSCSTATUS$0$0 == 0x4311
                     4311  2331 _AX5043_LPOSCSTATUS	=	0x4311
                     4214  2332 G$AX5043_MATCH0LEN$0$0 == 0x4214
                     4214  2333 _AX5043_MATCH0LEN	=	0x4214
                     4216  2334 G$AX5043_MATCH0MAX$0$0 == 0x4216
                     4216  2335 _AX5043_MATCH0MAX	=	0x4216
                     4215  2336 G$AX5043_MATCH0MIN$0$0 == 0x4215
                     4215  2337 _AX5043_MATCH0MIN	=	0x4215
                     4213  2338 G$AX5043_MATCH0PAT0$0$0 == 0x4213
                     4213  2339 _AX5043_MATCH0PAT0	=	0x4213
                     4212  2340 G$AX5043_MATCH0PAT1$0$0 == 0x4212
                     4212  2341 _AX5043_MATCH0PAT1	=	0x4212
                     4211  2342 G$AX5043_MATCH0PAT2$0$0 == 0x4211
                     4211  2343 _AX5043_MATCH0PAT2	=	0x4211
                     4210  2344 G$AX5043_MATCH0PAT3$0$0 == 0x4210
                     4210  2345 _AX5043_MATCH0PAT3	=	0x4210
                     421C  2346 G$AX5043_MATCH1LEN$0$0 == 0x421c
                     421C  2347 _AX5043_MATCH1LEN	=	0x421c
                     421E  2348 G$AX5043_MATCH1MAX$0$0 == 0x421e
                     421E  2349 _AX5043_MATCH1MAX	=	0x421e
                     421D  2350 G$AX5043_MATCH1MIN$0$0 == 0x421d
                     421D  2351 _AX5043_MATCH1MIN	=	0x421d
                     4219  2352 G$AX5043_MATCH1PAT0$0$0 == 0x4219
                     4219  2353 _AX5043_MATCH1PAT0	=	0x4219
                     4218  2354 G$AX5043_MATCH1PAT1$0$0 == 0x4218
                     4218  2355 _AX5043_MATCH1PAT1	=	0x4218
                     4108  2356 G$AX5043_MAXDROFFSET0$0$0 == 0x4108
                     4108  2357 _AX5043_MAXDROFFSET0	=	0x4108
                     4107  2358 G$AX5043_MAXDROFFSET1$0$0 == 0x4107
                     4107  2359 _AX5043_MAXDROFFSET1	=	0x4107
                     4106  2360 G$AX5043_MAXDROFFSET2$0$0 == 0x4106
                     4106  2361 _AX5043_MAXDROFFSET2	=	0x4106
                     410B  2362 G$AX5043_MAXRFOFFSET0$0$0 == 0x410b
                     410B  2363 _AX5043_MAXRFOFFSET0	=	0x410b
                     410A  2364 G$AX5043_MAXRFOFFSET1$0$0 == 0x410a
                     410A  2365 _AX5043_MAXRFOFFSET1	=	0x410a
                     4109  2366 G$AX5043_MAXRFOFFSET2$0$0 == 0x4109
                     4109  2367 _AX5043_MAXRFOFFSET2	=	0x4109
                     4164  2368 G$AX5043_MODCFGA$0$0 == 0x4164
                     4164  2369 _AX5043_MODCFGA	=	0x4164
                     4160  2370 G$AX5043_MODCFGF$0$0 == 0x4160
                     4160  2371 _AX5043_MODCFGF	=	0x4160
                     4010  2372 G$AX5043_MODULATION$0$0 == 0x4010
                     4010  2373 _AX5043_MODULATION	=	0x4010
                     4025  2374 G$AX5043_PINFUNCANTSEL$0$0 == 0x4025
                     4025  2375 _AX5043_PINFUNCANTSEL	=	0x4025
                     4023  2376 G$AX5043_PINFUNCDATA$0$0 == 0x4023
                     4023  2377 _AX5043_PINFUNCDATA	=	0x4023
                     4022  2378 G$AX5043_PINFUNCDCLK$0$0 == 0x4022
                     4022  2379 _AX5043_PINFUNCDCLK	=	0x4022
                     4024  2380 G$AX5043_PINFUNCIRQ$0$0 == 0x4024
                     4024  2381 _AX5043_PINFUNCIRQ	=	0x4024
                     4026  2382 G$AX5043_PINFUNCPWRAMP$0$0 == 0x4026
                     4026  2383 _AX5043_PINFUNCPWRAMP	=	0x4026
                     4021  2384 G$AX5043_PINFUNCSYSCLK$0$0 == 0x4021
                     4021  2385 _AX5043_PINFUNCSYSCLK	=	0x4021
                     4020  2386 G$AX5043_PINSTATE$0$0 == 0x4020
                     4020  2387 _AX5043_PINSTATE	=	0x4020
                     4233  2388 G$AX5043_PKTACCEPTFLAGS$0$0 == 0x4233
                     4233  2389 _AX5043_PKTACCEPTFLAGS	=	0x4233
                     4230  2390 G$AX5043_PKTCHUNKSIZE$0$0 == 0x4230
                     4230  2391 _AX5043_PKTCHUNKSIZE	=	0x4230
                     4231  2392 G$AX5043_PKTMISCFLAGS$0$0 == 0x4231
                     4231  2393 _AX5043_PKTMISCFLAGS	=	0x4231
                     4232  2394 G$AX5043_PKTSTOREFLAGS$0$0 == 0x4232
                     4232  2395 _AX5043_PKTSTOREFLAGS	=	0x4232
                     4031  2396 G$AX5043_PLLCPI$0$0 == 0x4031
                     4031  2397 _AX5043_PLLCPI	=	0x4031
                     4039  2398 G$AX5043_PLLCPIBOOST$0$0 == 0x4039
                     4039  2399 _AX5043_PLLCPIBOOST	=	0x4039
                     4182  2400 G$AX5043_PLLLOCKDET$0$0 == 0x4182
                     4182  2401 _AX5043_PLLLOCKDET	=	0x4182
                     4030  2402 G$AX5043_PLLLOOP$0$0 == 0x4030
                     4030  2403 _AX5043_PLLLOOP	=	0x4030
                     4038  2404 G$AX5043_PLLLOOPBOOST$0$0 == 0x4038
                     4038  2405 _AX5043_PLLLOOPBOOST	=	0x4038
                     4033  2406 G$AX5043_PLLRANGINGA$0$0 == 0x4033
                     4033  2407 _AX5043_PLLRANGINGA	=	0x4033
                     403B  2408 G$AX5043_PLLRANGINGB$0$0 == 0x403b
                     403B  2409 _AX5043_PLLRANGINGB	=	0x403b
                     4183  2410 G$AX5043_PLLRNGCLK$0$0 == 0x4183
                     4183  2411 _AX5043_PLLRNGCLK	=	0x4183
                     4032  2412 G$AX5043_PLLVCODIV$0$0 == 0x4032
                     4032  2413 _AX5043_PLLVCODIV	=	0x4032
                     4180  2414 G$AX5043_PLLVCOI$0$0 == 0x4180
                     4180  2415 _AX5043_PLLVCOI	=	0x4180
                     4181  2416 G$AX5043_PLLVCOIR$0$0 == 0x4181
                     4181  2417 _AX5043_PLLVCOIR	=	0x4181
                     4005  2418 G$AX5043_POWIRQMASK$0$0 == 0x4005
                     4005  2419 _AX5043_POWIRQMASK	=	0x4005
                     4003  2420 G$AX5043_POWSTAT$0$0 == 0x4003
                     4003  2421 _AX5043_POWSTAT	=	0x4003
                     4004  2422 G$AX5043_POWSTICKYSTAT$0$0 == 0x4004
                     4004  2423 _AX5043_POWSTICKYSTAT	=	0x4004
                     4027  2424 G$AX5043_PWRAMP$0$0 == 0x4027
                     4027  2425 _AX5043_PWRAMP	=	0x4027
                     4002  2426 G$AX5043_PWRMODE$0$0 == 0x4002
                     4002  2427 _AX5043_PWRMODE	=	0x4002
                     4009  2428 G$AX5043_RADIOEVENTMASK0$0$0 == 0x4009
                     4009  2429 _AX5043_RADIOEVENTMASK0	=	0x4009
                     4008  2430 G$AX5043_RADIOEVENTMASK1$0$0 == 0x4008
                     4008  2431 _AX5043_RADIOEVENTMASK1	=	0x4008
                     400F  2432 G$AX5043_RADIOEVENTREQ0$0$0 == 0x400f
                     400F  2433 _AX5043_RADIOEVENTREQ0	=	0x400f
                     400E  2434 G$AX5043_RADIOEVENTREQ1$0$0 == 0x400e
                     400E  2435 _AX5043_RADIOEVENTREQ1	=	0x400e
                     401C  2436 G$AX5043_RADIOSTATE$0$0 == 0x401c
                     401C  2437 _AX5043_RADIOSTATE	=	0x401c
                     4040  2438 G$AX5043_RSSI$0$0 == 0x4040
                     4040  2439 _AX5043_RSSI	=	0x4040
                     422D  2440 G$AX5043_RSSIABSTHR$0$0 == 0x422d
                     422D  2441 _AX5043_RSSIABSTHR	=	0x422d
                     422C  2442 G$AX5043_RSSIREFERENCE$0$0 == 0x422c
                     422C  2443 _AX5043_RSSIREFERENCE	=	0x422c
                     4105  2444 G$AX5043_RXDATARATE0$0$0 == 0x4105
                     4105  2445 _AX5043_RXDATARATE0	=	0x4105
                     4104  2446 G$AX5043_RXDATARATE1$0$0 == 0x4104
                     4104  2447 _AX5043_RXDATARATE1	=	0x4104
                     4103  2448 G$AX5043_RXDATARATE2$0$0 == 0x4103
                     4103  2449 _AX5043_RXDATARATE2	=	0x4103
                     4001  2450 G$AX5043_SCRATCH$0$0 == 0x4001
                     4001  2451 _AX5043_SCRATCH	=	0x4001
                     4000  2452 G$AX5043_SILICONREVISION$0$0 == 0x4000
                     4000  2453 _AX5043_SILICONREVISION	=	0x4000
                     405B  2454 G$AX5043_TIMER0$0$0 == 0x405b
                     405B  2455 _AX5043_TIMER0	=	0x405b
                     405A  2456 G$AX5043_TIMER1$0$0 == 0x405a
                     405A  2457 _AX5043_TIMER1	=	0x405a
                     4059  2458 G$AX5043_TIMER2$0$0 == 0x4059
                     4059  2459 _AX5043_TIMER2	=	0x4059
                     4227  2460 G$AX5043_TMGRXAGC$0$0 == 0x4227
                     4227  2461 _AX5043_TMGRXAGC	=	0x4227
                     4223  2462 G$AX5043_TMGRXBOOST$0$0 == 0x4223
                     4223  2463 _AX5043_TMGRXBOOST	=	0x4223
                     4226  2464 G$AX5043_TMGRXCOARSEAGC$0$0 == 0x4226
                     4226  2465 _AX5043_TMGRXCOARSEAGC	=	0x4226
                     4225  2466 G$AX5043_TMGRXOFFSACQ$0$0 == 0x4225
                     4225  2467 _AX5043_TMGRXOFFSACQ	=	0x4225
                     4229  2468 G$AX5043_TMGRXPREAMBLE1$0$0 == 0x4229
                     4229  2469 _AX5043_TMGRXPREAMBLE1	=	0x4229
                     422A  2470 G$AX5043_TMGRXPREAMBLE2$0$0 == 0x422a
                     422A  2471 _AX5043_TMGRXPREAMBLE2	=	0x422a
                     422B  2472 G$AX5043_TMGRXPREAMBLE3$0$0 == 0x422b
                     422B  2473 _AX5043_TMGRXPREAMBLE3	=	0x422b
                     4228  2474 G$AX5043_TMGRXRSSI$0$0 == 0x4228
                     4228  2475 _AX5043_TMGRXRSSI	=	0x4228
                     4224  2476 G$AX5043_TMGRXSETTLE$0$0 == 0x4224
                     4224  2477 _AX5043_TMGRXSETTLE	=	0x4224
                     4220  2478 G$AX5043_TMGTXBOOST$0$0 == 0x4220
                     4220  2479 _AX5043_TMGTXBOOST	=	0x4220
                     4221  2480 G$AX5043_TMGTXSETTLE$0$0 == 0x4221
                     4221  2481 _AX5043_TMGTXSETTLE	=	0x4221
                     4055  2482 G$AX5043_TRKAFSKDEMOD0$0$0 == 0x4055
                     4055  2483 _AX5043_TRKAFSKDEMOD0	=	0x4055
                     4054  2484 G$AX5043_TRKAFSKDEMOD1$0$0 == 0x4054
                     4054  2485 _AX5043_TRKAFSKDEMOD1	=	0x4054
                     4049  2486 G$AX5043_TRKAMPLITUDE0$0$0 == 0x4049
                     4049  2487 _AX5043_TRKAMPLITUDE0	=	0x4049
                     4048  2488 G$AX5043_TRKAMPLITUDE1$0$0 == 0x4048
                     4048  2489 _AX5043_TRKAMPLITUDE1	=	0x4048
                     4047  2490 G$AX5043_TRKDATARATE0$0$0 == 0x4047
                     4047  2491 _AX5043_TRKDATARATE0	=	0x4047
                     4046  2492 G$AX5043_TRKDATARATE1$0$0 == 0x4046
                     4046  2493 _AX5043_TRKDATARATE1	=	0x4046
                     4045  2494 G$AX5043_TRKDATARATE2$0$0 == 0x4045
                     4045  2495 _AX5043_TRKDATARATE2	=	0x4045
                     4051  2496 G$AX5043_TRKFREQ0$0$0 == 0x4051
                     4051  2497 _AX5043_TRKFREQ0	=	0x4051
                     4050  2498 G$AX5043_TRKFREQ1$0$0 == 0x4050
                     4050  2499 _AX5043_TRKFREQ1	=	0x4050
                     4053  2500 G$AX5043_TRKFSKDEMOD0$0$0 == 0x4053
                     4053  2501 _AX5043_TRKFSKDEMOD0	=	0x4053
                     4052  2502 G$AX5043_TRKFSKDEMOD1$0$0 == 0x4052
                     4052  2503 _AX5043_TRKFSKDEMOD1	=	0x4052
                     404B  2504 G$AX5043_TRKPHASE0$0$0 == 0x404b
                     404B  2505 _AX5043_TRKPHASE0	=	0x404b
                     404A  2506 G$AX5043_TRKPHASE1$0$0 == 0x404a
                     404A  2507 _AX5043_TRKPHASE1	=	0x404a
                     404F  2508 G$AX5043_TRKRFFREQ0$0$0 == 0x404f
                     404F  2509 _AX5043_TRKRFFREQ0	=	0x404f
                     404E  2510 G$AX5043_TRKRFFREQ1$0$0 == 0x404e
                     404E  2511 _AX5043_TRKRFFREQ1	=	0x404e
                     404D  2512 G$AX5043_TRKRFFREQ2$0$0 == 0x404d
                     404D  2513 _AX5043_TRKRFFREQ2	=	0x404d
                     4169  2514 G$AX5043_TXPWRCOEFFA0$0$0 == 0x4169
                     4169  2515 _AX5043_TXPWRCOEFFA0	=	0x4169
                     4168  2516 G$AX5043_TXPWRCOEFFA1$0$0 == 0x4168
                     4168  2517 _AX5043_TXPWRCOEFFA1	=	0x4168
                     416B  2518 G$AX5043_TXPWRCOEFFB0$0$0 == 0x416b
                     416B  2519 _AX5043_TXPWRCOEFFB0	=	0x416b
                     416A  2520 G$AX5043_TXPWRCOEFFB1$0$0 == 0x416a
                     416A  2521 _AX5043_TXPWRCOEFFB1	=	0x416a
                     416D  2522 G$AX5043_TXPWRCOEFFC0$0$0 == 0x416d
                     416D  2523 _AX5043_TXPWRCOEFFC0	=	0x416d
                     416C  2524 G$AX5043_TXPWRCOEFFC1$0$0 == 0x416c
                     416C  2525 _AX5043_TXPWRCOEFFC1	=	0x416c
                     416F  2526 G$AX5043_TXPWRCOEFFD0$0$0 == 0x416f
                     416F  2527 _AX5043_TXPWRCOEFFD0	=	0x416f
                     416E  2528 G$AX5043_TXPWRCOEFFD1$0$0 == 0x416e
                     416E  2529 _AX5043_TXPWRCOEFFD1	=	0x416e
                     4171  2530 G$AX5043_TXPWRCOEFFE0$0$0 == 0x4171
                     4171  2531 _AX5043_TXPWRCOEFFE0	=	0x4171
                     4170  2532 G$AX5043_TXPWRCOEFFE1$0$0 == 0x4170
                     4170  2533 _AX5043_TXPWRCOEFFE1	=	0x4170
                     4167  2534 G$AX5043_TXRATE0$0$0 == 0x4167
                     4167  2535 _AX5043_TXRATE0	=	0x4167
                     4166  2536 G$AX5043_TXRATE1$0$0 == 0x4166
                     4166  2537 _AX5043_TXRATE1	=	0x4166
                     4165  2538 G$AX5043_TXRATE2$0$0 == 0x4165
                     4165  2539 _AX5043_TXRATE2	=	0x4165
                     406B  2540 G$AX5043_WAKEUP0$0$0 == 0x406b
                     406B  2541 _AX5043_WAKEUP0	=	0x406b
                     406A  2542 G$AX5043_WAKEUP1$0$0 == 0x406a
                     406A  2543 _AX5043_WAKEUP1	=	0x406a
                     406D  2544 G$AX5043_WAKEUPFREQ0$0$0 == 0x406d
                     406D  2545 _AX5043_WAKEUPFREQ0	=	0x406d
                     406C  2546 G$AX5043_WAKEUPFREQ1$0$0 == 0x406c
                     406C  2547 _AX5043_WAKEUPFREQ1	=	0x406c
                     4069  2548 G$AX5043_WAKEUPTIMER0$0$0 == 0x4069
                     4069  2549 _AX5043_WAKEUPTIMER0	=	0x4069
                     4068  2550 G$AX5043_WAKEUPTIMER1$0$0 == 0x4068
                     4068  2551 _AX5043_WAKEUPTIMER1	=	0x4068
                     406E  2552 G$AX5043_WAKEUPXOEARLY$0$0 == 0x406e
                     406E  2553 _AX5043_WAKEUPXOEARLY	=	0x406e
                     4184  2554 G$AX5043_XTALCAP$0$0 == 0x4184
                     4184  2555 _AX5043_XTALCAP	=	0x4184
                     401D  2556 G$AX5043_XTALSTATUS$0$0 == 0x401d
                     401D  2557 _AX5043_XTALSTATUS	=	0x401d
                     4122  2558 G$AX5043_AGCAHYST0$0$0 == 0x4122
                     4122  2559 _AX5043_AGCAHYST0	=	0x4122
                     4132  2560 G$AX5043_AGCAHYST1$0$0 == 0x4132
                     4132  2561 _AX5043_AGCAHYST1	=	0x4132
                     4142  2562 G$AX5043_AGCAHYST2$0$0 == 0x4142
                     4142  2563 _AX5043_AGCAHYST2	=	0x4142
                     4152  2564 G$AX5043_AGCAHYST3$0$0 == 0x4152
                     4152  2565 _AX5043_AGCAHYST3	=	0x4152
                     4120  2566 G$AX5043_AGCGAIN0$0$0 == 0x4120
                     4120  2567 _AX5043_AGCGAIN0	=	0x4120
                     4130  2568 G$AX5043_AGCGAIN1$0$0 == 0x4130
                     4130  2569 _AX5043_AGCGAIN1	=	0x4130
                     4140  2570 G$AX5043_AGCGAIN2$0$0 == 0x4140
                     4140  2571 _AX5043_AGCGAIN2	=	0x4140
                     4150  2572 G$AX5043_AGCGAIN3$0$0 == 0x4150
                     4150  2573 _AX5043_AGCGAIN3	=	0x4150
                     4123  2574 G$AX5043_AGCMINMAX0$0$0 == 0x4123
                     4123  2575 _AX5043_AGCMINMAX0	=	0x4123
                     4133  2576 G$AX5043_AGCMINMAX1$0$0 == 0x4133
                     4133  2577 _AX5043_AGCMINMAX1	=	0x4133
                     4143  2578 G$AX5043_AGCMINMAX2$0$0 == 0x4143
                     4143  2579 _AX5043_AGCMINMAX2	=	0x4143
                     4153  2580 G$AX5043_AGCMINMAX3$0$0 == 0x4153
                     4153  2581 _AX5043_AGCMINMAX3	=	0x4153
                     4121  2582 G$AX5043_AGCTARGET0$0$0 == 0x4121
                     4121  2583 _AX5043_AGCTARGET0	=	0x4121
                     4131  2584 G$AX5043_AGCTARGET1$0$0 == 0x4131
                     4131  2585 _AX5043_AGCTARGET1	=	0x4131
                     4141  2586 G$AX5043_AGCTARGET2$0$0 == 0x4141
                     4141  2587 _AX5043_AGCTARGET2	=	0x4141
                     4151  2588 G$AX5043_AGCTARGET3$0$0 == 0x4151
                     4151  2589 _AX5043_AGCTARGET3	=	0x4151
                     412B  2590 G$AX5043_AMPLITUDEGAIN0$0$0 == 0x412b
                     412B  2591 _AX5043_AMPLITUDEGAIN0	=	0x412b
                     413B  2592 G$AX5043_AMPLITUDEGAIN1$0$0 == 0x413b
                     413B  2593 _AX5043_AMPLITUDEGAIN1	=	0x413b
                     414B  2594 G$AX5043_AMPLITUDEGAIN2$0$0 == 0x414b
                     414B  2595 _AX5043_AMPLITUDEGAIN2	=	0x414b
                     415B  2596 G$AX5043_AMPLITUDEGAIN3$0$0 == 0x415b
                     415B  2597 _AX5043_AMPLITUDEGAIN3	=	0x415b
                     412F  2598 G$AX5043_BBOFFSRES0$0$0 == 0x412f
                     412F  2599 _AX5043_BBOFFSRES0	=	0x412f
                     413F  2600 G$AX5043_BBOFFSRES1$0$0 == 0x413f
                     413F  2601 _AX5043_BBOFFSRES1	=	0x413f
                     414F  2602 G$AX5043_BBOFFSRES2$0$0 == 0x414f
                     414F  2603 _AX5043_BBOFFSRES2	=	0x414f
                     415F  2604 G$AX5043_BBOFFSRES3$0$0 == 0x415f
                     415F  2605 _AX5043_BBOFFSRES3	=	0x415f
                     4125  2606 G$AX5043_DRGAIN0$0$0 == 0x4125
                     4125  2607 _AX5043_DRGAIN0	=	0x4125
                     4135  2608 G$AX5043_DRGAIN1$0$0 == 0x4135
                     4135  2609 _AX5043_DRGAIN1	=	0x4135
                     4145  2610 G$AX5043_DRGAIN2$0$0 == 0x4145
                     4145  2611 _AX5043_DRGAIN2	=	0x4145
                     4155  2612 G$AX5043_DRGAIN3$0$0 == 0x4155
                     4155  2613 _AX5043_DRGAIN3	=	0x4155
                     412E  2614 G$AX5043_FOURFSK0$0$0 == 0x412e
                     412E  2615 _AX5043_FOURFSK0	=	0x412e
                     413E  2616 G$AX5043_FOURFSK1$0$0 == 0x413e
                     413E  2617 _AX5043_FOURFSK1	=	0x413e
                     414E  2618 G$AX5043_FOURFSK2$0$0 == 0x414e
                     414E  2619 _AX5043_FOURFSK2	=	0x414e
                     415E  2620 G$AX5043_FOURFSK3$0$0 == 0x415e
                     415E  2621 _AX5043_FOURFSK3	=	0x415e
                     412D  2622 G$AX5043_FREQDEV00$0$0 == 0x412d
                     412D  2623 _AX5043_FREQDEV00	=	0x412d
                     413D  2624 G$AX5043_FREQDEV01$0$0 == 0x413d
                     413D  2625 _AX5043_FREQDEV01	=	0x413d
                     414D  2626 G$AX5043_FREQDEV02$0$0 == 0x414d
                     414D  2627 _AX5043_FREQDEV02	=	0x414d
                     415D  2628 G$AX5043_FREQDEV03$0$0 == 0x415d
                     415D  2629 _AX5043_FREQDEV03	=	0x415d
                     412C  2630 G$AX5043_FREQDEV10$0$0 == 0x412c
                     412C  2631 _AX5043_FREQDEV10	=	0x412c
                     413C  2632 G$AX5043_FREQDEV11$0$0 == 0x413c
                     413C  2633 _AX5043_FREQDEV11	=	0x413c
                     414C  2634 G$AX5043_FREQDEV12$0$0 == 0x414c
                     414C  2635 _AX5043_FREQDEV12	=	0x414c
                     415C  2636 G$AX5043_FREQDEV13$0$0 == 0x415c
                     415C  2637 _AX5043_FREQDEV13	=	0x415c
                     4127  2638 G$AX5043_FREQUENCYGAINA0$0$0 == 0x4127
                     4127  2639 _AX5043_FREQUENCYGAINA0	=	0x4127
                     4137  2640 G$AX5043_FREQUENCYGAINA1$0$0 == 0x4137
                     4137  2641 _AX5043_FREQUENCYGAINA1	=	0x4137
                     4147  2642 G$AX5043_FREQUENCYGAINA2$0$0 == 0x4147
                     4147  2643 _AX5043_FREQUENCYGAINA2	=	0x4147
                     4157  2644 G$AX5043_FREQUENCYGAINA3$0$0 == 0x4157
                     4157  2645 _AX5043_FREQUENCYGAINA3	=	0x4157
                     4128  2646 G$AX5043_FREQUENCYGAINB0$0$0 == 0x4128
                     4128  2647 _AX5043_FREQUENCYGAINB0	=	0x4128
                     4138  2648 G$AX5043_FREQUENCYGAINB1$0$0 == 0x4138
                     4138  2649 _AX5043_FREQUENCYGAINB1	=	0x4138
                     4148  2650 G$AX5043_FREQUENCYGAINB2$0$0 == 0x4148
                     4148  2651 _AX5043_FREQUENCYGAINB2	=	0x4148
                     4158  2652 G$AX5043_FREQUENCYGAINB3$0$0 == 0x4158
                     4158  2653 _AX5043_FREQUENCYGAINB3	=	0x4158
                     4129  2654 G$AX5043_FREQUENCYGAINC0$0$0 == 0x4129
                     4129  2655 _AX5043_FREQUENCYGAINC0	=	0x4129
                     4139  2656 G$AX5043_FREQUENCYGAINC1$0$0 == 0x4139
                     4139  2657 _AX5043_FREQUENCYGAINC1	=	0x4139
                     4149  2658 G$AX5043_FREQUENCYGAINC2$0$0 == 0x4149
                     4149  2659 _AX5043_FREQUENCYGAINC2	=	0x4149
                     4159  2660 G$AX5043_FREQUENCYGAINC3$0$0 == 0x4159
                     4159  2661 _AX5043_FREQUENCYGAINC3	=	0x4159
                     412A  2662 G$AX5043_FREQUENCYGAIND0$0$0 == 0x412a
                     412A  2663 _AX5043_FREQUENCYGAIND0	=	0x412a
                     413A  2664 G$AX5043_FREQUENCYGAIND1$0$0 == 0x413a
                     413A  2665 _AX5043_FREQUENCYGAIND1	=	0x413a
                     414A  2666 G$AX5043_FREQUENCYGAIND2$0$0 == 0x414a
                     414A  2667 _AX5043_FREQUENCYGAIND2	=	0x414a
                     415A  2668 G$AX5043_FREQUENCYGAIND3$0$0 == 0x415a
                     415A  2669 _AX5043_FREQUENCYGAIND3	=	0x415a
                     4116  2670 G$AX5043_FREQUENCYLEAK$0$0 == 0x4116
                     4116  2671 _AX5043_FREQUENCYLEAK	=	0x4116
                     4126  2672 G$AX5043_PHASEGAIN0$0$0 == 0x4126
                     4126  2673 _AX5043_PHASEGAIN0	=	0x4126
                     4136  2674 G$AX5043_PHASEGAIN1$0$0 == 0x4136
                     4136  2675 _AX5043_PHASEGAIN1	=	0x4136
                     4146  2676 G$AX5043_PHASEGAIN2$0$0 == 0x4146
                     4146  2677 _AX5043_PHASEGAIN2	=	0x4146
                     4156  2678 G$AX5043_PHASEGAIN3$0$0 == 0x4156
                     4156  2679 _AX5043_PHASEGAIN3	=	0x4156
                     4207  2680 G$AX5043_PKTADDR0$0$0 == 0x4207
                     4207  2681 _AX5043_PKTADDR0	=	0x4207
                     4206  2682 G$AX5043_PKTADDR1$0$0 == 0x4206
                     4206  2683 _AX5043_PKTADDR1	=	0x4206
                     4205  2684 G$AX5043_PKTADDR2$0$0 == 0x4205
                     4205  2685 _AX5043_PKTADDR2	=	0x4205
                     4204  2686 G$AX5043_PKTADDR3$0$0 == 0x4204
                     4204  2687 _AX5043_PKTADDR3	=	0x4204
                     4200  2688 G$AX5043_PKTADDRCFG$0$0 == 0x4200
                     4200  2689 _AX5043_PKTADDRCFG	=	0x4200
                     420B  2690 G$AX5043_PKTADDRMASK0$0$0 == 0x420b
                     420B  2691 _AX5043_PKTADDRMASK0	=	0x420b
                     420A  2692 G$AX5043_PKTADDRMASK1$0$0 == 0x420a
                     420A  2693 _AX5043_PKTADDRMASK1	=	0x420a
                     4209  2694 G$AX5043_PKTADDRMASK2$0$0 == 0x4209
                     4209  2695 _AX5043_PKTADDRMASK2	=	0x4209
                     4208  2696 G$AX5043_PKTADDRMASK3$0$0 == 0x4208
                     4208  2697 _AX5043_PKTADDRMASK3	=	0x4208
                     4201  2698 G$AX5043_PKTLENCFG$0$0 == 0x4201
                     4201  2699 _AX5043_PKTLENCFG	=	0x4201
                     4202  2700 G$AX5043_PKTLENOFFSET$0$0 == 0x4202
                     4202  2701 _AX5043_PKTLENOFFSET	=	0x4202
                     4203  2702 G$AX5043_PKTMAXLEN$0$0 == 0x4203
                     4203  2703 _AX5043_PKTMAXLEN	=	0x4203
                     4118  2704 G$AX5043_RXPARAMCURSET$0$0 == 0x4118
                     4118  2705 _AX5043_RXPARAMCURSET	=	0x4118
                     4117  2706 G$AX5043_RXPARAMSETS$0$0 == 0x4117
                     4117  2707 _AX5043_RXPARAMSETS	=	0x4117
                     4124  2708 G$AX5043_TIMEGAIN0$0$0 == 0x4124
                     4124  2709 _AX5043_TIMEGAIN0	=	0x4124
                     4134  2710 G$AX5043_TIMEGAIN1$0$0 == 0x4134
                     4134  2711 _AX5043_TIMEGAIN1	=	0x4134
                     4144  2712 G$AX5043_TIMEGAIN2$0$0 == 0x4144
                     4144  2713 _AX5043_TIMEGAIN2	=	0x4144
                     4154  2714 G$AX5043_TIMEGAIN3$0$0 == 0x4154
                     4154  2715 _AX5043_TIMEGAIN3	=	0x4154
                     5114  2716 G$AX5043_AFSKCTRLNB$0$0 == 0x5114
                     5114  2717 _AX5043_AFSKCTRLNB	=	0x5114
                     5113  2718 G$AX5043_AFSKMARK0NB$0$0 == 0x5113
                     5113  2719 _AX5043_AFSKMARK0NB	=	0x5113
                     5112  2720 G$AX5043_AFSKMARK1NB$0$0 == 0x5112
                     5112  2721 _AX5043_AFSKMARK1NB	=	0x5112
                     5111  2722 G$AX5043_AFSKSPACE0NB$0$0 == 0x5111
                     5111  2723 _AX5043_AFSKSPACE0NB	=	0x5111
                     5110  2724 G$AX5043_AFSKSPACE1NB$0$0 == 0x5110
                     5110  2725 _AX5043_AFSKSPACE1NB	=	0x5110
                     5043  2726 G$AX5043_AGCCOUNTERNB$0$0 == 0x5043
                     5043  2727 _AX5043_AGCCOUNTERNB	=	0x5043
                     5115  2728 G$AX5043_AMPLFILTERNB$0$0 == 0x5115
                     5115  2729 _AX5043_AMPLFILTERNB	=	0x5115
                     5189  2730 G$AX5043_BBOFFSCAPNB$0$0 == 0x5189
                     5189  2731 _AX5043_BBOFFSCAPNB	=	0x5189
                     5188  2732 G$AX5043_BBTUNENB$0$0 == 0x5188
                     5188  2733 _AX5043_BBTUNENB	=	0x5188
                     5041  2734 G$AX5043_BGNDRSSINB$0$0 == 0x5041
                     5041  2735 _AX5043_BGNDRSSINB	=	0x5041
                     522E  2736 G$AX5043_BGNDRSSIGAINNB$0$0 == 0x522e
                     522E  2737 _AX5043_BGNDRSSIGAINNB	=	0x522e
                     522F  2738 G$AX5043_BGNDRSSITHRNB$0$0 == 0x522f
                     522F  2739 _AX5043_BGNDRSSITHRNB	=	0x522f
                     5017  2740 G$AX5043_CRCINIT0NB$0$0 == 0x5017
                     5017  2741 _AX5043_CRCINIT0NB	=	0x5017
                     5016  2742 G$AX5043_CRCINIT1NB$0$0 == 0x5016
                     5016  2743 _AX5043_CRCINIT1NB	=	0x5016
                     5015  2744 G$AX5043_CRCINIT2NB$0$0 == 0x5015
                     5015  2745 _AX5043_CRCINIT2NB	=	0x5015
                     5014  2746 G$AX5043_CRCINIT3NB$0$0 == 0x5014
                     5014  2747 _AX5043_CRCINIT3NB	=	0x5014
                     5332  2748 G$AX5043_DACCONFIGNB$0$0 == 0x5332
                     5332  2749 _AX5043_DACCONFIGNB	=	0x5332
                     5331  2750 G$AX5043_DACVALUE0NB$0$0 == 0x5331
                     5331  2751 _AX5043_DACVALUE0NB	=	0x5331
                     5330  2752 G$AX5043_DACVALUE1NB$0$0 == 0x5330
                     5330  2753 _AX5043_DACVALUE1NB	=	0x5330
                     5102  2754 G$AX5043_DECIMATIONNB$0$0 == 0x5102
                     5102  2755 _AX5043_DECIMATIONNB	=	0x5102
                     5042  2756 G$AX5043_DIVERSITYNB$0$0 == 0x5042
                     5042  2757 _AX5043_DIVERSITYNB	=	0x5042
                     5011  2758 G$AX5043_ENCODINGNB$0$0 == 0x5011
                     5011  2759 _AX5043_ENCODINGNB	=	0x5011
                     5018  2760 G$AX5043_FECNB$0$0 == 0x5018
                     5018  2761 _AX5043_FECNB	=	0x5018
                     501A  2762 G$AX5043_FECSTATUSNB$0$0 == 0x501a
                     501A  2763 _AX5043_FECSTATUSNB	=	0x501a
                     5019  2764 G$AX5043_FECSYNCNB$0$0 == 0x5019
                     5019  2765 _AX5043_FECSYNCNB	=	0x5019
                     502B  2766 G$AX5043_FIFOCOUNT0NB$0$0 == 0x502b
                     502B  2767 _AX5043_FIFOCOUNT0NB	=	0x502b
                     502A  2768 G$AX5043_FIFOCOUNT1NB$0$0 == 0x502a
                     502A  2769 _AX5043_FIFOCOUNT1NB	=	0x502a
                     5029  2770 G$AX5043_FIFODATANB$0$0 == 0x5029
                     5029  2771 _AX5043_FIFODATANB	=	0x5029
                     502D  2772 G$AX5043_FIFOFREE0NB$0$0 == 0x502d
                     502D  2773 _AX5043_FIFOFREE0NB	=	0x502d
                     502C  2774 G$AX5043_FIFOFREE1NB$0$0 == 0x502c
                     502C  2775 _AX5043_FIFOFREE1NB	=	0x502c
                     5028  2776 G$AX5043_FIFOSTATNB$0$0 == 0x5028
                     5028  2777 _AX5043_FIFOSTATNB	=	0x5028
                     502F  2778 G$AX5043_FIFOTHRESH0NB$0$0 == 0x502f
                     502F  2779 _AX5043_FIFOTHRESH0NB	=	0x502f
                     502E  2780 G$AX5043_FIFOTHRESH1NB$0$0 == 0x502e
                     502E  2781 _AX5043_FIFOTHRESH1NB	=	0x502e
                     5012  2782 G$AX5043_FRAMINGNB$0$0 == 0x5012
                     5012  2783 _AX5043_FRAMINGNB	=	0x5012
                     5037  2784 G$AX5043_FREQA0NB$0$0 == 0x5037
                     5037  2785 _AX5043_FREQA0NB	=	0x5037
                     5036  2786 G$AX5043_FREQA1NB$0$0 == 0x5036
                     5036  2787 _AX5043_FREQA1NB	=	0x5036
                     5035  2788 G$AX5043_FREQA2NB$0$0 == 0x5035
                     5035  2789 _AX5043_FREQA2NB	=	0x5035
                     5034  2790 G$AX5043_FREQA3NB$0$0 == 0x5034
                     5034  2791 _AX5043_FREQA3NB	=	0x5034
                     503F  2792 G$AX5043_FREQB0NB$0$0 == 0x503f
                     503F  2793 _AX5043_FREQB0NB	=	0x503f
                     503E  2794 G$AX5043_FREQB1NB$0$0 == 0x503e
                     503E  2795 _AX5043_FREQB1NB	=	0x503e
                     503D  2796 G$AX5043_FREQB2NB$0$0 == 0x503d
                     503D  2797 _AX5043_FREQB2NB	=	0x503d
                     503C  2798 G$AX5043_FREQB3NB$0$0 == 0x503c
                     503C  2799 _AX5043_FREQB3NB	=	0x503c
                     5163  2800 G$AX5043_FSKDEV0NB$0$0 == 0x5163
                     5163  2801 _AX5043_FSKDEV0NB	=	0x5163
                     5162  2802 G$AX5043_FSKDEV1NB$0$0 == 0x5162
                     5162  2803 _AX5043_FSKDEV1NB	=	0x5162
                     5161  2804 G$AX5043_FSKDEV2NB$0$0 == 0x5161
                     5161  2805 _AX5043_FSKDEV2NB	=	0x5161
                     510D  2806 G$AX5043_FSKDMAX0NB$0$0 == 0x510d
                     510D  2807 _AX5043_FSKDMAX0NB	=	0x510d
                     510C  2808 G$AX5043_FSKDMAX1NB$0$0 == 0x510c
                     510C  2809 _AX5043_FSKDMAX1NB	=	0x510c
                     510F  2810 G$AX5043_FSKDMIN0NB$0$0 == 0x510f
                     510F  2811 _AX5043_FSKDMIN0NB	=	0x510f
                     510E  2812 G$AX5043_FSKDMIN1NB$0$0 == 0x510e
                     510E  2813 _AX5043_FSKDMIN1NB	=	0x510e
                     5309  2814 G$AX5043_GPADC13VALUE0NB$0$0 == 0x5309
                     5309  2815 _AX5043_GPADC13VALUE0NB	=	0x5309
                     5308  2816 G$AX5043_GPADC13VALUE1NB$0$0 == 0x5308
                     5308  2817 _AX5043_GPADC13VALUE1NB	=	0x5308
                     5300  2818 G$AX5043_GPADCCTRLNB$0$0 == 0x5300
                     5300  2819 _AX5043_GPADCCTRLNB	=	0x5300
                     5301  2820 G$AX5043_GPADCPERIODNB$0$0 == 0x5301
                     5301  2821 _AX5043_GPADCPERIODNB	=	0x5301
                     5101  2822 G$AX5043_IFFREQ0NB$0$0 == 0x5101
                     5101  2823 _AX5043_IFFREQ0NB	=	0x5101
                     5100  2824 G$AX5043_IFFREQ1NB$0$0 == 0x5100
                     5100  2825 _AX5043_IFFREQ1NB	=	0x5100
                     500B  2826 G$AX5043_IRQINVERSION0NB$0$0 == 0x500b
                     500B  2827 _AX5043_IRQINVERSION0NB	=	0x500b
                     500A  2828 G$AX5043_IRQINVERSION1NB$0$0 == 0x500a
                     500A  2829 _AX5043_IRQINVERSION1NB	=	0x500a
                     5007  2830 G$AX5043_IRQMASK0NB$0$0 == 0x5007
                     5007  2831 _AX5043_IRQMASK0NB	=	0x5007
                     5006  2832 G$AX5043_IRQMASK1NB$0$0 == 0x5006
                     5006  2833 _AX5043_IRQMASK1NB	=	0x5006
                     500D  2834 G$AX5043_IRQREQUEST0NB$0$0 == 0x500d
                     500D  2835 _AX5043_IRQREQUEST0NB	=	0x500d
                     500C  2836 G$AX5043_IRQREQUEST1NB$0$0 == 0x500c
                     500C  2837 _AX5043_IRQREQUEST1NB	=	0x500c
                     5310  2838 G$AX5043_LPOSCCONFIGNB$0$0 == 0x5310
                     5310  2839 _AX5043_LPOSCCONFIGNB	=	0x5310
                     5317  2840 G$AX5043_LPOSCFREQ0NB$0$0 == 0x5317
                     5317  2841 _AX5043_LPOSCFREQ0NB	=	0x5317
                     5316  2842 G$AX5043_LPOSCFREQ1NB$0$0 == 0x5316
                     5316  2843 _AX5043_LPOSCFREQ1NB	=	0x5316
                     5313  2844 G$AX5043_LPOSCKFILT0NB$0$0 == 0x5313
                     5313  2845 _AX5043_LPOSCKFILT0NB	=	0x5313
                     5312  2846 G$AX5043_LPOSCKFILT1NB$0$0 == 0x5312
                     5312  2847 _AX5043_LPOSCKFILT1NB	=	0x5312
                     5319  2848 G$AX5043_LPOSCPER0NB$0$0 == 0x5319
                     5319  2849 _AX5043_LPOSCPER0NB	=	0x5319
                     5318  2850 G$AX5043_LPOSCPER1NB$0$0 == 0x5318
                     5318  2851 _AX5043_LPOSCPER1NB	=	0x5318
                     5315  2852 G$AX5043_LPOSCREF0NB$0$0 == 0x5315
                     5315  2853 _AX5043_LPOSCREF0NB	=	0x5315
                     5314  2854 G$AX5043_LPOSCREF1NB$0$0 == 0x5314
                     5314  2855 _AX5043_LPOSCREF1NB	=	0x5314
                     5311  2856 G$AX5043_LPOSCSTATUSNB$0$0 == 0x5311
                     5311  2857 _AX5043_LPOSCSTATUSNB	=	0x5311
                     5214  2858 G$AX5043_MATCH0LENNB$0$0 == 0x5214
                     5214  2859 _AX5043_MATCH0LENNB	=	0x5214
                     5216  2860 G$AX5043_MATCH0MAXNB$0$0 == 0x5216
                     5216  2861 _AX5043_MATCH0MAXNB	=	0x5216
                     5215  2862 G$AX5043_MATCH0MINNB$0$0 == 0x5215
                     5215  2863 _AX5043_MATCH0MINNB	=	0x5215
                     5213  2864 G$AX5043_MATCH0PAT0NB$0$0 == 0x5213
                     5213  2865 _AX5043_MATCH0PAT0NB	=	0x5213
                     5212  2866 G$AX5043_MATCH0PAT1NB$0$0 == 0x5212
                     5212  2867 _AX5043_MATCH0PAT1NB	=	0x5212
                     5211  2868 G$AX5043_MATCH0PAT2NB$0$0 == 0x5211
                     5211  2869 _AX5043_MATCH0PAT2NB	=	0x5211
                     5210  2870 G$AX5043_MATCH0PAT3NB$0$0 == 0x5210
                     5210  2871 _AX5043_MATCH0PAT3NB	=	0x5210
                     521C  2872 G$AX5043_MATCH1LENNB$0$0 == 0x521c
                     521C  2873 _AX5043_MATCH1LENNB	=	0x521c
                     521E  2874 G$AX5043_MATCH1MAXNB$0$0 == 0x521e
                     521E  2875 _AX5043_MATCH1MAXNB	=	0x521e
                     521D  2876 G$AX5043_MATCH1MINNB$0$0 == 0x521d
                     521D  2877 _AX5043_MATCH1MINNB	=	0x521d
                     5219  2878 G$AX5043_MATCH1PAT0NB$0$0 == 0x5219
                     5219  2879 _AX5043_MATCH1PAT0NB	=	0x5219
                     5218  2880 G$AX5043_MATCH1PAT1NB$0$0 == 0x5218
                     5218  2881 _AX5043_MATCH1PAT1NB	=	0x5218
                     5108  2882 G$AX5043_MAXDROFFSET0NB$0$0 == 0x5108
                     5108  2883 _AX5043_MAXDROFFSET0NB	=	0x5108
                     5107  2884 G$AX5043_MAXDROFFSET1NB$0$0 == 0x5107
                     5107  2885 _AX5043_MAXDROFFSET1NB	=	0x5107
                     5106  2886 G$AX5043_MAXDROFFSET2NB$0$0 == 0x5106
                     5106  2887 _AX5043_MAXDROFFSET2NB	=	0x5106
                     510B  2888 G$AX5043_MAXRFOFFSET0NB$0$0 == 0x510b
                     510B  2889 _AX5043_MAXRFOFFSET0NB	=	0x510b
                     510A  2890 G$AX5043_MAXRFOFFSET1NB$0$0 == 0x510a
                     510A  2891 _AX5043_MAXRFOFFSET1NB	=	0x510a
                     5109  2892 G$AX5043_MAXRFOFFSET2NB$0$0 == 0x5109
                     5109  2893 _AX5043_MAXRFOFFSET2NB	=	0x5109
                     5164  2894 G$AX5043_MODCFGANB$0$0 == 0x5164
                     5164  2895 _AX5043_MODCFGANB	=	0x5164
                     5160  2896 G$AX5043_MODCFGFNB$0$0 == 0x5160
                     5160  2897 _AX5043_MODCFGFNB	=	0x5160
                     5010  2898 G$AX5043_MODULATIONNB$0$0 == 0x5010
                     5010  2899 _AX5043_MODULATIONNB	=	0x5010
                     5025  2900 G$AX5043_PINFUNCANTSELNB$0$0 == 0x5025
                     5025  2901 _AX5043_PINFUNCANTSELNB	=	0x5025
                     5023  2902 G$AX5043_PINFUNCDATANB$0$0 == 0x5023
                     5023  2903 _AX5043_PINFUNCDATANB	=	0x5023
                     5022  2904 G$AX5043_PINFUNCDCLKNB$0$0 == 0x5022
                     5022  2905 _AX5043_PINFUNCDCLKNB	=	0x5022
                     5024  2906 G$AX5043_PINFUNCIRQNB$0$0 == 0x5024
                     5024  2907 _AX5043_PINFUNCIRQNB	=	0x5024
                     5026  2908 G$AX5043_PINFUNCPWRAMPNB$0$0 == 0x5026
                     5026  2909 _AX5043_PINFUNCPWRAMPNB	=	0x5026
                     5021  2910 G$AX5043_PINFUNCSYSCLKNB$0$0 == 0x5021
                     5021  2911 _AX5043_PINFUNCSYSCLKNB	=	0x5021
                     5020  2912 G$AX5043_PINSTATENB$0$0 == 0x5020
                     5020  2913 _AX5043_PINSTATENB	=	0x5020
                     5233  2914 G$AX5043_PKTACCEPTFLAGSNB$0$0 == 0x5233
                     5233  2915 _AX5043_PKTACCEPTFLAGSNB	=	0x5233
                     5230  2916 G$AX5043_PKTCHUNKSIZENB$0$0 == 0x5230
                     5230  2917 _AX5043_PKTCHUNKSIZENB	=	0x5230
                     5231  2918 G$AX5043_PKTMISCFLAGSNB$0$0 == 0x5231
                     5231  2919 _AX5043_PKTMISCFLAGSNB	=	0x5231
                     5232  2920 G$AX5043_PKTSTOREFLAGSNB$0$0 == 0x5232
                     5232  2921 _AX5043_PKTSTOREFLAGSNB	=	0x5232
                     5031  2922 G$AX5043_PLLCPINB$0$0 == 0x5031
                     5031  2923 _AX5043_PLLCPINB	=	0x5031
                     5039  2924 G$AX5043_PLLCPIBOOSTNB$0$0 == 0x5039
                     5039  2925 _AX5043_PLLCPIBOOSTNB	=	0x5039
                     5182  2926 G$AX5043_PLLLOCKDETNB$0$0 == 0x5182
                     5182  2927 _AX5043_PLLLOCKDETNB	=	0x5182
                     5030  2928 G$AX5043_PLLLOOPNB$0$0 == 0x5030
                     5030  2929 _AX5043_PLLLOOPNB	=	0x5030
                     5038  2930 G$AX5043_PLLLOOPBOOSTNB$0$0 == 0x5038
                     5038  2931 _AX5043_PLLLOOPBOOSTNB	=	0x5038
                     5033  2932 G$AX5043_PLLRANGINGANB$0$0 == 0x5033
                     5033  2933 _AX5043_PLLRANGINGANB	=	0x5033
                     503B  2934 G$AX5043_PLLRANGINGBNB$0$0 == 0x503b
                     503B  2935 _AX5043_PLLRANGINGBNB	=	0x503b
                     5183  2936 G$AX5043_PLLRNGCLKNB$0$0 == 0x5183
                     5183  2937 _AX5043_PLLRNGCLKNB	=	0x5183
                     5032  2938 G$AX5043_PLLVCODIVNB$0$0 == 0x5032
                     5032  2939 _AX5043_PLLVCODIVNB	=	0x5032
                     5180  2940 G$AX5043_PLLVCOINB$0$0 == 0x5180
                     5180  2941 _AX5043_PLLVCOINB	=	0x5180
                     5181  2942 G$AX5043_PLLVCOIRNB$0$0 == 0x5181
                     5181  2943 _AX5043_PLLVCOIRNB	=	0x5181
                     5005  2944 G$AX5043_POWIRQMASKNB$0$0 == 0x5005
                     5005  2945 _AX5043_POWIRQMASKNB	=	0x5005
                     5003  2946 G$AX5043_POWSTATNB$0$0 == 0x5003
                     5003  2947 _AX5043_POWSTATNB	=	0x5003
                     5004  2948 G$AX5043_POWSTICKYSTATNB$0$0 == 0x5004
                     5004  2949 _AX5043_POWSTICKYSTATNB	=	0x5004
                     5027  2950 G$AX5043_PWRAMPNB$0$0 == 0x5027
                     5027  2951 _AX5043_PWRAMPNB	=	0x5027
                     5002  2952 G$AX5043_PWRMODENB$0$0 == 0x5002
                     5002  2953 _AX5043_PWRMODENB	=	0x5002
                     5009  2954 G$AX5043_RADIOEVENTMASK0NB$0$0 == 0x5009
                     5009  2955 _AX5043_RADIOEVENTMASK0NB	=	0x5009
                     5008  2956 G$AX5043_RADIOEVENTMASK1NB$0$0 == 0x5008
                     5008  2957 _AX5043_RADIOEVENTMASK1NB	=	0x5008
                     500F  2958 G$AX5043_RADIOEVENTREQ0NB$0$0 == 0x500f
                     500F  2959 _AX5043_RADIOEVENTREQ0NB	=	0x500f
                     500E  2960 G$AX5043_RADIOEVENTREQ1NB$0$0 == 0x500e
                     500E  2961 _AX5043_RADIOEVENTREQ1NB	=	0x500e
                     501C  2962 G$AX5043_RADIOSTATENB$0$0 == 0x501c
                     501C  2963 _AX5043_RADIOSTATENB	=	0x501c
                     5040  2964 G$AX5043_RSSINB$0$0 == 0x5040
                     5040  2965 _AX5043_RSSINB	=	0x5040
                     522D  2966 G$AX5043_RSSIABSTHRNB$0$0 == 0x522d
                     522D  2967 _AX5043_RSSIABSTHRNB	=	0x522d
                     522C  2968 G$AX5043_RSSIREFERENCENB$0$0 == 0x522c
                     522C  2969 _AX5043_RSSIREFERENCENB	=	0x522c
                     5105  2970 G$AX5043_RXDATARATE0NB$0$0 == 0x5105
                     5105  2971 _AX5043_RXDATARATE0NB	=	0x5105
                     5104  2972 G$AX5043_RXDATARATE1NB$0$0 == 0x5104
                     5104  2973 _AX5043_RXDATARATE1NB	=	0x5104
                     5103  2974 G$AX5043_RXDATARATE2NB$0$0 == 0x5103
                     5103  2975 _AX5043_RXDATARATE2NB	=	0x5103
                     5001  2976 G$AX5043_SCRATCHNB$0$0 == 0x5001
                     5001  2977 _AX5043_SCRATCHNB	=	0x5001
                     5000  2978 G$AX5043_SILICONREVISIONNB$0$0 == 0x5000
                     5000  2979 _AX5043_SILICONREVISIONNB	=	0x5000
                     505B  2980 G$AX5043_TIMER0NB$0$0 == 0x505b
                     505B  2981 _AX5043_TIMER0NB	=	0x505b
                     505A  2982 G$AX5043_TIMER1NB$0$0 == 0x505a
                     505A  2983 _AX5043_TIMER1NB	=	0x505a
                     5059  2984 G$AX5043_TIMER2NB$0$0 == 0x5059
                     5059  2985 _AX5043_TIMER2NB	=	0x5059
                     5227  2986 G$AX5043_TMGRXAGCNB$0$0 == 0x5227
                     5227  2987 _AX5043_TMGRXAGCNB	=	0x5227
                     5223  2988 G$AX5043_TMGRXBOOSTNB$0$0 == 0x5223
                     5223  2989 _AX5043_TMGRXBOOSTNB	=	0x5223
                     5226  2990 G$AX5043_TMGRXCOARSEAGCNB$0$0 == 0x5226
                     5226  2991 _AX5043_TMGRXCOARSEAGCNB	=	0x5226
                     5225  2992 G$AX5043_TMGRXOFFSACQNB$0$0 == 0x5225
                     5225  2993 _AX5043_TMGRXOFFSACQNB	=	0x5225
                     5229  2994 G$AX5043_TMGRXPREAMBLE1NB$0$0 == 0x5229
                     5229  2995 _AX5043_TMGRXPREAMBLE1NB	=	0x5229
                     522A  2996 G$AX5043_TMGRXPREAMBLE2NB$0$0 == 0x522a
                     522A  2997 _AX5043_TMGRXPREAMBLE2NB	=	0x522a
                     522B  2998 G$AX5043_TMGRXPREAMBLE3NB$0$0 == 0x522b
                     522B  2999 _AX5043_TMGRXPREAMBLE3NB	=	0x522b
                     5228  3000 G$AX5043_TMGRXRSSINB$0$0 == 0x5228
                     5228  3001 _AX5043_TMGRXRSSINB	=	0x5228
                     5224  3002 G$AX5043_TMGRXSETTLENB$0$0 == 0x5224
                     5224  3003 _AX5043_TMGRXSETTLENB	=	0x5224
                     5220  3004 G$AX5043_TMGTXBOOSTNB$0$0 == 0x5220
                     5220  3005 _AX5043_TMGTXBOOSTNB	=	0x5220
                     5221  3006 G$AX5043_TMGTXSETTLENB$0$0 == 0x5221
                     5221  3007 _AX5043_TMGTXSETTLENB	=	0x5221
                     5055  3008 G$AX5043_TRKAFSKDEMOD0NB$0$0 == 0x5055
                     5055  3009 _AX5043_TRKAFSKDEMOD0NB	=	0x5055
                     5054  3010 G$AX5043_TRKAFSKDEMOD1NB$0$0 == 0x5054
                     5054  3011 _AX5043_TRKAFSKDEMOD1NB	=	0x5054
                     5049  3012 G$AX5043_TRKAMPLITUDE0NB$0$0 == 0x5049
                     5049  3013 _AX5043_TRKAMPLITUDE0NB	=	0x5049
                     5048  3014 G$AX5043_TRKAMPLITUDE1NB$0$0 == 0x5048
                     5048  3015 _AX5043_TRKAMPLITUDE1NB	=	0x5048
                     5047  3016 G$AX5043_TRKDATARATE0NB$0$0 == 0x5047
                     5047  3017 _AX5043_TRKDATARATE0NB	=	0x5047
                     5046  3018 G$AX5043_TRKDATARATE1NB$0$0 == 0x5046
                     5046  3019 _AX5043_TRKDATARATE1NB	=	0x5046
                     5045  3020 G$AX5043_TRKDATARATE2NB$0$0 == 0x5045
                     5045  3021 _AX5043_TRKDATARATE2NB	=	0x5045
                     5051  3022 G$AX5043_TRKFREQ0NB$0$0 == 0x5051
                     5051  3023 _AX5043_TRKFREQ0NB	=	0x5051
                     5050  3024 G$AX5043_TRKFREQ1NB$0$0 == 0x5050
                     5050  3025 _AX5043_TRKFREQ1NB	=	0x5050
                     5053  3026 G$AX5043_TRKFSKDEMOD0NB$0$0 == 0x5053
                     5053  3027 _AX5043_TRKFSKDEMOD0NB	=	0x5053
                     5052  3028 G$AX5043_TRKFSKDEMOD1NB$0$0 == 0x5052
                     5052  3029 _AX5043_TRKFSKDEMOD1NB	=	0x5052
                     504B  3030 G$AX5043_TRKPHASE0NB$0$0 == 0x504b
                     504B  3031 _AX5043_TRKPHASE0NB	=	0x504b
                     504A  3032 G$AX5043_TRKPHASE1NB$0$0 == 0x504a
                     504A  3033 _AX5043_TRKPHASE1NB	=	0x504a
                     504F  3034 G$AX5043_TRKRFFREQ0NB$0$0 == 0x504f
                     504F  3035 _AX5043_TRKRFFREQ0NB	=	0x504f
                     504E  3036 G$AX5043_TRKRFFREQ1NB$0$0 == 0x504e
                     504E  3037 _AX5043_TRKRFFREQ1NB	=	0x504e
                     504D  3038 G$AX5043_TRKRFFREQ2NB$0$0 == 0x504d
                     504D  3039 _AX5043_TRKRFFREQ2NB	=	0x504d
                     5169  3040 G$AX5043_TXPWRCOEFFA0NB$0$0 == 0x5169
                     5169  3041 _AX5043_TXPWRCOEFFA0NB	=	0x5169
                     5168  3042 G$AX5043_TXPWRCOEFFA1NB$0$0 == 0x5168
                     5168  3043 _AX5043_TXPWRCOEFFA1NB	=	0x5168
                     516B  3044 G$AX5043_TXPWRCOEFFB0NB$0$0 == 0x516b
                     516B  3045 _AX5043_TXPWRCOEFFB0NB	=	0x516b
                     516A  3046 G$AX5043_TXPWRCOEFFB1NB$0$0 == 0x516a
                     516A  3047 _AX5043_TXPWRCOEFFB1NB	=	0x516a
                     516D  3048 G$AX5043_TXPWRCOEFFC0NB$0$0 == 0x516d
                     516D  3049 _AX5043_TXPWRCOEFFC0NB	=	0x516d
                     516C  3050 G$AX5043_TXPWRCOEFFC1NB$0$0 == 0x516c
                     516C  3051 _AX5043_TXPWRCOEFFC1NB	=	0x516c
                     516F  3052 G$AX5043_TXPWRCOEFFD0NB$0$0 == 0x516f
                     516F  3053 _AX5043_TXPWRCOEFFD0NB	=	0x516f
                     516E  3054 G$AX5043_TXPWRCOEFFD1NB$0$0 == 0x516e
                     516E  3055 _AX5043_TXPWRCOEFFD1NB	=	0x516e
                     5171  3056 G$AX5043_TXPWRCOEFFE0NB$0$0 == 0x5171
                     5171  3057 _AX5043_TXPWRCOEFFE0NB	=	0x5171
                     5170  3058 G$AX5043_TXPWRCOEFFE1NB$0$0 == 0x5170
                     5170  3059 _AX5043_TXPWRCOEFFE1NB	=	0x5170
                     5167  3060 G$AX5043_TXRATE0NB$0$0 == 0x5167
                     5167  3061 _AX5043_TXRATE0NB	=	0x5167
                     5166  3062 G$AX5043_TXRATE1NB$0$0 == 0x5166
                     5166  3063 _AX5043_TXRATE1NB	=	0x5166
                     5165  3064 G$AX5043_TXRATE2NB$0$0 == 0x5165
                     5165  3065 _AX5043_TXRATE2NB	=	0x5165
                     506B  3066 G$AX5043_WAKEUP0NB$0$0 == 0x506b
                     506B  3067 _AX5043_WAKEUP0NB	=	0x506b
                     506A  3068 G$AX5043_WAKEUP1NB$0$0 == 0x506a
                     506A  3069 _AX5043_WAKEUP1NB	=	0x506a
                     506D  3070 G$AX5043_WAKEUPFREQ0NB$0$0 == 0x506d
                     506D  3071 _AX5043_WAKEUPFREQ0NB	=	0x506d
                     506C  3072 G$AX5043_WAKEUPFREQ1NB$0$0 == 0x506c
                     506C  3073 _AX5043_WAKEUPFREQ1NB	=	0x506c
                     5069  3074 G$AX5043_WAKEUPTIMER0NB$0$0 == 0x5069
                     5069  3075 _AX5043_WAKEUPTIMER0NB	=	0x5069
                     5068  3076 G$AX5043_WAKEUPTIMER1NB$0$0 == 0x5068
                     5068  3077 _AX5043_WAKEUPTIMER1NB	=	0x5068
                     506E  3078 G$AX5043_WAKEUPXOEARLYNB$0$0 == 0x506e
                     506E  3079 _AX5043_WAKEUPXOEARLYNB	=	0x506e
                     5184  3080 G$AX5043_XTALCAPNB$0$0 == 0x5184
                     5184  3081 _AX5043_XTALCAPNB	=	0x5184
                     501D  3082 G$AX5043_XTALSTATUSNB$0$0 == 0x501d
                     501D  3083 _AX5043_XTALSTATUSNB	=	0x501d
                     5122  3084 G$AX5043_AGCAHYST0NB$0$0 == 0x5122
                     5122  3085 _AX5043_AGCAHYST0NB	=	0x5122
                     5132  3086 G$AX5043_AGCAHYST1NB$0$0 == 0x5132
                     5132  3087 _AX5043_AGCAHYST1NB	=	0x5132
                     5142  3088 G$AX5043_AGCAHYST2NB$0$0 == 0x5142
                     5142  3089 _AX5043_AGCAHYST2NB	=	0x5142
                     5152  3090 G$AX5043_AGCAHYST3NB$0$0 == 0x5152
                     5152  3091 _AX5043_AGCAHYST3NB	=	0x5152
                     5120  3092 G$AX5043_AGCGAIN0NB$0$0 == 0x5120
                     5120  3093 _AX5043_AGCGAIN0NB	=	0x5120
                     5130  3094 G$AX5043_AGCGAIN1NB$0$0 == 0x5130
                     5130  3095 _AX5043_AGCGAIN1NB	=	0x5130
                     5140  3096 G$AX5043_AGCGAIN2NB$0$0 == 0x5140
                     5140  3097 _AX5043_AGCGAIN2NB	=	0x5140
                     5150  3098 G$AX5043_AGCGAIN3NB$0$0 == 0x5150
                     5150  3099 _AX5043_AGCGAIN3NB	=	0x5150
                     5123  3100 G$AX5043_AGCMINMAX0NB$0$0 == 0x5123
                     5123  3101 _AX5043_AGCMINMAX0NB	=	0x5123
                     5133  3102 G$AX5043_AGCMINMAX1NB$0$0 == 0x5133
                     5133  3103 _AX5043_AGCMINMAX1NB	=	0x5133
                     5143  3104 G$AX5043_AGCMINMAX2NB$0$0 == 0x5143
                     5143  3105 _AX5043_AGCMINMAX2NB	=	0x5143
                     5153  3106 G$AX5043_AGCMINMAX3NB$0$0 == 0x5153
                     5153  3107 _AX5043_AGCMINMAX3NB	=	0x5153
                     5121  3108 G$AX5043_AGCTARGET0NB$0$0 == 0x5121
                     5121  3109 _AX5043_AGCTARGET0NB	=	0x5121
                     5131  3110 G$AX5043_AGCTARGET1NB$0$0 == 0x5131
                     5131  3111 _AX5043_AGCTARGET1NB	=	0x5131
                     5141  3112 G$AX5043_AGCTARGET2NB$0$0 == 0x5141
                     5141  3113 _AX5043_AGCTARGET2NB	=	0x5141
                     5151  3114 G$AX5043_AGCTARGET3NB$0$0 == 0x5151
                     5151  3115 _AX5043_AGCTARGET3NB	=	0x5151
                     512B  3116 G$AX5043_AMPLITUDEGAIN0NB$0$0 == 0x512b
                     512B  3117 _AX5043_AMPLITUDEGAIN0NB	=	0x512b
                     513B  3118 G$AX5043_AMPLITUDEGAIN1NB$0$0 == 0x513b
                     513B  3119 _AX5043_AMPLITUDEGAIN1NB	=	0x513b
                     514B  3120 G$AX5043_AMPLITUDEGAIN2NB$0$0 == 0x514b
                     514B  3121 _AX5043_AMPLITUDEGAIN2NB	=	0x514b
                     515B  3122 G$AX5043_AMPLITUDEGAIN3NB$0$0 == 0x515b
                     515B  3123 _AX5043_AMPLITUDEGAIN3NB	=	0x515b
                     512F  3124 G$AX5043_BBOFFSRES0NB$0$0 == 0x512f
                     512F  3125 _AX5043_BBOFFSRES0NB	=	0x512f
                     513F  3126 G$AX5043_BBOFFSRES1NB$0$0 == 0x513f
                     513F  3127 _AX5043_BBOFFSRES1NB	=	0x513f
                     514F  3128 G$AX5043_BBOFFSRES2NB$0$0 == 0x514f
                     514F  3129 _AX5043_BBOFFSRES2NB	=	0x514f
                     515F  3130 G$AX5043_BBOFFSRES3NB$0$0 == 0x515f
                     515F  3131 _AX5043_BBOFFSRES3NB	=	0x515f
                     5125  3132 G$AX5043_DRGAIN0NB$0$0 == 0x5125
                     5125  3133 _AX5043_DRGAIN0NB	=	0x5125
                     5135  3134 G$AX5043_DRGAIN1NB$0$0 == 0x5135
                     5135  3135 _AX5043_DRGAIN1NB	=	0x5135
                     5145  3136 G$AX5043_DRGAIN2NB$0$0 == 0x5145
                     5145  3137 _AX5043_DRGAIN2NB	=	0x5145
                     5155  3138 G$AX5043_DRGAIN3NB$0$0 == 0x5155
                     5155  3139 _AX5043_DRGAIN3NB	=	0x5155
                     512E  3140 G$AX5043_FOURFSK0NB$0$0 == 0x512e
                     512E  3141 _AX5043_FOURFSK0NB	=	0x512e
                     513E  3142 G$AX5043_FOURFSK1NB$0$0 == 0x513e
                     513E  3143 _AX5043_FOURFSK1NB	=	0x513e
                     514E  3144 G$AX5043_FOURFSK2NB$0$0 == 0x514e
                     514E  3145 _AX5043_FOURFSK2NB	=	0x514e
                     515E  3146 G$AX5043_FOURFSK3NB$0$0 == 0x515e
                     515E  3147 _AX5043_FOURFSK3NB	=	0x515e
                     512D  3148 G$AX5043_FREQDEV00NB$0$0 == 0x512d
                     512D  3149 _AX5043_FREQDEV00NB	=	0x512d
                     513D  3150 G$AX5043_FREQDEV01NB$0$0 == 0x513d
                     513D  3151 _AX5043_FREQDEV01NB	=	0x513d
                     514D  3152 G$AX5043_FREQDEV02NB$0$0 == 0x514d
                     514D  3153 _AX5043_FREQDEV02NB	=	0x514d
                     515D  3154 G$AX5043_FREQDEV03NB$0$0 == 0x515d
                     515D  3155 _AX5043_FREQDEV03NB	=	0x515d
                     512C  3156 G$AX5043_FREQDEV10NB$0$0 == 0x512c
                     512C  3157 _AX5043_FREQDEV10NB	=	0x512c
                     513C  3158 G$AX5043_FREQDEV11NB$0$0 == 0x513c
                     513C  3159 _AX5043_FREQDEV11NB	=	0x513c
                     514C  3160 G$AX5043_FREQDEV12NB$0$0 == 0x514c
                     514C  3161 _AX5043_FREQDEV12NB	=	0x514c
                     515C  3162 G$AX5043_FREQDEV13NB$0$0 == 0x515c
                     515C  3163 _AX5043_FREQDEV13NB	=	0x515c
                     5127  3164 G$AX5043_FREQUENCYGAINA0NB$0$0 == 0x5127
                     5127  3165 _AX5043_FREQUENCYGAINA0NB	=	0x5127
                     5137  3166 G$AX5043_FREQUENCYGAINA1NB$0$0 == 0x5137
                     5137  3167 _AX5043_FREQUENCYGAINA1NB	=	0x5137
                     5147  3168 G$AX5043_FREQUENCYGAINA2NB$0$0 == 0x5147
                     5147  3169 _AX5043_FREQUENCYGAINA2NB	=	0x5147
                     5157  3170 G$AX5043_FREQUENCYGAINA3NB$0$0 == 0x5157
                     5157  3171 _AX5043_FREQUENCYGAINA3NB	=	0x5157
                     5128  3172 G$AX5043_FREQUENCYGAINB0NB$0$0 == 0x5128
                     5128  3173 _AX5043_FREQUENCYGAINB0NB	=	0x5128
                     5138  3174 G$AX5043_FREQUENCYGAINB1NB$0$0 == 0x5138
                     5138  3175 _AX5043_FREQUENCYGAINB1NB	=	0x5138
                     5148  3176 G$AX5043_FREQUENCYGAINB2NB$0$0 == 0x5148
                     5148  3177 _AX5043_FREQUENCYGAINB2NB	=	0x5148
                     5158  3178 G$AX5043_FREQUENCYGAINB3NB$0$0 == 0x5158
                     5158  3179 _AX5043_FREQUENCYGAINB3NB	=	0x5158
                     5129  3180 G$AX5043_FREQUENCYGAINC0NB$0$0 == 0x5129
                     5129  3181 _AX5043_FREQUENCYGAINC0NB	=	0x5129
                     5139  3182 G$AX5043_FREQUENCYGAINC1NB$0$0 == 0x5139
                     5139  3183 _AX5043_FREQUENCYGAINC1NB	=	0x5139
                     5149  3184 G$AX5043_FREQUENCYGAINC2NB$0$0 == 0x5149
                     5149  3185 _AX5043_FREQUENCYGAINC2NB	=	0x5149
                     5159  3186 G$AX5043_FREQUENCYGAINC3NB$0$0 == 0x5159
                     5159  3187 _AX5043_FREQUENCYGAINC3NB	=	0x5159
                     512A  3188 G$AX5043_FREQUENCYGAIND0NB$0$0 == 0x512a
                     512A  3189 _AX5043_FREQUENCYGAIND0NB	=	0x512a
                     513A  3190 G$AX5043_FREQUENCYGAIND1NB$0$0 == 0x513a
                     513A  3191 _AX5043_FREQUENCYGAIND1NB	=	0x513a
                     514A  3192 G$AX5043_FREQUENCYGAIND2NB$0$0 == 0x514a
                     514A  3193 _AX5043_FREQUENCYGAIND2NB	=	0x514a
                     515A  3194 G$AX5043_FREQUENCYGAIND3NB$0$0 == 0x515a
                     515A  3195 _AX5043_FREQUENCYGAIND3NB	=	0x515a
                     5116  3196 G$AX5043_FREQUENCYLEAKNB$0$0 == 0x5116
                     5116  3197 _AX5043_FREQUENCYLEAKNB	=	0x5116
                     5126  3198 G$AX5043_PHASEGAIN0NB$0$0 == 0x5126
                     5126  3199 _AX5043_PHASEGAIN0NB	=	0x5126
                     5136  3200 G$AX5043_PHASEGAIN1NB$0$0 == 0x5136
                     5136  3201 _AX5043_PHASEGAIN1NB	=	0x5136
                     5146  3202 G$AX5043_PHASEGAIN2NB$0$0 == 0x5146
                     5146  3203 _AX5043_PHASEGAIN2NB	=	0x5146
                     5156  3204 G$AX5043_PHASEGAIN3NB$0$0 == 0x5156
                     5156  3205 _AX5043_PHASEGAIN3NB	=	0x5156
                     5207  3206 G$AX5043_PKTADDR0NB$0$0 == 0x5207
                     5207  3207 _AX5043_PKTADDR0NB	=	0x5207
                     5206  3208 G$AX5043_PKTADDR1NB$0$0 == 0x5206
                     5206  3209 _AX5043_PKTADDR1NB	=	0x5206
                     5205  3210 G$AX5043_PKTADDR2NB$0$0 == 0x5205
                     5205  3211 _AX5043_PKTADDR2NB	=	0x5205
                     5204  3212 G$AX5043_PKTADDR3NB$0$0 == 0x5204
                     5204  3213 _AX5043_PKTADDR3NB	=	0x5204
                     5200  3214 G$AX5043_PKTADDRCFGNB$0$0 == 0x5200
                     5200  3215 _AX5043_PKTADDRCFGNB	=	0x5200
                     520B  3216 G$AX5043_PKTADDRMASK0NB$0$0 == 0x520b
                     520B  3217 _AX5043_PKTADDRMASK0NB	=	0x520b
                     520A  3218 G$AX5043_PKTADDRMASK1NB$0$0 == 0x520a
                     520A  3219 _AX5043_PKTADDRMASK1NB	=	0x520a
                     5209  3220 G$AX5043_PKTADDRMASK2NB$0$0 == 0x5209
                     5209  3221 _AX5043_PKTADDRMASK2NB	=	0x5209
                     5208  3222 G$AX5043_PKTADDRMASK3NB$0$0 == 0x5208
                     5208  3223 _AX5043_PKTADDRMASK3NB	=	0x5208
                     5201  3224 G$AX5043_PKTLENCFGNB$0$0 == 0x5201
                     5201  3225 _AX5043_PKTLENCFGNB	=	0x5201
                     5202  3226 G$AX5043_PKTLENOFFSETNB$0$0 == 0x5202
                     5202  3227 _AX5043_PKTLENOFFSETNB	=	0x5202
                     5203  3228 G$AX5043_PKTMAXLENNB$0$0 == 0x5203
                     5203  3229 _AX5043_PKTMAXLENNB	=	0x5203
                     5118  3230 G$AX5043_RXPARAMCURSETNB$0$0 == 0x5118
                     5118  3231 _AX5043_RXPARAMCURSETNB	=	0x5118
                     5117  3232 G$AX5043_RXPARAMSETSNB$0$0 == 0x5117
                     5117  3233 _AX5043_RXPARAMSETSNB	=	0x5117
                     5124  3234 G$AX5043_TIMEGAIN0NB$0$0 == 0x5124
                     5124  3235 _AX5043_TIMEGAIN0NB	=	0x5124
                     5134  3236 G$AX5043_TIMEGAIN1NB$0$0 == 0x5134
                     5134  3237 _AX5043_TIMEGAIN1NB	=	0x5134
                     5144  3238 G$AX5043_TIMEGAIN2NB$0$0 == 0x5144
                     5144  3239 _AX5043_TIMEGAIN2NB	=	0x5144
                     5154  3240 G$AX5043_TIMEGAIN3NB$0$0 == 0x5154
                     5154  3241 _AX5043_TIMEGAIN3NB	=	0x5154
                     4F00  3242 G$AX5043_0xF00$0$0 == 0x4f00
                     4F00  3243 _AX5043_0xF00	=	0x4f00
                     4F01  3244 G$AX5043_0xF01$0$0 == 0x4f01
                     4F01  3245 _AX5043_0xF01	=	0x4f01
                     4F0C  3246 G$AX5043_0xF0C$0$0 == 0x4f0c
                     4F0C  3247 _AX5043_0xF0C	=	0x4f0c
                     4F10  3248 G$AX5043_0xF10$0$0 == 0x4f10
                     4F10  3249 _AX5043_0xF10	=	0x4f10
                     4F11  3250 G$AX5043_0xF11$0$0 == 0x4f11
                     4F11  3251 _AX5043_0xF11	=	0x4f11
                     4F18  3252 G$AX5043_0xF18$0$0 == 0x4f18
                     4F18  3253 _AX5043_0xF18	=	0x4f18
                     4F1C  3254 G$AX5043_0xF1C$0$0 == 0x4f1c
                     4F1C  3255 _AX5043_0xF1C	=	0x4f1c
                     4F21  3256 G$AX5043_0xF21$0$0 == 0x4f21
                     4F21  3257 _AX5043_0xF21	=	0x4f21
                     4F22  3258 G$AX5043_0xF22$0$0 == 0x4f22
                     4F22  3259 _AX5043_0xF22	=	0x4f22
                     4F23  3260 G$AX5043_0xF23$0$0 == 0x4f23
                     4F23  3261 _AX5043_0xF23	=	0x4f23
                     4F26  3262 G$AX5043_0xF26$0$0 == 0x4f26
                     4F26  3263 _AX5043_0xF26	=	0x4f26
                     4F2F  3264 G$AX5043_0xF2F$0$0 == 0x4f2f
                     4F2F  3265 _AX5043_0xF2F	=	0x4f2f
                     4F30  3266 G$AX5043_0xF30$0$0 == 0x4f30
                     4F30  3267 _AX5043_0xF30	=	0x4f30
                     4F31  3268 G$AX5043_0xF31$0$0 == 0x4f31
                     4F31  3269 _AX5043_0xF31	=	0x4f31
                     4F32  3270 G$AX5043_0xF32$0$0 == 0x4f32
                     4F32  3271 _AX5043_0xF32	=	0x4f32
                     4F33  3272 G$AX5043_0xF33$0$0 == 0x4f33
                     4F33  3273 _AX5043_0xF33	=	0x4f33
                     4F34  3274 G$AX5043_0xF34$0$0 == 0x4f34
                     4F34  3275 _AX5043_0xF34	=	0x4f34
                     4F35  3276 G$AX5043_0xF35$0$0 == 0x4f35
                     4F35  3277 _AX5043_0xF35	=	0x4f35
                     4F44  3278 G$AX5043_0xF44$0$0 == 0x4f44
                     4F44  3279 _AX5043_0xF44	=	0x4f44
                     4F0D  3280 G$AX5043_REF$0$0 == 0x4f0d
                     4F0D  3281 _AX5043_REF	=	0x4f0d
                     4F08  3282 G$AX5043_POWCTRL1$0$0 == 0x4f08
                     4F08  3283 _AX5043_POWCTRL1	=	0x4f08
                     0000  3284 G$axradio_syncstate$0$0==.
   0000                    3285 _axradio_syncstate::
   0000                    3286 	.ds 1
                     0001  3287 G$axradio_txbuffer_len$0$0==.
   0001                    3288 _axradio_txbuffer_len::
   0001                    3289 	.ds 2
                     0003  3290 G$axradio_txbuffer_cnt$0$0==.
   0003                    3291 _axradio_txbuffer_cnt::
   0003                    3292 	.ds 2
                     0005  3293 G$axradio_curchannel$0$0==.
   0005                    3294 _axradio_curchannel::
   0005                    3295 	.ds 1
                     0006  3296 G$axradio_curfreqoffset$0$0==.
   0006                    3297 _axradio_curfreqoffset::
   0006                    3298 	.ds 4
                     000A  3299 G$axradio_ack_count$0$0==.
   000A                    3300 _axradio_ack_count::
   000A                    3301 	.ds 1
                     000B  3302 G$axradio_ack_seqnr$0$0==.
   000B                    3303 _axradio_ack_seqnr::
   000B                    3304 	.ds 1
                     000C  3305 G$axradio_sync_time$0$0==.
   000C                    3306 _axradio_sync_time::
   000C                    3307 	.ds 4
                     0010  3308 G$axradio_sync_periodcorr$0$0==.
   0010                    3309 _axradio_sync_periodcorr::
   0010                    3310 	.ds 2
                     0012  3311 G$axradio_timeanchor$0$0==.
   0012                    3312 _axradio_timeanchor::
   0012                    3313 	.ds 8
                     001A  3314 G$axradio_localaddr$0$0==.
   001A                    3315 _axradio_localaddr::
   001A                    3316 	.ds 8
                     0022  3317 G$axradio_default_remoteaddr$0$0==.
   0022                    3318 _axradio_default_remoteaddr::
   0022                    3319 	.ds 4
                     0026  3320 G$axradio_txbuffer$0$0==.
   0026                    3321 _axradio_txbuffer::
   0026                    3322 	.ds 260
                     012A  3323 G$axradio_rxbuffer$0$0==.
   012A                    3324 _axradio_rxbuffer::
   012A                    3325 	.ds 260
                     022E  3326 G$axradio_cb_receive$0$0==.
   022E                    3327 _axradio_cb_receive::
   022E                    3328 	.ds 34
                     0250  3329 G$axradio_cb_receivesfd$0$0==.
   0250                    3330 _axradio_cb_receivesfd::
   0250                    3331 	.ds 10
                     025A  3332 G$axradio_cb_channelstate$0$0==.
   025A                    3333 _axradio_cb_channelstate::
   025A                    3334 	.ds 13
                     0267  3335 G$axradio_cb_transmitstart$0$0==.
   0267                    3336 _axradio_cb_transmitstart::
   0267                    3337 	.ds 10
                     0271  3338 G$axradio_cb_transmitend$0$0==.
   0271                    3339 _axradio_cb_transmitend::
   0271                    3340 	.ds 10
                     027B  3341 G$axradio_cb_transmitdata$0$0==.
   027B                    3342 _axradio_cb_transmitdata::
   027B                    3343 	.ds 10
                     0285  3344 G$axradio_timer$0$0==.
   0285                    3345 _axradio_timer::
   0285                    3346 	.ds 8
                           3347 ;--------------------------------------------------------
                           3348 ; absolute external ram data
                           3349 ;--------------------------------------------------------
                           3350 	.area XABS    (ABS,XDATA)
                           3351 ;--------------------------------------------------------
                           3352 ; external initialized ram data
                           3353 ;--------------------------------------------------------
                           3354 	.area XISEG   (XDATA)
                     0000  3355 G$f30_saved$0$0==.
   0000                    3356 _f30_saved::
   0000                    3357 	.ds 1
                     0001  3358 G$f31_saved$0$0==.
   0001                    3359 _f31_saved::
   0001                    3360 	.ds 1
                     0002  3361 G$f32_saved$0$0==.
   0002                    3362 _f32_saved::
   0002                    3363 	.ds 1
                     0003  3364 G$f33_saved$0$0==.
   0003                    3365 _f33_saved::
   0003                    3366 	.ds 1
                           3367 	.area HOME    (CODE)
                           3368 	.area GSINIT0 (CODE)
                           3369 	.area GSINIT1 (CODE)
                           3370 	.area GSINIT2 (CODE)
                           3371 	.area GSINIT3 (CODE)
                           3372 	.area GSINIT4 (CODE)
                           3373 	.area GSINIT5 (CODE)
                           3374 	.area GSINIT  (CODE)
                           3375 	.area GSFINAL (CODE)
                           3376 	.area CSEG    (CODE)
                           3377 ;--------------------------------------------------------
                           3378 ; global & static initialisations
                           3379 ;--------------------------------------------------------
                           3380 	.area HOME    (CODE)
                           3381 	.area GSINIT  (CODE)
                           3382 	.area GSFINAL (CODE)
                           3383 	.area GSINIT  (CODE)
                     0000  3384 	C$easyax5043.c$55$1$411 ==.
                           3385 ;	../COMMON/easyax5043.c:55: volatile uint8_t __data axradio_mode = AXRADIO_MODE_UNINIT;
   0000 75*00 00      [24] 3386 	mov	_axradio_mode,#0x00
                     0003  3387 	C$easyax5043.c$56$1$411 ==.
                           3388 ;	../COMMON/easyax5043.c:56: volatile axradio_trxstate_t __data axradio_trxstate = trxstate_off;
   0003 75*01 00      [24] 3389 	mov	_axradio_trxstate,#0x00
                           3390 ;--------------------------------------------------------
                           3391 ; Home
                           3392 ;--------------------------------------------------------
                           3393 	.area HOME    (CODE)
                           3394 	.area HOME    (CODE)
                           3395 ;--------------------------------------------------------
                           3396 ; code
                           3397 ;--------------------------------------------------------
                           3398 	.area CSEG    (CODE)
                           3399 ;------------------------------------------------------------
                           3400 ;Allocation info for local variables in function 'update_timeanchor'
                           3401 ;------------------------------------------------------------
                           3402 ;iesave                    Allocated to registers r7 
                           3403 ;------------------------------------------------------------
                     0000  3404 	Feasyax5043$update_timeanchor$0$0 ==.
                     0000  3405 	C$easyax5043.c$234$0$0 ==.
                           3406 ;	../COMMON/easyax5043.c:234: static __reentrantb void update_timeanchor(void) __reentrant
                           3407 ;	-----------------------------------------
                           3408 ;	 function update_timeanchor
                           3409 ;	-----------------------------------------
   0000                    3410 _update_timeanchor:
                     0007  3411 	ar7 = 0x07
                     0006  3412 	ar6 = 0x06
                     0005  3413 	ar5 = 0x05
                     0004  3414 	ar4 = 0x04
                     0003  3415 	ar3 = 0x03
                     0002  3416 	ar2 = 0x02
                     0001  3417 	ar1 = 0x01
                     0000  3418 	ar0 = 0x00
                     0000  3419 	C$easyax5043.c$236$1$203 ==.
                           3420 ;	../COMMON/easyax5043.c:236: uint8_t iesave = IE & 0x80;
   0000 74 80         [12] 3421 	mov	a,#0x80
   0002 55 A8         [12] 3422 	anl	a,_IE
   0004 FF            [12] 3423 	mov	r7,a
                     0005  3424 	C$easyax5043.c$237$1$203 ==.
                           3425 ;	../COMMON/easyax5043.c:237: EA = 0;
   0005 C2 AF         [12] 3426 	clr	_EA
                     0007  3427 	C$easyax5043.c$238$1$203 ==.
                           3428 ;	../COMMON/easyax5043.c:238: axradio_timeanchor.timer0 = wtimer0_curtime();
   0007 C0 07         [24] 3429 	push	ar7
   0009 12r00r00      [24] 3430 	lcall	_wtimer0_curtime
   000C AB 82         [24] 3431 	mov	r3,dpl
   000E AC 83         [24] 3432 	mov	r4,dph
   0010 AD F0         [24] 3433 	mov	r5,b
   0012 FE            [12] 3434 	mov	r6,a
   0013 D0 07         [24] 3435 	pop	ar7
   0015 90r00r12      [24] 3436 	mov	dptr,#_axradio_timeanchor
   0018 EB            [12] 3437 	mov	a,r3
   0019 F0            [24] 3438 	movx	@dptr,a
   001A EC            [12] 3439 	mov	a,r4
   001B A3            [24] 3440 	inc	dptr
   001C F0            [24] 3441 	movx	@dptr,a
   001D ED            [12] 3442 	mov	a,r5
   001E A3            [24] 3443 	inc	dptr
   001F F0            [24] 3444 	movx	@dptr,a
   0020 EE            [12] 3445 	mov	a,r6
   0021 A3            [24] 3446 	inc	dptr
   0022 F0            [24] 3447 	movx	@dptr,a
                     0023  3448 	C$easyax5043.c$239$1$203 ==.
                           3449 ;	../COMMON/easyax5043.c:239: axradio_timeanchor.radiotimer = radio_read24((uint16_t)&AX5043_TIMER2);
   0023 90 40 59      [24] 3450 	mov	dptr,#_AX5043_TIMER2
   0026 12r00r00      [24] 3451 	lcall	_radio_read24
   0029 AB 82         [24] 3452 	mov	r3,dpl
   002B AC 83         [24] 3453 	mov	r4,dph
   002D AD F0         [24] 3454 	mov	r5,b
   002F FE            [12] 3455 	mov	r6,a
   0030 90r00r16      [24] 3456 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   0033 EB            [12] 3457 	mov	a,r3
   0034 F0            [24] 3458 	movx	@dptr,a
   0035 EC            [12] 3459 	mov	a,r4
   0036 A3            [24] 3460 	inc	dptr
   0037 F0            [24] 3461 	movx	@dptr,a
   0038 ED            [12] 3462 	mov	a,r5
   0039 A3            [24] 3463 	inc	dptr
   003A F0            [24] 3464 	movx	@dptr,a
   003B EE            [12] 3465 	mov	a,r6
   003C A3            [24] 3466 	inc	dptr
   003D F0            [24] 3467 	movx	@dptr,a
                     003E  3468 	C$easyax5043.c$240$1$203 ==.
                           3469 ;	../COMMON/easyax5043.c:240: IE |= iesave;
   003E EF            [12] 3470 	mov	a,r7
   003F 42 A8         [12] 3471 	orl	_IE,a
                     0041  3472 	C$easyax5043.c$241$1$203 ==.
                     0041  3473 	XFeasyax5043$update_timeanchor$0$0 ==.
   0041 22            [24] 3474 	ret
                           3475 ;------------------------------------------------------------
                           3476 ;Allocation info for local variables in function 'axradio_conv_time_totimer0'
                           3477 ;------------------------------------------------------------
                           3478 ;dt                        Allocated to registers r4 r5 r6 r7 
                           3479 ;------------------------------------------------------------
                     0042  3480 	G$axradio_conv_time_totimer0$0$0 ==.
                     0042  3481 	C$easyax5043.c$243$1$203 ==.
                           3482 ;	../COMMON/easyax5043.c:243: __reentrantb uint32_t axradio_conv_time_totimer0(uint32_t dt) __reentrant
                           3483 ;	-----------------------------------------
                           3484 ;	 function axradio_conv_time_totimer0
                           3485 ;	-----------------------------------------
   0042                    3486 _axradio_conv_time_totimer0:
   0042 AC 82         [24] 3487 	mov	r4,dpl
   0044 AD 83         [24] 3488 	mov	r5,dph
   0046 AE F0         [24] 3489 	mov	r6,b
   0048 FF            [12] 3490 	mov	r7,a
                     0049  3491 	C$easyax5043.c$245$1$205 ==.
                           3492 ;	../COMMON/easyax5043.c:245: dt -= axradio_timeanchor.radiotimer;
   0049 90r00r16      [24] 3493 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   004C E0            [24] 3494 	movx	a,@dptr
   004D F8            [12] 3495 	mov	r0,a
   004E A3            [24] 3496 	inc	dptr
   004F E0            [24] 3497 	movx	a,@dptr
   0050 F9            [12] 3498 	mov	r1,a
   0051 A3            [24] 3499 	inc	dptr
   0052 E0            [24] 3500 	movx	a,@dptr
   0053 FA            [12] 3501 	mov	r2,a
   0054 A3            [24] 3502 	inc	dptr
   0055 E0            [24] 3503 	movx	a,@dptr
   0056 FB            [12] 3504 	mov	r3,a
   0057 EC            [12] 3505 	mov	a,r4
   0058 C3            [12] 3506 	clr	c
   0059 98            [12] 3507 	subb	a,r0
   005A FC            [12] 3508 	mov	r4,a
   005B ED            [12] 3509 	mov	a,r5
   005C 99            [12] 3510 	subb	a,r1
   005D FD            [12] 3511 	mov	r5,a
   005E EE            [12] 3512 	mov	a,r6
   005F 9A            [12] 3513 	subb	a,r2
   0060 FE            [12] 3514 	mov	r6,a
   0061 EF            [12] 3515 	mov	a,r7
   0062 9B            [12] 3516 	subb	a,r3
                     0063  3517 	C$easyax5043.c$246$1$205 ==.
                           3518 ;	../COMMON/easyax5043.c:246: dt = axradio_conv_timeinterval_totimer0(signextend24(dt));
   0063 8C 82         [24] 3519 	mov	dpl,r4
   0065 8D 83         [24] 3520 	mov	dph,r5
   0067 8E F0         [24] 3521 	mov	b,r6
   0069 12r00r00      [24] 3522 	lcall	_signextend24
   006C 12r00r00      [24] 3523 	lcall	_axradio_conv_timeinterval_totimer0
   006F AC 82         [24] 3524 	mov	r4,dpl
   0071 AD 83         [24] 3525 	mov	r5,dph
   0073 AE F0         [24] 3526 	mov	r6,b
   0075 FF            [12] 3527 	mov	r7,a
                     0076  3528 	C$easyax5043.c$247$1$205 ==.
                           3529 ;	../COMMON/easyax5043.c:247: dt += axradio_timeanchor.timer0;
   0076 90r00r12      [24] 3530 	mov	dptr,#_axradio_timeanchor
   0079 E0            [24] 3531 	movx	a,@dptr
   007A F8            [12] 3532 	mov	r0,a
   007B A3            [24] 3533 	inc	dptr
   007C E0            [24] 3534 	movx	a,@dptr
   007D F9            [12] 3535 	mov	r1,a
   007E A3            [24] 3536 	inc	dptr
   007F E0            [24] 3537 	movx	a,@dptr
   0080 FA            [12] 3538 	mov	r2,a
   0081 A3            [24] 3539 	inc	dptr
   0082 E0            [24] 3540 	movx	a,@dptr
   0083 FB            [12] 3541 	mov	r3,a
   0084 E8            [12] 3542 	mov	a,r0
   0085 2C            [12] 3543 	add	a,r4
   0086 FC            [12] 3544 	mov	r4,a
   0087 E9            [12] 3545 	mov	a,r1
   0088 3D            [12] 3546 	addc	a,r5
   0089 FD            [12] 3547 	mov	r5,a
   008A EA            [12] 3548 	mov	a,r2
   008B 3E            [12] 3549 	addc	a,r6
   008C FE            [12] 3550 	mov	r6,a
   008D EB            [12] 3551 	mov	a,r3
   008E 3F            [12] 3552 	addc	a,r7
                     008F  3553 	C$easyax5043.c$248$1$205 ==.
                           3554 ;	../COMMON/easyax5043.c:248: return dt;
   008F 8C 82         [24] 3555 	mov	dpl,r4
   0091 8D 83         [24] 3556 	mov	dph,r5
   0093 8E F0         [24] 3557 	mov	b,r6
                     0095  3558 	C$easyax5043.c$249$1$205 ==.
                     0095  3559 	XG$axradio_conv_time_totimer0$0$0 ==.
   0095 22            [24] 3560 	ret
                           3561 ;------------------------------------------------------------
                           3562 ;Allocation info for local variables in function 'ax5043_init_registers_tx'
                           3563 ;------------------------------------------------------------
                           3564 ;rng                       Allocated to registers r7 
                           3565 ;------------------------------------------------------------
                     0096  3566 	G$ax5043_init_registers_tx$0$0 ==.
                     0096  3567 	C$easyax5043.c$251$1$205 ==.
                           3568 ;	../COMMON/easyax5043.c:251: __reentrantb uint8_t ax5043_init_registers_tx(void) __reentrant
                           3569 ;	-----------------------------------------
                           3570 ;	 function ax5043_init_registers_tx
                           3571 ;	-----------------------------------------
   0096                    3572 _ax5043_init_registers_tx:
                     0096  3573 	C$easyax5043.c$254$1$207 ==.
                           3574 ;	../COMMON/easyax5043.c:254: ax5043_set_registers_tx();
   0096 12r00r00      [24] 3575 	lcall	_ax5043_set_registers_tx
                     0099  3576 	C$easyax5043.c$255$1$207 ==.
                           3577 ;	../COMMON/easyax5043.c:255: rng = axradio_phy_chanpllrng_tx[axradio_curchannel];
   0099 90r00r05      [24] 3578 	mov	dptr,#_axradio_curchannel
   009C E0            [24] 3579 	movx	a,@dptr
   009D 24r00         [12] 3580 	add	a,#_axradio_phy_chanpllrng_tx
   009F F5 82         [12] 3581 	mov	dpl,a
   00A1 E4            [12] 3582 	clr	a
   00A2 34s00         [12] 3583 	addc	a,#(_axradio_phy_chanpllrng_tx >> 8)
   00A4 F5 83         [12] 3584 	mov	dph,a
   00A6 E0            [24] 3585 	movx	a,@dptr
                     00A7  3586 	C$easyax5043.c$256$1$207 ==.
                           3587 ;	../COMMON/easyax5043.c:256: if (rng & 0x20)
   00A7 FF            [12] 3588 	mov	r7,a
   00A8 30 E5 05      [24] 3589 	jnb	acc.5,00102$
                     00AB  3590 	C$easyax5043.c$257$1$207 ==.
                           3591 ;	../COMMON/easyax5043.c:257: return AXRADIO_ERR_RANGING;
   00AB 75 82 06      [24] 3592 	mov	dpl,#0x06
   00AE 80 1B         [24] 3593 	sjmp	00106$
   00B0                    3594 00102$:
                     00B0  3595 	C$easyax5043.c$258$1$207 ==.
                           3596 ;	../COMMON/easyax5043.c:258: if (AX5043_PLLLOOP & 0x80) {
   00B0 90 40 30      [24] 3597 	mov	dptr,#_AX5043_PLLLOOP
   00B3 E0            [24] 3598 	movx	a,@dptr
   00B4 FE            [12] 3599 	mov	r6,a
   00B5 30 E7 09      [24] 3600 	jnb	acc.7,00104$
                     00B8  3601 	C$easyax5043.c$259$2$208 ==.
                           3602 ;	../COMMON/easyax5043.c:259: AX5043_PLLRANGINGB = rng & 0x0F;
   00B8 90 40 3B      [24] 3603 	mov	dptr,#_AX5043_PLLRANGINGB
   00BB 74 0F         [12] 3604 	mov	a,#0x0F
   00BD 5F            [12] 3605 	anl	a,r7
   00BE F0            [24] 3606 	movx	@dptr,a
   00BF 80 07         [24] 3607 	sjmp	00105$
   00C1                    3608 00104$:
                     00C1  3609 	C$easyax5043.c$261$2$209 ==.
                           3610 ;	../COMMON/easyax5043.c:261: AX5043_PLLRANGINGA = rng & 0x0F;
   00C1 90 40 33      [24] 3611 	mov	dptr,#_AX5043_PLLRANGINGA
   00C4 74 0F         [12] 3612 	mov	a,#0x0F
   00C6 5F            [12] 3613 	anl	a,r7
   00C7 F0            [24] 3614 	movx	@dptr,a
   00C8                    3615 00105$:
                     00C8  3616 	C$easyax5043.c$263$1$207 ==.
                           3617 ;	../COMMON/easyax5043.c:263: return AXRADIO_ERR_NOERROR;
   00C8 75 82 00      [24] 3618 	mov	dpl,#0x00
   00CB                    3619 00106$:
                     00CB  3620 	C$easyax5043.c$264$1$207 ==.
                     00CB  3621 	XG$ax5043_init_registers_tx$0$0 ==.
   00CB 22            [24] 3622 	ret
                           3623 ;------------------------------------------------------------
                           3624 ;Allocation info for local variables in function 'ax5043_init_registers_rx'
                           3625 ;------------------------------------------------------------
                           3626 ;rng                       Allocated to registers r7 
                           3627 ;------------------------------------------------------------
                     00CC  3628 	G$ax5043_init_registers_rx$0$0 ==.
                     00CC  3629 	C$easyax5043.c$266$1$207 ==.
                           3630 ;	../COMMON/easyax5043.c:266: __reentrantb uint8_t ax5043_init_registers_rx(void) __reentrant
                           3631 ;	-----------------------------------------
                           3632 ;	 function ax5043_init_registers_rx
                           3633 ;	-----------------------------------------
   00CC                    3634 _ax5043_init_registers_rx:
                     00CC  3635 	C$easyax5043.c$269$1$211 ==.
                           3636 ;	../COMMON/easyax5043.c:269: ax5043_set_registers_rx();
   00CC 12r00r00      [24] 3637 	lcall	_ax5043_set_registers_rx
                     00CF  3638 	C$easyax5043.c$270$1$211 ==.
                           3639 ;	../COMMON/easyax5043.c:270: rng = axradio_phy_chanpllrng_rx[axradio_curchannel];
   00CF 90r00r05      [24] 3640 	mov	dptr,#_axradio_curchannel
   00D2 E0            [24] 3641 	movx	a,@dptr
   00D3 24r00         [12] 3642 	add	a,#_axradio_phy_chanpllrng_rx
   00D5 F5 82         [12] 3643 	mov	dpl,a
   00D7 E4            [12] 3644 	clr	a
   00D8 34s00         [12] 3645 	addc	a,#(_axradio_phy_chanpllrng_rx >> 8)
   00DA F5 83         [12] 3646 	mov	dph,a
   00DC E0            [24] 3647 	movx	a,@dptr
                     00DD  3648 	C$easyax5043.c$271$1$211 ==.
                           3649 ;	../COMMON/easyax5043.c:271: if (rng & 0x20)
   00DD FF            [12] 3650 	mov	r7,a
   00DE 30 E5 05      [24] 3651 	jnb	acc.5,00102$
                     00E1  3652 	C$easyax5043.c$272$1$211 ==.
                           3653 ;	../COMMON/easyax5043.c:272: return AXRADIO_ERR_RANGING;
   00E1 75 82 06      [24] 3654 	mov	dpl,#0x06
   00E4 80 1B         [24] 3655 	sjmp	00106$
   00E6                    3656 00102$:
                     00E6  3657 	C$easyax5043.c$273$1$211 ==.
                           3658 ;	../COMMON/easyax5043.c:273: if (AX5043_PLLLOOP & 0x80) {
   00E6 90 40 30      [24] 3659 	mov	dptr,#_AX5043_PLLLOOP
   00E9 E0            [24] 3660 	movx	a,@dptr
   00EA FE            [12] 3661 	mov	r6,a
   00EB 30 E7 09      [24] 3662 	jnb	acc.7,00104$
                     00EE  3663 	C$easyax5043.c$274$2$212 ==.
                           3664 ;	../COMMON/easyax5043.c:274: AX5043_PLLRANGINGB = rng & 0x0F;
   00EE 90 40 3B      [24] 3665 	mov	dptr,#_AX5043_PLLRANGINGB
   00F1 74 0F         [12] 3666 	mov	a,#0x0F
   00F3 5F            [12] 3667 	anl	a,r7
   00F4 F0            [24] 3668 	movx	@dptr,a
   00F5 80 07         [24] 3669 	sjmp	00105$
   00F7                    3670 00104$:
                     00F7  3671 	C$easyax5043.c$276$2$213 ==.
                           3672 ;	../COMMON/easyax5043.c:276: AX5043_PLLRANGINGA = rng & 0x0F;
   00F7 90 40 33      [24] 3673 	mov	dptr,#_AX5043_PLLRANGINGA
   00FA 74 0F         [12] 3674 	mov	a,#0x0F
   00FC 5F            [12] 3675 	anl	a,r7
   00FD F0            [24] 3676 	movx	@dptr,a
   00FE                    3677 00105$:
                     00FE  3678 	C$easyax5043.c$278$1$211 ==.
                           3679 ;	../COMMON/easyax5043.c:278: return AXRADIO_ERR_NOERROR;
   00FE 75 82 00      [24] 3680 	mov	dpl,#0x00
   0101                    3681 00106$:
                     0101  3682 	C$easyax5043.c$279$1$211 ==.
                     0101  3683 	XG$ax5043_init_registers_rx$0$0 ==.
   0101 22            [24] 3684 	ret
                           3685 ;------------------------------------------------------------
                           3686 ;Allocation info for local variables in function 'receive_isr'
                           3687 ;------------------------------------------------------------
                           3688 ;fifo_cmd                  Allocated to registers r6 
                           3689 ;flags                     Allocated to registers 
                           3690 ;i                         Allocated to registers r6 
                           3691 ;len                       Allocated to registers r7 
                           3692 ;r                         Allocated to registers r6 
                           3693 ;r                         Allocated to registers r6 
                           3694 ;r                         Allocated to registers r6 
                           3695 ;------------------------------------------------------------
                     0102  3696 	Feasyax5043$receive_isr$0$0 ==.
                     0102  3697 	C$easyax5043.c$281$1$211 ==.
                           3698 ;	../COMMON/easyax5043.c:281: static __reentrantb void receive_isr(void) __reentrant
                           3699 ;	-----------------------------------------
                           3700 ;	 function receive_isr
                           3701 ;	-----------------------------------------
   0102                    3702 _receive_isr:
                     0102  3703 	C$easyax5043.c$285$1$211 ==.
                           3704 ;	../COMMON/easyax5043.c:285: uint8_t len = AX5043_RADIOEVENTREQ0; // clear request so interrupt does not fire again. sync_rx enables interrupt on radio state changed in order to wake up on SDF detected
   0102 90 40 0F      [24] 3705 	mov	dptr,#_AX5043_RADIOEVENTREQ0
   0105 E0            [24] 3706 	movx	a,@dptr
                     0106  3707 	C$easyax5043.c$287$1$215 ==.
                           3708 ;	../COMMON/easyax5043.c:287: if ((len & 0x04) && AX5043_RADIOSTATE == 0x0F) {
   0106 FF            [12] 3709 	mov	r7,a
   0107 30 E2 40      [24] 3710 	jnb	acc.2,00164$
   010A 90 40 1C      [24] 3711 	mov	dptr,#_AX5043_RADIOSTATE
   010D E0            [24] 3712 	movx	a,@dptr
   010E FE            [12] 3713 	mov	r6,a
   010F BE 0F 38      [24] 3714 	cjne	r6,#0x0F,00164$
                     0112  3715 	C$easyax5043.c$289$2$216 ==.
                           3716 ;	../COMMON/easyax5043.c:289: update_timeanchor();
   0112 12r00r00      [24] 3717 	lcall	_update_timeanchor
                     0115  3718 	C$easyax5043.c$290$2$216 ==.
                           3719 ;	../COMMON/easyax5043.c:290: if(axradio_framing_enable_sfdcallback)
   0115 90r00r00      [24] 3720 	mov	dptr,#_axradio_framing_enable_sfdcallback
   0118 E4            [12] 3721 	clr	a
   0119 93            [24] 3722 	movc	a,@a+dptr
   011A FE            [12] 3723 	mov	r6,a
   011B 60 2D         [24] 3724 	jz	00164$
                     011D  3725 	C$easyax5043.c$292$3$217 ==.
                           3726 ;	../COMMON/easyax5043.c:292: wtimer_remove_callback(&axradio_cb_receivesfd.cb);
   011D 90r02r50      [24] 3727 	mov	dptr,#_axradio_cb_receivesfd
   0120 12r00r00      [24] 3728 	lcall	_wtimer_remove_callback
                     0123  3729 	C$easyax5043.c$293$3$217 ==.
                           3730 ;	../COMMON/easyax5043.c:293: axradio_cb_receivesfd.st.error = AXRADIO_ERR_NOERROR;
   0123 90r02r55      [24] 3731 	mov	dptr,#(_axradio_cb_receivesfd + 0x0005)
   0126 E4            [12] 3732 	clr	a
   0127 F0            [24] 3733 	movx	@dptr,a
                     0128  3734 	C$easyax5043.c$294$3$217 ==.
                           3735 ;	../COMMON/easyax5043.c:294: axradio_cb_receivesfd.st.time.t = axradio_timeanchor.radiotimer;
   0128 90r00r16      [24] 3736 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   012B E0            [24] 3737 	movx	a,@dptr
   012C FB            [12] 3738 	mov	r3,a
   012D A3            [24] 3739 	inc	dptr
   012E E0            [24] 3740 	movx	a,@dptr
   012F FC            [12] 3741 	mov	r4,a
   0130 A3            [24] 3742 	inc	dptr
   0131 E0            [24] 3743 	movx	a,@dptr
   0132 FD            [12] 3744 	mov	r5,a
   0133 A3            [24] 3745 	inc	dptr
   0134 E0            [24] 3746 	movx	a,@dptr
   0135 FE            [12] 3747 	mov	r6,a
   0136 90r02r56      [24] 3748 	mov	dptr,#(_axradio_cb_receivesfd + 0x0006)
   0139 EB            [12] 3749 	mov	a,r3
   013A F0            [24] 3750 	movx	@dptr,a
   013B EC            [12] 3751 	mov	a,r4
   013C A3            [24] 3752 	inc	dptr
   013D F0            [24] 3753 	movx	@dptr,a
   013E ED            [12] 3754 	mov	a,r5
   013F A3            [24] 3755 	inc	dptr
   0140 F0            [24] 3756 	movx	@dptr,a
   0141 EE            [12] 3757 	mov	a,r6
   0142 A3            [24] 3758 	inc	dptr
   0143 F0            [24] 3759 	movx	@dptr,a
                     0144  3760 	C$easyax5043.c$295$3$217 ==.
                           3761 ;	../COMMON/easyax5043.c:295: wtimer_add_callback(&axradio_cb_receivesfd.cb);
   0144 90r02r50      [24] 3762 	mov	dptr,#_axradio_cb_receivesfd
   0147 12r00r00      [24] 3763 	lcall	_wtimer_add_callback
                     014A  3764 	C$easyax5043.c$307$1$215 ==.
                           3765 ;	../COMMON/easyax5043.c:307: while (AX5043_IRQREQUEST0 & 0x01) {    // while fifo not empty
   014A                    3766 00164$:
   014A                    3767 00149$:
   014A 90 40 0D      [24] 3768 	mov	dptr,#_AX5043_IRQREQUEST0
   014D E0            [24] 3769 	movx	a,@dptr
   014E FE            [12] 3770 	mov	r6,a
   014F 20 E0 03      [24] 3771 	jb	acc.0,00237$
   0152 02r03rEE      [24] 3772 	ljmp	00152$
   0155                    3773 00237$:
                     0155  3774 	C$easyax5043.c$308$2$218 ==.
                           3775 ;	../COMMON/easyax5043.c:308: fifo_cmd = AX5043_FIFODATA; // read command
   0155 90 40 29      [24] 3776 	mov	dptr,#_AX5043_FIFODATA
   0158 E0            [24] 3777 	movx	a,@dptr
   0159 FE            [12] 3778 	mov	r6,a
                     015A  3779 	C$easyax5043.c$309$2$218 ==.
                           3780 ;	../COMMON/easyax5043.c:309: len = (fifo_cmd & 0xE0) >> 5; // top 3 bits encode payload len
   015A 74 E0         [12] 3781 	mov	a,#0xE0
   015C 5E            [12] 3782 	anl	a,r6
   015D FD            [12] 3783 	mov	r5,a
   015E C4            [12] 3784 	swap	a
   015F 03            [12] 3785 	rr	a
   0160 54 07         [12] 3786 	anl	a,#0x07
   0162 FF            [12] 3787 	mov	r7,a
                     0163  3788 	C$easyax5043.c$310$2$218 ==.
                           3789 ;	../COMMON/easyax5043.c:310: if (len == 7)
   0163 BF 07 06      [24] 3790 	cjne	r7,#0x07,00107$
                     0166  3791 	C$easyax5043.c$311$2$218 ==.
                           3792 ;	../COMMON/easyax5043.c:311: len = AX5043_FIFODATA; // 7 means variable length, -> get length byte
   0166 90 40 29      [24] 3793 	mov	dptr,#_AX5043_FIFODATA
   0169 E0            [24] 3794 	movx	a,@dptr
   016A FD            [12] 3795 	mov	r5,a
   016B FF            [12] 3796 	mov	r7,a
   016C                    3797 00107$:
                     016C  3798 	C$easyax5043.c$312$2$218 ==.
                           3799 ;	../COMMON/easyax5043.c:312: fifo_cmd &= 0x1F;
   016C 53 06 1F      [24] 3800 	anl	ar6,#0x1F
                     016F  3801 	C$easyax5043.c$313$2$218 ==.
                           3802 ;	../COMMON/easyax5043.c:313: switch (fifo_cmd) {
   016F BE 01 02      [24] 3803 	cjne	r6,#0x01,00240$
   0172 80 1B         [24] 3804 	sjmp	00108$
   0174                    3805 00240$:
   0174 BE 10 03      [24] 3806 	cjne	r6,#0x10,00241$
   0177 02r03r40      [24] 3807 	ljmp	00135$
   017A                    3808 00241$:
   017A BE 11 03      [24] 3809 	cjne	r6,#0x11,00242$
   017D 02r03r13      [24] 3810 	ljmp	00132$
   0180                    3811 00242$:
   0180 BE 13 03      [24] 3812 	cjne	r6,#0x13,00243$
   0183 02r02rD6      [24] 3813 	ljmp	00129$
   0186                    3814 00243$:
   0186 BE 15 03      [24] 3815 	cjne	r6,#0x15,00244$
   0189 02r03r69      [24] 3816 	ljmp	00138$
   018C                    3817 00244$:
   018C 02r03rDF      [24] 3818 	ljmp	00142$
                     018F  3819 	C$easyax5043.c$314$3$219 ==.
                           3820 ;	../COMMON/easyax5043.c:314: case AX5043_FIFOCMD_DATA:
   018F                    3821 00108$:
                     018F  3822 	C$easyax5043.c$315$3$219 ==.
                           3823 ;	../COMMON/easyax5043.c:315: if (!len)
   018F EF            [12] 3824 	mov	a,r7
   0190 60 B8         [24] 3825 	jz	00149$
                     0192  3826 	C$easyax5043.c$319$3$219 ==.
                           3827 ;	../COMMON/easyax5043.c:319: if (DBGLNKSTAT & 0x10)
   0192 E5 E2         [12] 3828 	mov	a,_DBGLNKSTAT
   0194 30 E4 06      [24] 3829 	jnb	acc.4,00112$
                     0197  3830 	C$easyax5043.c$320$3$219 ==.
                           3831 ;	../COMMON/easyax5043.c:320: dbglink_tx('.');
   0197 75 82 2E      [24] 3832 	mov	dpl,#0x2E
   019A 12r00r00      [24] 3833 	lcall	_dbglink_tx
   019D                    3834 00112$:
                     019D  3835 	C$easyax5043.c$323$3$219 ==.
                           3836 ;	../COMMON/easyax5043.c:323: flags = AX5043_FIFODATA;
   019D 90 40 29      [24] 3837 	mov	dptr,#_AX5043_FIFODATA
   01A0 E0            [24] 3838 	movx	a,@dptr
                     01A1  3839 	C$easyax5043.c$324$3$219 ==.
                           3840 ;	../COMMON/easyax5043.c:324: --len;
   01A1 1F            [12] 3841 	dec	r7
                     01A2  3842 	C$easyax5043.c$325$3$219 ==.
                           3843 ;	../COMMON/easyax5043.c:325: ax5043_readfifo(axradio_rxbuffer, len);
   01A2 C0 07         [24] 3844 	push	ar7
   01A4 C0 07         [24] 3845 	push	ar7
   01A6 90r01r2A      [24] 3846 	mov	dptr,#_axradio_rxbuffer
   01A9 75 F0 00      [24] 3847 	mov	b,#0x00
   01AC 12r00r00      [24] 3848 	lcall	_ax5043_readfifo
   01AF 15 81         [12] 3849 	dec	sp
   01B1 D0 07         [24] 3850 	pop	ar7
                     01B3  3851 	C$easyax5043.c$326$3$219 ==.
                           3852 ;	../COMMON/easyax5043.c:326: if(axradio_mode == AXRADIO_MODE_WOR_RECEIVE || axradio_mode == AXRADIO_MODE_WOR_ACK_RECEIVE)
   01B3 74 19         [12] 3853 	mov	a,#0x19
   01B5 B5*00 02      [24] 3854 	cjne	a,_axradio_mode,00247$
   01B8 80 05         [24] 3855 	sjmp	00113$
   01BA                    3856 00247$:
   01BA 74 1B         [12] 3857 	mov	a,#0x1B
   01BC B5*00 21      [24] 3858 	cjne	a,_axradio_mode,00114$
   01BF                    3859 00113$:
                     01BF  3860 	C$easyax5043.c$328$4$220 ==.
                           3861 ;	../COMMON/easyax5043.c:328: f30_saved = AX5043_0xF30;
   01BF 90 4F 30      [24] 3862 	mov	dptr,#_AX5043_0xF30
   01C2 E0            [24] 3863 	movx	a,@dptr
   01C3 90r00r00      [24] 3864 	mov	dptr,#_f30_saved
   01C6 F0            [24] 3865 	movx	@dptr,a
                     01C7  3866 	C$easyax5043.c$329$4$220 ==.
                           3867 ;	../COMMON/easyax5043.c:329: f31_saved = AX5043_0xF31;
   01C7 90 4F 31      [24] 3868 	mov	dptr,#_AX5043_0xF31
   01CA E0            [24] 3869 	movx	a,@dptr
   01CB 90r00r01      [24] 3870 	mov	dptr,#_f31_saved
   01CE F0            [24] 3871 	movx	@dptr,a
                     01CF  3872 	C$easyax5043.c$330$4$220 ==.
                           3873 ;	../COMMON/easyax5043.c:330: f32_saved = AX5043_0xF32;
   01CF 90 4F 32      [24] 3874 	mov	dptr,#_AX5043_0xF32
   01D2 E0            [24] 3875 	movx	a,@dptr
   01D3 90r00r02      [24] 3876 	mov	dptr,#_f32_saved
   01D6 F0            [24] 3877 	movx	@dptr,a
                     01D7  3878 	C$easyax5043.c$331$4$220 ==.
                           3879 ;	../COMMON/easyax5043.c:331: f33_saved = AX5043_0xF33;
   01D7 90 4F 33      [24] 3880 	mov	dptr,#_AX5043_0xF33
   01DA E0            [24] 3881 	movx	a,@dptr
   01DB FE            [12] 3882 	mov	r6,a
   01DC 90r00r03      [24] 3883 	mov	dptr,#_f33_saved
   01DF F0            [24] 3884 	movx	@dptr,a
   01E0                    3885 00114$:
                     01E0  3886 	C$easyax5043.c$333$3$219 ==.
                           3887 ;	../COMMON/easyax5043.c:333: if (axradio_mode == AXRADIO_MODE_WOR_RECEIVE ||
   01E0 74 19         [12] 3888 	mov	a,#0x19
   01E2 B5*00 02      [24] 3889 	cjne	a,_axradio_mode,00250$
   01E5 80 05         [24] 3890 	sjmp	00116$
   01E7                    3891 00250$:
                     01E7  3892 	C$easyax5043.c$334$3$219 ==.
                           3893 ;	../COMMON/easyax5043.c:334: axradio_mode == AXRADIO_MODE_SYNC_SLAVE)
   01E7 74 22         [12] 3894 	mov	a,#0x22
   01E9 B5*00 05      [24] 3895 	cjne	a,_axradio_mode,00117$
   01EC                    3896 00116$:
                     01EC  3897 	C$easyax5043.c$335$3$219 ==.
                           3898 ;	../COMMON/easyax5043.c:335: AX5043_PWRMODE = AX5043_PWRSTATE_POWERDOWN;
   01EC 90 40 02      [24] 3899 	mov	dptr,#_AX5043_PWRMODE
   01EF E4            [12] 3900 	clr	a
   01F0 F0            [24] 3901 	movx	@dptr,a
   01F1                    3902 00117$:
                     01F1  3903 	C$easyax5043.c$336$3$219 ==.
                           3904 ;	../COMMON/easyax5043.c:336: AX5043_IRQMASK0 &= (uint8_t)~0x01; // disable FIFO not empty irq
   01F1 90 40 07      [24] 3905 	mov	dptr,#_AX5043_IRQMASK0
   01F4 E0            [24] 3906 	movx	a,@dptr
   01F5 54 FE         [12] 3907 	anl	a,#0xFE
   01F7 F0            [24] 3908 	movx	@dptr,a
                     01F8  3909 	C$easyax5043.c$337$3$219 ==.
                           3910 ;	../COMMON/easyax5043.c:337: wtimer_remove_callback(&axradio_cb_receive.cb);
   01F8 90r02r2E      [24] 3911 	mov	dptr,#_axradio_cb_receive
   01FB C0 07         [24] 3912 	push	ar7
   01FD 12r00r00      [24] 3913 	lcall	_wtimer_remove_callback
   0200 D0 07         [24] 3914 	pop	ar7
                     0202  3915 	C$easyax5043.c$338$3$219 ==.
                           3916 ;	../COMMON/easyax5043.c:338: axradio_cb_receive.st.error = AXRADIO_ERR_NOERROR;
   0202 90r02r33      [24] 3917 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   0205 E4            [12] 3918 	clr	a
   0206 F0            [24] 3919 	movx	@dptr,a
                     0207  3920 	C$easyax5043.c$339$3$219 ==.
                           3921 ;	../COMMON/easyax5043.c:339: axradio_cb_receive.st.rx.mac.raw = axradio_rxbuffer;
   0207 90r02r4A      [24] 3922 	mov	dptr,#(_axradio_cb_receive + 0x001c)
   020A 74r2A         [12] 3923 	mov	a,#_axradio_rxbuffer
   020C F0            [24] 3924 	movx	@dptr,a
   020D 74s01         [12] 3925 	mov	a,#(_axradio_rxbuffer >> 8)
   020F A3            [24] 3926 	inc	dptr
   0210 F0            [24] 3927 	movx	@dptr,a
                     0211  3928 	C$easyax5043.c$340$3$219 ==.
                           3929 ;	../COMMON/easyax5043.c:340: if (axradio_mode == AXRADIO_MODE_STREAM_RECEIVE ||
   0211 74 1C         [12] 3930 	mov	a,#0x1C
   0213 B5*00 02      [24] 3931 	cjne	a,_axradio_mode,00253$
   0216 80 0C         [24] 3932 	sjmp	00119$
   0218                    3933 00253$:
                     0218  3934 	C$easyax5043.c$341$3$219 ==.
                           3935 ;	../COMMON/easyax5043.c:341: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_UNENC ||
   0218 74 1D         [12] 3936 	mov	a,#0x1D
   021A B5*00 02      [24] 3937 	cjne	a,_axradio_mode,00254$
   021D 80 05         [24] 3938 	sjmp	00119$
   021F                    3939 00254$:
                     021F  3940 	C$easyax5043.c$342$3$219 ==.
                           3941 ;	../COMMON/easyax5043.c:342: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_SCRAM) {
   021F 74 1E         [12] 3942 	mov	a,#0x1E
   0221 B5*00 5F      [24] 3943 	cjne	a,_axradio_mode,00120$
   0224                    3944 00119$:
                     0224  3945 	C$easyax5043.c$343$4$221 ==.
                           3946 ;	../COMMON/easyax5043.c:343: axradio_cb_receive.st.rx.pktdata = axradio_rxbuffer;
   0224 90r02r4C      [24] 3947 	mov	dptr,#(_axradio_cb_receive + 0x001e)
   0227 74r2A         [12] 3948 	mov	a,#_axradio_rxbuffer
   0229 F0            [24] 3949 	movx	@dptr,a
   022A 74s01         [12] 3950 	mov	a,#(_axradio_rxbuffer >> 8)
   022C A3            [24] 3951 	inc	dptr
   022D F0            [24] 3952 	movx	@dptr,a
                     022E  3953 	C$easyax5043.c$344$4$221 ==.
                           3954 ;	../COMMON/easyax5043.c:344: axradio_cb_receive.st.rx.pktlen = len;
   022E 8F 05         [24] 3955 	mov	ar5,r7
   0230 7E 00         [12] 3956 	mov	r6,#0x00
   0232 90r02r4E      [24] 3957 	mov	dptr,#(_axradio_cb_receive + 0x0020)
   0235 ED            [12] 3958 	mov	a,r5
   0236 F0            [24] 3959 	movx	@dptr,a
   0237 EE            [12] 3960 	mov	a,r6
   0238 A3            [24] 3961 	inc	dptr
   0239 F0            [24] 3962 	movx	@dptr,a
                     023A  3963 	C$easyax5043.c$346$5$221 ==.
                           3964 ;	../COMMON/easyax5043.c:346: int8_t r = AX5043_RSSI;
   023A 90 40 40      [24] 3965 	mov	dptr,#_AX5043_RSSI
   023D E0            [24] 3966 	movx	a,@dptr
                     023E  3967 	C$easyax5043.c$347$5$222 ==.
                           3968 ;	../COMMON/easyax5043.c:347: axradio_cb_receive.st.rx.phy.rssi = r - (int16_t)axradio_phy_rssioffset;
   023E FE            [12] 3969 	mov	r6,a
   023F 33            [12] 3970 	rlc	a
   0240 95 E0         [12] 3971 	subb	a,acc
   0242 FD            [12] 3972 	mov	r5,a
   0243 90r00r00      [24] 3973 	mov	dptr,#_axradio_phy_rssioffset
   0246 E4            [12] 3974 	clr	a
   0247 93            [24] 3975 	movc	a,@a+dptr
   0248 FC            [12] 3976 	mov	r4,a
   0249 33            [12] 3977 	rlc	a
   024A 95 E0         [12] 3978 	subb	a,acc
   024C FB            [12] 3979 	mov	r3,a
   024D EE            [12] 3980 	mov	a,r6
   024E C3            [12] 3981 	clr	c
   024F 9C            [12] 3982 	subb	a,r4
   0250 FE            [12] 3983 	mov	r6,a
   0251 ED            [12] 3984 	mov	a,r5
   0252 9B            [12] 3985 	subb	a,r3
   0253 FD            [12] 3986 	mov	r5,a
   0254 90r02r38      [24] 3987 	mov	dptr,#(_axradio_cb_receive + 0x000a)
   0257 EE            [12] 3988 	mov	a,r6
   0258 F0            [24] 3989 	movx	@dptr,a
   0259 ED            [12] 3990 	mov	a,r5
   025A A3            [24] 3991 	inc	dptr
   025B F0            [24] 3992 	movx	@dptr,a
                     025C  3993 	C$easyax5043.c$349$4$221 ==.
                           3994 ;	../COMMON/easyax5043.c:349: axradio_cb_receive.st.rx.phy.offset.o = signextend20(radio_read24((uint16_t)&AX5043_TRKRFFREQ2));
   025C 90 40 4D      [24] 3995 	mov	dptr,#_AX5043_TRKRFFREQ2
   025F 12r00r00      [24] 3996 	lcall	_radio_read24
   0262 12r00r00      [24] 3997 	lcall	_signextend20
   0265 AB 82         [24] 3998 	mov	r3,dpl
   0267 AC 83         [24] 3999 	mov	r4,dph
   0269 AD F0         [24] 4000 	mov	r5,b
   026B FE            [12] 4001 	mov	r6,a
   026C 90r02r3A      [24] 4002 	mov	dptr,#(_axradio_cb_receive + 0x000c)
   026F EB            [12] 4003 	mov	a,r3
   0270 F0            [24] 4004 	movx	@dptr,a
   0271 EC            [12] 4005 	mov	a,r4
   0272 A3            [24] 4006 	inc	dptr
   0273 F0            [24] 4007 	movx	@dptr,a
   0274 ED            [12] 4008 	mov	a,r5
   0275 A3            [24] 4009 	inc	dptr
   0276 F0            [24] 4010 	movx	@dptr,a
   0277 EE            [12] 4011 	mov	a,r6
   0278 A3            [24] 4012 	inc	dptr
   0279 F0            [24] 4013 	movx	@dptr,a
                     027A  4014 	C$easyax5043.c$350$4$221 ==.
                           4015 ;	../COMMON/easyax5043.c:350: wtimer_add_callback(&axradio_cb_receive.cb);
   027A 90r02r2E      [24] 4016 	mov	dptr,#_axradio_cb_receive
   027D 12r00r00      [24] 4017 	lcall	_wtimer_add_callback
                     0280  4018 	C$easyax5043.c$351$4$221 ==.
                           4019 ;	../COMMON/easyax5043.c:351: break;
   0280 02r01r4A      [24] 4020 	ljmp	00149$
   0283                    4021 00120$:
                     0283  4022 	C$easyax5043.c$353$3$219 ==.
                           4023 ;	../COMMON/easyax5043.c:353: axradio_cb_receive.st.rx.pktdata = &axradio_rxbuffer[axradio_framing_maclen];
   0283 90r00r00      [24] 4024 	mov	dptr,#_axradio_framing_maclen
   0286 E4            [12] 4025 	clr	a
   0287 93            [24] 4026 	movc	a,@a+dptr
   0288 FE            [12] 4027 	mov	r6,a
   0289 24r2A         [12] 4028 	add	a,#_axradio_rxbuffer
   028B FC            [12] 4029 	mov	r4,a
   028C E4            [12] 4030 	clr	a
   028D 34s01         [12] 4031 	addc	a,#(_axradio_rxbuffer >> 8)
   028F FD            [12] 4032 	mov	r5,a
   0290 90r02r4C      [24] 4033 	mov	dptr,#(_axradio_cb_receive + 0x001e)
   0293 EC            [12] 4034 	mov	a,r4
   0294 F0            [24] 4035 	movx	@dptr,a
   0295 ED            [12] 4036 	mov	a,r5
   0296 A3            [24] 4037 	inc	dptr
   0297 F0            [24] 4038 	movx	@dptr,a
                     0298  4039 	C$easyax5043.c$354$3$219 ==.
                           4040 ;	../COMMON/easyax5043.c:354: if (len < axradio_framing_maclen) {
   0298 C3            [12] 4041 	clr	c
   0299 EF            [12] 4042 	mov	a,r7
   029A 9E            [12] 4043 	subb	a,r6
   029B 50 0B         [24] 4044 	jnc	00127$
                     029D  4045 	C$easyax5043.c$356$4$223 ==.
                           4046 ;	../COMMON/easyax5043.c:356: axradio_cb_receive.st.rx.pktlen = 0;
   029D 90r02r4E      [24] 4047 	mov	dptr,#(_axradio_cb_receive + 0x0020)
   02A0 E4            [12] 4048 	clr	a
   02A1 F0            [24] 4049 	movx	@dptr,a
   02A2 E4            [12] 4050 	clr	a
   02A3 A3            [24] 4051 	inc	dptr
   02A4 F0            [24] 4052 	movx	@dptr,a
   02A5 02r01r4A      [24] 4053 	ljmp	00149$
   02A8                    4054 00127$:
                     02A8  4055 	C$easyax5043.c$358$4$224 ==.
                           4056 ;	../COMMON/easyax5043.c:358: len -= axradio_framing_maclen;
   02A8 EF            [12] 4057 	mov	a,r7
   02A9 C3            [12] 4058 	clr	c
   02AA 9E            [12] 4059 	subb	a,r6
                     02AB  4060 	C$easyax5043.c$359$4$224 ==.
                           4061 ;	../COMMON/easyax5043.c:359: axradio_cb_receive.st.rx.pktlen = len;
   02AB FD            [12] 4062 	mov	r5,a
   02AC 7E 00         [12] 4063 	mov	r6,#0x00
   02AE 90r02r4E      [24] 4064 	mov	dptr,#(_axradio_cb_receive + 0x0020)
   02B1 ED            [12] 4065 	mov	a,r5
   02B2 F0            [24] 4066 	movx	@dptr,a
   02B3 EE            [12] 4067 	mov	a,r6
   02B4 A3            [24] 4068 	inc	dptr
   02B5 F0            [24] 4069 	movx	@dptr,a
                     02B6  4070 	C$easyax5043.c$360$4$224 ==.
                           4071 ;	../COMMON/easyax5043.c:360: wtimer_add_callback(&axradio_cb_receive.cb);
   02B6 90r02r2E      [24] 4072 	mov	dptr,#_axradio_cb_receive
   02B9 12r00r00      [24] 4073 	lcall	_wtimer_add_callback
                     02BC  4074 	C$easyax5043.c$361$4$224 ==.
                           4075 ;	../COMMON/easyax5043.c:361: if (axradio_mode == AXRADIO_MODE_SYNC_SLAVE ||
   02BC 74 22         [12] 4076 	mov	a,#0x22
   02BE B5*00 02      [24] 4077 	cjne	a,_axradio_mode,00258$
   02C1 80 0A         [24] 4078 	sjmp	00123$
   02C3                    4079 00258$:
                     02C3  4080 	C$easyax5043.c$362$4$224 ==.
                           4081 ;	../COMMON/easyax5043.c:362: axradio_mode == AXRADIO_MODE_SYNC_ACK_SLAVE)
   02C3 74 23         [12] 4082 	mov	a,#0x23
   02C5 B5*00 02      [24] 4083 	cjne	a,_axradio_mode,00259$
   02C8 80 03         [24] 4084 	sjmp	00260$
   02CA                    4085 00259$:
   02CA 02r01r4A      [24] 4086 	ljmp	00149$
   02CD                    4087 00260$:
   02CD                    4088 00123$:
                     02CD  4089 	C$easyax5043.c$363$4$224 ==.
                           4090 ;	../COMMON/easyax5043.c:363: wtimer_remove(&axradio_timer);
   02CD 90r02r85      [24] 4091 	mov	dptr,#_axradio_timer
   02D0 12r00r00      [24] 4092 	lcall	_wtimer_remove
                     02D3  4093 	C$easyax5043.c$365$3$219 ==.
                           4094 ;	../COMMON/easyax5043.c:365: break;
   02D3 02r01r4A      [24] 4095 	ljmp	00149$
                     02D6  4096 	C$easyax5043.c$367$3$219 ==.
                           4097 ;	../COMMON/easyax5043.c:367: case AX5043_FIFOCMD_RFFREQOFFS:
   02D6                    4098 00129$:
                     02D6  4099 	C$easyax5043.c$368$3$219 ==.
                           4100 ;	../COMMON/easyax5043.c:368: if (len != 3)
   02D6 BF 03 02      [24] 4101 	cjne	r7,#0x03,00261$
   02D9 80 03         [24] 4102 	sjmp	00262$
   02DB                    4103 00261$:
   02DB 02r03rDF      [24] 4104 	ljmp	00142$
   02DE                    4105 00262$:
                     02DE  4106 	C$easyax5043.c$370$3$219 ==.
                           4107 ;	../COMMON/easyax5043.c:370: i = AX5043_FIFODATA;
   02DE 90 40 29      [24] 4108 	mov	dptr,#_AX5043_FIFODATA
   02E1 E0            [24] 4109 	movx	a,@dptr
   02E2 FE            [12] 4110 	mov	r6,a
                     02E3  4111 	C$easyax5043.c$371$3$219 ==.
                           4112 ;	../COMMON/easyax5043.c:371: i &= 0x0F;
   02E3 53 06 0F      [24] 4113 	anl	ar6,#0x0F
                     02E6  4114 	C$easyax5043.c$372$3$219 ==.
                           4115 ;	../COMMON/easyax5043.c:372: i |= 1 + (uint8_t)~(i & 0x08);
   02E6 74 08         [12] 4116 	mov	a,#0x08
   02E8 5E            [12] 4117 	anl	a,r6
   02E9 F4            [12] 4118 	cpl	a
   02EA FD            [12] 4119 	mov	r5,a
   02EB 0D            [12] 4120 	inc	r5
   02EC ED            [12] 4121 	mov	a,r5
   02ED 42 06         [12] 4122 	orl	ar6,a
                     02EF  4123 	C$easyax5043.c$373$3$219 ==.
                           4124 ;	../COMMON/easyax5043.c:373: axradio_cb_receive.st.rx.phy.offset.b.b3 = ((int8_t)i) >> 8;
   02EF 8E 05         [24] 4125 	mov	ar5,r6
   02F1 ED            [12] 4126 	mov	a,r5
   02F2 33            [12] 4127 	rlc	a
   02F3 95 E0         [12] 4128 	subb	a,acc
   02F5 FD            [12] 4129 	mov	r5,a
   02F6 90r02r3D      [24] 4130 	mov	dptr,#(_axradio_cb_receive + 0x000f)
   02F9 F0            [24] 4131 	movx	@dptr,a
                     02FA  4132 	C$easyax5043.c$374$3$219 ==.
                           4133 ;	../COMMON/easyax5043.c:374: axradio_cb_receive.st.rx.phy.offset.b.b2 = i;
   02FA 90r02r3C      [24] 4134 	mov	dptr,#(_axradio_cb_receive + 0x000e)
   02FD EE            [12] 4135 	mov	a,r6
   02FE F0            [24] 4136 	movx	@dptr,a
                     02FF  4137 	C$easyax5043.c$375$3$219 ==.
                           4138 ;	../COMMON/easyax5043.c:375: axradio_cb_receive.st.rx.phy.offset.b.b1 = AX5043_FIFODATA;
   02FF 90 40 29      [24] 4139 	mov	dptr,#_AX5043_FIFODATA
   0302 E0            [24] 4140 	movx	a,@dptr
   0303 90r02r3B      [24] 4141 	mov	dptr,#(_axradio_cb_receive + 0x000d)
   0306 F0            [24] 4142 	movx	@dptr,a
                     0307  4143 	C$easyax5043.c$376$3$219 ==.
                           4144 ;	../COMMON/easyax5043.c:376: axradio_cb_receive.st.rx.phy.offset.b.b0 = AX5043_FIFODATA;
   0307 90 40 29      [24] 4145 	mov	dptr,#_AX5043_FIFODATA
   030A E0            [24] 4146 	movx	a,@dptr
   030B FE            [12] 4147 	mov	r6,a
   030C 90r02r3A      [24] 4148 	mov	dptr,#(_axradio_cb_receive + 0x000c)
   030F F0            [24] 4149 	movx	@dptr,a
                     0310  4150 	C$easyax5043.c$377$3$219 ==.
                           4151 ;	../COMMON/easyax5043.c:377: break;
   0310 02r01r4A      [24] 4152 	ljmp	00149$
                     0313  4153 	C$easyax5043.c$379$3$219 ==.
                           4154 ;	../COMMON/easyax5043.c:379: case AX5043_FIFOCMD_RSSI:
   0313                    4155 00132$:
                     0313  4156 	C$easyax5043.c$380$3$219 ==.
                           4157 ;	../COMMON/easyax5043.c:380: if (len != 1)
   0313 BF 01 02      [24] 4158 	cjne	r7,#0x01,00263$
   0316 80 03         [24] 4159 	sjmp	00264$
   0318                    4160 00263$:
   0318 02r03rDF      [24] 4161 	ljmp	00142$
   031B                    4162 00264$:
                     031B  4163 	C$easyax5043.c$383$4$219 ==.
                           4164 ;	../COMMON/easyax5043.c:383: int8_t r = AX5043_FIFODATA;
   031B 90 40 29      [24] 4165 	mov	dptr,#_AX5043_FIFODATA
   031E E0            [24] 4166 	movx	a,@dptr
                     031F  4167 	C$easyax5043.c$384$4$225 ==.
                           4168 ;	../COMMON/easyax5043.c:384: axradio_cb_receive.st.rx.phy.rssi = r - (int16_t)axradio_phy_rssioffset;
   031F FE            [12] 4169 	mov	r6,a
   0320 33            [12] 4170 	rlc	a
   0321 95 E0         [12] 4171 	subb	a,acc
   0323 FD            [12] 4172 	mov	r5,a
   0324 90r00r00      [24] 4173 	mov	dptr,#_axradio_phy_rssioffset
   0327 E4            [12] 4174 	clr	a
   0328 93            [24] 4175 	movc	a,@a+dptr
   0329 FC            [12] 4176 	mov	r4,a
   032A 33            [12] 4177 	rlc	a
   032B 95 E0         [12] 4178 	subb	a,acc
   032D FB            [12] 4179 	mov	r3,a
   032E EE            [12] 4180 	mov	a,r6
   032F C3            [12] 4181 	clr	c
   0330 9C            [12] 4182 	subb	a,r4
   0331 FE            [12] 4183 	mov	r6,a
   0332 ED            [12] 4184 	mov	a,r5
   0333 9B            [12] 4185 	subb	a,r3
   0334 FD            [12] 4186 	mov	r5,a
   0335 90r02r38      [24] 4187 	mov	dptr,#(_axradio_cb_receive + 0x000a)
   0338 EE            [12] 4188 	mov	a,r6
   0339 F0            [24] 4189 	movx	@dptr,a
   033A ED            [12] 4190 	mov	a,r5
   033B A3            [24] 4191 	inc	dptr
   033C F0            [24] 4192 	movx	@dptr,a
                     033D  4193 	C$easyax5043.c$386$3$219 ==.
                           4194 ;	../COMMON/easyax5043.c:386: break;
   033D 02r01r4A      [24] 4195 	ljmp	00149$
                     0340  4196 	C$easyax5043.c$388$3$219 ==.
                           4197 ;	../COMMON/easyax5043.c:388: case AX5043_FIFOCMD_TIMER:
   0340                    4198 00135$:
                     0340  4199 	C$easyax5043.c$389$3$219 ==.
                           4200 ;	../COMMON/easyax5043.c:389: if (len != 3)
   0340 BF 03 02      [24] 4201 	cjne	r7,#0x03,00265$
   0343 80 03         [24] 4202 	sjmp	00266$
   0345                    4203 00265$:
   0345 02r03rDF      [24] 4204 	ljmp	00142$
   0348                    4205 00266$:
                     0348  4206 	C$easyax5043.c$393$3$219 ==.
                           4207 ;	../COMMON/easyax5043.c:393: axradio_cb_receive.st.time.b.b3 = 0;
   0348 90r02r37      [24] 4208 	mov	dptr,#(_axradio_cb_receive + 0x0009)
   034B E4            [12] 4209 	clr	a
   034C F0            [24] 4210 	movx	@dptr,a
                     034D  4211 	C$easyax5043.c$394$3$219 ==.
                           4212 ;	../COMMON/easyax5043.c:394: axradio_cb_receive.st.time.b.b2 = AX5043_FIFODATA;
   034D 90 40 29      [24] 4213 	mov	dptr,#_AX5043_FIFODATA
   0350 E0            [24] 4214 	movx	a,@dptr
   0351 90r02r36      [24] 4215 	mov	dptr,#(_axradio_cb_receive + 0x0008)
   0354 F0            [24] 4216 	movx	@dptr,a
                     0355  4217 	C$easyax5043.c$395$3$219 ==.
                           4218 ;	../COMMON/easyax5043.c:395: axradio_cb_receive.st.time.b.b1 = AX5043_FIFODATA;
   0355 90 40 29      [24] 4219 	mov	dptr,#_AX5043_FIFODATA
   0358 E0            [24] 4220 	movx	a,@dptr
   0359 90r02r35      [24] 4221 	mov	dptr,#(_axradio_cb_receive + 0x0007)
   035C F0            [24] 4222 	movx	@dptr,a
                     035D  4223 	C$easyax5043.c$396$3$219 ==.
                           4224 ;	../COMMON/easyax5043.c:396: axradio_cb_receive.st.time.b.b0 = AX5043_FIFODATA;
   035D 90 40 29      [24] 4225 	mov	dptr,#_AX5043_FIFODATA
   0360 E0            [24] 4226 	movx	a,@dptr
   0361 FE            [12] 4227 	mov	r6,a
   0362 90r02r34      [24] 4228 	mov	dptr,#(_axradio_cb_receive + 0x0006)
   0365 F0            [24] 4229 	movx	@dptr,a
                     0366  4230 	C$easyax5043.c$397$3$219 ==.
                           4231 ;	../COMMON/easyax5043.c:397: break;
   0366 02r01r4A      [24] 4232 	ljmp	00149$
                     0369  4233 	C$easyax5043.c$399$3$219 ==.
                           4234 ;	../COMMON/easyax5043.c:399: case AX5043_FIFOCMD_ANTRSSI:
   0369                    4235 00138$:
                     0369  4236 	C$easyax5043.c$400$3$219 ==.
                           4237 ;	../COMMON/easyax5043.c:400: if (!len)
   0369 EF            [12] 4238 	mov	a,r7
   036A 70 03         [24] 4239 	jnz	00267$
   036C 02r01r4A      [24] 4240 	ljmp	00149$
   036F                    4241 00267$:
                     036F  4242 	C$easyax5043.c$402$3$219 ==.
                           4243 ;	../COMMON/easyax5043.c:402: update_timeanchor();
   036F C0 07         [24] 4244 	push	ar7
   0371 12r00r00      [24] 4245 	lcall	_update_timeanchor
                     0374  4246 	C$easyax5043.c$403$3$219 ==.
                           4247 ;	../COMMON/easyax5043.c:403: wtimer_remove_callback(&axradio_cb_channelstate.cb);
   0374 90r02r5A      [24] 4248 	mov	dptr,#_axradio_cb_channelstate
   0377 12r00r00      [24] 4249 	lcall	_wtimer_remove_callback
                     037A  4250 	C$easyax5043.c$404$3$219 ==.
                           4251 ;	../COMMON/easyax5043.c:404: axradio_cb_channelstate.st.error = AXRADIO_ERR_NOERROR;
   037A 90r02r5F      [24] 4252 	mov	dptr,#(_axradio_cb_channelstate + 0x0005)
   037D E4            [12] 4253 	clr	a
   037E F0            [24] 4254 	movx	@dptr,a
                     037F  4255 	C$easyax5043.c$406$4$219 ==.
                           4256 ;	../COMMON/easyax5043.c:406: int8_t r = AX5043_FIFODATA;
   037F 90 40 29      [24] 4257 	mov	dptr,#_AX5043_FIFODATA
   0382 E0            [24] 4258 	movx	a,@dptr
                     0383  4259 	C$easyax5043.c$407$4$226 ==.
                           4260 ;	../COMMON/easyax5043.c:407: axradio_cb_channelstate.st.cs.rssi = r - (int16_t)axradio_phy_rssioffset;
   0383 FE            [12] 4261 	mov	r6,a
   0384 FC            [12] 4262 	mov	r4,a
   0385 33            [12] 4263 	rlc	a
   0386 95 E0         [12] 4264 	subb	a,acc
   0388 FD            [12] 4265 	mov	r5,a
   0389 90r00r00      [24] 4266 	mov	dptr,#_axradio_phy_rssioffset
   038C E4            [12] 4267 	clr	a
   038D 93            [24] 4268 	movc	a,@a+dptr
   038E FB            [12] 4269 	mov	r3,a
   038F 33            [12] 4270 	rlc	a
   0390 95 E0         [12] 4271 	subb	a,acc
   0392 FA            [12] 4272 	mov	r2,a
   0393 EC            [12] 4273 	mov	a,r4
   0394 C3            [12] 4274 	clr	c
   0395 9B            [12] 4275 	subb	a,r3
   0396 FC            [12] 4276 	mov	r4,a
   0397 ED            [12] 4277 	mov	a,r5
   0398 9A            [12] 4278 	subb	a,r2
   0399 FD            [12] 4279 	mov	r5,a
   039A 90r02r64      [24] 4280 	mov	dptr,#(_axradio_cb_channelstate + 0x000a)
   039D EC            [12] 4281 	mov	a,r4
   039E F0            [24] 4282 	movx	@dptr,a
   039F ED            [12] 4283 	mov	a,r5
   03A0 A3            [24] 4284 	inc	dptr
   03A1 F0            [24] 4285 	movx	@dptr,a
                     03A2  4286 	C$easyax5043.c$408$4$226 ==.
                           4287 ;	../COMMON/easyax5043.c:408: axradio_cb_channelstate.st.cs.busy = r >= axradio_phy_channelbusy;
   03A2 90r00r00      [24] 4288 	mov	dptr,#_axradio_phy_channelbusy
   03A5 E4            [12] 4289 	clr	a
   03A6 93            [24] 4290 	movc	a,@a+dptr
   03A7 FD            [12] 4291 	mov	r5,a
   03A8 C3            [12] 4292 	clr	c
   03A9 EE            [12] 4293 	mov	a,r6
   03AA 64 80         [12] 4294 	xrl	a,#0x80
   03AC 8D F0         [24] 4295 	mov	b,r5
   03AE 63 F0 80      [24] 4296 	xrl	b,#0x80
   03B1 95 F0         [12] 4297 	subb	a,b
   03B3 B3            [12] 4298 	cpl	c
   03B4 E4            [12] 4299 	clr	a
   03B5 33            [12] 4300 	rlc	a
   03B6 90r02r66      [24] 4301 	mov	dptr,#(_axradio_cb_channelstate + 0x000c)
   03B9 F0            [24] 4302 	movx	@dptr,a
                     03BA  4303 	C$easyax5043.c$410$3$219 ==.
                           4304 ;	../COMMON/easyax5043.c:410: axradio_cb_channelstate.st.time.t = axradio_timeanchor.radiotimer;
   03BA 90r00r16      [24] 4305 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   03BD E0            [24] 4306 	movx	a,@dptr
   03BE FB            [12] 4307 	mov	r3,a
   03BF A3            [24] 4308 	inc	dptr
   03C0 E0            [24] 4309 	movx	a,@dptr
   03C1 FC            [12] 4310 	mov	r4,a
   03C2 A3            [24] 4311 	inc	dptr
   03C3 E0            [24] 4312 	movx	a,@dptr
   03C4 FD            [12] 4313 	mov	r5,a
   03C5 A3            [24] 4314 	inc	dptr
   03C6 E0            [24] 4315 	movx	a,@dptr
   03C7 FE            [12] 4316 	mov	r6,a
   03C8 90r02r60      [24] 4317 	mov	dptr,#(_axradio_cb_channelstate + 0x0006)
   03CB EB            [12] 4318 	mov	a,r3
   03CC F0            [24] 4319 	movx	@dptr,a
   03CD EC            [12] 4320 	mov	a,r4
   03CE A3            [24] 4321 	inc	dptr
   03CF F0            [24] 4322 	movx	@dptr,a
   03D0 ED            [12] 4323 	mov	a,r5
   03D1 A3            [24] 4324 	inc	dptr
   03D2 F0            [24] 4325 	movx	@dptr,a
   03D3 EE            [12] 4326 	mov	a,r6
   03D4 A3            [24] 4327 	inc	dptr
   03D5 F0            [24] 4328 	movx	@dptr,a
                     03D6  4329 	C$easyax5043.c$411$3$219 ==.
                           4330 ;	../COMMON/easyax5043.c:411: wtimer_add_callback(&axradio_cb_channelstate.cb);
   03D6 90r02r5A      [24] 4331 	mov	dptr,#_axradio_cb_channelstate
   03D9 12r00r00      [24] 4332 	lcall	_wtimer_add_callback
   03DC D0 07         [24] 4333 	pop	ar7
                     03DE  4334 	C$easyax5043.c$412$3$219 ==.
                           4335 ;	../COMMON/easyax5043.c:412: --len;
   03DE 1F            [12] 4336 	dec	r7
                     03DF  4337 	C$easyax5043.c$417$3$219 ==.
                           4338 ;	../COMMON/easyax5043.c:417: dropchunk:
   03DF                    4339 00142$:
                     03DF  4340 	C$easyax5043.c$418$3$219 ==.
                           4341 ;	../COMMON/easyax5043.c:418: if (!len)
   03DF EF            [12] 4342 	mov	a,r7
   03E0 70 03         [24] 4343 	jnz	00269$
   03E2 02r01r4A      [24] 4344 	ljmp	00149$
   03E5                    4345 00269$:
                     03E5  4346 	C$easyax5043.c$421$1$215 ==.
                           4347 ;	../COMMON/easyax5043.c:421: do {
   03E5                    4348 00145$:
                     03E5  4349 	C$easyax5043.c$422$4$227 ==.
                           4350 ;	../COMMON/easyax5043.c:422: AX5043_FIFODATA;        // purge FIFO
   03E5 90 40 29      [24] 4351 	mov	dptr,#_AX5043_FIFODATA
   03E8 E0            [24] 4352 	movx	a,@dptr
                     03E9  4353 	C$easyax5043.c$424$3$219 ==.
                           4354 ;	../COMMON/easyax5043.c:424: while (--i);
   03E9 DF FA         [24] 4355 	djnz	r7,00145$
                     03EB  4356 	C$easyax5043.c$426$1$215 ==.
                           4357 ;	../COMMON/easyax5043.c:426: } // end switch(fifo_cmd)
   03EB 02r01r4A      [24] 4358 	ljmp	00149$
   03EE                    4359 00152$:
                     03EE  4360 	C$easyax5043.c$428$1$215 ==.
                     03EE  4361 	XFeasyax5043$receive_isr$0$0 ==.
   03EE 22            [24] 4362 	ret
                           4363 ;------------------------------------------------------------
                           4364 ;Allocation info for local variables in function 'transmit_isr'
                           4365 ;------------------------------------------------------------
                           4366 ;cnt                       Allocated to registers r7 
                           4367 ;byte                      Allocated to registers r7 
                           4368 ;len_byte                  Allocated to registers r4 
                           4369 ;i                         Allocated to registers r3 
                           4370 ;byte                      Allocated to registers r6 
                           4371 ;flags                     Allocated to registers r6 
                           4372 ;len                       Allocated to registers r4 r5 
                           4373 ;------------------------------------------------------------
                     03EF  4374 	Feasyax5043$transmit_isr$0$0 ==.
                     03EF  4375 	C$easyax5043.c$430$1$215 ==.
                           4376 ;	../COMMON/easyax5043.c:430: static __reentrantb void transmit_isr(void) __reentrant
                           4377 ;	-----------------------------------------
                           4378 ;	 function transmit_isr
                           4379 ;	-----------------------------------------
   03EF                    4380 _transmit_isr:
                     03EF  4381 	C$easyax5043.c$569$6$238 ==.
                           4382 ;	../COMMON/easyax5043.c:569: axradio_trxstate = trxstate_tx_waitdone;
   03EF                    4383 00157$:
                     03EF  4384 	C$easyax5043.c$433$2$229 ==.
                           4385 ;	../COMMON/easyax5043.c:433: uint8_t cnt = AX5043_FIFOFREE0;
   03EF 90 40 2D      [24] 4386 	mov	dptr,#_AX5043_FIFOFREE0
   03F2 E0            [24] 4387 	movx	a,@dptr
   03F3 FF            [12] 4388 	mov	r7,a
                     03F4  4389 	C$easyax5043.c$434$2$230 ==.
                           4390 ;	../COMMON/easyax5043.c:434: if (AX5043_FIFOFREE1)
   03F4 90 40 2C      [24] 4391 	mov	dptr,#_AX5043_FIFOFREE1
   03F7 E0            [24] 4392 	movx	a,@dptr
   03F8 FE            [12] 4393 	mov	r6,a
   03F9 60 02         [24] 4394 	jz	00102$
                     03FB  4395 	C$easyax5043.c$435$2$230 ==.
                           4396 ;	../COMMON/easyax5043.c:435: cnt = 0xff;
   03FB 7F FF         [12] 4397 	mov	r7,#0xFF
   03FD                    4398 00102$:
                     03FD  4399 	C$easyax5043.c$436$2$230 ==.
                           4400 ;	../COMMON/easyax5043.c:436: switch (axradio_trxstate) {
   03FD AE*01         [24] 4401 	mov	r6,_axradio_trxstate
   03FF BE 0A 02      [24] 4402 	cjne	r6,#0x0A,00246$
   0402 80 0F         [24] 4403 	sjmp	00103$
   0404                    4404 00246$:
   0404 BE 0B 03      [24] 4405 	cjne	r6,#0x0B,00247$
   0407 02r04rA8      [24] 4406 	ljmp	00115$
   040A                    4407 00247$:
   040A BE 0C 03      [24] 4408 	cjne	r6,#0x0C,00248$
   040D 02r06r7F      [24] 4409 	ljmp	00138$
   0410                    4410 00248$:
   0410 02r07r15      [24] 4411 	ljmp	00149$
                     0413  4412 	C$easyax5043.c$437$3$231 ==.
                           4413 ;	../COMMON/easyax5043.c:437: case trxstate_tx_longpreamble:
   0413                    4414 00103$:
                     0413  4415 	C$easyax5043.c$438$3$231 ==.
                           4416 ;	../COMMON/easyax5043.c:438: if (!axradio_txbuffer_cnt) {
   0413 90r00r03      [24] 4417 	mov	dptr,#_axradio_txbuffer_cnt
   0416 E0            [24] 4418 	movx	a,@dptr
   0417 FD            [12] 4419 	mov	r5,a
   0418 A3            [24] 4420 	inc	dptr
   0419 E0            [24] 4421 	movx	a,@dptr
   041A FE            [12] 4422 	mov	r6,a
   041B 4D            [12] 4423 	orl	a,r5
   041C 70 37         [24] 4424 	jnz	00109$
                     041E  4425 	C$easyax5043.c$439$4$232 ==.
                           4426 ;	../COMMON/easyax5043.c:439: axradio_trxstate = trxstate_tx_shortpreamble;
   041E 75*01 0B      [24] 4427 	mov	_axradio_trxstate,#0x0B
                     0421  4428 	C$easyax5043.c$440$4$232 ==.
                           4429 ;	../COMMON/easyax5043.c:440: if( axradio_mode == AXRADIO_MODE_WOR_TRANSMIT || axradio_mode == AXRADIO_MODE_WOR_ACK_TRANSMIT )
   0421 74 11         [12] 4430 	mov	a,#0x11
   0423 B5*00 02      [24] 4431 	cjne	a,_axradio_mode,00250$
   0426 80 05         [24] 4432 	sjmp	00104$
   0428                    4433 00250$:
   0428 74 13         [12] 4434 	mov	a,#0x13
   042A B5*00 14      [24] 4435 	cjne	a,_axradio_mode,00105$
   042D                    4436 00104$:
                     042D  4437 	C$easyax5043.c$441$4$232 ==.
                           4438 ;	../COMMON/easyax5043.c:441: axradio_txbuffer_cnt = axradio_phy_preamble_wor_len;
   042D 90r00r00      [24] 4439 	mov	dptr,#_axradio_phy_preamble_wor_len
   0430 E4            [12] 4440 	clr	a
   0431 93            [24] 4441 	movc	a,@a+dptr
   0432 FB            [12] 4442 	mov	r3,a
   0433 74 01         [12] 4443 	mov	a,#0x01
   0435 93            [24] 4444 	movc	a,@a+dptr
   0436 FC            [12] 4445 	mov	r4,a
   0437 90r00r03      [24] 4446 	mov	dptr,#_axradio_txbuffer_cnt
   043A EB            [12] 4447 	mov	a,r3
   043B F0            [24] 4448 	movx	@dptr,a
   043C EC            [12] 4449 	mov	a,r4
   043D A3            [24] 4450 	inc	dptr
   043E F0            [24] 4451 	movx	@dptr,a
   043F 80 67         [24] 4452 	sjmp	00115$
   0441                    4453 00105$:
                     0441  4454 	C$easyax5043.c$443$4$232 ==.
                           4455 ;	../COMMON/easyax5043.c:443: axradio_txbuffer_cnt = axradio_phy_preamble_len;
   0441 90r00r00      [24] 4456 	mov	dptr,#_axradio_phy_preamble_len
   0444 E4            [12] 4457 	clr	a
   0445 93            [24] 4458 	movc	a,@a+dptr
   0446 FB            [12] 4459 	mov	r3,a
   0447 74 01         [12] 4460 	mov	a,#0x01
   0449 93            [24] 4461 	movc	a,@a+dptr
   044A FC            [12] 4462 	mov	r4,a
   044B 90r00r03      [24] 4463 	mov	dptr,#_axradio_txbuffer_cnt
   044E EB            [12] 4464 	mov	a,r3
   044F F0            [24] 4465 	movx	@dptr,a
   0450 EC            [12] 4466 	mov	a,r4
   0451 A3            [24] 4467 	inc	dptr
   0452 F0            [24] 4468 	movx	@dptr,a
                     0453  4469 	C$easyax5043.c$444$4$232 ==.
                           4470 ;	../COMMON/easyax5043.c:444: goto shortpreamble;
   0453 80 53         [24] 4471 	sjmp	00115$
   0455                    4472 00109$:
                     0455  4473 	C$easyax5043.c$446$3$231 ==.
                           4474 ;	../COMMON/easyax5043.c:446: if (cnt < 4)
   0455 BF 04 00      [24] 4475 	cjne	r7,#0x04,00253$
   0458                    4476 00253$:
   0458 50 03         [24] 4477 	jnc	00254$
   045A 02r07r26      [24] 4478 	ljmp	00153$
   045D                    4479 00254$:
                     045D  4480 	C$easyax5043.c$448$3$231 ==.
                           4481 ;	../COMMON/easyax5043.c:448: cnt = 7;
   045D 7F 07         [12] 4482 	mov	r7,#0x07
                     045F  4483 	C$easyax5043.c$449$3$231 ==.
                           4484 ;	../COMMON/easyax5043.c:449: if (axradio_txbuffer_cnt < 7)
   045F C3            [12] 4485 	clr	c
   0460 ED            [12] 4486 	mov	a,r5
   0461 94 07         [12] 4487 	subb	a,#0x07
   0463 EE            [12] 4488 	mov	a,r6
   0464 94 00         [12] 4489 	subb	a,#0x00
   0466 50 02         [24] 4490 	jnc	00113$
                     0468  4491 	C$easyax5043.c$450$3$231 ==.
                           4492 ;	../COMMON/easyax5043.c:450: cnt = axradio_txbuffer_cnt;
   0468 8D 07         [24] 4493 	mov	ar7,r5
   046A                    4494 00113$:
                     046A  4495 	C$easyax5043.c$451$3$231 ==.
                           4496 ;	../COMMON/easyax5043.c:451: axradio_txbuffer_cnt -= cnt;
   046A 8F 05         [24] 4497 	mov	ar5,r7
   046C 7E 00         [12] 4498 	mov	r6,#0x00
   046E 90r00r03      [24] 4499 	mov	dptr,#_axradio_txbuffer_cnt
   0471 E0            [24] 4500 	movx	a,@dptr
   0472 FB            [12] 4501 	mov	r3,a
   0473 A3            [24] 4502 	inc	dptr
   0474 E0            [24] 4503 	movx	a,@dptr
   0475 FC            [12] 4504 	mov	r4,a
   0476 90r00r03      [24] 4505 	mov	dptr,#_axradio_txbuffer_cnt
   0479 EB            [12] 4506 	mov	a,r3
   047A C3            [12] 4507 	clr	c
   047B 9D            [12] 4508 	subb	a,r5
   047C F0            [24] 4509 	movx	@dptr,a
   047D EC            [12] 4510 	mov	a,r4
   047E 9E            [12] 4511 	subb	a,r6
   047F A3            [24] 4512 	inc	dptr
   0480 F0            [24] 4513 	movx	@dptr,a
                     0481  4514 	C$easyax5043.c$452$3$231 ==.
                           4515 ;	../COMMON/easyax5043.c:452: cnt <<= 5;
   0481 EF            [12] 4516 	mov	a,r7
   0482 C4            [12] 4517 	swap	a
   0483 23            [12] 4518 	rl	a
   0484 54 E0         [12] 4519 	anl	a,#0xE0
   0486 FF            [12] 4520 	mov	r7,a
                     0487  4521 	C$easyax5043.c$453$3$231 ==.
                           4522 ;	../COMMON/easyax5043.c:453: AX5043_FIFODATA = AX5043_FIFOCMD_REPEATDATA | (3 << 5);
   0487 90 40 29      [24] 4523 	mov	dptr,#_AX5043_FIFODATA
   048A 74 62         [12] 4524 	mov	a,#0x62
   048C F0            [24] 4525 	movx	@dptr,a
                     048D  4526 	C$easyax5043.c$454$3$231 ==.
                           4527 ;	../COMMON/easyax5043.c:454: AX5043_FIFODATA = axradio_phy_preamble_flags;
   048D 90r00r00      [24] 4528 	mov	dptr,#_axradio_phy_preamble_flags
   0490 E4            [12] 4529 	clr	a
   0491 93            [24] 4530 	movc	a,@a+dptr
   0492 90 40 29      [24] 4531 	mov	dptr,#_AX5043_FIFODATA
   0495 F0            [24] 4532 	movx	@dptr,a
                     0496  4533 	C$easyax5043.c$455$3$231 ==.
                           4534 ;	../COMMON/easyax5043.c:455: AX5043_FIFODATA = cnt;
   0496 90 40 29      [24] 4535 	mov	dptr,#_AX5043_FIFODATA
   0499 EF            [12] 4536 	mov	a,r7
   049A F0            [24] 4537 	movx	@dptr,a
                     049B  4538 	C$easyax5043.c$456$3$231 ==.
                           4539 ;	../COMMON/easyax5043.c:456: AX5043_FIFODATA = axradio_phy_preamble_byte;
   049B 90r00r00      [24] 4540 	mov	dptr,#_axradio_phy_preamble_byte
   049E E4            [12] 4541 	clr	a
   049F 93            [24] 4542 	movc	a,@a+dptr
   04A0 FE            [12] 4543 	mov	r6,a
   04A1 90 40 29      [24] 4544 	mov	dptr,#_AX5043_FIFODATA
   04A4 F0            [24] 4545 	movx	@dptr,a
                     04A5  4546 	C$easyax5043.c$457$3$231 ==.
                           4547 ;	../COMMON/easyax5043.c:457: break;
   04A5 02r03rEF      [24] 4548 	ljmp	00157$
                     04A8  4549 	C$easyax5043.c$460$3$231 ==.
                           4550 ;	../COMMON/easyax5043.c:460: shortpreamble:
   04A8                    4551 00115$:
                     04A8  4552 	C$easyax5043.c$461$3$231 ==.
                           4553 ;	../COMMON/easyax5043.c:461: if (!axradio_txbuffer_cnt) {
   04A8 90r00r03      [24] 4554 	mov	dptr,#_axradio_txbuffer_cnt
   04AB E0            [24] 4555 	movx	a,@dptr
   04AC FD            [12] 4556 	mov	r5,a
   04AD A3            [24] 4557 	inc	dptr
   04AE E0            [24] 4558 	movx	a,@dptr
   04AF FE            [12] 4559 	mov	r6,a
   04B0 4D            [12] 4560 	orl	a,r5
   04B1 60 03         [24] 4561 	jz	00256$
   04B3 02r05r8E      [24] 4562 	ljmp	00128$
   04B6                    4563 00256$:
                     04B6  4564 	C$easyax5043.c$462$4$233 ==.
                           4565 ;	../COMMON/easyax5043.c:462: if (cnt < 15)
   04B6 BF 0F 00      [24] 4566 	cjne	r7,#0x0F,00257$
   04B9                    4567 00257$:
   04B9 50 03         [24] 4568 	jnc	00258$
   04BB 02r07r26      [24] 4569 	ljmp	00153$
   04BE                    4570 00258$:
                     04BE  4571 	C$easyax5043.c$464$4$233 ==.
                           4572 ;	../COMMON/easyax5043.c:464: if (axradio_phy_preamble_appendbits) {
   04BE 90r00r00      [24] 4573 	mov	dptr,#_axradio_phy_preamble_appendbits
   04C1 E4            [12] 4574 	clr	a
   04C2 93            [24] 4575 	movc	a,@a+dptr
   04C3 FC            [12] 4576 	mov	r4,a
   04C4 60 6F         [24] 4577 	jz	00122$
                     04C6  4578 	C$easyax5043.c$466$5$234 ==.
                           4579 ;	../COMMON/easyax5043.c:466: AX5043_FIFODATA = AX5043_FIFOCMD_DATA | (2 << 5);
                     04C6  4580 	C$easyax5043.c$467$5$234 ==.
                           4581 ;	../COMMON/easyax5043.c:467: AX5043_FIFODATA = 0x1C;
   04C6 90 40 29      [24] 4582 	mov	dptr,#_AX5043_FIFODATA
   04C9 74 41         [12] 4583 	mov	a,#0x41
   04CB F0            [24] 4584 	movx	@dptr,a
   04CC 74 1C         [12] 4585 	mov	a,#0x1C
   04CE F0            [24] 4586 	movx	@dptr,a
                     04CF  4587 	C$easyax5043.c$468$5$234 ==.
                           4588 ;	../COMMON/easyax5043.c:468: byte = axradio_phy_preamble_appendpattern;
   04CF 90r00r00      [24] 4589 	mov	dptr,#_axradio_phy_preamble_appendpattern
   04D2 E4            [12] 4590 	clr	a
   04D3 93            [24] 4591 	movc	a,@a+dptr
   04D4 FB            [12] 4592 	mov	r3,a
   04D5 FF            [12] 4593 	mov	r7,a
                     04D6  4594 	C$easyax5043.c$469$5$234 ==.
                           4595 ;	../COMMON/easyax5043.c:469: if (AX5043_PKTADDRCFG & 0x80) {
   04D6 90 42 00      [24] 4596 	mov	dptr,#_AX5043_PKTADDRCFG
   04D9 E0            [24] 4597 	movx	a,@dptr
   04DA FA            [12] 4598 	mov	r2,a
   04DB 30 E7 26      [24] 4599 	jnb	acc.7,00119$
                     04DE  4600 	C$easyax5043.c$471$6$235 ==.
                           4601 ;	../COMMON/easyax5043.c:471: byte &= 0xFF << (8-axradio_phy_preamble_appendbits);
   04DE 74 08         [12] 4602 	mov	a,#0x08
   04E0 C3            [12] 4603 	clr	c
   04E1 9C            [12] 4604 	subb	a,r4
   04E2 F5 F0         [12] 4605 	mov	b,a
   04E4 05 F0         [12] 4606 	inc	b
   04E6 74 FF         [12] 4607 	mov	a,#0xFF
   04E8 80 02         [24] 4608 	sjmp	00263$
   04EA                    4609 00261$:
   04EA 25 E0         [12] 4610 	add	a,acc
   04EC                    4611 00263$:
   04EC D5 F0 FB      [24] 4612 	djnz	b,00261$
   04EF FA            [12] 4613 	mov	r2,a
   04F0 52 07         [12] 4614 	anl	ar7,a
                     04F2  4615 	C$easyax5043.c$472$6$235 ==.
                           4616 ;	../COMMON/easyax5043.c:472: byte |= 0x80 >> axradio_phy_preamble_appendbits;
   04F2 8C F0         [24] 4617 	mov	b,r4
   04F4 05 F0         [12] 4618 	inc	b
   04F6 74 80         [12] 4619 	mov	a,#0x80
   04F8 80 02         [24] 4620 	sjmp	00265$
   04FA                    4621 00264$:
   04FA C3            [12] 4622 	clr	c
   04FB 13            [12] 4623 	rrc	a
   04FC                    4624 00265$:
   04FC D5 F0 FB      [24] 4625 	djnz	b,00264$
   04FF FA            [12] 4626 	mov	r2,a
   0500 42 07         [12] 4627 	orl	ar7,a
   0502 80 2C         [24] 4628 	sjmp	00120$
   0504                    4629 00119$:
                     0504  4630 	C$easyax5043.c$475$6$236 ==.
                           4631 ;	../COMMON/easyax5043.c:475: byte &= 0xFF >> (8-axradio_phy_preamble_appendbits);
   0504 8C 02         [24] 4632 	mov	ar2,r4
   0506 7B 00         [12] 4633 	mov	r3,#0x00
   0508 74 08         [12] 4634 	mov	a,#0x08
   050A C3            [12] 4635 	clr	c
   050B 9A            [12] 4636 	subb	a,r2
   050C FA            [12] 4637 	mov	r2,a
   050D E4            [12] 4638 	clr	a
   050E 9B            [12] 4639 	subb	a,r3
   050F FB            [12] 4640 	mov	r3,a
   0510 8A F0         [24] 4641 	mov	b,r2
   0512 05 F0         [12] 4642 	inc	b
   0514 74 FF         [12] 4643 	mov	a,#0xFF
   0516 80 02         [24] 4644 	sjmp	00267$
   0518                    4645 00266$:
   0518 C3            [12] 4646 	clr	c
   0519 13            [12] 4647 	rrc	a
   051A                    4648 00267$:
   051A D5 F0 FB      [24] 4649 	djnz	b,00266$
   051D FA            [12] 4650 	mov	r2,a
   051E 52 07         [12] 4651 	anl	ar7,a
                     0520  4652 	C$easyax5043.c$476$6$236 ==.
                           4653 ;	../COMMON/easyax5043.c:476: byte |= 0x01 << axradio_phy_preamble_appendbits;
   0520 8C F0         [24] 4654 	mov	b,r4
   0522 05 F0         [12] 4655 	inc	b
   0524 74 01         [12] 4656 	mov	a,#0x01
   0526 80 02         [24] 4657 	sjmp	00270$
   0528                    4658 00268$:
   0528 25 E0         [12] 4659 	add	a,acc
   052A                    4660 00270$:
   052A D5 F0 FB      [24] 4661 	djnz	b,00268$
   052D FC            [12] 4662 	mov	r4,a
   052E 42 07         [12] 4663 	orl	ar7,a
   0530                    4664 00120$:
                     0530  4665 	C$easyax5043.c$478$5$234 ==.
                           4666 ;	../COMMON/easyax5043.c:478: AX5043_FIFODATA = byte;
   0530 90 40 29      [24] 4667 	mov	dptr,#_AX5043_FIFODATA
   0533 EF            [12] 4668 	mov	a,r7
   0534 F0            [24] 4669 	movx	@dptr,a
   0535                    4670 00122$:
                     0535  4671 	C$easyax5043.c$484$4$233 ==.
                           4672 ;	../COMMON/easyax5043.c:484: if ((AX5043_FRAMING & 0x0E) == 0x06 && axradio_framing_synclen) {
   0535 90 40 12      [24] 4673 	mov	dptr,#_AX5043_FRAMING
   0538 E0            [24] 4674 	movx	a,@dptr
   0539 FC            [12] 4675 	mov	r4,a
   053A 53 04 0E      [24] 4676 	anl	ar4,#0x0E
   053D BC 06 48      [24] 4677 	cjne	r4,#0x06,00125$
   0540 90r00r00      [24] 4678 	mov	dptr,#_axradio_framing_synclen
   0543 E4            [12] 4679 	clr	a
   0544 93            [24] 4680 	movc	a,@a+dptr
   0545 FC            [12] 4681 	mov	r4,a
   0546 60 40         [24] 4682 	jz	00125$
                     0548  4683 	C$easyax5043.c$486$5$233 ==.
                           4684 ;	../COMMON/easyax5043.c:486: uint8_t len_byte = axradio_framing_synclen;
                     0548  4685 	C$easyax5043.c$487$5$237 ==.
                           4686 ;	../COMMON/easyax5043.c:487: uint8_t i = (len_byte & 0x07) ? 0x04 : 0;
   0548 EC            [12] 4687 	mov	a,r4
   0549 54 07         [12] 4688 	anl	a,#0x07
   054B 60 04         [24] 4689 	jz	00161$
   054D 7B 04         [12] 4690 	mov	r3,#0x04
   054F 80 02         [24] 4691 	sjmp	00162$
   0551                    4692 00161$:
   0551 7B 00         [12] 4693 	mov	r3,#0x00
   0553                    4694 00162$:
                     0553  4695 	C$easyax5043.c$489$5$237 ==.
                           4696 ;	../COMMON/easyax5043.c:489: len_byte += 7;
   0553 74 07         [12] 4697 	mov	a,#0x07
   0555 2C            [12] 4698 	add	a,r4
                     0556  4699 	C$easyax5043.c$490$5$237 ==.
                           4700 ;	../COMMON/easyax5043.c:490: len_byte >>= 3;
   0556 C4            [12] 4701 	swap	a
   0557 23            [12] 4702 	rl	a
   0558 54 1F         [12] 4703 	anl	a,#0x1F
                     055A  4704 	C$easyax5043.c$491$5$237 ==.
                           4705 ;	../COMMON/easyax5043.c:491: AX5043_FIFODATA = AX5043_FIFOCMD_DATA | ((len_byte + 1) << 5);
   055A FC            [12] 4706 	mov	r4,a
   055B 04            [12] 4707 	inc	a
   055C C4            [12] 4708 	swap	a
   055D 23            [12] 4709 	rl	a
   055E 54 E0         [12] 4710 	anl	a,#0xE0
   0560 FA            [12] 4711 	mov	r2,a
   0561 90 40 29      [24] 4712 	mov	dptr,#_AX5043_FIFODATA
   0564 74 01         [12] 4713 	mov	a,#0x01
   0566 4A            [12] 4714 	orl	a,r2
   0567 F0            [24] 4715 	movx	@dptr,a
                     0568  4716 	C$easyax5043.c$492$5$237 ==.
                           4717 ;	../COMMON/easyax5043.c:492: AX5043_FIFODATA = axradio_framing_syncflags | i;
   0568 90r00r00      [24] 4718 	mov	dptr,#_axradio_framing_syncflags
   056B E4            [12] 4719 	clr	a
   056C 93            [24] 4720 	movc	a,@a+dptr
   056D FA            [12] 4721 	mov	r2,a
   056E 90 40 29      [24] 4722 	mov	dptr,#_AX5043_FIFODATA
   0571 EB            [12] 4723 	mov	a,r3
   0572 4A            [12] 4724 	orl	a,r2
   0573 F0            [24] 4725 	movx	@dptr,a
                     0574  4726 	C$easyax5043.c$493$1$229 ==.
                           4727 ;	../COMMON/easyax5043.c:493: for (i = 0; i < len_byte; ++i) {
   0574 7B 00         [12] 4728 	mov	r3,#0x00
   0576                    4729 00155$:
   0576 C3            [12] 4730 	clr	c
   0577 EB            [12] 4731 	mov	a,r3
   0578 9C            [12] 4732 	subb	a,r4
   0579 50 0D         [24] 4733 	jnc	00125$
                     057B  4734 	C$easyax5043.c$495$6$238 ==.
                           4735 ;	../COMMON/easyax5043.c:495: AX5043_FIFODATA = axradio_framing_syncword[i];
   057B EB            [12] 4736 	mov	a,r3
   057C 90r00r00      [24] 4737 	mov	dptr,#_axradio_framing_syncword
   057F 93            [24] 4738 	movc	a,@a+dptr
   0580 FA            [12] 4739 	mov	r2,a
   0581 90 40 29      [24] 4740 	mov	dptr,#_AX5043_FIFODATA
   0584 F0            [24] 4741 	movx	@dptr,a
                     0585  4742 	C$easyax5043.c$493$5$237 ==.
                           4743 ;	../COMMON/easyax5043.c:493: for (i = 0; i < len_byte; ++i) {
   0585 0B            [12] 4744 	inc	r3
   0586 80 EE         [24] 4745 	sjmp	00155$
   0588                    4746 00125$:
                     0588  4747 	C$easyax5043.c$502$4$233 ==.
                           4748 ;	../COMMON/easyax5043.c:502: axradio_trxstate = trxstate_tx_packet;
   0588 75*01 0C      [24] 4749 	mov	_axradio_trxstate,#0x0C
                     058B  4750 	C$easyax5043.c$503$4$233 ==.
                           4751 ;	../COMMON/easyax5043.c:503: break;
   058B 02r03rEF      [24] 4752 	ljmp	00157$
   058E                    4753 00128$:
                     058E  4754 	C$easyax5043.c$505$3$231 ==.
                           4755 ;	../COMMON/easyax5043.c:505: if (cnt < 4)
   058E BF 04 00      [24] 4756 	cjne	r7,#0x04,00276$
   0591                    4757 00276$:
   0591 50 03         [24] 4758 	jnc	00277$
   0593 02r07r26      [24] 4759 	ljmp	00153$
   0596                    4760 00277$:
                     0596  4761 	C$easyax5043.c$507$3$231 ==.
                           4762 ;	../COMMON/easyax5043.c:507: cnt = 255;
   0596 7F FF         [12] 4763 	mov	r7,#0xFF
                     0598  4764 	C$easyax5043.c$508$3$231 ==.
                           4765 ;	../COMMON/easyax5043.c:508: if (axradio_txbuffer_cnt < 255*8)
   0598 C3            [12] 4766 	clr	c
   0599 ED            [12] 4767 	mov	a,r5
   059A 94 F8         [12] 4768 	subb	a,#0xF8
   059C EE            [12] 4769 	mov	a,r6
   059D 94 07         [12] 4770 	subb	a,#0x07
   059F 50 12         [24] 4771 	jnc	00132$
                     05A1  4772 	C$easyax5043.c$509$3$231 ==.
                           4773 ;	../COMMON/easyax5043.c:509: cnt = axradio_txbuffer_cnt >> 3;
   05A1 EE            [12] 4774 	mov	a,r6
   05A2 C4            [12] 4775 	swap	a
   05A3 23            [12] 4776 	rl	a
   05A4 CD            [12] 4777 	xch	a,r5
   05A5 C4            [12] 4778 	swap	a
   05A6 23            [12] 4779 	rl	a
   05A7 54 1F         [12] 4780 	anl	a,#0x1F
   05A9 6D            [12] 4781 	xrl	a,r5
   05AA CD            [12] 4782 	xch	a,r5
   05AB 54 1F         [12] 4783 	anl	a,#0x1F
   05AD CD            [12] 4784 	xch	a,r5
   05AE 6D            [12] 4785 	xrl	a,r5
   05AF CD            [12] 4786 	xch	a,r5
   05B0 FE            [12] 4787 	mov	r6,a
   05B1 8D 07         [24] 4788 	mov	ar7,r5
   05B3                    4789 00132$:
                     05B3  4790 	C$easyax5043.c$510$3$231 ==.
                           4791 ;	../COMMON/easyax5043.c:510: if (cnt) {
   05B3 EF            [12] 4792 	mov	a,r7
   05B4 60 46         [24] 4793 	jz	00134$
                     05B6  4794 	C$easyax5043.c$511$4$239 ==.
                           4795 ;	../COMMON/easyax5043.c:511: axradio_txbuffer_cnt -= ((uint16_t)cnt) << 3;
   05B6 8F 05         [24] 4796 	mov	ar5,r7
   05B8 E4            [12] 4797 	clr	a
   05B9 C4            [12] 4798 	swap	a
   05BA 03            [12] 4799 	rr	a
   05BB 54 F8         [12] 4800 	anl	a,#0xF8
   05BD CD            [12] 4801 	xch	a,r5
   05BE C4            [12] 4802 	swap	a
   05BF 03            [12] 4803 	rr	a
   05C0 CD            [12] 4804 	xch	a,r5
   05C1 6D            [12] 4805 	xrl	a,r5
   05C2 CD            [12] 4806 	xch	a,r5
   05C3 54 F8         [12] 4807 	anl	a,#0xF8
   05C5 CD            [12] 4808 	xch	a,r5
   05C6 6D            [12] 4809 	xrl	a,r5
   05C7 FE            [12] 4810 	mov	r6,a
   05C8 90r00r03      [24] 4811 	mov	dptr,#_axradio_txbuffer_cnt
   05CB E0            [24] 4812 	movx	a,@dptr
   05CC FB            [12] 4813 	mov	r3,a
   05CD A3            [24] 4814 	inc	dptr
   05CE E0            [24] 4815 	movx	a,@dptr
   05CF FC            [12] 4816 	mov	r4,a
   05D0 90r00r03      [24] 4817 	mov	dptr,#_axradio_txbuffer_cnt
   05D3 EB            [12] 4818 	mov	a,r3
   05D4 C3            [12] 4819 	clr	c
   05D5 9D            [12] 4820 	subb	a,r5
   05D6 F0            [24] 4821 	movx	@dptr,a
   05D7 EC            [12] 4822 	mov	a,r4
   05D8 9E            [12] 4823 	subb	a,r6
   05D9 A3            [24] 4824 	inc	dptr
   05DA F0            [24] 4825 	movx	@dptr,a
                     05DB  4826 	C$easyax5043.c$512$4$239 ==.
                           4827 ;	../COMMON/easyax5043.c:512: AX5043_FIFODATA = AX5043_FIFOCMD_REPEATDATA | (3 << 5);
   05DB 90 40 29      [24] 4828 	mov	dptr,#_AX5043_FIFODATA
   05DE 74 62         [12] 4829 	mov	a,#0x62
   05E0 F0            [24] 4830 	movx	@dptr,a
                     05E1  4831 	C$easyax5043.c$513$4$239 ==.
                           4832 ;	../COMMON/easyax5043.c:513: AX5043_FIFODATA = axradio_phy_preamble_flags;
   05E1 90r00r00      [24] 4833 	mov	dptr,#_axradio_phy_preamble_flags
   05E4 E4            [12] 4834 	clr	a
   05E5 93            [24] 4835 	movc	a,@a+dptr
   05E6 90 40 29      [24] 4836 	mov	dptr,#_AX5043_FIFODATA
   05E9 F0            [24] 4837 	movx	@dptr,a
                     05EA  4838 	C$easyax5043.c$514$4$239 ==.
                           4839 ;	../COMMON/easyax5043.c:514: AX5043_FIFODATA = cnt;
   05EA 90 40 29      [24] 4840 	mov	dptr,#_AX5043_FIFODATA
   05ED EF            [12] 4841 	mov	a,r7
   05EE F0            [24] 4842 	movx	@dptr,a
                     05EF  4843 	C$easyax5043.c$515$4$239 ==.
                           4844 ;	../COMMON/easyax5043.c:515: AX5043_FIFODATA = axradio_phy_preamble_byte;
   05EF 90r00r00      [24] 4845 	mov	dptr,#_axradio_phy_preamble_byte
   05F2 E4            [12] 4846 	clr	a
   05F3 93            [24] 4847 	movc	a,@a+dptr
   05F4 FE            [12] 4848 	mov	r6,a
   05F5 90 40 29      [24] 4849 	mov	dptr,#_AX5043_FIFODATA
   05F8 F0            [24] 4850 	movx	@dptr,a
                     05F9  4851 	C$easyax5043.c$516$4$239 ==.
                           4852 ;	../COMMON/easyax5043.c:516: break;
   05F9 02r03rEF      [24] 4853 	ljmp	00157$
   05FC                    4854 00134$:
                     05FC  4855 	C$easyax5043.c$519$4$231 ==.
                           4856 ;	../COMMON/easyax5043.c:519: uint8_t byte = axradio_phy_preamble_byte;
   05FC 90r00r00      [24] 4857 	mov	dptr,#_axradio_phy_preamble_byte
   05FF E4            [12] 4858 	clr	a
   0600 93            [24] 4859 	movc	a,@a+dptr
   0601 FE            [12] 4860 	mov	r6,a
                     0602  4861 	C$easyax5043.c$520$4$240 ==.
                           4862 ;	../COMMON/easyax5043.c:520: cnt = axradio_txbuffer_cnt;
   0602 90r00r03      [24] 4863 	mov	dptr,#_axradio_txbuffer_cnt
   0605 E0            [24] 4864 	movx	a,@dptr
   0606 FC            [12] 4865 	mov	r4,a
   0607 A3            [24] 4866 	inc	dptr
   0608 E0            [24] 4867 	movx	a,@dptr
   0609 8C 07         [24] 4868 	mov	ar7,r4
                     060B  4869 	C$easyax5043.c$521$4$240 ==.
                           4870 ;	../COMMON/easyax5043.c:521: axradio_txbuffer_cnt = 0;
   060B 90r00r03      [24] 4871 	mov	dptr,#_axradio_txbuffer_cnt
   060E E4            [12] 4872 	clr	a
   060F F0            [24] 4873 	movx	@dptr,a
   0610 E4            [12] 4874 	clr	a
   0611 A3            [24] 4875 	inc	dptr
   0612 F0            [24] 4876 	movx	@dptr,a
                     0613  4877 	C$easyax5043.c$522$4$240 ==.
                           4878 ;	../COMMON/easyax5043.c:522: AX5043_FIFODATA = AX5043_FIFOCMD_DATA | (2 << 5);
                     0613  4879 	C$easyax5043.c$523$4$240 ==.
                           4880 ;	../COMMON/easyax5043.c:523: AX5043_FIFODATA = 0x1C;
   0613 90 40 29      [24] 4881 	mov	dptr,#_AX5043_FIFODATA
   0616 74 41         [12] 4882 	mov	a,#0x41
   0618 F0            [24] 4883 	movx	@dptr,a
   0619 74 1C         [12] 4884 	mov	a,#0x1C
   061B F0            [24] 4885 	movx	@dptr,a
                     061C  4886 	C$easyax5043.c$524$4$240 ==.
                           4887 ;	../COMMON/easyax5043.c:524: if (AX5043_PKTADDRCFG & 0x80) {
   061C 90 42 00      [24] 4888 	mov	dptr,#_AX5043_PKTADDRCFG
   061F E0            [24] 4889 	movx	a,@dptr
   0620 FD            [12] 4890 	mov	r5,a
   0621 30 E7 27      [24] 4891 	jnb	acc.7,00136$
                     0624  4892 	C$easyax5043.c$526$5$241 ==.
                           4893 ;	../COMMON/easyax5043.c:526: byte &= 0xFF << (8-cnt);
   0624 74 08         [12] 4894 	mov	a,#0x08
   0626 C3            [12] 4895 	clr	c
   0627 9F            [12] 4896 	subb	a,r7
   0628 FD            [12] 4897 	mov	r5,a
   0629 8D F0         [24] 4898 	mov	b,r5
   062B 05 F0         [12] 4899 	inc	b
   062D 74 FF         [12] 4900 	mov	a,#0xFF
   062F 80 02         [24] 4901 	sjmp	00283$
   0631                    4902 00281$:
   0631 25 E0         [12] 4903 	add	a,acc
   0633                    4904 00283$:
   0633 D5 F0 FB      [24] 4905 	djnz	b,00281$
   0636 FD            [12] 4906 	mov	r5,a
   0637 52 06         [12] 4907 	anl	ar6,a
                     0639  4908 	C$easyax5043.c$527$5$241 ==.
                           4909 ;	../COMMON/easyax5043.c:527: byte |= 0x80 >> cnt;
   0639 8F F0         [24] 4910 	mov	b,r7
   063B 05 F0         [12] 4911 	inc	b
   063D 74 80         [12] 4912 	mov	a,#0x80
   063F 80 02         [24] 4913 	sjmp	00285$
   0641                    4914 00284$:
   0641 C3            [12] 4915 	clr	c
   0642 13            [12] 4916 	rrc	a
   0643                    4917 00285$:
   0643 D5 F0 FB      [24] 4918 	djnz	b,00284$
   0646 FD            [12] 4919 	mov	r5,a
   0647 42 06         [12] 4920 	orl	ar6,a
   0649 80 2C         [24] 4921 	sjmp	00137$
   064B                    4922 00136$:
                     064B  4923 	C$easyax5043.c$530$5$242 ==.
                           4924 ;	../COMMON/easyax5043.c:530: byte &= 0xFF >> (8-cnt);
   064B 8F 04         [24] 4925 	mov	ar4,r7
   064D 7D 00         [12] 4926 	mov	r5,#0x00
   064F 74 08         [12] 4927 	mov	a,#0x08
   0651 C3            [12] 4928 	clr	c
   0652 9C            [12] 4929 	subb	a,r4
   0653 FC            [12] 4930 	mov	r4,a
   0654 E4            [12] 4931 	clr	a
   0655 9D            [12] 4932 	subb	a,r5
   0656 FD            [12] 4933 	mov	r5,a
   0657 8C F0         [24] 4934 	mov	b,r4
   0659 05 F0         [12] 4935 	inc	b
   065B 74 FF         [12] 4936 	mov	a,#0xFF
   065D 80 02         [24] 4937 	sjmp	00287$
   065F                    4938 00286$:
   065F C3            [12] 4939 	clr	c
   0660 13            [12] 4940 	rrc	a
   0661                    4941 00287$:
   0661 D5 F0 FB      [24] 4942 	djnz	b,00286$
   0664 FC            [12] 4943 	mov	r4,a
   0665 52 06         [12] 4944 	anl	ar6,a
                     0667  4945 	C$easyax5043.c$531$5$242 ==.
                           4946 ;	../COMMON/easyax5043.c:531: byte |= 0x01 << cnt;
   0667 8F F0         [24] 4947 	mov	b,r7
   0669 05 F0         [12] 4948 	inc	b
   066B 74 01         [12] 4949 	mov	a,#0x01
   066D 80 02         [24] 4950 	sjmp	00290$
   066F                    4951 00288$:
   066F 25 E0         [12] 4952 	add	a,acc
   0671                    4953 00290$:
   0671 D5 F0 FB      [24] 4954 	djnz	b,00288$
   0674 FD            [12] 4955 	mov	r5,a
   0675 42 06         [12] 4956 	orl	ar6,a
   0677                    4957 00137$:
                     0677  4958 	C$easyax5043.c$533$4$240 ==.
                           4959 ;	../COMMON/easyax5043.c:533: AX5043_FIFODATA = byte;
   0677 90 40 29      [24] 4960 	mov	dptr,#_AX5043_FIFODATA
   067A EE            [12] 4961 	mov	a,r6
   067B F0            [24] 4962 	movx	@dptr,a
                     067C  4963 	C$easyax5043.c$535$3$231 ==.
                           4964 ;	../COMMON/easyax5043.c:535: break;
   067C 02r03rEF      [24] 4965 	ljmp	00157$
                     067F  4966 	C$easyax5043.c$537$3$231 ==.
                           4967 ;	../COMMON/easyax5043.c:537: case trxstate_tx_packet:
   067F                    4968 00138$:
                     067F  4969 	C$easyax5043.c$538$3$231 ==.
                           4970 ;	../COMMON/easyax5043.c:538: if (cnt < 11)
   067F BF 0B 00      [24] 4971 	cjne	r7,#0x0B,00291$
   0682                    4972 00291$:
   0682 50 03         [24] 4973 	jnc	00292$
   0684 02r07r26      [24] 4974 	ljmp	00153$
   0687                    4975 00292$:
                     0687  4976 	C$easyax5043.c$541$4$231 ==.
                           4977 ;	../COMMON/easyax5043.c:541: uint8_t flags = 0;
   0687 7E 00         [12] 4978 	mov	r6,#0x00
                     0689  4979 	C$easyax5043.c$542$4$243 ==.
                           4980 ;	../COMMON/easyax5043.c:542: if (!axradio_txbuffer_cnt)
   0689 90r00r03      [24] 4981 	mov	dptr,#_axradio_txbuffer_cnt
   068C E0            [24] 4982 	movx	a,@dptr
   068D FC            [12] 4983 	mov	r4,a
   068E A3            [24] 4984 	inc	dptr
   068F E0            [24] 4985 	movx	a,@dptr
   0690 FD            [12] 4986 	mov	r5,a
   0691 4C            [12] 4987 	orl	a,r4
   0692 70 02         [24] 4988 	jnz	00142$
                     0694  4989 	C$easyax5043.c$543$4$243 ==.
                           4990 ;	../COMMON/easyax5043.c:543: flags |= 0x01; // flag byte: pkt_start
   0694 7E 01         [12] 4991 	mov	r6,#0x01
   0696                    4992 00142$:
                     0696  4993 	C$easyax5043.c$545$5$244 ==.
                           4994 ;	../COMMON/easyax5043.c:545: uint16_t len = axradio_txbuffer_len - axradio_txbuffer_cnt;
   0696 90r00r03      [24] 4995 	mov	dptr,#_axradio_txbuffer_cnt
   0699 E0            [24] 4996 	movx	a,@dptr
   069A FC            [12] 4997 	mov	r4,a
   069B A3            [24] 4998 	inc	dptr
   069C E0            [24] 4999 	movx	a,@dptr
   069D FD            [12] 5000 	mov	r5,a
   069E 90r00r01      [24] 5001 	mov	dptr,#_axradio_txbuffer_len
   06A1 E0            [24] 5002 	movx	a,@dptr
   06A2 FA            [12] 5003 	mov	r2,a
   06A3 A3            [24] 5004 	inc	dptr
   06A4 E0            [24] 5005 	movx	a,@dptr
   06A5 FB            [12] 5006 	mov	r3,a
   06A6 EA            [12] 5007 	mov	a,r2
   06A7 C3            [12] 5008 	clr	c
   06A8 9C            [12] 5009 	subb	a,r4
   06A9 FC            [12] 5010 	mov	r4,a
   06AA EB            [12] 5011 	mov	a,r3
   06AB 9D            [12] 5012 	subb	a,r5
   06AC FD            [12] 5013 	mov	r5,a
                     06AD  5014 	C$easyax5043.c$546$5$244 ==.
                           5015 ;	../COMMON/easyax5043.c:546: cnt -= 3;
   06AD 1F            [12] 5016 	dec	r7
   06AE 1F            [12] 5017 	dec	r7
   06AF 1F            [12] 5018 	dec	r7
                     06B0  5019 	C$easyax5043.c$547$5$244 ==.
                           5020 ;	../COMMON/easyax5043.c:547: if (cnt >= len) {
   06B0 8F 02         [24] 5021 	mov	ar2,r7
   06B2 7B 00         [12] 5022 	mov	r3,#0x00
   06B4 C3            [12] 5023 	clr	c
   06B5 EA            [12] 5024 	mov	a,r2
   06B6 9C            [12] 5025 	subb	a,r4
   06B7 EB            [12] 5026 	mov	a,r3
   06B8 9D            [12] 5027 	subb	a,r5
   06B9 40 05         [24] 5028 	jc	00144$
                     06BB  5029 	C$easyax5043.c$548$6$245 ==.
                           5030 ;	../COMMON/easyax5043.c:548: cnt = len;
   06BB 8C 07         [24] 5031 	mov	ar7,r4
                     06BD  5032 	C$easyax5043.c$549$6$245 ==.
                           5033 ;	../COMMON/easyax5043.c:549: flags |= 0x02; // flag byte: pkt_end
   06BD 43 06 02      [24] 5034 	orl	ar6,#0x02
   06C0                    5035 00144$:
                     06C0  5036 	C$easyax5043.c$552$4$243 ==.
                           5037 ;	../COMMON/easyax5043.c:552: if (!cnt)
   06C0 EF            [12] 5038 	mov	a,r7
   06C1 60 54         [24] 5039 	jz	00152$
                     06C3  5040 	C$easyax5043.c$554$4$243 ==.
                           5041 ;	../COMMON/easyax5043.c:554: AX5043_FIFODATA = AX5043_FIFOCMD_DATA | (7 << 5);
                     06C3  5042 	C$easyax5043.c$555$4$243 ==.
                           5043 ;	../COMMON/easyax5043.c:555: AX5043_FIFODATA = cnt + 1; // write FIFO chunk length byte (length includes the flag byte, thus the +1)
   06C3 90 40 29      [24] 5044 	mov	dptr,#_AX5043_FIFODATA
   06C6 74 E1         [12] 5045 	mov	a,#0xE1
   06C8 F0            [24] 5046 	movx	@dptr,a
   06C9 EF            [12] 5047 	mov	a,r7
   06CA 04            [12] 5048 	inc	a
   06CB F0            [24] 5049 	movx	@dptr,a
                     06CC  5050 	C$easyax5043.c$556$4$243 ==.
                           5051 ;	../COMMON/easyax5043.c:556: AX5043_FIFODATA = flags;
   06CC 90 40 29      [24] 5052 	mov	dptr,#_AX5043_FIFODATA
   06CF EE            [12] 5053 	mov	a,r6
   06D0 F0            [24] 5054 	movx	@dptr,a
                     06D1  5055 	C$easyax5043.c$557$4$243 ==.
                           5056 ;	../COMMON/easyax5043.c:557: ax5043_writefifo(&axradio_txbuffer[axradio_txbuffer_cnt], cnt);
   06D1 90r00r03      [24] 5057 	mov	dptr,#_axradio_txbuffer_cnt
   06D4 E0            [24] 5058 	movx	a,@dptr
   06D5 FC            [12] 5059 	mov	r4,a
   06D6 A3            [24] 5060 	inc	dptr
   06D7 E0            [24] 5061 	movx	a,@dptr
   06D8 FD            [12] 5062 	mov	r5,a
   06D9 EC            [12] 5063 	mov	a,r4
   06DA 24r26         [12] 5064 	add	a,#_axradio_txbuffer
   06DC FC            [12] 5065 	mov	r4,a
   06DD ED            [12] 5066 	mov	a,r5
   06DE 34s00         [12] 5067 	addc	a,#(_axradio_txbuffer >> 8)
   06E0 FD            [12] 5068 	mov	r5,a
   06E1 7B 00         [12] 5069 	mov	r3,#0x00
   06E3 C0 07         [24] 5070 	push	ar7
   06E5 C0 06         [24] 5071 	push	ar6
   06E7 C0 07         [24] 5072 	push	ar7
   06E9 8C 82         [24] 5073 	mov	dpl,r4
   06EB 8D 83         [24] 5074 	mov	dph,r5
   06ED 8B F0         [24] 5075 	mov	b,r3
   06EF 12r00r00      [24] 5076 	lcall	_ax5043_writefifo
   06F2 15 81         [12] 5077 	dec	sp
   06F4 D0 06         [24] 5078 	pop	ar6
   06F6 D0 07         [24] 5079 	pop	ar7
                     06F8  5080 	C$easyax5043.c$558$4$243 ==.
                           5081 ;	../COMMON/easyax5043.c:558: axradio_txbuffer_cnt += cnt;
   06F8 7D 00         [12] 5082 	mov	r5,#0x00
   06FA 90r00r03      [24] 5083 	mov	dptr,#_axradio_txbuffer_cnt
   06FD E0            [24] 5084 	movx	a,@dptr
   06FE FB            [12] 5085 	mov	r3,a
   06FF A3            [24] 5086 	inc	dptr
   0700 E0            [24] 5087 	movx	a,@dptr
   0701 FC            [12] 5088 	mov	r4,a
   0702 90r00r03      [24] 5089 	mov	dptr,#_axradio_txbuffer_cnt
   0705 EF            [12] 5090 	mov	a,r7
   0706 2B            [12] 5091 	add	a,r3
   0707 F0            [24] 5092 	movx	@dptr,a
   0708 ED            [12] 5093 	mov	a,r5
   0709 3C            [12] 5094 	addc	a,r4
   070A A3            [24] 5095 	inc	dptr
   070B F0            [24] 5096 	movx	@dptr,a
                     070C  5097 	C$easyax5043.c$559$4$243 ==.
                           5098 ;	../COMMON/easyax5043.c:559: if (flags & 0x02)
   070C EE            [12] 5099 	mov	a,r6
   070D 20 E1 03      [24] 5100 	jb	acc.1,00296$
   0710 02r03rEF      [24] 5101 	ljmp	00157$
   0713                    5102 00296$:
                     0713  5103 	C$easyax5043.c$560$4$243 ==.
                           5104 ;	../COMMON/easyax5043.c:560: goto pktend;
                     0713  5105 	C$easyax5043.c$564$3$231 ==.
                           5106 ;	../COMMON/easyax5043.c:564: default:
   0713 80 02         [24] 5107 	sjmp	00152$
   0715                    5108 00149$:
                     0715  5109 	C$easyax5043.c$565$3$231 ==.
                           5110 ;	../COMMON/easyax5043.c:565: return;
                     0715  5111 	C$easyax5043.c$568$1$229 ==.
                           5112 ;	../COMMON/easyax5043.c:568: pktend:
   0715 80 15         [24] 5113 	sjmp	00159$
   0717                    5114 00152$:
                     0717  5115 	C$easyax5043.c$569$1$229 ==.
                           5116 ;	../COMMON/easyax5043.c:569: axradio_trxstate = trxstate_tx_waitdone;
   0717 75*01 0D      [24] 5117 	mov	_axradio_trxstate,#0x0D
                     071A  5118 	C$easyax5043.c$570$1$229 ==.
                           5119 ;	../COMMON/easyax5043.c:570: AX5043_RADIOEVENTMASK0 = 0x01; // enable REVRDONE event
   071A 90 40 09      [24] 5120 	mov	dptr,#_AX5043_RADIOEVENTMASK0
   071D 74 01         [12] 5121 	mov	a,#0x01
   071F F0            [24] 5122 	movx	@dptr,a
                     0720  5123 	C$easyax5043.c$571$1$229 ==.
                           5124 ;	../COMMON/easyax5043.c:571: AX5043_IRQMASK0 = 0x40; // enable radio controller irq
   0720 90 40 07      [24] 5125 	mov	dptr,#_AX5043_IRQMASK0
   0723 74 40         [12] 5126 	mov	a,#0x40
   0725 F0            [24] 5127 	movx	@dptr,a
                     0726  5128 	C$easyax5043.c$572$1$229 ==.
                           5129 ;	../COMMON/easyax5043.c:572: fifocommit:
   0726                    5130 00153$:
                     0726  5131 	C$easyax5043.c$573$1$229 ==.
                           5132 ;	../COMMON/easyax5043.c:573: AX5043_FIFOSTAT = 4; // commit
   0726 90 40 28      [24] 5133 	mov	dptr,#_AX5043_FIFOSTAT
   0729 74 04         [12] 5134 	mov	a,#0x04
   072B F0            [24] 5135 	movx	@dptr,a
   072C                    5136 00159$:
                     072C  5137 	C$easyax5043.c$574$1$229 ==.
                     072C  5138 	XFeasyax5043$transmit_isr$0$0 ==.
   072C 22            [24] 5139 	ret
                           5140 ;------------------------------------------------------------
                           5141 ;Allocation info for local variables in function 'axradio_isr'
                           5142 ;------------------------------------------------------------
                           5143 ;evt                       Allocated to registers r7 
                           5144 ;------------------------------------------------------------
                     072D  5145 	G$axradio_isr$0$0 ==.
                     072D  5146 	C$easyax5043.c$577$1$229 ==.
                           5147 ;	../COMMON/easyax5043.c:577: void axradio_isr(void) __interrupt INT_RADIO
                           5148 ;	-----------------------------------------
                           5149 ;	 function axradio_isr
                           5150 ;	-----------------------------------------
   072D                    5151 _axradio_isr:
   072D C0*00         [24] 5152 	push	bits
   072F C0 E0         [24] 5153 	push	acc
   0731 C0 F0         [24] 5154 	push	b
   0733 C0 82         [24] 5155 	push	dpl
   0735 C0 83         [24] 5156 	push	dph
   0737 C0 07         [24] 5157 	push	(0+7)
   0739 C0 06         [24] 5158 	push	(0+6)
   073B C0 05         [24] 5159 	push	(0+5)
   073D C0 04         [24] 5160 	push	(0+4)
   073F C0 03         [24] 5161 	push	(0+3)
   0741 C0 02         [24] 5162 	push	(0+2)
   0743 C0 01         [24] 5163 	push	(0+1)
   0745 C0 00         [24] 5164 	push	(0+0)
   0747 C0 D0         [24] 5165 	push	psw
   0749 75 D0 00      [24] 5166 	mov	psw,#0x00
                     074C  5167 	C$easyax5043.c$587$1$247 ==.
                           5168 ;	../COMMON/easyax5043.c:587: switch (axradio_trxstate) {
   074C E5*01         [12] 5169 	mov	a,_axradio_trxstate
   074E FF            [12] 5170 	mov	r7,a
   074F 24 EF         [12] 5171 	add	a,#0xff - 0x10
   0751 50 03         [24] 5172 	jnc	00250$
   0753 02r07r89      [24] 5173 	ljmp	00101$
   0756                    5174 00250$:
   0756 EF            [12] 5175 	mov	a,r7
   0757 F5 F0         [12] 5176 	mov	b,a
   0759 24 0B         [12] 5177 	add	a,#(00251$-3-.)
   075B 83            [24] 5178 	movc	a,@a+pc
   075C F5 82         [12] 5179 	mov	dpl,a
   075E E5 F0         [12] 5180 	mov	a,b
   0760 24 15         [12] 5181 	add	a,#(00252$-3-.)
   0762 83            [24] 5182 	movc	a,@a+pc
   0763 F5 83         [12] 5183 	mov	dph,a
   0765 E4            [12] 5184 	clr	a
   0766 73            [24] 5185 	jmp	@a+dptr
   0767                    5186 00251$:
   0767r89                 5187 	.db	00101$
   0768rE5                 5188 	.db	00162$
   0769rAB                 5189 	.db	00158$
   076Ar95                 5190 	.db	00102$
   076Br89                 5191 	.db	00101$
   076CrA0                 5192 	.db	00103$
   076Dr89                 5193 	.db	00101$
   076ErAB                 5194 	.db	00104$
   076Fr89                 5195 	.db	00101$
   0770rB6                 5196 	.db	00105$
   0771r47                 5197 	.db	00114$
   0772r47                 5198 	.db	00115$
   0773r47                 5199 	.db	00116$
   0774r4D                 5200 	.db	00117$
   0775r82                 5201 	.db	00144$
   0776rC7                 5202 	.db	00145$
   0777rEE                 5203 	.db	00148$
   0778                    5204 00252$:
   0778s07                 5205 	.db	00101$>>8
   0779s0A                 5206 	.db	00162$>>8
   077As0A                 5207 	.db	00158$>>8
   077Bs07                 5208 	.db	00102$>>8
   077Cs07                 5209 	.db	00101$>>8
   077Ds07                 5210 	.db	00103$>>8
   077Es07                 5211 	.db	00101$>>8
   077Fs07                 5212 	.db	00104$>>8
   0780s07                 5213 	.db	00101$>>8
   0781s07                 5214 	.db	00105$>>8
   0782s08                 5215 	.db	00114$>>8
   0783s08                 5216 	.db	00115$>>8
   0784s08                 5217 	.db	00116$>>8
   0785s08                 5218 	.db	00117$>>8
   0786s09                 5219 	.db	00144$>>8
   0787s09                 5220 	.db	00145$>>8
   0788s09                 5221 	.db	00148$>>8
                     0789  5222 	C$easyax5043.c$588$2$248 ==.
                           5223 ;	../COMMON/easyax5043.c:588: default:
   0789                    5224 00101$:
                     0789  5225 	C$easyax5043.c$589$2$248 ==.
                           5226 ;	../COMMON/easyax5043.c:589: AX5043_IRQMASK1 = 0x00;
   0789 90 40 06      [24] 5227 	mov	dptr,#_AX5043_IRQMASK1
                     078C  5228 	C$easyax5043.c$590$2$248 ==.
                           5229 ;	../COMMON/easyax5043.c:590: AX5043_IRQMASK0 = 0x00;
   078C E4            [12] 5230 	clr	a
   078D F0            [24] 5231 	movx	@dptr,a
   078E 90 40 07      [24] 5232 	mov	dptr,#_AX5043_IRQMASK0
   0791 F0            [24] 5233 	movx	@dptr,a
                     0792  5234 	C$easyax5043.c$591$2$248 ==.
                           5235 ;	../COMMON/easyax5043.c:591: break;
   0792 02r0ArE8      [24] 5236 	ljmp	00164$
                     0795  5237 	C$easyax5043.c$593$2$248 ==.
                           5238 ;	../COMMON/easyax5043.c:593: case trxstate_wait_xtal:
   0795                    5239 00102$:
                     0795  5240 	C$easyax5043.c$594$2$248 ==.
                           5241 ;	../COMMON/easyax5043.c:594: AX5043_IRQMASK1 = 0x00; // otherwise crystal ready will fire all over again
   0795 90 40 06      [24] 5242 	mov	dptr,#_AX5043_IRQMASK1
   0798 E4            [12] 5243 	clr	a
   0799 F0            [24] 5244 	movx	@dptr,a
                     079A  5245 	C$easyax5043.c$595$2$248 ==.
                           5246 ;	../COMMON/easyax5043.c:595: axradio_trxstate = trxstate_xtal_ready;
   079A 75*01 04      [24] 5247 	mov	_axradio_trxstate,#0x04
                     079D  5248 	C$easyax5043.c$596$2$248 ==.
                           5249 ;	../COMMON/easyax5043.c:596: break;
   079D 02r0ArE8      [24] 5250 	ljmp	00164$
                     07A0  5251 	C$easyax5043.c$598$2$248 ==.
                           5252 ;	../COMMON/easyax5043.c:598: case trxstate_pll_ranging:
   07A0                    5253 00103$:
                     07A0  5254 	C$easyax5043.c$599$2$248 ==.
                           5255 ;	../COMMON/easyax5043.c:599: AX5043_IRQMASK1 = 0x00; // otherwise autoranging done will fire all over again
   07A0 90 40 06      [24] 5256 	mov	dptr,#_AX5043_IRQMASK1
   07A3 E4            [12] 5257 	clr	a
   07A4 F0            [24] 5258 	movx	@dptr,a
                     07A5  5259 	C$easyax5043.c$600$2$248 ==.
                           5260 ;	../COMMON/easyax5043.c:600: axradio_trxstate = trxstate_pll_ranging_done;
   07A5 75*01 06      [24] 5261 	mov	_axradio_trxstate,#0x06
                     07A8  5262 	C$easyax5043.c$601$2$248 ==.
                           5263 ;	../COMMON/easyax5043.c:601: break;
   07A8 02r0ArE8      [24] 5264 	ljmp	00164$
                     07AB  5265 	C$easyax5043.c$603$2$248 ==.
                           5266 ;	../COMMON/easyax5043.c:603: case trxstate_pll_settling:
   07AB                    5267 00104$:
                     07AB  5268 	C$easyax5043.c$604$2$248 ==.
                           5269 ;	../COMMON/easyax5043.c:604: AX5043_RADIOEVENTMASK0 = 0x00;
   07AB 90 40 09      [24] 5270 	mov	dptr,#_AX5043_RADIOEVENTMASK0
   07AE E4            [12] 5271 	clr	a
   07AF F0            [24] 5272 	movx	@dptr,a
                     07B0  5273 	C$easyax5043.c$605$2$248 ==.
                           5274 ;	../COMMON/easyax5043.c:605: axradio_trxstate = trxstate_pll_settled;
   07B0 75*01 08      [24] 5275 	mov	_axradio_trxstate,#0x08
                     07B3  5276 	C$easyax5043.c$606$2$248 ==.
                           5277 ;	../COMMON/easyax5043.c:606: break;
   07B3 02r0ArE8      [24] 5278 	ljmp	00164$
                     07B6  5279 	C$easyax5043.c$608$2$248 ==.
                           5280 ;	../COMMON/easyax5043.c:608: case trxstate_tx_xtalwait:
   07B6                    5281 00105$:
                     07B6  5282 	C$easyax5043.c$609$2$248 ==.
                           5283 ;	../COMMON/easyax5043.c:609: AX5043_RADIOEVENTREQ0; // make sure REVRDONE bit is cleared, so it is a reliable indicator that the packet is out
   07B6 90 40 0F      [24] 5284 	mov	dptr,#_AX5043_RADIOEVENTREQ0
   07B9 E0            [24] 5285 	movx	a,@dptr
                     07BA  5286 	C$easyax5043.c$610$2$248 ==.
                           5287 ;	../COMMON/easyax5043.c:610: AX5043_FIFOSTAT = 3; // clear FIFO data & flags (prevent transmitting anything left over in the FIFO, this has no effect if the FIFO is not powerered, in this case it is reset any way)
   07BA 90 40 28      [24] 5288 	mov	dptr,#_AX5043_FIFOSTAT
   07BD 74 03         [12] 5289 	mov	a,#0x03
   07BF F0            [24] 5290 	movx	@dptr,a
                     07C0  5291 	C$easyax5043.c$611$2$248 ==.
                           5292 ;	../COMMON/easyax5043.c:611: AX5043_IRQMASK1 = 0x00;
   07C0 90 40 06      [24] 5293 	mov	dptr,#_AX5043_IRQMASK1
   07C3 E4            [12] 5294 	clr	a
   07C4 F0            [24] 5295 	movx	@dptr,a
                     07C5  5296 	C$easyax5043.c$612$2$248 ==.
                           5297 ;	../COMMON/easyax5043.c:612: AX5043_IRQMASK0 = 0x08; // enable fifo free threshold
   07C5 90 40 07      [24] 5298 	mov	dptr,#_AX5043_IRQMASK0
   07C8 74 08         [12] 5299 	mov	a,#0x08
   07CA F0            [24] 5300 	movx	@dptr,a
                     07CB  5301 	C$easyax5043.c$613$2$248 ==.
                           5302 ;	../COMMON/easyax5043.c:613: axradio_trxstate = trxstate_tx_longpreamble;
   07CB 75*01 0A      [24] 5303 	mov	_axradio_trxstate,#0x0A
                     07CE  5304 	C$easyax5043.c$615$2$248 ==.
                           5305 ;	../COMMON/easyax5043.c:615: if ((AX5043_MODULATION & 0x0F) == 9) { // 4-FSK
   07CE 90 40 10      [24] 5306 	mov	dptr,#_AX5043_MODULATION
   07D1 E0            [24] 5307 	movx	a,@dptr
   07D2 FF            [12] 5308 	mov	r7,a
   07D3 53 07 0F      [24] 5309 	anl	ar7,#0x0F
   07D6 BF 09 0F      [24] 5310 	cjne	r7,#0x09,00107$
                     07D9  5311 	C$easyax5043.c$616$3$249 ==.
                           5312 ;	../COMMON/easyax5043.c:616: AX5043_FIFODATA = AX5043_FIFOCMD_DATA | (7 << 5);
                     07D9  5313 	C$easyax5043.c$617$3$249 ==.
                           5314 ;	../COMMON/easyax5043.c:617: AX5043_FIFODATA = 2;  // length (including flags)
                     07D9  5315 	C$easyax5043.c$618$3$249 ==.
                           5316 ;	../COMMON/easyax5043.c:618: AX5043_FIFODATA = 0x01;  // flag PKTSTART -> dibit sync
                     07D9  5317 	C$easyax5043.c$619$3$249 ==.
                           5318 ;	../COMMON/easyax5043.c:619: AX5043_FIFODATA = 0x11; // dummy byte for forcing dibit sync
   07D9 90 40 29      [24] 5319 	mov	dptr,#_AX5043_FIFODATA
   07DC 74 E1         [12] 5320 	mov	a,#0xE1
   07DE F0            [24] 5321 	movx	@dptr,a
   07DF 74 02         [12] 5322 	mov	a,#0x02
   07E1 F0            [24] 5323 	movx	@dptr,a
   07E2 74 01         [12] 5324 	mov	a,#0x01
   07E4 F0            [24] 5325 	movx	@dptr,a
   07E5 74 11         [12] 5326 	mov	a,#0x11
   07E7 F0            [24] 5327 	movx	@dptr,a
   07E8                    5328 00107$:
                     07E8  5329 	C$easyax5043.c$626$2$248 ==.
                           5330 ;	../COMMON/easyax5043.c:626: transmit_isr();
   07E8 12r03rEF      [24] 5331 	lcall	_transmit_isr
                     07EB  5332 	C$easyax5043.c$627$2$248 ==.
                           5333 ;	../COMMON/easyax5043.c:627: AX5043_PWRMODE = AX5043_PWRSTATE_FULL_TX;
   07EB 90 40 02      [24] 5334 	mov	dptr,#_AX5043_PWRMODE
   07EE 74 0D         [12] 5335 	mov	a,#0x0D
   07F0 F0            [24] 5336 	movx	@dptr,a
                     07F1  5337 	C$easyax5043.c$628$2$248 ==.
                           5338 ;	../COMMON/easyax5043.c:628: update_timeanchor();
   07F1 12r00r00      [24] 5339 	lcall	_update_timeanchor
                     07F4  5340 	C$easyax5043.c$629$2$248 ==.
                           5341 ;	../COMMON/easyax5043.c:629: wtimer_remove_callback(&axradio_cb_transmitstart.cb);
   07F4 90r02r67      [24] 5342 	mov	dptr,#_axradio_cb_transmitstart
   07F7 12r00r00      [24] 5343 	lcall	_wtimer_remove_callback
                     07FA  5344 	C$easyax5043.c$630$2$248 ==.
                           5345 ;	../COMMON/easyax5043.c:630: switch (axradio_mode) {
   07FA AF*00         [24] 5346 	mov	r7,_axradio_mode
   07FC BF 12 02      [24] 5347 	cjne	r7,#0x12,00255$
   07FF 80 03         [24] 5348 	sjmp	00109$
   0801                    5349 00255$:
   0801 BF 13 19      [24] 5350 	cjne	r7,#0x13,00112$
                     0804  5351 	C$easyax5043.c$632$3$250 ==.
                           5352 ;	../COMMON/easyax5043.c:632: case AXRADIO_MODE_WOR_ACK_TRANSMIT:
   0804                    5353 00109$:
                     0804  5354 	C$easyax5043.c$633$3$250 ==.
                           5355 ;	../COMMON/easyax5043.c:633: if (axradio_ack_count != axradio_framing_ack_retransmissions) {
   0804 90r00r0A      [24] 5356 	mov	dptr,#_axradio_ack_count
   0807 E0            [24] 5357 	movx	a,@dptr
   0808 FF            [12] 5358 	mov	r7,a
   0809 90r00r00      [24] 5359 	mov	dptr,#_axradio_framing_ack_retransmissions
   080C E4            [12] 5360 	clr	a
   080D 93            [24] 5361 	movc	a,@a+dptr
   080E FE            [12] 5362 	mov	r6,a
   080F EF            [12] 5363 	mov	a,r7
   0810 B5 06 02      [24] 5364 	cjne	a,ar6,00258$
   0813 80 08         [24] 5365 	sjmp	00112$
   0815                    5366 00258$:
                     0815  5367 	C$easyax5043.c$634$4$251 ==.
                           5368 ;	../COMMON/easyax5043.c:634: axradio_cb_transmitstart.st.error = AXRADIO_ERR_RETRANSMISSION;
   0815 90r02r6C      [24] 5369 	mov	dptr,#(_axradio_cb_transmitstart + 0x0005)
   0818 74 08         [12] 5370 	mov	a,#0x08
   081A F0            [24] 5371 	movx	@dptr,a
                     081B  5372 	C$easyax5043.c$635$4$251 ==.
                           5373 ;	../COMMON/easyax5043.c:635: break;
                     081B  5374 	C$easyax5043.c$638$3$250 ==.
                           5375 ;	../COMMON/easyax5043.c:638: default:
   081B 80 05         [24] 5376 	sjmp	00113$
   081D                    5377 00112$:
                     081D  5378 	C$easyax5043.c$639$3$250 ==.
                           5379 ;	../COMMON/easyax5043.c:639: axradio_cb_transmitstart.st.error = AXRADIO_ERR_NOERROR;
   081D 90r02r6C      [24] 5380 	mov	dptr,#(_axradio_cb_transmitstart + 0x0005)
   0820 E4            [12] 5381 	clr	a
   0821 F0            [24] 5382 	movx	@dptr,a
                     0822  5383 	C$easyax5043.c$641$2$248 ==.
                           5384 ;	../COMMON/easyax5043.c:641: }
   0822                    5385 00113$:
                     0822  5386 	C$easyax5043.c$642$2$248 ==.
                           5387 ;	../COMMON/easyax5043.c:642: axradio_cb_transmitstart.st.time.t = axradio_timeanchor.radiotimer;
   0822 90r00r16      [24] 5388 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   0825 E0            [24] 5389 	movx	a,@dptr
   0826 FC            [12] 5390 	mov	r4,a
   0827 A3            [24] 5391 	inc	dptr
   0828 E0            [24] 5392 	movx	a,@dptr
   0829 FD            [12] 5393 	mov	r5,a
   082A A3            [24] 5394 	inc	dptr
   082B E0            [24] 5395 	movx	a,@dptr
   082C FE            [12] 5396 	mov	r6,a
   082D A3            [24] 5397 	inc	dptr
   082E E0            [24] 5398 	movx	a,@dptr
   082F FF            [12] 5399 	mov	r7,a
   0830 90r02r6D      [24] 5400 	mov	dptr,#(_axradio_cb_transmitstart + 0x0006)
   0833 EC            [12] 5401 	mov	a,r4
   0834 F0            [24] 5402 	movx	@dptr,a
   0835 ED            [12] 5403 	mov	a,r5
   0836 A3            [24] 5404 	inc	dptr
   0837 F0            [24] 5405 	movx	@dptr,a
   0838 EE            [12] 5406 	mov	a,r6
   0839 A3            [24] 5407 	inc	dptr
   083A F0            [24] 5408 	movx	@dptr,a
   083B EF            [12] 5409 	mov	a,r7
   083C A3            [24] 5410 	inc	dptr
   083D F0            [24] 5411 	movx	@dptr,a
                     083E  5412 	C$easyax5043.c$643$2$248 ==.
                           5413 ;	../COMMON/easyax5043.c:643: wtimer_add_callback(&axradio_cb_transmitstart.cb);
   083E 90r02r67      [24] 5414 	mov	dptr,#_axradio_cb_transmitstart
   0841 12r00r00      [24] 5415 	lcall	_wtimer_add_callback
                     0844  5416 	C$easyax5043.c$644$2$248 ==.
                           5417 ;	../COMMON/easyax5043.c:644: break;
   0844 02r0ArE8      [24] 5418 	ljmp	00164$
                     0847  5419 	C$easyax5043.c$646$2$248 ==.
                           5420 ;	../COMMON/easyax5043.c:646: case trxstate_tx_longpreamble:
   0847                    5421 00114$:
                     0847  5422 	C$easyax5043.c$647$2$248 ==.
                           5423 ;	../COMMON/easyax5043.c:647: case trxstate_tx_shortpreamble:
   0847                    5424 00115$:
                     0847  5425 	C$easyax5043.c$648$2$248 ==.
                           5426 ;	../COMMON/easyax5043.c:648: case trxstate_tx_packet:
   0847                    5427 00116$:
                     0847  5428 	C$easyax5043.c$649$2$248 ==.
                           5429 ;	../COMMON/easyax5043.c:649: transmit_isr();
   0847 12r03rEF      [24] 5430 	lcall	_transmit_isr
                     084A  5431 	C$easyax5043.c$650$2$248 ==.
                           5432 ;	../COMMON/easyax5043.c:650: break;
   084A 02r0ArE8      [24] 5433 	ljmp	00164$
                     084D  5434 	C$easyax5043.c$652$2$248 ==.
                           5435 ;	../COMMON/easyax5043.c:652: case trxstate_tx_waitdone:
   084D                    5436 00117$:
                     084D  5437 	C$easyax5043.c$653$2$248 ==.
                           5438 ;	../COMMON/easyax5043.c:653: AX5043_RADIOEVENTREQ0;
   084D 90 40 0F      [24] 5439 	mov	dptr,#_AX5043_RADIOEVENTREQ0
   0850 E0            [24] 5440 	movx	a,@dptr
                     0851  5441 	C$easyax5043.c$654$2$248 ==.
                           5442 ;	../COMMON/easyax5043.c:654: if (AX5043_RADIOSTATE != 0)
   0851 90 40 1C      [24] 5443 	mov	dptr,#_AX5043_RADIOSTATE
   0854 E0            [24] 5444 	movx	a,@dptr
   0855 FF            [12] 5445 	mov	r7,a
   0856 60 03         [24] 5446 	jz	00259$
   0858 02r0ArE8      [24] 5447 	ljmp	00164$
   085B                    5448 00259$:
                     085B  5449 	C$easyax5043.c$656$2$248 ==.
                           5450 ;	../COMMON/easyax5043.c:656: AX5043_RADIOEVENTMASK0 = 0x00;
   085B 90 40 09      [24] 5451 	mov	dptr,#_AX5043_RADIOEVENTMASK0
   085E E4            [12] 5452 	clr	a
   085F F0            [24] 5453 	movx	@dptr,a
                     0860  5454 	C$easyax5043.c$657$2$248 ==.
                           5455 ;	../COMMON/easyax5043.c:657: switch (axradio_mode) {
   0860 AF*00         [24] 5456 	mov	r7,_axradio_mode
   0862 BF 12 02      [24] 5457 	cjne	r7,#0x12,00260$
   0865 80 6A         [24] 5458 	sjmp	00131$
   0867                    5459 00260$:
   0867 BF 13 02      [24] 5460 	cjne	r7,#0x13,00261$
   086A 80 65         [24] 5461 	sjmp	00131$
   086C                    5462 00261$:
   086C BF 18 02      [24] 5463 	cjne	r7,#0x18,00262$
   086F 80 1D         [24] 5464 	sjmp	00120$
   0871                    5465 00262$:
   0871 BF 19 02      [24] 5466 	cjne	r7,#0x19,00263$
   0874 80 36         [24] 5467 	sjmp	00125$
   0876                    5468 00263$:
   0876 BF 1A 02      [24] 5469 	cjne	r7,#0x1A,00264$
   0879 80 1C         [24] 5470 	sjmp	00121$
   087B                    5471 00264$:
   087B BF 1B 02      [24] 5472 	cjne	r7,#0x1B,00265$
   087E 80 3C         [24] 5473 	sjmp	00128$
   0880                    5474 00265$:
   0880 BF 20 03      [24] 5475 	cjne	r7,#0x20,00266$
   0883 02r09r05      [24] 5476 	ljmp	00132$
   0886                    5477 00266$:
   0886 BF 21 02      [24] 5478 	cjne	r7,#0x21,00267$
   0889 80 39         [24] 5479 	sjmp	00129$
   088B                    5480 00267$:
   088B 02r09r12      [24] 5481 	ljmp	00133$
                     088E  5482 	C$easyax5043.c$658$3$252 ==.
                           5483 ;	../COMMON/easyax5043.c:658: case AXRADIO_MODE_ASYNC_RECEIVE:
   088E                    5484 00120$:
                     088E  5485 	C$easyax5043.c$659$3$252 ==.
                           5486 ;	../COMMON/easyax5043.c:659: ax5043_init_registers_rx();
   088E 12r00rCC      [24] 5487 	lcall	_ax5043_init_registers_rx
                     0891  5488 	C$easyax5043.c$660$3$252 ==.
                           5489 ;	../COMMON/easyax5043.c:660: ax5043_receiver_on_continuous();
   0891 12r0Br05      [24] 5490 	lcall	_ax5043_receiver_on_continuous
                     0894  5491 	C$easyax5043.c$661$3$252 ==.
                           5492 ;	../COMMON/easyax5043.c:661: break;
   0894 02r09r15      [24] 5493 	ljmp	00134$
                     0897  5494 	C$easyax5043.c$663$3$252 ==.
                           5495 ;	../COMMON/easyax5043.c:663: case AXRADIO_MODE_ACK_RECEIVE:
   0897                    5496 00121$:
                     0897  5497 	C$easyax5043.c$664$3$252 ==.
                           5498 ;	../COMMON/easyax5043.c:664: if (axradio_cb_receive.st.error == AXRADIO_ERR_PACKETDONE) {
   0897 90r02r33      [24] 5499 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   089A E0            [24] 5500 	movx	a,@dptr
   089B FF            [12] 5501 	mov	r7,a
   089C BF F0 08      [24] 5502 	cjne	r7,#0xF0,00124$
                     089F  5503 	C$easyax5043.c$665$4$253 ==.
                           5504 ;	../COMMON/easyax5043.c:665: ax5043_init_registers_rx();
   089F 12r00rCC      [24] 5505 	lcall	_ax5043_init_registers_rx
                     08A2  5506 	C$easyax5043.c$666$4$253 ==.
                           5507 ;	../COMMON/easyax5043.c:666: ax5043_receiver_on_continuous();
   08A2 12r0Br05      [24] 5508 	lcall	_ax5043_receiver_on_continuous
                     08A5  5509 	C$easyax5043.c$667$4$253 ==.
                           5510 ;	../COMMON/easyax5043.c:667: break;
                     08A5  5511 	C$easyax5043.c$669$3$252 ==.
                           5512 ;	../COMMON/easyax5043.c:669: offxtal:
   08A5 80 6E         [24] 5513 	sjmp	00134$
   08A7                    5514 00124$:
                     08A7  5515 	C$easyax5043.c$670$3$252 ==.
                           5516 ;	../COMMON/easyax5043.c:670: ax5043_off_xtal();
   08A7 12r0Cr53      [24] 5517 	lcall	_ax5043_off_xtal
                     08AA  5518 	C$easyax5043.c$671$3$252 ==.
                           5519 ;	../COMMON/easyax5043.c:671: break;
                     08AA  5520 	C$easyax5043.c$673$3$252 ==.
                           5521 ;	../COMMON/easyax5043.c:673: case AXRADIO_MODE_WOR_RECEIVE:
   08AA 80 69         [24] 5522 	sjmp	00134$
   08AC                    5523 00125$:
                     08AC  5524 	C$easyax5043.c$674$3$252 ==.
                           5525 ;	../COMMON/easyax5043.c:674: if (axradio_cb_receive.st.error == AXRADIO_ERR_PACKETDONE) {
   08AC 90r02r33      [24] 5526 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   08AF E0            [24] 5527 	movx	a,@dptr
   08B0 FF            [12] 5528 	mov	r7,a
   08B1 BF F0 F3      [24] 5529 	cjne	r7,#0xF0,00124$
                     08B4  5530 	C$easyax5043.c$675$4$254 ==.
                           5531 ;	../COMMON/easyax5043.c:675: ax5043_init_registers_rx();
   08B4 12r00rCC      [24] 5532 	lcall	_ax5043_init_registers_rx
                     08B7  5533 	C$easyax5043.c$676$4$254 ==.
                           5534 ;	../COMMON/easyax5043.c:676: ax5043_receiver_on_wor();
   08B7 12r0Br9F      [24] 5535 	lcall	_ax5043_receiver_on_wor
                     08BA  5536 	C$easyax5043.c$677$4$254 ==.
                           5537 ;	../COMMON/easyax5043.c:677: break;
                     08BA  5538 	C$easyax5043.c$681$3$252 ==.
                           5539 ;	../COMMON/easyax5043.c:681: case AXRADIO_MODE_WOR_ACK_RECEIVE:
   08BA 80 59         [24] 5540 	sjmp	00134$
   08BC                    5541 00128$:
                     08BC  5542 	C$easyax5043.c$682$3$252 ==.
                           5543 ;	../COMMON/easyax5043.c:682: ax5043_init_registers_rx();
   08BC 12r00rCC      [24] 5544 	lcall	_ax5043_init_registers_rx
                     08BF  5545 	C$easyax5043.c$683$3$252 ==.
                           5546 ;	../COMMON/easyax5043.c:683: ax5043_receiver_on_wor();
   08BF 12r0Br9F      [24] 5547 	lcall	_ax5043_receiver_on_wor
                     08C2  5548 	C$easyax5043.c$684$3$252 ==.
                           5549 ;	../COMMON/easyax5043.c:684: break;
                     08C2  5550 	C$easyax5043.c$686$3$252 ==.
                           5551 ;	../COMMON/easyax5043.c:686: case AXRADIO_MODE_SYNC_ACK_MASTER:
   08C2 80 51         [24] 5552 	sjmp	00134$
   08C4                    5553 00129$:
                     08C4  5554 	C$easyax5043.c$687$3$252 ==.
                           5555 ;	../COMMON/easyax5043.c:687: axradio_txbuffer_len = axradio_framing_minpayloadlen;
   08C4 90r00r00      [24] 5556 	mov	dptr,#_axradio_framing_minpayloadlen
   08C7 E4            [12] 5557 	clr	a
   08C8 93            [24] 5558 	movc	a,@a+dptr
   08C9 FF            [12] 5559 	mov	r7,a
   08CA 90r00r01      [24] 5560 	mov	dptr,#_axradio_txbuffer_len
   08CD F0            [24] 5561 	movx	@dptr,a
   08CE E4            [12] 5562 	clr	a
   08CF A3            [24] 5563 	inc	dptr
   08D0 F0            [24] 5564 	movx	@dptr,a
                     08D1  5565 	C$easyax5043.c$691$3$252 ==.
                           5566 ;	../COMMON/easyax5043.c:691: case AXRADIO_MODE_WOR_ACK_TRANSMIT:
   08D1                    5567 00131$:
                     08D1  5568 	C$easyax5043.c$692$3$252 ==.
                           5569 ;	../COMMON/easyax5043.c:692: ax5043_init_registers_rx();
   08D1 12r00rCC      [24] 5570 	lcall	_ax5043_init_registers_rx
                     08D4  5571 	C$easyax5043.c$693$3$252 ==.
                           5572 ;	../COMMON/easyax5043.c:693: ax5043_receiver_on_continuous();
   08D4 12r0Br05      [24] 5573 	lcall	_ax5043_receiver_on_continuous
                     08D7  5574 	C$easyax5043.c$694$3$252 ==.
                           5575 ;	../COMMON/easyax5043.c:694: wtimer_remove(&axradio_timer);
   08D7 90r02r85      [24] 5576 	mov	dptr,#_axradio_timer
   08DA 12r00r00      [24] 5577 	lcall	_wtimer_remove
                     08DD  5578 	C$easyax5043.c$695$3$252 ==.
                           5579 ;	../COMMON/easyax5043.c:695: axradio_timer.time = axradio_framing_ack_timeout;
   08DD 90r00r00      [24] 5580 	mov	dptr,#_axradio_framing_ack_timeout
   08E0 E4            [12] 5581 	clr	a
   08E1 93            [24] 5582 	movc	a,@a+dptr
   08E2 FC            [12] 5583 	mov	r4,a
   08E3 74 01         [12] 5584 	mov	a,#0x01
   08E5 93            [24] 5585 	movc	a,@a+dptr
   08E6 FD            [12] 5586 	mov	r5,a
   08E7 74 02         [12] 5587 	mov	a,#0x02
   08E9 93            [24] 5588 	movc	a,@a+dptr
   08EA FE            [12] 5589 	mov	r6,a
   08EB 74 03         [12] 5590 	mov	a,#0x03
   08ED 93            [24] 5591 	movc	a,@a+dptr
   08EE FF            [12] 5592 	mov	r7,a
   08EF 90r02r89      [24] 5593 	mov	dptr,#(_axradio_timer + 0x0004)
   08F2 EC            [12] 5594 	mov	a,r4
   08F3 F0            [24] 5595 	movx	@dptr,a
   08F4 ED            [12] 5596 	mov	a,r5
   08F5 A3            [24] 5597 	inc	dptr
   08F6 F0            [24] 5598 	movx	@dptr,a
   08F7 EE            [12] 5599 	mov	a,r6
   08F8 A3            [24] 5600 	inc	dptr
   08F9 F0            [24] 5601 	movx	@dptr,a
   08FA EF            [12] 5602 	mov	a,r7
   08FB A3            [24] 5603 	inc	dptr
   08FC F0            [24] 5604 	movx	@dptr,a
                     08FD  5605 	C$easyax5043.c$696$3$252 ==.
                           5606 ;	../COMMON/easyax5043.c:696: wtimer0_addrelative(&axradio_timer);
   08FD 90r02r85      [24] 5607 	mov	dptr,#_axradio_timer
   0900 12r00r00      [24] 5608 	lcall	_wtimer0_addrelative
                     0903  5609 	C$easyax5043.c$697$3$252 ==.
                           5610 ;	../COMMON/easyax5043.c:697: break;
                     0903  5611 	C$easyax5043.c$699$3$252 ==.
                           5612 ;	../COMMON/easyax5043.c:699: case AXRADIO_MODE_SYNC_MASTER:
   0903 80 10         [24] 5613 	sjmp	00134$
   0905                    5614 00132$:
                     0905  5615 	C$easyax5043.c$700$3$252 ==.
                           5616 ;	../COMMON/easyax5043.c:700: axradio_txbuffer_len = axradio_framing_minpayloadlen;
   0905 90r00r00      [24] 5617 	mov	dptr,#_axradio_framing_minpayloadlen
   0908 E4            [12] 5618 	clr	a
   0909 93            [24] 5619 	movc	a,@a+dptr
   090A FF            [12] 5620 	mov	r7,a
   090B 90r00r01      [24] 5621 	mov	dptr,#_axradio_txbuffer_len
   090E F0            [24] 5622 	movx	@dptr,a
   090F E4            [12] 5623 	clr	a
   0910 A3            [24] 5624 	inc	dptr
   0911 F0            [24] 5625 	movx	@dptr,a
                     0912  5626 	C$easyax5043.c$703$3$252 ==.
                           5627 ;	../COMMON/easyax5043.c:703: default:
   0912                    5628 00133$:
                     0912  5629 	C$easyax5043.c$704$3$252 ==.
                           5630 ;	../COMMON/easyax5043.c:704: ax5043_off();
   0912 12r0Cr4A      [24] 5631 	lcall	_ax5043_off
                     0915  5632 	C$easyax5043.c$706$2$248 ==.
                           5633 ;	../COMMON/easyax5043.c:706: }
   0915                    5634 00134$:
                     0915  5635 	C$easyax5043.c$707$2$248 ==.
                           5636 ;	../COMMON/easyax5043.c:707: if (axradio_mode != AXRADIO_MODE_SYNC_MASTER &&
   0915 74 20         [12] 5637 	mov	a,#0x20
   0917 B5*00 02      [24] 5638 	cjne	a,_axradio_mode,00272$
   091A 80 1A         [24] 5639 	sjmp	00136$
   091C                    5640 00272$:
                     091C  5641 	C$easyax5043.c$708$2$248 ==.
                           5642 ;	../COMMON/easyax5043.c:708: axradio_mode != AXRADIO_MODE_SYNC_ACK_MASTER &&
   091C 74 21         [12] 5643 	mov	a,#0x21
   091E B5*00 02      [24] 5644 	cjne	a,_axradio_mode,00273$
   0921 80 13         [24] 5645 	sjmp	00136$
   0923                    5646 00273$:
                     0923  5647 	C$easyax5043.c$709$2$248 ==.
                           5648 ;	../COMMON/easyax5043.c:709: axradio_mode != AXRADIO_MODE_SYNC_SLAVE &&
   0923 74 22         [12] 5649 	mov	a,#0x22
   0925 B5*00 02      [24] 5650 	cjne	a,_axradio_mode,00274$
   0928 80 0C         [24] 5651 	sjmp	00136$
   092A                    5652 00274$:
                     092A  5653 	C$easyax5043.c$710$2$248 ==.
                           5654 ;	../COMMON/easyax5043.c:710: axradio_mode != AXRADIO_MODE_SYNC_ACK_SLAVE)
   092A 74 23         [12] 5655 	mov	a,#0x23
   092C B5*00 02      [24] 5656 	cjne	a,_axradio_mode,00275$
   092F 80 05         [24] 5657 	sjmp	00136$
   0931                    5658 00275$:
                     0931  5659 	C$easyax5043.c$711$2$248 ==.
                           5660 ;	../COMMON/easyax5043.c:711: axradio_syncstate = syncstate_off;
   0931 90r00r00      [24] 5661 	mov	dptr,#_axradio_syncstate
   0934 E4            [12] 5662 	clr	a
   0935 F0            [24] 5663 	movx	@dptr,a
   0936                    5664 00136$:
                     0936  5665 	C$easyax5043.c$712$2$248 ==.
                           5666 ;	../COMMON/easyax5043.c:712: update_timeanchor();
   0936 12r00r00      [24] 5667 	lcall	_update_timeanchor
                     0939  5668 	C$easyax5043.c$713$2$248 ==.
                           5669 ;	../COMMON/easyax5043.c:713: wtimer_remove_callback(&axradio_cb_transmitend.cb);
   0939 90r02r71      [24] 5670 	mov	dptr,#_axradio_cb_transmitend
   093C 12r00r00      [24] 5671 	lcall	_wtimer_remove_callback
                     093F  5672 	C$easyax5043.c$714$2$248 ==.
                           5673 ;	../COMMON/easyax5043.c:714: axradio_cb_transmitend.st.error = AXRADIO_ERR_NOERROR;
   093F 90r02r76      [24] 5674 	mov	dptr,#(_axradio_cb_transmitend + 0x0005)
   0942 E4            [12] 5675 	clr	a
   0943 F0            [24] 5676 	movx	@dptr,a
                     0944  5677 	C$easyax5043.c$715$2$248 ==.
                           5678 ;	../COMMON/easyax5043.c:715: if (axradio_mode == AXRADIO_MODE_ACK_TRANSMIT ||
   0944 74 12         [12] 5679 	mov	a,#0x12
   0946 B5*00 02      [24] 5680 	cjne	a,_axradio_mode,00276$
   0949 80 0C         [24] 5681 	sjmp	00140$
   094B                    5682 00276$:
                     094B  5683 	C$easyax5043.c$716$2$248 ==.
                           5684 ;	../COMMON/easyax5043.c:716: axradio_mode == AXRADIO_MODE_WOR_ACK_TRANSMIT ||
   094B 74 13         [12] 5685 	mov	a,#0x13
   094D B5*00 02      [24] 5686 	cjne	a,_axradio_mode,00277$
   0950 80 05         [24] 5687 	sjmp	00140$
   0952                    5688 00277$:
                     0952  5689 	C$easyax5043.c$717$2$248 ==.
                           5690 ;	../COMMON/easyax5043.c:717: axradio_mode == AXRADIO_MODE_SYNC_ACK_MASTER)
   0952 74 21         [12] 5691 	mov	a,#0x21
   0954 B5*00 06      [24] 5692 	cjne	a,_axradio_mode,00141$
   0957                    5693 00140$:
                     0957  5694 	C$easyax5043.c$718$2$248 ==.
                           5695 ;	../COMMON/easyax5043.c:718: axradio_cb_transmitend.st.error = AXRADIO_ERR_BUSY;
   0957 90r02r76      [24] 5696 	mov	dptr,#(_axradio_cb_transmitend + 0x0005)
   095A 74 02         [12] 5697 	mov	a,#0x02
   095C F0            [24] 5698 	movx	@dptr,a
   095D                    5699 00141$:
                     095D  5700 	C$easyax5043.c$719$2$248 ==.
                           5701 ;	../COMMON/easyax5043.c:719: axradio_cb_transmitend.st.time.t = axradio_timeanchor.radiotimer;
   095D 90r00r16      [24] 5702 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   0960 E0            [24] 5703 	movx	a,@dptr
   0961 FC            [12] 5704 	mov	r4,a
   0962 A3            [24] 5705 	inc	dptr
   0963 E0            [24] 5706 	movx	a,@dptr
   0964 FD            [12] 5707 	mov	r5,a
   0965 A3            [24] 5708 	inc	dptr
   0966 E0            [24] 5709 	movx	a,@dptr
   0967 FE            [12] 5710 	mov	r6,a
   0968 A3            [24] 5711 	inc	dptr
   0969 E0            [24] 5712 	movx	a,@dptr
   096A FF            [12] 5713 	mov	r7,a
   096B 90r02r77      [24] 5714 	mov	dptr,#(_axradio_cb_transmitend + 0x0006)
   096E EC            [12] 5715 	mov	a,r4
   096F F0            [24] 5716 	movx	@dptr,a
   0970 ED            [12] 5717 	mov	a,r5
   0971 A3            [24] 5718 	inc	dptr
   0972 F0            [24] 5719 	movx	@dptr,a
   0973 EE            [12] 5720 	mov	a,r6
   0974 A3            [24] 5721 	inc	dptr
   0975 F0            [24] 5722 	movx	@dptr,a
   0976 EF            [12] 5723 	mov	a,r7
   0977 A3            [24] 5724 	inc	dptr
   0978 F0            [24] 5725 	movx	@dptr,a
                     0979  5726 	C$easyax5043.c$720$2$248 ==.
                           5727 ;	../COMMON/easyax5043.c:720: wtimer_add_callback(&axradio_cb_transmitend.cb);
   0979 90r02r71      [24] 5728 	mov	dptr,#_axradio_cb_transmitend
   097C 12r00r00      [24] 5729 	lcall	_wtimer_add_callback
                     097F  5730 	C$easyax5043.c$721$2$248 ==.
                           5731 ;	../COMMON/easyax5043.c:721: break;
   097F 02r0ArE8      [24] 5732 	ljmp	00164$
                     0982  5733 	C$easyax5043.c$724$2$248 ==.
                           5734 ;	../COMMON/easyax5043.c:724: case trxstate_txcw_xtalwait:
   0982                    5735 00144$:
                     0982  5736 	C$easyax5043.c$725$2$248 ==.
                           5737 ;	../COMMON/easyax5043.c:725: AX5043_IRQMASK1 = 0x00;
   0982 90 40 06      [24] 5738 	mov	dptr,#_AX5043_IRQMASK1
                     0985  5739 	C$easyax5043.c$726$2$248 ==.
                           5740 ;	../COMMON/easyax5043.c:726: AX5043_IRQMASK0 = 0x00;
   0985 E4            [12] 5741 	clr	a
   0986 F0            [24] 5742 	movx	@dptr,a
   0987 90 40 07      [24] 5743 	mov	dptr,#_AX5043_IRQMASK0
   098A F0            [24] 5744 	movx	@dptr,a
                     098B  5745 	C$easyax5043.c$727$2$248 ==.
                           5746 ;	../COMMON/easyax5043.c:727: AX5043_PWRMODE = AX5043_PWRSTATE_FULL_TX;
   098B 90 40 02      [24] 5747 	mov	dptr,#_AX5043_PWRMODE
   098E 74 0D         [12] 5748 	mov	a,#0x0D
   0990 F0            [24] 5749 	movx	@dptr,a
                     0991  5750 	C$easyax5043.c$728$2$248 ==.
                           5751 ;	../COMMON/easyax5043.c:728: axradio_trxstate = trxstate_off;
   0991 75*01 00      [24] 5752 	mov	_axradio_trxstate,#0x00
                     0994  5753 	C$easyax5043.c$729$2$248 ==.
                           5754 ;	../COMMON/easyax5043.c:729: update_timeanchor();
   0994 12r00r00      [24] 5755 	lcall	_update_timeanchor
                     0997  5756 	C$easyax5043.c$730$2$248 ==.
                           5757 ;	../COMMON/easyax5043.c:730: wtimer_remove_callback(&axradio_cb_transmitstart.cb);
   0997 90r02r67      [24] 5758 	mov	dptr,#_axradio_cb_transmitstart
   099A 12r00r00      [24] 5759 	lcall	_wtimer_remove_callback
                     099D  5760 	C$easyax5043.c$731$2$248 ==.
                           5761 ;	../COMMON/easyax5043.c:731: axradio_cb_transmitstart.st.error = AXRADIO_ERR_NOERROR;
   099D 90r02r6C      [24] 5762 	mov	dptr,#(_axradio_cb_transmitstart + 0x0005)
   09A0 E4            [12] 5763 	clr	a
   09A1 F0            [24] 5764 	movx	@dptr,a
                     09A2  5765 	C$easyax5043.c$732$2$248 ==.
                           5766 ;	../COMMON/easyax5043.c:732: axradio_cb_transmitstart.st.time.t = axradio_timeanchor.radiotimer;
   09A2 90r00r16      [24] 5767 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   09A5 E0            [24] 5768 	movx	a,@dptr
   09A6 FC            [12] 5769 	mov	r4,a
   09A7 A3            [24] 5770 	inc	dptr
   09A8 E0            [24] 5771 	movx	a,@dptr
   09A9 FD            [12] 5772 	mov	r5,a
   09AA A3            [24] 5773 	inc	dptr
   09AB E0            [24] 5774 	movx	a,@dptr
   09AC FE            [12] 5775 	mov	r6,a
   09AD A3            [24] 5776 	inc	dptr
   09AE E0            [24] 5777 	movx	a,@dptr
   09AF FF            [12] 5778 	mov	r7,a
   09B0 90r02r6D      [24] 5779 	mov	dptr,#(_axradio_cb_transmitstart + 0x0006)
   09B3 EC            [12] 5780 	mov	a,r4
   09B4 F0            [24] 5781 	movx	@dptr,a
   09B5 ED            [12] 5782 	mov	a,r5
   09B6 A3            [24] 5783 	inc	dptr
   09B7 F0            [24] 5784 	movx	@dptr,a
   09B8 EE            [12] 5785 	mov	a,r6
   09B9 A3            [24] 5786 	inc	dptr
   09BA F0            [24] 5787 	movx	@dptr,a
   09BB EF            [12] 5788 	mov	a,r7
   09BC A3            [24] 5789 	inc	dptr
   09BD F0            [24] 5790 	movx	@dptr,a
                     09BE  5791 	C$easyax5043.c$733$2$248 ==.
                           5792 ;	../COMMON/easyax5043.c:733: wtimer_add_callback(&axradio_cb_transmitstart.cb);
   09BE 90r02r67      [24] 5793 	mov	dptr,#_axradio_cb_transmitstart
   09C1 12r00r00      [24] 5794 	lcall	_wtimer_add_callback
                     09C4  5795 	C$easyax5043.c$734$2$248 ==.
                           5796 ;	../COMMON/easyax5043.c:734: break;
   09C4 02r0ArE8      [24] 5797 	ljmp	00164$
                     09C7  5798 	C$easyax5043.c$736$2$248 ==.
                           5799 ;	../COMMON/easyax5043.c:736: case trxstate_txstream_xtalwait:
   09C7                    5800 00145$:
                     09C7  5801 	C$easyax5043.c$737$2$248 ==.
                           5802 ;	../COMMON/easyax5043.c:737: if (AX5043_IRQREQUEST1 & 0x01) {
   09C7 90 40 0C      [24] 5803 	mov	dptr,#_AX5043_IRQREQUEST1
   09CA E0            [24] 5804 	movx	a,@dptr
   09CB FF            [12] 5805 	mov	r7,a
   09CC 20 E0 03      [24] 5806 	jb	acc.0,00280$
   09CF 02r0Ar64      [24] 5807 	ljmp	00155$
   09D2                    5808 00280$:
                     09D2  5809 	C$easyax5043.c$738$3$255 ==.
                           5810 ;	../COMMON/easyax5043.c:738: AX5043_RADIOEVENTMASK0 = 0x03; // enable PLL settled and done event
   09D2 90 40 09      [24] 5811 	mov	dptr,#_AX5043_RADIOEVENTMASK0
   09D5 74 03         [12] 5812 	mov	a,#0x03
   09D7 F0            [24] 5813 	movx	@dptr,a
                     09D8  5814 	C$easyax5043.c$739$3$255 ==.
                           5815 ;	../COMMON/easyax5043.c:739: AX5043_IRQMASK1 = 0x00;
   09D8 90 40 06      [24] 5816 	mov	dptr,#_AX5043_IRQMASK1
   09DB E4            [12] 5817 	clr	a
   09DC F0            [24] 5818 	movx	@dptr,a
                     09DD  5819 	C$easyax5043.c$740$3$255 ==.
                           5820 ;	../COMMON/easyax5043.c:740: AX5043_IRQMASK0 = 0x40; // enable radio controller irq
   09DD 90 40 07      [24] 5821 	mov	dptr,#_AX5043_IRQMASK0
   09E0 74 40         [12] 5822 	mov	a,#0x40
   09E2 F0            [24] 5823 	movx	@dptr,a
                     09E3  5824 	C$easyax5043.c$741$3$255 ==.
                           5825 ;	../COMMON/easyax5043.c:741: AX5043_PWRMODE = AX5043_PWRSTATE_FULL_TX;
   09E3 90 40 02      [24] 5826 	mov	dptr,#_AX5043_PWRMODE
   09E6 74 0D         [12] 5827 	mov	a,#0x0D
   09E8 F0            [24] 5828 	movx	@dptr,a
                     09E9  5829 	C$easyax5043.c$742$3$255 ==.
                           5830 ;	../COMMON/easyax5043.c:742: axradio_trxstate = trxstate_txstream;
   09E9 75*01 10      [24] 5831 	mov	_axradio_trxstate,#0x10
                     09EC  5832 	C$easyax5043.c$744$2$248 ==.
                           5833 ;	../COMMON/easyax5043.c:744: goto txstreamdatacb;
                     09EC  5834 	C$easyax5043.c$746$2$248 ==.
                           5835 ;	../COMMON/easyax5043.c:746: case trxstate_txstream:
   09EC 80 76         [24] 5836 	sjmp	00155$
   09EE                    5837 00148$:
                     09EE  5838 	C$easyax5043.c$748$3$248 ==.
                           5839 ;	../COMMON/easyax5043.c:748: uint8_t __autodata evt = AX5043_RADIOEVENTREQ0;
   09EE 90 40 0F      [24] 5840 	mov	dptr,#_AX5043_RADIOEVENTREQ0
   09F1 E0            [24] 5841 	movx	a,@dptr
                     09F2  5842 	C$easyax5043.c$749$3$256 ==.
                           5843 ;	../COMMON/easyax5043.c:749: if (evt & 0x03)
   09F2 FF            [12] 5844 	mov	r7,a
   09F3 54 03         [12] 5845 	anl	a,#0x03
   09F5 60 07         [24] 5846 	jz	00150$
                     09F7  5847 	C$easyax5043.c$750$3$256 ==.
                           5848 ;	../COMMON/easyax5043.c:750: update_timeanchor();
   09F7 C0 07         [24] 5849 	push	ar7
   09F9 12r00r00      [24] 5850 	lcall	_update_timeanchor
   09FC D0 07         [24] 5851 	pop	ar7
   09FE                    5852 00150$:
                     09FE  5853 	C$easyax5043.c$751$3$256 ==.
                           5854 ;	../COMMON/easyax5043.c:751: if (evt & 0x01) {
   09FE EF            [12] 5855 	mov	a,r7
   09FF 30 E0 31      [24] 5856 	jnb	acc.0,00152$
                     0A02  5857 	C$easyax5043.c$752$4$257 ==.
                           5858 ;	../COMMON/easyax5043.c:752: wtimer_remove_callback(&axradio_cb_transmitend.cb);
   0A02 90r02r71      [24] 5859 	mov	dptr,#_axradio_cb_transmitend
   0A05 C0 07         [24] 5860 	push	ar7
   0A07 12r00r00      [24] 5861 	lcall	_wtimer_remove_callback
                     0A0A  5862 	C$easyax5043.c$753$4$257 ==.
                           5863 ;	../COMMON/easyax5043.c:753: axradio_cb_transmitend.st.error = AXRADIO_ERR_NOERROR;
   0A0A 90r02r76      [24] 5864 	mov	dptr,#(_axradio_cb_transmitend + 0x0005)
   0A0D E4            [12] 5865 	clr	a
   0A0E F0            [24] 5866 	movx	@dptr,a
                     0A0F  5867 	C$easyax5043.c$754$4$257 ==.
                           5868 ;	../COMMON/easyax5043.c:754: axradio_cb_transmitend.st.time.t = axradio_timeanchor.radiotimer;
   0A0F 90r00r16      [24] 5869 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   0A12 E0            [24] 5870 	movx	a,@dptr
   0A13 FB            [12] 5871 	mov	r3,a
   0A14 A3            [24] 5872 	inc	dptr
   0A15 E0            [24] 5873 	movx	a,@dptr
   0A16 FC            [12] 5874 	mov	r4,a
   0A17 A3            [24] 5875 	inc	dptr
   0A18 E0            [24] 5876 	movx	a,@dptr
   0A19 FD            [12] 5877 	mov	r5,a
   0A1A A3            [24] 5878 	inc	dptr
   0A1B E0            [24] 5879 	movx	a,@dptr
   0A1C FE            [12] 5880 	mov	r6,a
   0A1D 90r02r77      [24] 5881 	mov	dptr,#(_axradio_cb_transmitend + 0x0006)
   0A20 EB            [12] 5882 	mov	a,r3
   0A21 F0            [24] 5883 	movx	@dptr,a
   0A22 EC            [12] 5884 	mov	a,r4
   0A23 A3            [24] 5885 	inc	dptr
   0A24 F0            [24] 5886 	movx	@dptr,a
   0A25 ED            [12] 5887 	mov	a,r5
   0A26 A3            [24] 5888 	inc	dptr
   0A27 F0            [24] 5889 	movx	@dptr,a
   0A28 EE            [12] 5890 	mov	a,r6
   0A29 A3            [24] 5891 	inc	dptr
   0A2A F0            [24] 5892 	movx	@dptr,a
                     0A2B  5893 	C$easyax5043.c$755$4$257 ==.
                           5894 ;	../COMMON/easyax5043.c:755: wtimer_add_callback(&axradio_cb_transmitend.cb);
   0A2B 90r02r71      [24] 5895 	mov	dptr,#_axradio_cb_transmitend
   0A2E 12r00r00      [24] 5896 	lcall	_wtimer_add_callback
   0A31 D0 07         [24] 5897 	pop	ar7
   0A33                    5898 00152$:
                     0A33  5899 	C$easyax5043.c$757$3$256 ==.
                           5900 ;	../COMMON/easyax5043.c:757: if (evt & 0x02) {
   0A33 EF            [12] 5901 	mov	a,r7
   0A34 30 E1 2D      [24] 5902 	jnb	acc.1,00155$
                     0A37  5903 	C$easyax5043.c$758$4$258 ==.
                           5904 ;	../COMMON/easyax5043.c:758: wtimer_remove_callback(&axradio_cb_transmitstart.cb);
   0A37 90r02r67      [24] 5905 	mov	dptr,#_axradio_cb_transmitstart
   0A3A 12r00r00      [24] 5906 	lcall	_wtimer_remove_callback
                     0A3D  5907 	C$easyax5043.c$759$4$258 ==.
                           5908 ;	../COMMON/easyax5043.c:759: axradio_cb_transmitstart.st.error = AXRADIO_ERR_NOERROR;
   0A3D 90r02r6C      [24] 5909 	mov	dptr,#(_axradio_cb_transmitstart + 0x0005)
   0A40 E4            [12] 5910 	clr	a
   0A41 F0            [24] 5911 	movx	@dptr,a
                     0A42  5912 	C$easyax5043.c$760$4$258 ==.
                           5913 ;	../COMMON/easyax5043.c:760: axradio_cb_transmitstart.st.time.t = axradio_timeanchor.radiotimer;
   0A42 90r00r16      [24] 5914 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   0A45 E0            [24] 5915 	movx	a,@dptr
   0A46 FC            [12] 5916 	mov	r4,a
   0A47 A3            [24] 5917 	inc	dptr
   0A48 E0            [24] 5918 	movx	a,@dptr
   0A49 FD            [12] 5919 	mov	r5,a
   0A4A A3            [24] 5920 	inc	dptr
   0A4B E0            [24] 5921 	movx	a,@dptr
   0A4C FE            [12] 5922 	mov	r6,a
   0A4D A3            [24] 5923 	inc	dptr
   0A4E E0            [24] 5924 	movx	a,@dptr
   0A4F FF            [12] 5925 	mov	r7,a
   0A50 90r02r6D      [24] 5926 	mov	dptr,#(_axradio_cb_transmitstart + 0x0006)
   0A53 EC            [12] 5927 	mov	a,r4
   0A54 F0            [24] 5928 	movx	@dptr,a
   0A55 ED            [12] 5929 	mov	a,r5
   0A56 A3            [24] 5930 	inc	dptr
   0A57 F0            [24] 5931 	movx	@dptr,a
   0A58 EE            [12] 5932 	mov	a,r6
   0A59 A3            [24] 5933 	inc	dptr
   0A5A F0            [24] 5934 	movx	@dptr,a
   0A5B EF            [12] 5935 	mov	a,r7
   0A5C A3            [24] 5936 	inc	dptr
   0A5D F0            [24] 5937 	movx	@dptr,a
                     0A5E  5938 	C$easyax5043.c$761$4$258 ==.
                           5939 ;	../COMMON/easyax5043.c:761: wtimer_add_callback(&axradio_cb_transmitstart.cb);
   0A5E 90r02r67      [24] 5940 	mov	dptr,#_axradio_cb_transmitstart
   0A61 12r00r00      [24] 5941 	lcall	_wtimer_add_callback
                     0A64  5942 	C$easyax5043.c$764$2$248 ==.
                           5943 ;	../COMMON/easyax5043.c:764: txstreamdatacb:
   0A64                    5944 00155$:
                     0A64  5945 	C$easyax5043.c$765$2$248 ==.
                           5946 ;	../COMMON/easyax5043.c:765: if (AX5043_IRQREQUEST0 & AX5043_IRQMASK0 & 0x08) {
   0A64 90 40 0D      [24] 5947 	mov	dptr,#_AX5043_IRQREQUEST0
   0A67 E0            [24] 5948 	movx	a,@dptr
   0A68 FF            [12] 5949 	mov	r7,a
   0A69 90 40 07      [24] 5950 	mov	dptr,#_AX5043_IRQMASK0
   0A6C E0            [24] 5951 	movx	a,@dptr
   0A6D FE            [12] 5952 	mov	r6,a
   0A6E 5F            [12] 5953 	anl	a,r7
   0A6F 30 E3 76      [24] 5954 	jnb	acc.3,00164$
                     0A72  5955 	C$easyax5043.c$766$3$259 ==.
                           5956 ;	../COMMON/easyax5043.c:766: AX5043_IRQMASK0 &= (uint8_t)~0x08;
   0A72 90 40 07      [24] 5957 	mov	dptr,#_AX5043_IRQMASK0
   0A75 E0            [24] 5958 	movx	a,@dptr
   0A76 54 F7         [12] 5959 	anl	a,#0xF7
   0A78 F0            [24] 5960 	movx	@dptr,a
                     0A79  5961 	C$easyax5043.c$767$3$259 ==.
                           5962 ;	../COMMON/easyax5043.c:767: update_timeanchor();
   0A79 12r00r00      [24] 5963 	lcall	_update_timeanchor
                     0A7C  5964 	C$easyax5043.c$768$3$259 ==.
                           5965 ;	../COMMON/easyax5043.c:768: wtimer_remove_callback(&axradio_cb_transmitdata.cb);
   0A7C 90r02r7B      [24] 5966 	mov	dptr,#_axradio_cb_transmitdata
   0A7F 12r00r00      [24] 5967 	lcall	_wtimer_remove_callback
                     0A82  5968 	C$easyax5043.c$769$3$259 ==.
                           5969 ;	../COMMON/easyax5043.c:769: axradio_cb_transmitdata.st.error = AXRADIO_ERR_NOERROR;
   0A82 90r02r80      [24] 5970 	mov	dptr,#(_axradio_cb_transmitdata + 0x0005)
   0A85 E4            [12] 5971 	clr	a
   0A86 F0            [24] 5972 	movx	@dptr,a
                     0A87  5973 	C$easyax5043.c$770$3$259 ==.
                           5974 ;	../COMMON/easyax5043.c:770: axradio_cb_transmitdata.st.time.t = axradio_timeanchor.radiotimer;
   0A87 90r00r16      [24] 5975 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   0A8A E0            [24] 5976 	movx	a,@dptr
   0A8B FC            [12] 5977 	mov	r4,a
   0A8C A3            [24] 5978 	inc	dptr
   0A8D E0            [24] 5979 	movx	a,@dptr
   0A8E FD            [12] 5980 	mov	r5,a
   0A8F A3            [24] 5981 	inc	dptr
   0A90 E0            [24] 5982 	movx	a,@dptr
   0A91 FE            [12] 5983 	mov	r6,a
   0A92 A3            [24] 5984 	inc	dptr
   0A93 E0            [24] 5985 	movx	a,@dptr
   0A94 FF            [12] 5986 	mov	r7,a
   0A95 90r02r81      [24] 5987 	mov	dptr,#(_axradio_cb_transmitdata + 0x0006)
   0A98 EC            [12] 5988 	mov	a,r4
   0A99 F0            [24] 5989 	movx	@dptr,a
   0A9A ED            [12] 5990 	mov	a,r5
   0A9B A3            [24] 5991 	inc	dptr
   0A9C F0            [24] 5992 	movx	@dptr,a
   0A9D EE            [12] 5993 	mov	a,r6
   0A9E A3            [24] 5994 	inc	dptr
   0A9F F0            [24] 5995 	movx	@dptr,a
   0AA0 EF            [12] 5996 	mov	a,r7
   0AA1 A3            [24] 5997 	inc	dptr
   0AA2 F0            [24] 5998 	movx	@dptr,a
                     0AA3  5999 	C$easyax5043.c$771$3$259 ==.
                           6000 ;	../COMMON/easyax5043.c:771: wtimer_add_callback(&axradio_cb_transmitdata.cb);
   0AA3 90r02r7B      [24] 6001 	mov	dptr,#_axradio_cb_transmitdata
   0AA6 12r00r00      [24] 6002 	lcall	_wtimer_add_callback
                     0AA9  6003 	C$easyax5043.c$773$2$248 ==.
                           6004 ;	../COMMON/easyax5043.c:773: break;
                     0AA9  6005 	C$easyax5043.c$775$2$248 ==.
                           6006 ;	../COMMON/easyax5043.c:775: case trxstate_rxwor:
   0AA9 80 3D         [24] 6007 	sjmp	00164$
   0AAB                    6008 00158$:
                     0AAB  6009 	C$easyax5043.c$776$2$248 ==.
                           6010 ;	../COMMON/easyax5043.c:776: if( AX5043_IRQREQUEST1 & 0x01 ) // XTAL ready
   0AAB 90 40 0C      [24] 6011 	mov	dptr,#_AX5043_IRQREQUEST1
   0AAE E0            [24] 6012 	movx	a,@dptr
   0AAF FF            [12] 6013 	mov	r7,a
   0AB0 30 E0 0A      [24] 6014 	jnb	acc.0,00160$
                     0AB3  6015 	C$easyax5043.c$778$3$260 ==.
                           6016 ;	../COMMON/easyax5043.c:778: AX5043_IRQINVERSION1 |= 0x01; // invert the xtal ready irq so it does not fire continuously
   0AB3 90 40 0A      [24] 6017 	mov	dptr,#_AX5043_IRQINVERSION1
   0AB6 E0            [24] 6018 	movx	a,@dptr
   0AB7 FF            [12] 6019 	mov	r7,a
   0AB8 44 01         [12] 6020 	orl	a,#0x01
   0ABA F0            [24] 6021 	movx	@dptr,a
   0ABB 80 28         [24] 6022 	sjmp	00162$
   0ABD                    6023 00160$:
                     0ABD  6024 	C$easyax5043.c$782$3$261 ==.
                           6025 ;	../COMMON/easyax5043.c:782: AX5043_IRQINVERSION1 &= ~0x01; // drop xtal ready irq inversion --> armed again for next wake-up
   0ABD 90 40 0A      [24] 6026 	mov	dptr,#_AX5043_IRQINVERSION1
   0AC0 E0            [24] 6027 	movx	a,@dptr
   0AC1 54 FE         [12] 6028 	anl	a,#0xFE
   0AC3 F0            [24] 6029 	movx	@dptr,a
                     0AC4  6030 	C$easyax5043.c$783$3$261 ==.
                           6031 ;	../COMMON/easyax5043.c:783: AX5043_0xF30 = f30_saved;
   0AC4 90r00r00      [24] 6032 	mov	dptr,#_f30_saved
   0AC7 E0            [24] 6033 	movx	a,@dptr
   0AC8 90 4F 30      [24] 6034 	mov	dptr,#_AX5043_0xF30
   0ACB F0            [24] 6035 	movx	@dptr,a
                     0ACC  6036 	C$easyax5043.c$784$3$261 ==.
                           6037 ;	../COMMON/easyax5043.c:784: AX5043_0xF31 = f31_saved;
   0ACC 90r00r01      [24] 6038 	mov	dptr,#_f31_saved
   0ACF E0            [24] 6039 	movx	a,@dptr
   0AD0 90 4F 31      [24] 6040 	mov	dptr,#_AX5043_0xF31
   0AD3 F0            [24] 6041 	movx	@dptr,a
                     0AD4  6042 	C$easyax5043.c$785$3$261 ==.
                           6043 ;	../COMMON/easyax5043.c:785: AX5043_0xF32 = f32_saved;
   0AD4 90r00r02      [24] 6044 	mov	dptr,#_f32_saved
   0AD7 E0            [24] 6045 	movx	a,@dptr
   0AD8 90 4F 32      [24] 6046 	mov	dptr,#_AX5043_0xF32
   0ADB F0            [24] 6047 	movx	@dptr,a
                     0ADC  6048 	C$easyax5043.c$786$3$261 ==.
                           6049 ;	../COMMON/easyax5043.c:786: AX5043_0xF33 = f33_saved;
   0ADC 90r00r03      [24] 6050 	mov	dptr,#_f33_saved
   0ADF E0            [24] 6051 	movx	a,@dptr
   0AE0 FF            [12] 6052 	mov	r7,a
   0AE1 90 4F 33      [24] 6053 	mov	dptr,#_AX5043_0xF33
   0AE4 F0            [24] 6054 	movx	@dptr,a
                     0AE5  6055 	C$easyax5043.c$790$2$248 ==.
                           6056 ;	../COMMON/easyax5043.c:790: case trxstate_rx:
   0AE5                    6057 00162$:
                     0AE5  6058 	C$easyax5043.c$791$2$248 ==.
                           6059 ;	../COMMON/easyax5043.c:791: receive_isr();
   0AE5 12r01r02      [24] 6060 	lcall	_receive_isr
                     0AE8  6061 	C$easyax5043.c$794$1$247 ==.
                           6062 ;	../COMMON/easyax5043.c:794: } // end switch(axradio_trxstate)
   0AE8                    6063 00164$:
   0AE8 D0 D0         [24] 6064 	pop	psw
   0AEA D0 00         [24] 6065 	pop	(0+0)
   0AEC D0 01         [24] 6066 	pop	(0+1)
   0AEE D0 02         [24] 6067 	pop	(0+2)
   0AF0 D0 03         [24] 6068 	pop	(0+3)
   0AF2 D0 04         [24] 6069 	pop	(0+4)
   0AF4 D0 05         [24] 6070 	pop	(0+5)
   0AF6 D0 06         [24] 6071 	pop	(0+6)
   0AF8 D0 07         [24] 6072 	pop	(0+7)
   0AFA D0 83         [24] 6073 	pop	dph
   0AFC D0 82         [24] 6074 	pop	dpl
   0AFE D0 F0         [24] 6075 	pop	b
   0B00 D0 E0         [24] 6076 	pop	acc
   0B02 D0*00         [24] 6077 	pop	bits
                     0B04  6078 	C$easyax5043.c$795$1$247 ==.
                     0B04  6079 	XG$axradio_isr$0$0 ==.
   0B04 32            [24] 6080 	reti
                           6081 ;------------------------------------------------------------
                           6082 ;Allocation info for local variables in function 'ax5043_receiver_on_continuous'
                           6083 ;------------------------------------------------------------
                           6084 ;rschanged_int             Allocated to registers r7 
                           6085 ;------------------------------------------------------------
                     0B05  6086 	G$ax5043_receiver_on_continuous$0$0 ==.
                     0B05  6087 	C$easyax5043.c$798$1$247 ==.
                           6088 ;	../COMMON/easyax5043.c:798: __reentrantb void ax5043_receiver_on_continuous(void) __reentrant
                           6089 ;	-----------------------------------------
                           6090 ;	 function ax5043_receiver_on_continuous
                           6091 ;	-----------------------------------------
   0B05                    6092 _ax5043_receiver_on_continuous:
                     0B05  6093 	C$easyax5043.c$800$1$263 ==.
                           6094 ;	../COMMON/easyax5043.c:800: uint8_t rschanged_int = (axradio_framing_enable_sfdcallback | (axradio_mode == AXRADIO_MODE_SYNC_ACK_SLAVE) | (axradio_mode == AXRADIO_MODE_SYNC_SLAVE) );
   0B05 74 23         [12] 6095 	mov	a,#0x23
   0B07 B5*00 04      [24] 6096 	cjne	a,_axradio_mode,00133$
   0B0A 74 01         [12] 6097 	mov	a,#0x01
   0B0C 80 01         [24] 6098 	sjmp	00134$
   0B0E                    6099 00133$:
   0B0E E4            [12] 6100 	clr	a
   0B0F                    6101 00134$:
   0B0F FF            [12] 6102 	mov	r7,a
   0B10 90r00r00      [24] 6103 	mov	dptr,#_axradio_framing_enable_sfdcallback
   0B13 E4            [12] 6104 	clr	a
   0B14 93            [24] 6105 	movc	a,@a+dptr
   0B15 FE            [12] 6106 	mov	r6,a
   0B16 42 07         [12] 6107 	orl	ar7,a
   0B18 74 22         [12] 6108 	mov	a,#0x22
   0B1A B5*00 04      [24] 6109 	cjne	a,_axradio_mode,00135$
   0B1D 74 01         [12] 6110 	mov	a,#0x01
   0B1F 80 01         [24] 6111 	sjmp	00136$
   0B21                    6112 00135$:
   0B21 E4            [12] 6113 	clr	a
   0B22                    6114 00136$:
   0B22 FE            [12] 6115 	mov	r6,a
   0B23 42 07         [12] 6116 	orl	ar7,a
                     0B25  6117 	C$easyax5043.c$801$1$263 ==.
                           6118 ;	../COMMON/easyax5043.c:801: if(rschanged_int)
   0B25 EF            [12] 6119 	mov	a,r7
   0B26 60 06         [24] 6120 	jz	00102$
                     0B28  6121 	C$easyax5043.c$802$1$263 ==.
                           6122 ;	../COMMON/easyax5043.c:802: AX5043_RADIOEVENTMASK0 = 0x04;
   0B28 90 40 09      [24] 6123 	mov	dptr,#_AX5043_RADIOEVENTMASK0
   0B2B 74 04         [12] 6124 	mov	a,#0x04
   0B2D F0            [24] 6125 	movx	@dptr,a
   0B2E                    6126 00102$:
                     0B2E  6127 	C$easyax5043.c$803$1$263 ==.
                           6128 ;	../COMMON/easyax5043.c:803: AX5043_RSSIREFERENCE = axradio_phy_rssireference;
   0B2E 90r00r00      [24] 6129 	mov	dptr,#_axradio_phy_rssireference
   0B31 E4            [12] 6130 	clr	a
   0B32 93            [24] 6131 	movc	a,@a+dptr
   0B33 FE            [12] 6132 	mov	r6,a
   0B34 90 42 2C      [24] 6133 	mov	dptr,#_AX5043_RSSIREFERENCE
   0B37 F0            [24] 6134 	movx	@dptr,a
                     0B38  6135 	C$easyax5043.c$804$1$263 ==.
                           6136 ;	../COMMON/easyax5043.c:804: if (axradio_mode == AXRADIO_MODE_ASYNC_RECEIVE ||
   0B38 74 18         [12] 6137 	mov	a,#0x18
   0B3A B5*00 02      [24] 6138 	cjne	a,_axradio_mode,00138$
   0B3D 80 1A         [24] 6139 	sjmp	00103$
   0B3F                    6140 00138$:
                     0B3F  6141 	C$easyax5043.c$805$1$263 ==.
                           6142 ;	../COMMON/easyax5043.c:805: axradio_mode == AXRADIO_MODE_ACK_RECEIVE ||
   0B3F 74 1A         [12] 6143 	mov	a,#0x1A
   0B41 B5*00 02      [24] 6144 	cjne	a,_axradio_mode,00139$
   0B44 80 13         [24] 6145 	sjmp	00103$
   0B46                    6146 00139$:
                     0B46  6147 	C$easyax5043.c$806$1$263 ==.
                           6148 ;	../COMMON/easyax5043.c:806: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE ||
   0B46 74 1C         [12] 6149 	mov	a,#0x1C
   0B48 B5*00 02      [24] 6150 	cjne	a,_axradio_mode,00140$
   0B4B 80 0C         [24] 6151 	sjmp	00103$
   0B4D                    6152 00140$:
                     0B4D  6153 	C$easyax5043.c$807$1$263 ==.
                           6154 ;	../COMMON/easyax5043.c:807: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_UNENC ||
   0B4D 74 1D         [12] 6155 	mov	a,#0x1D
   0B4F B5*00 02      [24] 6156 	cjne	a,_axradio_mode,00141$
   0B52 80 05         [24] 6157 	sjmp	00103$
   0B54                    6158 00141$:
                     0B54  6159 	C$easyax5043.c$808$1$263 ==.
                           6160 ;	../COMMON/easyax5043.c:808: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_SCRAM) {
   0B54 74 1E         [12] 6161 	mov	a,#0x1E
   0B56 B5*00 13      [24] 6162 	cjne	a,_axradio_mode,00104$
   0B59                    6163 00103$:
                     0B59  6164 	C$easyax5043.c$809$2$264 ==.
                           6165 ;	../COMMON/easyax5043.c:809: AX5043_TMGRXPREAMBLE1 = axradio_phy_tmgrxpreamble1_cont;
   0B59 90r00r00      [24] 6166 	mov	dptr,#_axradio_phy_tmgrxpreamble1_cont
   0B5C E4            [12] 6167 	clr	a
   0B5D 93            [24] 6168 	movc	a,@a+dptr
   0B5E 90 42 29      [24] 6169 	mov	dptr,#_AX5043_TMGRXPREAMBLE1
   0B61 F0            [24] 6170 	movx	@dptr,a
                     0B62  6171 	C$easyax5043.c$810$2$264 ==.
                           6172 ;	../COMMON/easyax5043.c:810: AX5043_PKTSTOREFLAGS |= 0x40;
   0B62 90 42 32      [24] 6173 	mov	dptr,#_AX5043_PKTSTOREFLAGS
   0B65 E0            [24] 6174 	movx	a,@dptr
   0B66 FE            [12] 6175 	mov	r6,a
   0B67 44 40         [12] 6176 	orl	a,#0x40
   0B69 F0            [24] 6177 	movx	@dptr,a
   0B6A 80 0D         [24] 6178 	sjmp	00105$
   0B6C                    6179 00104$:
                     0B6C  6180 	C$easyax5043.c$812$2$265 ==.
                           6181 ;	../COMMON/easyax5043.c:812: AX5043_TMGRXPREAMBLE1 = 0x00;
   0B6C 90 42 29      [24] 6182 	mov	dptr,#_AX5043_TMGRXPREAMBLE1
   0B6F E4            [12] 6183 	clr	a
   0B70 F0            [24] 6184 	movx	@dptr,a
                     0B71  6185 	C$easyax5043.c$813$2$265 ==.
                           6186 ;	../COMMON/easyax5043.c:813: AX5043_PKTSTOREFLAGS &= (uint8_t)~0x40;
   0B71 90 42 32      [24] 6187 	mov	dptr,#_AX5043_PKTSTOREFLAGS
   0B74 E0            [24] 6188 	movx	a,@dptr
   0B75 FE            [12] 6189 	mov	r6,a
   0B76 54 BF         [12] 6190 	anl	a,#0xBF
   0B78 F0            [24] 6191 	movx	@dptr,a
   0B79                    6192 00105$:
                     0B79  6193 	C$easyax5043.c$815$1$263 ==.
                           6194 ;	../COMMON/easyax5043.c:815: AX5043_FIFOSTAT = 3; // clear FIFO data & flags
   0B79 90 40 28      [24] 6195 	mov	dptr,#_AX5043_FIFOSTAT
   0B7C 74 03         [12] 6196 	mov	a,#0x03
   0B7E F0            [24] 6197 	movx	@dptr,a
                     0B7F  6198 	C$easyax5043.c$816$1$263 ==.
                           6199 ;	../COMMON/easyax5043.c:816: AX5043_PWRMODE = AX5043_PWRSTATE_FULL_RX;
   0B7F 90 40 02      [24] 6200 	mov	dptr,#_AX5043_PWRMODE
   0B82 74 09         [12] 6201 	mov	a,#0x09
   0B84 F0            [24] 6202 	movx	@dptr,a
                     0B85  6203 	C$easyax5043.c$817$1$263 ==.
                           6204 ;	../COMMON/easyax5043.c:817: axradio_trxstate = trxstate_rx;
   0B85 75*01 01      [24] 6205 	mov	_axradio_trxstate,#0x01
                     0B88  6206 	C$easyax5043.c$818$1$263 ==.
                           6207 ;	../COMMON/easyax5043.c:818: if(rschanged_int)
   0B88 EF            [12] 6208 	mov	a,r7
   0B89 60 08         [24] 6209 	jz	00111$
                     0B8B  6210 	C$easyax5043.c$819$1$263 ==.
                           6211 ;	../COMMON/easyax5043.c:819: AX5043_IRQMASK0 = 0x41; //  enable FIFO not empty / radio controller irq
   0B8B 90 40 07      [24] 6212 	mov	dptr,#_AX5043_IRQMASK0
   0B8E 74 41         [12] 6213 	mov	a,#0x41
   0B90 F0            [24] 6214 	movx	@dptr,a
   0B91 80 06         [24] 6215 	sjmp	00112$
   0B93                    6216 00111$:
                     0B93  6217 	C$easyax5043.c$821$1$263 ==.
                           6218 ;	../COMMON/easyax5043.c:821: AX5043_IRQMASK0 = 0x01; //  enable FIFO not empty
   0B93 90 40 07      [24] 6219 	mov	dptr,#_AX5043_IRQMASK0
   0B96 74 01         [12] 6220 	mov	a,#0x01
   0B98 F0            [24] 6221 	movx	@dptr,a
   0B99                    6222 00112$:
                     0B99  6223 	C$easyax5043.c$822$1$263 ==.
                           6224 ;	../COMMON/easyax5043.c:822: AX5043_IRQMASK1 = 0x00;
   0B99 90 40 06      [24] 6225 	mov	dptr,#_AX5043_IRQMASK1
   0B9C E4            [12] 6226 	clr	a
   0B9D F0            [24] 6227 	movx	@dptr,a
                     0B9E  6228 	C$easyax5043.c$823$1$263 ==.
                     0B9E  6229 	XG$ax5043_receiver_on_continuous$0$0 ==.
   0B9E 22            [24] 6230 	ret
                           6231 ;------------------------------------------------------------
                           6232 ;Allocation info for local variables in function 'ax5043_receiver_on_wor'
                           6233 ;------------------------------------------------------------
                           6234 ;wp                        Allocated to registers r6 r7 
                           6235 ;------------------------------------------------------------
                     0B9F  6236 	G$ax5043_receiver_on_wor$0$0 ==.
                     0B9F  6237 	C$easyax5043.c$825$1$263 ==.
                           6238 ;	../COMMON/easyax5043.c:825: __reentrantb void ax5043_receiver_on_wor(void) __reentrant
                           6239 ;	-----------------------------------------
                           6240 ;	 function ax5043_receiver_on_wor
                           6241 ;	-----------------------------------------
   0B9F                    6242 _ax5043_receiver_on_wor:
                     0B9F  6243 	C$easyax5043.c$827$1$267 ==.
                           6244 ;	../COMMON/easyax5043.c:827: AX5043_BGNDRSSIGAIN = 0x02;
   0B9F 90 42 2E      [24] 6245 	mov	dptr,#_AX5043_BGNDRSSIGAIN
   0BA2 74 02         [12] 6246 	mov	a,#0x02
   0BA4 F0            [24] 6247 	movx	@dptr,a
                     0BA5  6248 	C$easyax5043.c$828$1$267 ==.
                           6249 ;	../COMMON/easyax5043.c:828: if(axradio_framing_enable_sfdcallback)
   0BA5 90r00r00      [24] 6250 	mov	dptr,#_axradio_framing_enable_sfdcallback
   0BA8 E4            [12] 6251 	clr	a
   0BA9 93            [24] 6252 	movc	a,@a+dptr
   0BAA FF            [12] 6253 	mov	r7,a
   0BAB 60 06         [24] 6254 	jz	00102$
                     0BAD  6255 	C$easyax5043.c$829$1$267 ==.
                           6256 ;	../COMMON/easyax5043.c:829: AX5043_RADIOEVENTMASK0 = 0x04;
   0BAD 90 40 09      [24] 6257 	mov	dptr,#_AX5043_RADIOEVENTMASK0
   0BB0 74 04         [12] 6258 	mov	a,#0x04
   0BB2 F0            [24] 6259 	movx	@dptr,a
   0BB3                    6260 00102$:
                     0BB3  6261 	C$easyax5043.c$830$1$267 ==.
                           6262 ;	../COMMON/easyax5043.c:830: AX5043_FIFOSTAT = 3; // clear FIFO data & flags
   0BB3 90 40 28      [24] 6263 	mov	dptr,#_AX5043_FIFOSTAT
   0BB6 74 03         [12] 6264 	mov	a,#0x03
   0BB8 F0            [24] 6265 	movx	@dptr,a
                     0BB9  6266 	C$easyax5043.c$831$1$267 ==.
                           6267 ;	../COMMON/easyax5043.c:831: AX5043_LPOSCCONFIG = 0x01; // start LPOSC, slow mode
   0BB9 90 43 10      [24] 6268 	mov	dptr,#_AX5043_LPOSCCONFIG
   0BBC 74 01         [12] 6269 	mov	a,#0x01
   0BBE F0            [24] 6270 	movx	@dptr,a
                     0BBF  6271 	C$easyax5043.c$832$1$267 ==.
                           6272 ;	../COMMON/easyax5043.c:832: AX5043_TMGRXPREAMBLE1 = axradio_phy_tmgrxpreamble1_wor;
   0BBF 90r00r00      [24] 6273 	mov	dptr,#_axradio_phy_tmgrxpreamble1_wor
   0BC2 E4            [12] 6274 	clr	a
   0BC3 93            [24] 6275 	movc	a,@a+dptr
   0BC4 90 42 29      [24] 6276 	mov	dptr,#_AX5043_TMGRXPREAMBLE1
   0BC7 F0            [24] 6277 	movx	@dptr,a
                     0BC8  6278 	C$easyax5043.c$833$1$267 ==.
                           6279 ;	../COMMON/easyax5043.c:833: AX5043_RSSIREFERENCE = axradio_phy_rssireference;
   0BC8 90r00r00      [24] 6280 	mov	dptr,#_axradio_phy_rssireference
   0BCB E4            [12] 6281 	clr	a
   0BCC 93            [24] 6282 	movc	a,@a+dptr
   0BCD FE            [12] 6283 	mov	r6,a
   0BCE 90 42 2C      [24] 6284 	mov	dptr,#_AX5043_RSSIREFERENCE
   0BD1 F0            [24] 6285 	movx	@dptr,a
                     0BD2  6286 	C$easyax5043.c$834$1$267 ==.
                           6287 ;	../COMMON/easyax5043.c:834: AX5043_PWRMODE = AX5043_PWRSTATE_WOR_RX;
   0BD2 90 40 02      [24] 6288 	mov	dptr,#_AX5043_PWRMODE
   0BD5 74 0B         [12] 6289 	mov	a,#0x0B
   0BD7 F0            [24] 6290 	movx	@dptr,a
                     0BD8  6291 	C$easyax5043.c$835$1$267 ==.
                           6292 ;	../COMMON/easyax5043.c:835: axradio_trxstate = trxstate_rxwor;
   0BD8 75*01 02      [24] 6293 	mov	_axradio_trxstate,#0x02
                     0BDB  6294 	C$easyax5043.c$836$1$267 ==.
                           6295 ;	../COMMON/easyax5043.c:836: if(axradio_framing_enable_sfdcallback)
   0BDB EF            [12] 6296 	mov	a,r7
   0BDC 60 08         [24] 6297 	jz	00104$
                     0BDE  6298 	C$easyax5043.c$837$1$267 ==.
                           6299 ;	../COMMON/easyax5043.c:837: AX5043_IRQMASK0 = 0x41; //  enable FIFO not empty / radio controller irq
   0BDE 90 40 07      [24] 6300 	mov	dptr,#_AX5043_IRQMASK0
   0BE1 74 41         [12] 6301 	mov	a,#0x41
   0BE3 F0            [24] 6302 	movx	@dptr,a
   0BE4 80 06         [24] 6303 	sjmp	00105$
   0BE6                    6304 00104$:
                     0BE6  6305 	C$easyax5043.c$839$1$267 ==.
                           6306 ;	../COMMON/easyax5043.c:839: AX5043_IRQMASK0 = 0x01; //  enable FIFO not empty
   0BE6 90 40 07      [24] 6307 	mov	dptr,#_AX5043_IRQMASK0
   0BE9 74 01         [12] 6308 	mov	a,#0x01
   0BEB F0            [24] 6309 	movx	@dptr,a
   0BEC                    6310 00105$:
                     0BEC  6311 	C$easyax5043.c$840$1$267 ==.
                           6312 ;	../COMMON/easyax5043.c:840: AX5043_IRQMASK1 = 0x01; // xtal ready
   0BEC 90 40 06      [24] 6313 	mov	dptr,#_AX5043_IRQMASK1
   0BEF 74 01         [12] 6314 	mov	a,#0x01
   0BF1 F0            [24] 6315 	movx	@dptr,a
                     0BF2  6316 	C$easyax5043.c$842$2$267 ==.
                           6317 ;	../COMMON/easyax5043.c:842: uint16_t wp = axradio_wor_period;
   0BF2 90r00r00      [24] 6318 	mov	dptr,#_axradio_wor_period
   0BF5 E4            [12] 6319 	clr	a
   0BF6 93            [24] 6320 	movc	a,@a+dptr
   0BF7 FE            [12] 6321 	mov	r6,a
   0BF8 74 01         [12] 6322 	mov	a,#0x01
   0BFA 93            [24] 6323 	movc	a,@a+dptr
                     0BFB  6324 	C$easyax5043.c$843$2$268 ==.
                           6325 ;	../COMMON/easyax5043.c:843: AX5043_WAKEUPFREQ1 = (wp >> 8) & 0xFF;
   0BFB FF            [12] 6326 	mov	r7,a
   0BFC FD            [12] 6327 	mov	r5,a
   0BFD 90 40 6C      [24] 6328 	mov	dptr,#_AX5043_WAKEUPFREQ1
   0C00 ED            [12] 6329 	mov	a,r5
   0C01 F0            [24] 6330 	movx	@dptr,a
                     0C02  6331 	C$easyax5043.c$844$2$268 ==.
                           6332 ;	../COMMON/easyax5043.c:844: AX5043_WAKEUPFREQ0 = (wp >> 0) & 0xFF;  // actually wakeup period measured in LP OSC cycles
   0C02 8E 05         [24] 6333 	mov	ar5,r6
   0C04 90 40 6D      [24] 6334 	mov	dptr,#_AX5043_WAKEUPFREQ0
   0C07 ED            [12] 6335 	mov	a,r5
   0C08 F0            [24] 6336 	movx	@dptr,a
                     0C09  6337 	C$easyax5043.c$845$2$268 ==.
                           6338 ;	../COMMON/easyax5043.c:845: wp += radio_read16((uint16_t)&AX5043_WAKEUPTIMER1);
   0C09 90 40 68      [24] 6339 	mov	dptr,#_AX5043_WAKEUPTIMER1
   0C0C 12r00r00      [24] 6340 	lcall	_radio_read16
   0C0F AC 82         [24] 6341 	mov	r4,dpl
   0C11 AD 83         [24] 6342 	mov	r5,dph
   0C13 EC            [12] 6343 	mov	a,r4
   0C14 2E            [12] 6344 	add	a,r6
   0C15 FE            [12] 6345 	mov	r6,a
   0C16 ED            [12] 6346 	mov	a,r5
   0C17 3F            [12] 6347 	addc	a,r7
                     0C18  6348 	C$easyax5043.c$846$2$268 ==.
                           6349 ;	../COMMON/easyax5043.c:846: AX5043_WAKEUP1 = (wp >> 8) & 0xFF;
   0C18 FD            [12] 6350 	mov	r5,a
   0C19 90 40 6A      [24] 6351 	mov	dptr,#_AX5043_WAKEUP1
   0C1C ED            [12] 6352 	mov	a,r5
   0C1D F0            [24] 6353 	movx	@dptr,a
                     0C1E  6354 	C$easyax5043.c$847$2$268 ==.
                           6355 ;	../COMMON/easyax5043.c:847: AX5043_WAKEUP0 = (wp >> 0) & 0xFF;
   0C1E 90 40 6B      [24] 6356 	mov	dptr,#_AX5043_WAKEUP0
   0C21 EE            [12] 6357 	mov	a,r6
   0C22 F0            [24] 6358 	movx	@dptr,a
                     0C23  6359 	C$easyax5043.c$849$2$268 ==.
                     0C23  6360 	XG$ax5043_receiver_on_wor$0$0 ==.
   0C23 22            [24] 6361 	ret
                           6362 ;------------------------------------------------------------
                           6363 ;Allocation info for local variables in function 'ax5043_prepare_tx'
                           6364 ;------------------------------------------------------------
                     0C24  6365 	G$ax5043_prepare_tx$0$0 ==.
                     0C24  6366 	C$easyax5043.c$850$2$268 ==.
                           6367 ;	../COMMON/easyax5043.c:850: __reentrantb void ax5043_prepare_tx(void) __reentrant
                           6368 ;	-----------------------------------------
                           6369 ;	 function ax5043_prepare_tx
                           6370 ;	-----------------------------------------
   0C24                    6371 _ax5043_prepare_tx:
                     0C24  6372 	C$easyax5043.c$852$1$270 ==.
                           6373 ;	../COMMON/easyax5043.c:852: AX5043_PWRMODE = AX5043_PWRSTATE_XTAL_ON;
                     0C24  6374 	C$easyax5043.c$853$1$270 ==.
                           6375 ;	../COMMON/easyax5043.c:853: AX5043_PWRMODE = AX5043_PWRSTATE_FIFO_ON;
   0C24 90 40 02      [24] 6376 	mov	dptr,#_AX5043_PWRMODE
   0C27 74 05         [12] 6377 	mov	a,#0x05
   0C29 F0            [24] 6378 	movx	@dptr,a
   0C2A 74 07         [12] 6379 	mov	a,#0x07
   0C2C F0            [24] 6380 	movx	@dptr,a
                     0C2D  6381 	C$easyax5043.c$854$1$270 ==.
                           6382 ;	../COMMON/easyax5043.c:854: ax5043_init_registers_tx();
   0C2D 12r00r96      [24] 6383 	lcall	_ax5043_init_registers_tx
                     0C30  6384 	C$easyax5043.c$855$1$270 ==.
                           6385 ;	../COMMON/easyax5043.c:855: AX5043_FIFOTHRESH1 = 0;
   0C30 90 40 2E      [24] 6386 	mov	dptr,#_AX5043_FIFOTHRESH1
   0C33 E4            [12] 6387 	clr	a
   0C34 F0            [24] 6388 	movx	@dptr,a
                     0C35  6389 	C$easyax5043.c$856$1$270 ==.
                           6390 ;	../COMMON/easyax5043.c:856: AX5043_FIFOTHRESH0 = 0x80;
   0C35 90 40 2F      [24] 6391 	mov	dptr,#_AX5043_FIFOTHRESH0
   0C38 74 80         [12] 6392 	mov	a,#0x80
   0C3A F0            [24] 6393 	movx	@dptr,a
                     0C3B  6394 	C$easyax5043.c$857$1$270 ==.
                           6395 ;	../COMMON/easyax5043.c:857: axradio_trxstate = trxstate_tx_xtalwait;
   0C3B 75*01 09      [24] 6396 	mov	_axradio_trxstate,#0x09
                     0C3E  6397 	C$easyax5043.c$858$1$270 ==.
                           6398 ;	../COMMON/easyax5043.c:858: AX5043_IRQMASK0 = 0x00;
   0C3E 90 40 07      [24] 6399 	mov	dptr,#_AX5043_IRQMASK0
   0C41 E4            [12] 6400 	clr	a
   0C42 F0            [24] 6401 	movx	@dptr,a
                     0C43  6402 	C$easyax5043.c$859$1$270 ==.
                           6403 ;	../COMMON/easyax5043.c:859: AX5043_IRQMASK1 = 0x01; // enable xtal ready interrupt
   0C43 90 40 06      [24] 6404 	mov	dptr,#_AX5043_IRQMASK1
   0C46 74 01         [12] 6405 	mov	a,#0x01
   0C48 F0            [24] 6406 	movx	@dptr,a
                     0C49  6407 	C$easyax5043.c$860$1$270 ==.
                     0C49  6408 	XG$ax5043_prepare_tx$0$0 ==.
   0C49 22            [24] 6409 	ret
                           6410 ;------------------------------------------------------------
                           6411 ;Allocation info for local variables in function 'ax5043_off'
                           6412 ;------------------------------------------------------------
                     0C4A  6413 	G$ax5043_off$0$0 ==.
                     0C4A  6414 	C$easyax5043.c$862$1$270 ==.
                           6415 ;	../COMMON/easyax5043.c:862: __reentrantb void ax5043_off(void) __reentrant
                           6416 ;	-----------------------------------------
                           6417 ;	 function ax5043_off
                           6418 ;	-----------------------------------------
   0C4A                    6419 _ax5043_off:
                     0C4A  6420 	C$easyax5043.c$864$1$272 ==.
                           6421 ;	../COMMON/easyax5043.c:864: ax5043_off_xtal();
   0C4A 12r0Cr53      [24] 6422 	lcall	_ax5043_off_xtal
                     0C4D  6423 	C$easyax5043.c$865$1$272 ==.
                           6424 ;	../COMMON/easyax5043.c:865: AX5043_PWRMODE = AX5043_PWRSTATE_POWERDOWN;
   0C4D 90 40 02      [24] 6425 	mov	dptr,#_AX5043_PWRMODE
   0C50 E4            [12] 6426 	clr	a
   0C51 F0            [24] 6427 	movx	@dptr,a
                     0C52  6428 	C$easyax5043.c$866$1$272 ==.
                     0C52  6429 	XG$ax5043_off$0$0 ==.
   0C52 22            [24] 6430 	ret
                           6431 ;------------------------------------------------------------
                           6432 ;Allocation info for local variables in function 'ax5043_off_xtal'
                           6433 ;------------------------------------------------------------
                     0C53  6434 	G$ax5043_off_xtal$0$0 ==.
                     0C53  6435 	C$easyax5043.c$868$1$272 ==.
                           6436 ;	../COMMON/easyax5043.c:868: __reentrantb void ax5043_off_xtal(void) __reentrant
                           6437 ;	-----------------------------------------
                           6438 ;	 function ax5043_off_xtal
                           6439 ;	-----------------------------------------
   0C53                    6440 _ax5043_off_xtal:
                     0C53  6441 	C$easyax5043.c$870$1$274 ==.
                           6442 ;	../COMMON/easyax5043.c:870: AX5043_IRQMASK0 = 0x00; // IRQ off
   0C53 90 40 07      [24] 6443 	mov	dptr,#_AX5043_IRQMASK0
                     0C56  6444 	C$easyax5043.c$871$1$274 ==.
                           6445 ;	../COMMON/easyax5043.c:871: AX5043_IRQMASK1 = 0x00;
   0C56 E4            [12] 6446 	clr	a
   0C57 F0            [24] 6447 	movx	@dptr,a
   0C58 90 40 06      [24] 6448 	mov	dptr,#_AX5043_IRQMASK1
   0C5B F0            [24] 6449 	movx	@dptr,a
                     0C5C  6450 	C$easyax5043.c$872$1$274 ==.
                           6451 ;	../COMMON/easyax5043.c:872: AX5043_PWRMODE = AX5043_PWRSTATE_XTAL_ON;
   0C5C 90 40 02      [24] 6452 	mov	dptr,#_AX5043_PWRMODE
   0C5F 74 05         [12] 6453 	mov	a,#0x05
   0C61 F0            [24] 6454 	movx	@dptr,a
                     0C62  6455 	C$easyax5043.c$873$1$274 ==.
                           6456 ;	../COMMON/easyax5043.c:873: AX5043_LPOSCCONFIG = 0x00; // LPOSC off
   0C62 90 43 10      [24] 6457 	mov	dptr,#_AX5043_LPOSCCONFIG
   0C65 E4            [12] 6458 	clr	a
   0C66 F0            [24] 6459 	movx	@dptr,a
                     0C67  6460 	C$easyax5043.c$874$1$274 ==.
                           6461 ;	../COMMON/easyax5043.c:874: axradio_trxstate = trxstate_off;
   0C67 75*01 00      [24] 6462 	mov	_axradio_trxstate,#0x00
                     0C6A  6463 	C$easyax5043.c$875$1$274 ==.
                     0C6A  6464 	XG$ax5043_off_xtal$0$0 ==.
   0C6A 22            [24] 6465 	ret
                           6466 ;------------------------------------------------------------
                           6467 ;Allocation info for local variables in function 'axradio_wait_for_xtal'
                           6468 ;------------------------------------------------------------
                           6469 ;iesave                    Allocated to registers r7 
                           6470 ;------------------------------------------------------------
                     0C6B  6471 	G$axradio_wait_for_xtal$0$0 ==.
                     0C6B  6472 	C$easyax5043.c$877$1$274 ==.
                           6473 ;	../COMMON/easyax5043.c:877: void axradio_wait_for_xtal(void)
                           6474 ;	-----------------------------------------
                           6475 ;	 function axradio_wait_for_xtal
                           6476 ;	-----------------------------------------
   0C6B                    6477 _axradio_wait_for_xtal:
                     0C6B  6478 	C$easyax5043.c$879$1$276 ==.
                           6479 ;	../COMMON/easyax5043.c:879: uint8_t __autodata iesave = IE & 0x80;
   0C6B 74 80         [12] 6480 	mov	a,#0x80
   0C6D 55 A8         [12] 6481 	anl	a,_IE
   0C6F FF            [12] 6482 	mov	r7,a
                     0C70  6483 	C$easyax5043.c$880$1$276 ==.
                           6484 ;	../COMMON/easyax5043.c:880: EA = 0;
   0C70 C2 AF         [12] 6485 	clr	_EA
                     0C72  6486 	C$easyax5043.c$881$1$276 ==.
                           6487 ;	../COMMON/easyax5043.c:881: axradio_trxstate = trxstate_wait_xtal;
   0C72 75*01 03      [24] 6488 	mov	_axradio_trxstate,#0x03
                     0C75  6489 	C$easyax5043.c$882$1$276 ==.
                           6490 ;	../COMMON/easyax5043.c:882: AX5043_IRQMASK1 |= 0x01; // enable xtal ready interrupt
   0C75 90 40 06      [24] 6491 	mov	dptr,#_AX5043_IRQMASK1
   0C78 E0            [24] 6492 	movx	a,@dptr
   0C79 FE            [12] 6493 	mov	r6,a
   0C7A 44 01         [12] 6494 	orl	a,#0x01
   0C7C F0            [24] 6495 	movx	@dptr,a
   0C7D                    6496 00104$:
                     0C7D  6497 	C$easyax5043.c$884$2$277 ==.
                           6498 ;	../COMMON/easyax5043.c:884: EA = 0;
   0C7D C2 AF         [12] 6499 	clr	_EA
                     0C7F  6500 	C$easyax5043.c$885$2$277 ==.
                           6501 ;	../COMMON/easyax5043.c:885: if (axradio_trxstate == trxstate_xtal_ready)
   0C7F 74 04         [12] 6502 	mov	a,#0x04
   0C81 B5*01 02      [24] 6503 	cjne	a,_axradio_trxstate,00114$
   0C84 80 11         [24] 6504 	sjmp	00103$
   0C86                    6505 00114$:
                     0C86  6506 	C$easyax5043.c$887$2$277 ==.
                           6507 ;	../COMMON/easyax5043.c:887: wtimer_idle(WTFLAG_CANSTANDBY);
   0C86 75 82 02      [24] 6508 	mov	dpl,#0x02
   0C89 C0 07         [24] 6509 	push	ar7
   0C8B 12r00r00      [24] 6510 	lcall	_wtimer_idle
                     0C8E  6511 	C$easyax5043.c$888$2$277 ==.
                           6512 ;	../COMMON/easyax5043.c:888: EA = 1;
   0C8E D2 AF         [12] 6513 	setb	_EA
                     0C90  6514 	C$easyax5043.c$889$2$277 ==.
                           6515 ;	../COMMON/easyax5043.c:889: wtimer_runcallbacks();
   0C90 12r00r00      [24] 6516 	lcall	_wtimer_runcallbacks
   0C93 D0 07         [24] 6517 	pop	ar7
   0C95 80 E6         [24] 6518 	sjmp	00104$
   0C97                    6519 00103$:
                     0C97  6520 	C$easyax5043.c$891$1$276 ==.
                           6521 ;	../COMMON/easyax5043.c:891: IE |= iesave;
   0C97 EF            [12] 6522 	mov	a,r7
   0C98 42 A8         [12] 6523 	orl	_IE,a
                     0C9A  6524 	C$easyax5043.c$892$1$276 ==.
                     0C9A  6525 	XG$axradio_wait_for_xtal$0$0 ==.
   0C9A 22            [24] 6526 	ret
                           6527 ;------------------------------------------------------------
                           6528 ;Allocation info for local variables in function 'axradio_setaddrregs'
                           6529 ;------------------------------------------------------------
                           6530 ;pn                        Allocated to registers r6 r7 
                           6531 ;inv                       Allocated to registers r5 
                           6532 ;------------------------------------------------------------
                     0C9B  6533 	Feasyax5043$axradio_setaddrregs$0$0 ==.
                     0C9B  6534 	C$easyax5043.c$894$1$276 ==.
                           6535 ;	../COMMON/easyax5043.c:894: static void axradio_setaddrregs(void)
                           6536 ;	-----------------------------------------
                           6537 ;	 function axradio_setaddrregs
                           6538 ;	-----------------------------------------
   0C9B                    6539 _axradio_setaddrregs:
                     0C9B  6540 	C$easyax5043.c$896$1$279 ==.
                           6541 ;	../COMMON/easyax5043.c:896: AX5043_PKTADDR0 = axradio_localaddr.addr[0];
   0C9B 90r00r1A      [24] 6542 	mov	dptr,#_axradio_localaddr
   0C9E E0            [24] 6543 	movx	a,@dptr
   0C9F 90 42 07      [24] 6544 	mov	dptr,#_AX5043_PKTADDR0
   0CA2 F0            [24] 6545 	movx	@dptr,a
                     0CA3  6546 	C$easyax5043.c$897$1$279 ==.
                           6547 ;	../COMMON/easyax5043.c:897: AX5043_PKTADDR1 = axradio_localaddr.addr[1];
   0CA3 90r00r1B      [24] 6548 	mov	dptr,#(_axradio_localaddr + 0x0001)
   0CA6 E0            [24] 6549 	movx	a,@dptr
   0CA7 90 42 06      [24] 6550 	mov	dptr,#_AX5043_PKTADDR1
   0CAA F0            [24] 6551 	movx	@dptr,a
                     0CAB  6552 	C$easyax5043.c$898$1$279 ==.
                           6553 ;	../COMMON/easyax5043.c:898: AX5043_PKTADDR2 = axradio_localaddr.addr[2];
   0CAB 90r00r1C      [24] 6554 	mov	dptr,#(_axradio_localaddr + 0x0002)
   0CAE E0            [24] 6555 	movx	a,@dptr
   0CAF 90 42 05      [24] 6556 	mov	dptr,#_AX5043_PKTADDR2
   0CB2 F0            [24] 6557 	movx	@dptr,a
                     0CB3  6558 	C$easyax5043.c$899$1$279 ==.
                           6559 ;	../COMMON/easyax5043.c:899: AX5043_PKTADDR3 = axradio_localaddr.addr[3];
   0CB3 90r00r1D      [24] 6560 	mov	dptr,#(_axradio_localaddr + 0x0003)
   0CB6 E0            [24] 6561 	movx	a,@dptr
   0CB7 90 42 04      [24] 6562 	mov	dptr,#_AX5043_PKTADDR3
   0CBA F0            [24] 6563 	movx	@dptr,a
                     0CBB  6564 	C$easyax5043.c$901$1$279 ==.
                           6565 ;	../COMMON/easyax5043.c:901: AX5043_PKTADDRMASK0 = axradio_localaddr.mask[0];
   0CBB 90r00r1E      [24] 6566 	mov	dptr,#(_axradio_localaddr + 0x0004)
   0CBE E0            [24] 6567 	movx	a,@dptr
   0CBF 90 42 0B      [24] 6568 	mov	dptr,#_AX5043_PKTADDRMASK0
   0CC2 F0            [24] 6569 	movx	@dptr,a
                     0CC3  6570 	C$easyax5043.c$902$1$279 ==.
                           6571 ;	../COMMON/easyax5043.c:902: AX5043_PKTADDRMASK1 = axradio_localaddr.mask[1];
   0CC3 90r00r1F      [24] 6572 	mov	dptr,#(_axradio_localaddr + 0x0005)
   0CC6 E0            [24] 6573 	movx	a,@dptr
   0CC7 90 42 0A      [24] 6574 	mov	dptr,#_AX5043_PKTADDRMASK1
   0CCA F0            [24] 6575 	movx	@dptr,a
                     0CCB  6576 	C$easyax5043.c$903$1$279 ==.
                           6577 ;	../COMMON/easyax5043.c:903: AX5043_PKTADDRMASK2 = axradio_localaddr.mask[2];
   0CCB 90r00r20      [24] 6578 	mov	dptr,#(_axradio_localaddr + 0x0006)
   0CCE E0            [24] 6579 	movx	a,@dptr
   0CCF 90 42 09      [24] 6580 	mov	dptr,#_AX5043_PKTADDRMASK2
   0CD2 F0            [24] 6581 	movx	@dptr,a
                     0CD3  6582 	C$easyax5043.c$904$1$279 ==.
                           6583 ;	../COMMON/easyax5043.c:904: AX5043_PKTADDRMASK3 = axradio_localaddr.mask[3];
   0CD3 90r00r21      [24] 6584 	mov	dptr,#(_axradio_localaddr + 0x0007)
   0CD6 E0            [24] 6585 	movx	a,@dptr
   0CD7 90 42 08      [24] 6586 	mov	dptr,#_AX5043_PKTADDRMASK3
   0CDA F0            [24] 6587 	movx	@dptr,a
                     0CDB  6588 	C$easyax5043.c$906$1$279 ==.
                           6589 ;	../COMMON/easyax5043.c:906: if (axradio_phy_pn9 && axradio_framing_addrlen) {
   0CDB 90r00r00      [24] 6590 	mov	dptr,#_axradio_phy_pn9
   0CDE E4            [12] 6591 	clr	a
   0CDF 93            [24] 6592 	movc	a,@a+dptr
   0CE0 FF            [12] 6593 	mov	r7,a
   0CE1 70 03         [24] 6594 	jnz	00117$
   0CE3 02r0DrC5      [24] 6595 	ljmp	00106$
   0CE6                    6596 00117$:
   0CE6 90r00r00      [24] 6597 	mov	dptr,#_axradio_framing_addrlen
   0CE9 E4            [12] 6598 	clr	a
   0CEA 93            [24] 6599 	movc	a,@a+dptr
   0CEB FF            [12] 6600 	mov	r7,a
   0CEC 70 03         [24] 6601 	jnz	00118$
   0CEE 02r0DrC5      [24] 6602 	ljmp	00106$
   0CF1                    6603 00118$:
                     0CF1  6604 	C$easyax5043.c$907$2$279 ==.
                           6605 ;	../COMMON/easyax5043.c:907: uint16_t __autodata pn = 0x1ff;
   0CF1 7E FF         [12] 6606 	mov	r6,#0xFF
   0CF3 7F 01         [12] 6607 	mov	r7,#0x01
                     0CF5  6608 	C$easyax5043.c$908$2$280 ==.
                           6609 ;	../COMMON/easyax5043.c:908: uint8_t __autodata inv = -(AX5043_ENCODING & 0x01);
   0CF5 90 40 11      [24] 6610 	mov	dptr,#_AX5043_ENCODING
   0CF8 E0            [24] 6611 	movx	a,@dptr
   0CF9 FD            [12] 6612 	mov	r5,a
   0CFA 53 05 01      [24] 6613 	anl	ar5,#0x01
   0CFD C3            [12] 6614 	clr	c
   0CFE E4            [12] 6615 	clr	a
   0CFF 9D            [12] 6616 	subb	a,r5
   0D00 FD            [12] 6617 	mov	r5,a
                     0D01  6618 	C$easyax5043.c$909$2$280 ==.
                           6619 ;	../COMMON/easyax5043.c:909: if (axradio_framing_destaddrpos != 0xff)
   0D01 90r00r00      [24] 6620 	mov	dptr,#_axradio_framing_destaddrpos
   0D04 E4            [12] 6621 	clr	a
   0D05 93            [24] 6622 	movc	a,@a+dptr
   0D06 FC            [12] 6623 	mov	r4,a
   0D07 BC FF 02      [24] 6624 	cjne	r4,#0xFF,00119$
   0D0A 80 25         [24] 6625 	sjmp	00102$
   0D0C                    6626 00119$:
                     0D0C  6627 	C$easyax5043.c$910$2$280 ==.
                           6628 ;	../COMMON/easyax5043.c:910: pn = pn9_advance_bits(pn, axradio_framing_destaddrpos << 3);
   0D0C E4            [12] 6629 	clr	a
   0D0D 03            [12] 6630 	rr	a
   0D0E 54 F8         [12] 6631 	anl	a,#0xF8
   0D10 CC            [12] 6632 	xch	a,r4
   0D11 C4            [12] 6633 	swap	a
   0D12 03            [12] 6634 	rr	a
   0D13 CC            [12] 6635 	xch	a,r4
   0D14 6C            [12] 6636 	xrl	a,r4
   0D15 CC            [12] 6637 	xch	a,r4
   0D16 54 F8         [12] 6638 	anl	a,#0xF8
   0D18 CC            [12] 6639 	xch	a,r4
   0D19 6C            [12] 6640 	xrl	a,r4
   0D1A FB            [12] 6641 	mov	r3,a
   0D1B C0 05         [24] 6642 	push	ar5
   0D1D C0 04         [24] 6643 	push	ar4
   0D1F C0 03         [24] 6644 	push	ar3
   0D21 90 01 FF      [24] 6645 	mov	dptr,#0x01FF
   0D24 12r00r00      [24] 6646 	lcall	_pn9_advance_bits
   0D27 AE 82         [24] 6647 	mov	r6,dpl
   0D29 AF 83         [24] 6648 	mov	r7,dph
   0D2B 15 81         [12] 6649 	dec	sp
   0D2D 15 81         [12] 6650 	dec	sp
   0D2F D0 05         [24] 6651 	pop	ar5
   0D31                    6652 00102$:
                     0D31  6653 	C$easyax5043.c$911$2$280 ==.
                           6654 ;	../COMMON/easyax5043.c:911: AX5043_PKTADDR0 ^= pn ^ inv;
   0D31 7C 00         [12] 6655 	mov	r4,#0x00
   0D33 ED            [12] 6656 	mov	a,r5
   0D34 6E            [12] 6657 	xrl	a,r6
   0D35 FA            [12] 6658 	mov	r2,a
   0D36 EC            [12] 6659 	mov	a,r4
   0D37 6F            [12] 6660 	xrl	a,r7
   0D38 FB            [12] 6661 	mov	r3,a
   0D39 90 42 07      [24] 6662 	mov	dptr,#_AX5043_PKTADDR0
   0D3C E0            [24] 6663 	movx	a,@dptr
   0D3D 79 00         [12] 6664 	mov	r1,#0x00
   0D3F 62 02         [12] 6665 	xrl	ar2,a
   0D41 E9            [12] 6666 	mov	a,r1
   0D42 62 03         [12] 6667 	xrl	ar3,a
   0D44 90 42 07      [24] 6668 	mov	dptr,#_AX5043_PKTADDR0
   0D47 EA            [12] 6669 	mov	a,r2
   0D48 F0            [24] 6670 	movx	@dptr,a
                     0D49  6671 	C$easyax5043.c$912$2$280 ==.
                           6672 ;	../COMMON/easyax5043.c:912: pn = pn9_advance_byte(pn);
   0D49 8E 82         [24] 6673 	mov	dpl,r6
   0D4B 8F 83         [24] 6674 	mov	dph,r7
   0D4D C0 05         [24] 6675 	push	ar5
   0D4F C0 04         [24] 6676 	push	ar4
   0D51 12r00r00      [24] 6677 	lcall	_pn9_advance_byte
   0D54 AE 82         [24] 6678 	mov	r6,dpl
   0D56 AF 83         [24] 6679 	mov	r7,dph
   0D58 D0 04         [24] 6680 	pop	ar4
   0D5A D0 05         [24] 6681 	pop	ar5
                     0D5C  6682 	C$easyax5043.c$913$2$280 ==.
                           6683 ;	../COMMON/easyax5043.c:913: AX5043_PKTADDR1 ^= pn ^ inv;
   0D5C ED            [12] 6684 	mov	a,r5
   0D5D 6E            [12] 6685 	xrl	a,r6
   0D5E FA            [12] 6686 	mov	r2,a
   0D5F EC            [12] 6687 	mov	a,r4
   0D60 6F            [12] 6688 	xrl	a,r7
   0D61 FB            [12] 6689 	mov	r3,a
   0D62 90 42 06      [24] 6690 	mov	dptr,#_AX5043_PKTADDR1
   0D65 E0            [24] 6691 	movx	a,@dptr
   0D66 79 00         [12] 6692 	mov	r1,#0x00
   0D68 62 02         [12] 6693 	xrl	ar2,a
   0D6A E9            [12] 6694 	mov	a,r1
   0D6B 62 03         [12] 6695 	xrl	ar3,a
   0D6D 90 42 06      [24] 6696 	mov	dptr,#_AX5043_PKTADDR1
   0D70 EA            [12] 6697 	mov	a,r2
   0D71 F0            [24] 6698 	movx	@dptr,a
                     0D72  6699 	C$easyax5043.c$914$2$280 ==.
                           6700 ;	../COMMON/easyax5043.c:914: pn = pn9_advance_byte(pn);
   0D72 8E 82         [24] 6701 	mov	dpl,r6
   0D74 8F 83         [24] 6702 	mov	dph,r7
   0D76 C0 05         [24] 6703 	push	ar5
   0D78 C0 04         [24] 6704 	push	ar4
   0D7A 12r00r00      [24] 6705 	lcall	_pn9_advance_byte
   0D7D AE 82         [24] 6706 	mov	r6,dpl
   0D7F AF 83         [24] 6707 	mov	r7,dph
   0D81 D0 04         [24] 6708 	pop	ar4
   0D83 D0 05         [24] 6709 	pop	ar5
                     0D85  6710 	C$easyax5043.c$915$2$280 ==.
                           6711 ;	../COMMON/easyax5043.c:915: AX5043_PKTADDR2 ^= pn ^ inv;
   0D85 ED            [12] 6712 	mov	a,r5
   0D86 6E            [12] 6713 	xrl	a,r6
   0D87 FA            [12] 6714 	mov	r2,a
   0D88 EC            [12] 6715 	mov	a,r4
   0D89 6F            [12] 6716 	xrl	a,r7
   0D8A FB            [12] 6717 	mov	r3,a
   0D8B 90 42 05      [24] 6718 	mov	dptr,#_AX5043_PKTADDR2
   0D8E E0            [24] 6719 	movx	a,@dptr
   0D8F 79 00         [12] 6720 	mov	r1,#0x00
   0D91 62 02         [12] 6721 	xrl	ar2,a
   0D93 E9            [12] 6722 	mov	a,r1
   0D94 62 03         [12] 6723 	xrl	ar3,a
   0D96 90 42 05      [24] 6724 	mov	dptr,#_AX5043_PKTADDR2
   0D99 EA            [12] 6725 	mov	a,r2
   0D9A F0            [24] 6726 	movx	@dptr,a
                     0D9B  6727 	C$easyax5043.c$916$2$280 ==.
                           6728 ;	../COMMON/easyax5043.c:916: pn = pn9_advance_byte(pn);
   0D9B 8E 82         [24] 6729 	mov	dpl,r6
   0D9D 8F 83         [24] 6730 	mov	dph,r7
   0D9F C0 05         [24] 6731 	push	ar5
   0DA1 C0 04         [24] 6732 	push	ar4
   0DA3 12r00r00      [24] 6733 	lcall	_pn9_advance_byte
   0DA6 AE 82         [24] 6734 	mov	r6,dpl
   0DA8 AF 83         [24] 6735 	mov	r7,dph
   0DAA D0 04         [24] 6736 	pop	ar4
   0DAC D0 05         [24] 6737 	pop	ar5
                     0DAE  6738 	C$easyax5043.c$917$2$280 ==.
                           6739 ;	../COMMON/easyax5043.c:917: AX5043_PKTADDR3 ^= pn ^ inv;
   0DAE ED            [12] 6740 	mov	a,r5
   0DAF 62 06         [12] 6741 	xrl	ar6,a
   0DB1 EC            [12] 6742 	mov	a,r4
   0DB2 62 07         [12] 6743 	xrl	ar7,a
   0DB4 90 42 04      [24] 6744 	mov	dptr,#_AX5043_PKTADDR3
   0DB7 E0            [24] 6745 	movx	a,@dptr
   0DB8 FD            [12] 6746 	mov	r5,a
   0DB9 7C 00         [12] 6747 	mov	r4,#0x00
   0DBB 62 06         [12] 6748 	xrl	ar6,a
   0DBD EC            [12] 6749 	mov	a,r4
   0DBE 62 07         [12] 6750 	xrl	ar7,a
   0DC0 90 42 04      [24] 6751 	mov	dptr,#_AX5043_PKTADDR3
   0DC3 EE            [12] 6752 	mov	a,r6
   0DC4 F0            [24] 6753 	movx	@dptr,a
   0DC5                    6754 00106$:
                     0DC5  6755 	C$easyax5043.c$919$1$279 ==.
                     0DC5  6756 	XFeasyax5043$axradio_setaddrregs$0$0 ==.
   0DC5 22            [24] 6757 	ret
                           6758 ;------------------------------------------------------------
                           6759 ;Allocation info for local variables in function 'ax5043_init_registers'
                           6760 ;------------------------------------------------------------
                     0DC6  6761 	Feasyax5043$ax5043_init_registers$0$0 ==.
                     0DC6  6762 	C$easyax5043.c$921$1$279 ==.
                           6763 ;	../COMMON/easyax5043.c:921: static void ax5043_init_registers(void)
                           6764 ;	-----------------------------------------
                           6765 ;	 function ax5043_init_registers
                           6766 ;	-----------------------------------------
   0DC6                    6767 _ax5043_init_registers:
                     0DC6  6768 	C$easyax5043.c$923$1$282 ==.
                           6769 ;	../COMMON/easyax5043.c:923: ax5043_set_registers();
   0DC6 12r00r00      [24] 6770 	lcall	_ax5043_set_registers
                     0DC9  6771 	C$easyax5043.c$928$1$282 ==.
                           6772 ;	../COMMON/easyax5043.c:928: AX5043_PKTLENOFFSET += axradio_framing_swcrclen; // add len offs for software CRC16 (used for both, fixed and variable length packets
   0DC9 90r00r00      [24] 6773 	mov	dptr,#_axradio_framing_swcrclen
   0DCC E4            [12] 6774 	clr	a
   0DCD 93            [24] 6775 	movc	a,@a+dptr
   0DCE FF            [12] 6776 	mov	r7,a
   0DCF 90 42 02      [24] 6777 	mov	dptr,#_AX5043_PKTLENOFFSET
   0DD2 E0            [24] 6778 	movx	a,@dptr
   0DD3 FE            [12] 6779 	mov	r6,a
   0DD4 90 42 02      [24] 6780 	mov	dptr,#_AX5043_PKTLENOFFSET
   0DD7 EF            [12] 6781 	mov	a,r7
   0DD8 2E            [12] 6782 	add	a,r6
   0DD9 F0            [24] 6783 	movx	@dptr,a
                     0DDA  6784 	C$easyax5043.c$929$1$282 ==.
                           6785 ;	../COMMON/easyax5043.c:929: AX5043_PINFUNCIRQ = 0x03; // use as IRQ pin
   0DDA 90 40 24      [24] 6786 	mov	dptr,#_AX5043_PINFUNCIRQ
   0DDD 74 03         [12] 6787 	mov	a,#0x03
   0DDF F0            [24] 6788 	movx	@dptr,a
                     0DE0  6789 	C$easyax5043.c$930$1$282 ==.
                           6790 ;	../COMMON/easyax5043.c:930: AX5043_PKTSTOREFLAGS = 0x15; // store RF offset, RSSI and delimiter timing
   0DE0 90 42 32      [24] 6791 	mov	dptr,#_AX5043_PKTSTOREFLAGS
   0DE3 74 15         [12] 6792 	mov	a,#0x15
   0DE5 F0            [24] 6793 	movx	@dptr,a
                     0DE6  6794 	C$easyax5043.c$931$1$282 ==.
                           6795 ;	../COMMON/easyax5043.c:931: axradio_setaddrregs();
   0DE6 12r0Cr9B      [24] 6796 	lcall	_axradio_setaddrregs
                     0DE9  6797 	C$easyax5043.c$932$1$282 ==.
                     0DE9  6798 	XFeasyax5043$ax5043_init_registers$0$0 ==.
   0DE9 22            [24] 6799 	ret
                           6800 ;------------------------------------------------------------
                           6801 ;Allocation info for local variables in function 'axradio_sync_addtime'
                           6802 ;------------------------------------------------------------
                           6803 ;dt                        Allocated to registers r4 r5 r6 r7 
                           6804 ;------------------------------------------------------------
                     0DEA  6805 	Feasyax5043$axradio_sync_addtime$0$0 ==.
                     0DEA  6806 	C$easyax5043.c$938$1$282 ==.
                           6807 ;	../COMMON/easyax5043.c:938: static __reentrantb void axradio_sync_addtime(uint32_t dt) __reentrant
                           6808 ;	-----------------------------------------
                           6809 ;	 function axradio_sync_addtime
                           6810 ;	-----------------------------------------
   0DEA                    6811 _axradio_sync_addtime:
   0DEA AC 82         [24] 6812 	mov	r4,dpl
   0DEC AD 83         [24] 6813 	mov	r5,dph
   0DEE AE F0         [24] 6814 	mov	r6,b
   0DF0 FF            [12] 6815 	mov	r7,a
                     0DF1  6816 	C$easyax5043.c$940$1$284 ==.
                           6817 ;	../COMMON/easyax5043.c:940: axradio_sync_time += dt;
   0DF1 90r00r0C      [24] 6818 	mov	dptr,#_axradio_sync_time
   0DF4 E0            [24] 6819 	movx	a,@dptr
   0DF5 F8            [12] 6820 	mov	r0,a
   0DF6 A3            [24] 6821 	inc	dptr
   0DF7 E0            [24] 6822 	movx	a,@dptr
   0DF8 F9            [12] 6823 	mov	r1,a
   0DF9 A3            [24] 6824 	inc	dptr
   0DFA E0            [24] 6825 	movx	a,@dptr
   0DFB FA            [12] 6826 	mov	r2,a
   0DFC A3            [24] 6827 	inc	dptr
   0DFD E0            [24] 6828 	movx	a,@dptr
   0DFE FB            [12] 6829 	mov	r3,a
   0DFF 90r00r0C      [24] 6830 	mov	dptr,#_axradio_sync_time
   0E02 EC            [12] 6831 	mov	a,r4
   0E03 28            [12] 6832 	add	a,r0
   0E04 F0            [24] 6833 	movx	@dptr,a
   0E05 ED            [12] 6834 	mov	a,r5
   0E06 39            [12] 6835 	addc	a,r1
   0E07 A3            [24] 6836 	inc	dptr
   0E08 F0            [24] 6837 	movx	@dptr,a
   0E09 EE            [12] 6838 	mov	a,r6
   0E0A 3A            [12] 6839 	addc	a,r2
   0E0B A3            [24] 6840 	inc	dptr
   0E0C F0            [24] 6841 	movx	@dptr,a
   0E0D EF            [12] 6842 	mov	a,r7
   0E0E 3B            [12] 6843 	addc	a,r3
   0E0F A3            [24] 6844 	inc	dptr
   0E10 F0            [24] 6845 	movx	@dptr,a
                     0E11  6846 	C$easyax5043.c$941$1$284 ==.
                     0E11  6847 	XFeasyax5043$axradio_sync_addtime$0$0 ==.
   0E11 22            [24] 6848 	ret
                           6849 ;------------------------------------------------------------
                           6850 ;Allocation info for local variables in function 'axradio_sync_subtime'
                           6851 ;------------------------------------------------------------
                           6852 ;dt                        Allocated to registers r4 r5 r6 r7 
                           6853 ;------------------------------------------------------------
                     0E12  6854 	Feasyax5043$axradio_sync_subtime$0$0 ==.
                     0E12  6855 	C$easyax5043.c$943$1$284 ==.
                           6856 ;	../COMMON/easyax5043.c:943: static __reentrantb void axradio_sync_subtime(uint32_t dt) __reentrant
                           6857 ;	-----------------------------------------
                           6858 ;	 function axradio_sync_subtime
                           6859 ;	-----------------------------------------
   0E12                    6860 _axradio_sync_subtime:
   0E12 AC 82         [24] 6861 	mov	r4,dpl
   0E14 AD 83         [24] 6862 	mov	r5,dph
   0E16 AE F0         [24] 6863 	mov	r6,b
   0E18 FF            [12] 6864 	mov	r7,a
                     0E19  6865 	C$easyax5043.c$945$1$286 ==.
                           6866 ;	../COMMON/easyax5043.c:945: axradio_sync_time -= dt;
   0E19 90r00r0C      [24] 6867 	mov	dptr,#_axradio_sync_time
   0E1C E0            [24] 6868 	movx	a,@dptr
   0E1D F8            [12] 6869 	mov	r0,a
   0E1E A3            [24] 6870 	inc	dptr
   0E1F E0            [24] 6871 	movx	a,@dptr
   0E20 F9            [12] 6872 	mov	r1,a
   0E21 A3            [24] 6873 	inc	dptr
   0E22 E0            [24] 6874 	movx	a,@dptr
   0E23 FA            [12] 6875 	mov	r2,a
   0E24 A3            [24] 6876 	inc	dptr
   0E25 E0            [24] 6877 	movx	a,@dptr
   0E26 FB            [12] 6878 	mov	r3,a
   0E27 90r00r0C      [24] 6879 	mov	dptr,#_axradio_sync_time
   0E2A E8            [12] 6880 	mov	a,r0
   0E2B C3            [12] 6881 	clr	c
   0E2C 9C            [12] 6882 	subb	a,r4
   0E2D F0            [24] 6883 	movx	@dptr,a
   0E2E E9            [12] 6884 	mov	a,r1
   0E2F 9D            [12] 6885 	subb	a,r5
   0E30 A3            [24] 6886 	inc	dptr
   0E31 F0            [24] 6887 	movx	@dptr,a
   0E32 EA            [12] 6888 	mov	a,r2
   0E33 9E            [12] 6889 	subb	a,r6
   0E34 A3            [24] 6890 	inc	dptr
   0E35 F0            [24] 6891 	movx	@dptr,a
   0E36 EB            [12] 6892 	mov	a,r3
   0E37 9F            [12] 6893 	subb	a,r7
   0E38 A3            [24] 6894 	inc	dptr
   0E39 F0            [24] 6895 	movx	@dptr,a
                     0E3A  6896 	C$easyax5043.c$946$1$286 ==.
                     0E3A  6897 	XFeasyax5043$axradio_sync_subtime$0$0 ==.
   0E3A 22            [24] 6898 	ret
                           6899 ;------------------------------------------------------------
                           6900 ;Allocation info for local variables in function 'axradio_sync_settimeradv'
                           6901 ;------------------------------------------------------------
                           6902 ;dt                        Allocated to registers r4 r5 r6 r7 
                           6903 ;------------------------------------------------------------
                     0E3B  6904 	Feasyax5043$axradio_sync_settimeradv$0$0 ==.
                     0E3B  6905 	C$easyax5043.c$948$1$286 ==.
                           6906 ;	../COMMON/easyax5043.c:948: static __reentrantb void axradio_sync_settimeradv(uint32_t dt) __reentrant
                           6907 ;	-----------------------------------------
                           6908 ;	 function axradio_sync_settimeradv
                           6909 ;	-----------------------------------------
   0E3B                    6910 _axradio_sync_settimeradv:
   0E3B AC 82         [24] 6911 	mov	r4,dpl
   0E3D AD 83         [24] 6912 	mov	r5,dph
   0E3F AE F0         [24] 6913 	mov	r6,b
   0E41 FF            [12] 6914 	mov	r7,a
                     0E42  6915 	C$easyax5043.c$950$1$288 ==.
                           6916 ;	../COMMON/easyax5043.c:950: axradio_timer.time = axradio_sync_time;
   0E42 90r00r0C      [24] 6917 	mov	dptr,#_axradio_sync_time
   0E45 E0            [24] 6918 	movx	a,@dptr
   0E46 F8            [12] 6919 	mov	r0,a
   0E47 A3            [24] 6920 	inc	dptr
   0E48 E0            [24] 6921 	movx	a,@dptr
   0E49 F9            [12] 6922 	mov	r1,a
   0E4A A3            [24] 6923 	inc	dptr
   0E4B E0            [24] 6924 	movx	a,@dptr
   0E4C FA            [12] 6925 	mov	r2,a
   0E4D A3            [24] 6926 	inc	dptr
   0E4E E0            [24] 6927 	movx	a,@dptr
   0E4F FB            [12] 6928 	mov	r3,a
   0E50 90r02r89      [24] 6929 	mov	dptr,#(_axradio_timer + 0x0004)
   0E53 E8            [12] 6930 	mov	a,r0
   0E54 F0            [24] 6931 	movx	@dptr,a
   0E55 E9            [12] 6932 	mov	a,r1
   0E56 A3            [24] 6933 	inc	dptr
   0E57 F0            [24] 6934 	movx	@dptr,a
   0E58 EA            [12] 6935 	mov	a,r2
   0E59 A3            [24] 6936 	inc	dptr
   0E5A F0            [24] 6937 	movx	@dptr,a
   0E5B EB            [12] 6938 	mov	a,r3
   0E5C A3            [24] 6939 	inc	dptr
   0E5D F0            [24] 6940 	movx	@dptr,a
                     0E5E  6941 	C$easyax5043.c$951$1$288 ==.
                           6942 ;	../COMMON/easyax5043.c:951: axradio_timer.time -= dt;
   0E5E E8            [12] 6943 	mov	a,r0
   0E5F C3            [12] 6944 	clr	c
   0E60 9C            [12] 6945 	subb	a,r4
   0E61 FC            [12] 6946 	mov	r4,a
   0E62 E9            [12] 6947 	mov	a,r1
   0E63 9D            [12] 6948 	subb	a,r5
   0E64 FD            [12] 6949 	mov	r5,a
   0E65 EA            [12] 6950 	mov	a,r2
   0E66 9E            [12] 6951 	subb	a,r6
   0E67 FE            [12] 6952 	mov	r6,a
   0E68 EB            [12] 6953 	mov	a,r3
   0E69 9F            [12] 6954 	subb	a,r7
   0E6A FF            [12] 6955 	mov	r7,a
   0E6B 90r02r89      [24] 6956 	mov	dptr,#(_axradio_timer + 0x0004)
   0E6E EC            [12] 6957 	mov	a,r4
   0E6F F0            [24] 6958 	movx	@dptr,a
   0E70 ED            [12] 6959 	mov	a,r5
   0E71 A3            [24] 6960 	inc	dptr
   0E72 F0            [24] 6961 	movx	@dptr,a
   0E73 EE            [12] 6962 	mov	a,r6
   0E74 A3            [24] 6963 	inc	dptr
   0E75 F0            [24] 6964 	movx	@dptr,a
   0E76 EF            [12] 6965 	mov	a,r7
   0E77 A3            [24] 6966 	inc	dptr
   0E78 F0            [24] 6967 	movx	@dptr,a
                     0E79  6968 	C$easyax5043.c$952$1$288 ==.
                     0E79  6969 	XFeasyax5043$axradio_sync_settimeradv$0$0 ==.
   0E79 22            [24] 6970 	ret
                           6971 ;------------------------------------------------------------
                           6972 ;Allocation info for local variables in function 'axradio_sync_adjustperiodcorr'
                           6973 ;------------------------------------------------------------
                           6974 ;dt                        Allocated to registers r4 r5 r6 r7 
                           6975 ;------------------------------------------------------------
                     0E7A  6976 	Feasyax5043$axradio_sync_adjustperiodcorr$0$0 ==.
                     0E7A  6977 	C$easyax5043.c$954$1$288 ==.
                           6978 ;	../COMMON/easyax5043.c:954: static void axradio_sync_adjustperiodcorr(void)
                           6979 ;	-----------------------------------------
                           6980 ;	 function axradio_sync_adjustperiodcorr
                           6981 ;	-----------------------------------------
   0E7A                    6982 _axradio_sync_adjustperiodcorr:
                     0E7A  6983 	C$easyax5043.c$956$1$290 ==.
                           6984 ;	../COMMON/easyax5043.c:956: int32_t __autodata dt = axradio_conv_time_totimer0(axradio_cb_receive.st.time.t) - axradio_sync_time;
   0E7A 90r02r34      [24] 6985 	mov	dptr,#(_axradio_cb_receive + 0x0006)
   0E7D E0            [24] 6986 	movx	a,@dptr
   0E7E FC            [12] 6987 	mov	r4,a
   0E7F A3            [24] 6988 	inc	dptr
   0E80 E0            [24] 6989 	movx	a,@dptr
   0E81 FD            [12] 6990 	mov	r5,a
   0E82 A3            [24] 6991 	inc	dptr
   0E83 E0            [24] 6992 	movx	a,@dptr
   0E84 FE            [12] 6993 	mov	r6,a
   0E85 A3            [24] 6994 	inc	dptr
   0E86 E0            [24] 6995 	movx	a,@dptr
   0E87 8C 82         [24] 6996 	mov	dpl,r4
   0E89 8D 83         [24] 6997 	mov	dph,r5
   0E8B 8E F0         [24] 6998 	mov	b,r6
   0E8D 12r00r42      [24] 6999 	lcall	_axradio_conv_time_totimer0
   0E90 AC 82         [24] 7000 	mov	r4,dpl
   0E92 AD 83         [24] 7001 	mov	r5,dph
   0E94 AE F0         [24] 7002 	mov	r6,b
   0E96 FF            [12] 7003 	mov	r7,a
   0E97 90r00r0C      [24] 7004 	mov	dptr,#_axradio_sync_time
   0E9A E0            [24] 7005 	movx	a,@dptr
   0E9B F8            [12] 7006 	mov	r0,a
   0E9C A3            [24] 7007 	inc	dptr
   0E9D E0            [24] 7008 	movx	a,@dptr
   0E9E F9            [12] 7009 	mov	r1,a
   0E9F A3            [24] 7010 	inc	dptr
   0EA0 E0            [24] 7011 	movx	a,@dptr
   0EA1 FA            [12] 7012 	mov	r2,a
   0EA2 A3            [24] 7013 	inc	dptr
   0EA3 E0            [24] 7014 	movx	a,@dptr
   0EA4 FB            [12] 7015 	mov	r3,a
   0EA5 EC            [12] 7016 	mov	a,r4
   0EA6 C3            [12] 7017 	clr	c
   0EA7 98            [12] 7018 	subb	a,r0
   0EA8 FC            [12] 7019 	mov	r4,a
   0EA9 ED            [12] 7020 	mov	a,r5
   0EAA 99            [12] 7021 	subb	a,r1
   0EAB FD            [12] 7022 	mov	r5,a
   0EAC EE            [12] 7023 	mov	a,r6
   0EAD 9A            [12] 7024 	subb	a,r2
   0EAE FE            [12] 7025 	mov	r6,a
   0EAF EF            [12] 7026 	mov	a,r7
   0EB0 9B            [12] 7027 	subb	a,r3
   0EB1 FF            [12] 7028 	mov	r7,a
                     0EB2  7029 	C$easyax5043.c$957$1$290 ==.
                           7030 ;	../COMMON/easyax5043.c:957: axradio_cb_receive.st.rx.phy.timeoffset = dt;
   0EB2 8C 02         [24] 7031 	mov	ar2,r4
   0EB4 8D 03         [24] 7032 	mov	ar3,r5
   0EB6 90r02r3E      [24] 7033 	mov	dptr,#(_axradio_cb_receive + 0x0010)
   0EB9 EA            [12] 7034 	mov	a,r2
   0EBA F0            [24] 7035 	movx	@dptr,a
   0EBB EB            [12] 7036 	mov	a,r3
   0EBC A3            [24] 7037 	inc	dptr
   0EBD F0            [24] 7038 	movx	@dptr,a
                     0EBE  7039 	C$easyax5043.c$958$1$290 ==.
                           7040 ;	../COMMON/easyax5043.c:958: if (!checksignedlimit16(axradio_sync_periodcorr, axradio_sync_slave_maxperiod)) {
   0EBE 90r00r10      [24] 7041 	mov	dptr,#_axradio_sync_periodcorr
   0EC1 E0            [24] 7042 	movx	a,@dptr
   0EC2 FA            [12] 7043 	mov	r2,a
   0EC3 A3            [24] 7044 	inc	dptr
   0EC4 E0            [24] 7045 	movx	a,@dptr
   0EC5 FB            [12] 7046 	mov	r3,a
   0EC6 90r00r00      [24] 7047 	mov	dptr,#_axradio_sync_slave_maxperiod
   0EC9 E4            [12] 7048 	clr	a
   0ECA 93            [24] 7049 	movc	a,@a+dptr
   0ECB C0 E0         [24] 7050 	push	acc
   0ECD 74 01         [12] 7051 	mov	a,#0x01
   0ECF 93            [24] 7052 	movc	a,@a+dptr
   0ED0 C0 E0         [24] 7053 	push	acc
   0ED2 8A 82         [24] 7054 	mov	dpl,r2
   0ED4 8B 83         [24] 7055 	mov	dph,r3
   0ED6 12r00r00      [24] 7056 	lcall	_checksignedlimit16
   0ED9 AB 82         [24] 7057 	mov	r3,dpl
   0EDB 15 81         [12] 7058 	dec	sp
   0EDD 15 81         [12] 7059 	dec	sp
   0EDF EB            [12] 7060 	mov	a,r3
   0EE0 70 4B         [24] 7061 	jnz	00102$
                     0EE2  7062 	C$easyax5043.c$959$2$291 ==.
                           7063 ;	../COMMON/easyax5043.c:959: axradio_sync_addtime(dt);
   0EE2 8C 82         [24] 7064 	mov	dpl,r4
   0EE4 8D 83         [24] 7065 	mov	dph,r5
   0EE6 8E F0         [24] 7066 	mov	b,r6
   0EE8 EF            [12] 7067 	mov	a,r7
   0EE9 C0 07         [24] 7068 	push	ar7
   0EEB C0 06         [24] 7069 	push	ar6
   0EED C0 05         [24] 7070 	push	ar5
   0EEF C0 04         [24] 7071 	push	ar4
   0EF1 12r0DrEA      [24] 7072 	lcall	_axradio_sync_addtime
   0EF4 D0 04         [24] 7073 	pop	ar4
   0EF6 D0 05         [24] 7074 	pop	ar5
   0EF8 D0 06         [24] 7075 	pop	ar6
   0EFA D0 07         [24] 7076 	pop	ar7
                     0EFC  7077 	C$easyax5043.c$960$2$291 ==.
                           7078 ;	../COMMON/easyax5043.c:960: dt <<= SYNC_K1;
   0EFC EF            [12] 7079 	mov	a,r7
   0EFD C4            [12] 7080 	swap	a
   0EFE 23            [12] 7081 	rl	a
   0EFF 54 E0         [12] 7082 	anl	a,#0xE0
   0F01 CE            [12] 7083 	xch	a,r6
   0F02 C4            [12] 7084 	swap	a
   0F03 23            [12] 7085 	rl	a
   0F04 CE            [12] 7086 	xch	a,r6
   0F05 6E            [12] 7087 	xrl	a,r6
   0F06 CE            [12] 7088 	xch	a,r6
   0F07 54 E0         [12] 7089 	anl	a,#0xE0
   0F09 CE            [12] 7090 	xch	a,r6
   0F0A 6E            [12] 7091 	xrl	a,r6
   0F0B FF            [12] 7092 	mov	r7,a
   0F0C ED            [12] 7093 	mov	a,r5
   0F0D C4            [12] 7094 	swap	a
   0F0E 23            [12] 7095 	rl	a
   0F0F 54 1F         [12] 7096 	anl	a,#0x1F
   0F11 4E            [12] 7097 	orl	a,r6
   0F12 FE            [12] 7098 	mov	r6,a
   0F13 ED            [12] 7099 	mov	a,r5
   0F14 C4            [12] 7100 	swap	a
   0F15 23            [12] 7101 	rl	a
   0F16 54 E0         [12] 7102 	anl	a,#0xE0
   0F18 CC            [12] 7103 	xch	a,r4
   0F19 C4            [12] 7104 	swap	a
   0F1A 23            [12] 7105 	rl	a
   0F1B CC            [12] 7106 	xch	a,r4
   0F1C 6C            [12] 7107 	xrl	a,r4
   0F1D CC            [12] 7108 	xch	a,r4
   0F1E 54 E0         [12] 7109 	anl	a,#0xE0
   0F20 CC            [12] 7110 	xch	a,r4
   0F21 6C            [12] 7111 	xrl	a,r4
   0F22 FD            [12] 7112 	mov	r5,a
                     0F23  7113 	C$easyax5043.c$961$2$291 ==.
                           7114 ;	../COMMON/easyax5043.c:961: axradio_sync_periodcorr = dt;
   0F23 90r00r10      [24] 7115 	mov	dptr,#_axradio_sync_periodcorr
   0F26 EC            [12] 7116 	mov	a,r4
   0F27 F0            [24] 7117 	movx	@dptr,a
   0F28 ED            [12] 7118 	mov	a,r5
   0F29 A3            [24] 7119 	inc	dptr
   0F2A F0            [24] 7120 	movx	@dptr,a
   0F2B 80 48         [24] 7121 	sjmp	00103$
   0F2D                    7122 00102$:
                     0F2D  7123 	C$easyax5043.c$963$2$292 ==.
                           7124 ;	../COMMON/easyax5043.c:963: axradio_sync_periodcorr += dt;
   0F2D 90r00r10      [24] 7125 	mov	dptr,#_axradio_sync_periodcorr
   0F30 E0            [24] 7126 	movx	a,@dptr
   0F31 FA            [12] 7127 	mov	r2,a
   0F32 A3            [24] 7128 	inc	dptr
   0F33 E0            [24] 7129 	movx	a,@dptr
   0F34 FB            [12] 7130 	mov	r3,a
   0F35 8A 00         [24] 7131 	mov	ar0,r2
   0F37 EB            [12] 7132 	mov	a,r3
   0F38 F9            [12] 7133 	mov	r1,a
   0F39 33            [12] 7134 	rlc	a
   0F3A 95 E0         [12] 7135 	subb	a,acc
   0F3C FA            [12] 7136 	mov	r2,a
   0F3D FB            [12] 7137 	mov	r3,a
   0F3E EC            [12] 7138 	mov	a,r4
   0F3F 28            [12] 7139 	add	a,r0
   0F40 F8            [12] 7140 	mov	r0,a
   0F41 ED            [12] 7141 	mov	a,r5
   0F42 39            [12] 7142 	addc	a,r1
   0F43 F9            [12] 7143 	mov	r1,a
   0F44 EE            [12] 7144 	mov	a,r6
   0F45 3A            [12] 7145 	addc	a,r2
   0F46 EF            [12] 7146 	mov	a,r7
   0F47 3B            [12] 7147 	addc	a,r3
   0F48 90r00r10      [24] 7148 	mov	dptr,#_axradio_sync_periodcorr
   0F4B E8            [12] 7149 	mov	a,r0
   0F4C F0            [24] 7150 	movx	@dptr,a
   0F4D E9            [12] 7151 	mov	a,r1
   0F4E A3            [24] 7152 	inc	dptr
   0F4F F0            [24] 7153 	movx	@dptr,a
                     0F50  7154 	C$easyax5043.c$964$2$292 ==.
                           7155 ;	../COMMON/easyax5043.c:964: dt >>= SYNC_K0;
   0F50 EF            [12] 7156 	mov	a,r7
   0F51 A2 E7         [12] 7157 	mov	c,acc.7
   0F53 13            [12] 7158 	rrc	a
   0F54 FF            [12] 7159 	mov	r7,a
   0F55 EE            [12] 7160 	mov	a,r6
   0F56 13            [12] 7161 	rrc	a
   0F57 FE            [12] 7162 	mov	r6,a
   0F58 ED            [12] 7163 	mov	a,r5
   0F59 13            [12] 7164 	rrc	a
   0F5A FD            [12] 7165 	mov	r5,a
   0F5B EC            [12] 7166 	mov	a,r4
   0F5C 13            [12] 7167 	rrc	a
   0F5D FC            [12] 7168 	mov	r4,a
   0F5E EF            [12] 7169 	mov	a,r7
   0F5F A2 E7         [12] 7170 	mov	c,acc.7
   0F61 13            [12] 7171 	rrc	a
   0F62 FF            [12] 7172 	mov	r7,a
   0F63 EE            [12] 7173 	mov	a,r6
   0F64 13            [12] 7174 	rrc	a
   0F65 FE            [12] 7175 	mov	r6,a
   0F66 ED            [12] 7176 	mov	a,r5
   0F67 13            [12] 7177 	rrc	a
   0F68 FD            [12] 7178 	mov	r5,a
   0F69 EC            [12] 7179 	mov	a,r4
   0F6A 13            [12] 7180 	rrc	a
                     0F6B  7181 	C$easyax5043.c$965$2$292 ==.
                           7182 ;	../COMMON/easyax5043.c:965: axradio_sync_addtime(dt);
   0F6B F5 82         [12] 7183 	mov	dpl,a
   0F6D 8D 83         [24] 7184 	mov	dph,r5
   0F6F 8E F0         [24] 7185 	mov	b,r6
   0F71 EF            [12] 7186 	mov	a,r7
   0F72 12r0DrEA      [24] 7187 	lcall	_axradio_sync_addtime
   0F75                    7188 00103$:
                     0F75  7189 	C$easyax5043.c$967$1$290 ==.
                           7190 ;	../COMMON/easyax5043.c:967: axradio_sync_periodcorr = signedlimit16(axradio_sync_periodcorr, axradio_sync_slave_maxperiod);
   0F75 90r00r10      [24] 7191 	mov	dptr,#_axradio_sync_periodcorr
   0F78 E0            [24] 7192 	movx	a,@dptr
   0F79 FE            [12] 7193 	mov	r6,a
   0F7A A3            [24] 7194 	inc	dptr
   0F7B E0            [24] 7195 	movx	a,@dptr
   0F7C FF            [12] 7196 	mov	r7,a
   0F7D 90r00r00      [24] 7197 	mov	dptr,#_axradio_sync_slave_maxperiod
   0F80 E4            [12] 7198 	clr	a
   0F81 93            [24] 7199 	movc	a,@a+dptr
   0F82 C0 E0         [24] 7200 	push	acc
   0F84 74 01         [12] 7201 	mov	a,#0x01
   0F86 93            [24] 7202 	movc	a,@a+dptr
   0F87 C0 E0         [24] 7203 	push	acc
   0F89 8E 82         [24] 7204 	mov	dpl,r6
   0F8B 8F 83         [24] 7205 	mov	dph,r7
   0F8D 12r00r00      [24] 7206 	lcall	_signedlimit16
   0F90 AE 82         [24] 7207 	mov	r6,dpl
   0F92 AF 83         [24] 7208 	mov	r7,dph
   0F94 15 81         [12] 7209 	dec	sp
   0F96 15 81         [12] 7210 	dec	sp
   0F98 90r00r10      [24] 7211 	mov	dptr,#_axradio_sync_periodcorr
   0F9B EE            [12] 7212 	mov	a,r6
   0F9C F0            [24] 7213 	movx	@dptr,a
   0F9D EF            [12] 7214 	mov	a,r7
   0F9E A3            [24] 7215 	inc	dptr
   0F9F F0            [24] 7216 	movx	@dptr,a
                     0FA0  7217 	C$easyax5043.c$968$1$290 ==.
                     0FA0  7218 	XFeasyax5043$axradio_sync_adjustperiodcorr$0$0 ==.
   0FA0 22            [24] 7219 	ret
                           7220 ;------------------------------------------------------------
                           7221 ;Allocation info for local variables in function 'axradio_sync_slave_nextperiod'
                           7222 ;------------------------------------------------------------
                           7223 ;c                         Allocated to registers r6 r7 
                           7224 ;------------------------------------------------------------
                     0FA1  7225 	Feasyax5043$axradio_sync_slave_nextperiod$0$0 ==.
                     0FA1  7226 	C$easyax5043.c$970$1$290 ==.
                           7227 ;	../COMMON/easyax5043.c:970: static void axradio_sync_slave_nextperiod()
                           7228 ;	-----------------------------------------
                           7229 ;	 function axradio_sync_slave_nextperiod
                           7230 ;	-----------------------------------------
   0FA1                    7231 _axradio_sync_slave_nextperiod:
                     0FA1  7232 	C$easyax5043.c$972$1$293 ==.
                           7233 ;	../COMMON/easyax5043.c:972: axradio_sync_addtime(axradio_sync_period);
   0FA1 90r00r00      [24] 7234 	mov	dptr,#_axradio_sync_period
   0FA4 E4            [12] 7235 	clr	a
   0FA5 93            [24] 7236 	movc	a,@a+dptr
   0FA6 FC            [12] 7237 	mov	r4,a
   0FA7 74 01         [12] 7238 	mov	a,#0x01
   0FA9 93            [24] 7239 	movc	a,@a+dptr
   0FAA FD            [12] 7240 	mov	r5,a
   0FAB 74 02         [12] 7241 	mov	a,#0x02
   0FAD 93            [24] 7242 	movc	a,@a+dptr
   0FAE FE            [12] 7243 	mov	r6,a
   0FAF 74 03         [12] 7244 	mov	a,#0x03
   0FB1 93            [24] 7245 	movc	a,@a+dptr
   0FB2 8C 82         [24] 7246 	mov	dpl,r4
   0FB4 8D 83         [24] 7247 	mov	dph,r5
   0FB6 8E F0         [24] 7248 	mov	b,r6
   0FB8 12r0DrEA      [24] 7249 	lcall	_axradio_sync_addtime
                     0FBB  7250 	C$easyax5043.c$973$1$293 ==.
                           7251 ;	../COMMON/easyax5043.c:973: if (!checksignedlimit16(axradio_sync_periodcorr, axradio_sync_slave_maxperiod))
   0FBB 90r00r10      [24] 7252 	mov	dptr,#_axradio_sync_periodcorr
   0FBE E0            [24] 7253 	movx	a,@dptr
   0FBF FE            [12] 7254 	mov	r6,a
   0FC0 A3            [24] 7255 	inc	dptr
   0FC1 E0            [24] 7256 	movx	a,@dptr
   0FC2 FF            [12] 7257 	mov	r7,a
   0FC3 90r00r00      [24] 7258 	mov	dptr,#_axradio_sync_slave_maxperiod
   0FC6 E4            [12] 7259 	clr	a
   0FC7 93            [24] 7260 	movc	a,@a+dptr
   0FC8 C0 E0         [24] 7261 	push	acc
   0FCA 74 01         [12] 7262 	mov	a,#0x01
   0FCC 93            [24] 7263 	movc	a,@a+dptr
   0FCD C0 E0         [24] 7264 	push	acc
   0FCF 8E 82         [24] 7265 	mov	dpl,r6
   0FD1 8F 83         [24] 7266 	mov	dph,r7
   0FD3 12r00r00      [24] 7267 	lcall	_checksignedlimit16
   0FD6 AF 82         [24] 7268 	mov	r7,dpl
   0FD8 15 81         [12] 7269 	dec	sp
   0FDA 15 81         [12] 7270 	dec	sp
   0FDC EF            [12] 7271 	mov	a,r7
   0FDD 70 02         [24] 7272 	jnz	00102$
                     0FDF  7273 	C$easyax5043.c$974$1$293 ==.
                           7274 ;	../COMMON/easyax5043.c:974: return;
   0FDF 80 29         [24] 7275 	sjmp	00103$
   0FE1                    7276 00102$:
                     0FE1  7277 	C$easyax5043.c$976$2$293 ==.
                           7278 ;	../COMMON/easyax5043.c:976: int16_t __autodata c = axradio_sync_periodcorr;
   0FE1 90r00r10      [24] 7279 	mov	dptr,#_axradio_sync_periodcorr
   0FE4 E0            [24] 7280 	movx	a,@dptr
   0FE5 FE            [12] 7281 	mov	r6,a
   0FE6 A3            [24] 7282 	inc	dptr
   0FE7 E0            [24] 7283 	movx	a,@dptr
                     0FE8  7284 	C$easyax5043.c$977$2$294 ==.
                           7285 ;	../COMMON/easyax5043.c:977: axradio_sync_addtime(c >> SYNC_K1);
   0FE8 FF            [12] 7286 	mov	r7,a
   0FE9 C4            [12] 7287 	swap	a
   0FEA 03            [12] 7288 	rr	a
   0FEB CE            [12] 7289 	xch	a,r6
   0FEC C4            [12] 7290 	swap	a
   0FED 03            [12] 7291 	rr	a
   0FEE 54 07         [12] 7292 	anl	a,#0x07
   0FF0 6E            [12] 7293 	xrl	a,r6
   0FF1 CE            [12] 7294 	xch	a,r6
   0FF2 54 07         [12] 7295 	anl	a,#0x07
   0FF4 CE            [12] 7296 	xch	a,r6
   0FF5 6E            [12] 7297 	xrl	a,r6
   0FF6 CE            [12] 7298 	xch	a,r6
   0FF7 30 E2 02      [24] 7299 	jnb	acc.2,00109$
   0FFA 44 F8         [12] 7300 	orl	a,#0xF8
   0FFC                    7301 00109$:
   0FFC FF            [12] 7302 	mov	r7,a
   0FFD 33            [12] 7303 	rlc	a
   0FFE 95 E0         [12] 7304 	subb	a,acc
   1000 FD            [12] 7305 	mov	r5,a
   1001 8E 82         [24] 7306 	mov	dpl,r6
   1003 8F 83         [24] 7307 	mov	dph,r7
   1005 8D F0         [24] 7308 	mov	b,r5
   1007 12r0DrEA      [24] 7309 	lcall	_axradio_sync_addtime
   100A                    7310 00103$:
                     100A  7311 	C$easyax5043.c$979$2$294 ==.
                     100A  7312 	XFeasyax5043$axradio_sync_slave_nextperiod$0$0 ==.
   100A 22            [24] 7313 	ret
                           7314 ;------------------------------------------------------------
                           7315 ;Allocation info for local variables in function 'axradio_timer_callback'
                           7316 ;------------------------------------------------------------
                           7317 ;desc                      Allocated to registers 
                           7318 ;r                         Allocated to registers r7 
                           7319 ;idx                       Allocated to registers r7 
                           7320 ;idx                       Allocated to registers r7 
                           7321 ;------------------------------------------------------------
                     100B  7322 	Feasyax5043$axradio_timer_callback$0$0 ==.
                     100B  7323 	C$easyax5043.c$983$2$294 ==.
                           7324 ;	../COMMON/easyax5043.c:983: static void axradio_timer_callback(struct wtimer_desc __xdata *desc)
                           7325 ;	-----------------------------------------
                           7326 ;	 function axradio_timer_callback
                           7327 ;	-----------------------------------------
   100B                    7328 _axradio_timer_callback:
                     100B  7329 	C$easyax5043.c$986$1$296 ==.
                           7330 ;	../COMMON/easyax5043.c:986: switch (axradio_mode) {
   100B AF*00         [24] 7331 	mov	r7,_axradio_mode
   100D BF 10 00      [24] 7332 	cjne	r7,#0x10,00259$
   1010                    7333 00259$:
   1010 50 03         [24] 7334 	jnc	00260$
   1012 02r18r3B      [24] 7335 	ljmp	00173$
   1015                    7336 00260$:
   1015 EF            [12] 7337 	mov	a,r7
   1016 24 DC         [12] 7338 	add	a,#0xff - 0x23
   1018 50 03         [24] 7339 	jnc	00261$
   101A 02r18r3B      [24] 7340 	ljmp	00173$
   101D                    7341 00261$:
   101D EF            [12] 7342 	mov	a,r7
   101E 24 F0         [12] 7343 	add	a,#0xF0
   1020 FF            [12] 7344 	mov	r7,a
   1021 24 0A         [12] 7345 	add	a,#(00262$-3-.)
   1023 83            [24] 7346 	movc	a,@a+pc
   1024 F5 82         [12] 7347 	mov	dpl,a
   1026 EF            [12] 7348 	mov	a,r7
   1027 24 18         [12] 7349 	add	a,#(00263$-3-.)
   1029 83            [24] 7350 	movc	a,@a+pc
   102A F5 83         [12] 7351 	mov	dph,a
   102C E4            [12] 7352 	clr	a
   102D 73            [24] 7353 	jmp	@a+dptr
   102E                    7354 00262$:
   102ErF7                 7355 	.db	00110$
   102FrF7                 7356 	.db	00111$
   1030r90                 7357 	.db	00121$
   1031r90                 7358 	.db	00122$
   1032r3B                 7359 	.db	00171$
   1033r3B                 7360 	.db	00171$
   1034r3B                 7361 	.db	00171$
   1035r3B                 7362 	.db	00171$
   1036r56                 7363 	.db	00104$
   1037r56                 7364 	.db	00105$
   1038rF7                 7365 	.db	00127$
   1039rF7                 7366 	.db	00128$
   103Ar56                 7367 	.db	00101$
   103Br56                 7368 	.db	00102$
   103Cr56                 7369 	.db	00103$
   103Dr3B                 7370 	.db	00171$
   103Er90                 7371 	.db	00137$
   103Fr90                 7372 	.db	00138$
   1040r39                 7373 	.db	00150$
   1041r39                 7374 	.db	00151$
   1042                    7375 00263$:
   1042s10                 7376 	.db	00110$>>8
   1043s10                 7377 	.db	00111$>>8
   1044s11                 7378 	.db	00121$>>8
   1045s11                 7379 	.db	00122$>>8
   1046s18                 7380 	.db	00171$>>8
   1047s18                 7381 	.db	00171$>>8
   1048s18                 7382 	.db	00171$>>8
   1049s18                 7383 	.db	00171$>>8
   104As10                 7384 	.db	00104$>>8
   104Bs10                 7385 	.db	00105$>>8
   104Cs11                 7386 	.db	00127$>>8
   104Ds11                 7387 	.db	00128$>>8
   104Es10                 7388 	.db	00101$>>8
   104Fs10                 7389 	.db	00102$>>8
   1050s10                 7390 	.db	00103$>>8
   1051s18                 7391 	.db	00171$>>8
   1052s12                 7392 	.db	00137$>>8
   1053s12                 7393 	.db	00138$>>8
   1054s14                 7394 	.db	00150$>>8
   1055s14                 7395 	.db	00151$>>8
                     1056  7396 	C$easyax5043.c$987$2$297 ==.
                           7397 ;	../COMMON/easyax5043.c:987: case AXRADIO_MODE_STREAM_RECEIVE:
   1056                    7398 00101$:
                     1056  7399 	C$easyax5043.c$988$2$297 ==.
                           7400 ;	../COMMON/easyax5043.c:988: case AXRADIO_MODE_STREAM_RECEIVE_UNENC:
   1056                    7401 00102$:
                     1056  7402 	C$easyax5043.c$989$2$297 ==.
                           7403 ;	../COMMON/easyax5043.c:989: case AXRADIO_MODE_STREAM_RECEIVE_SCRAM:
   1056                    7404 00103$:
                     1056  7405 	C$easyax5043.c$990$2$297 ==.
                           7406 ;	../COMMON/easyax5043.c:990: case AXRADIO_MODE_ASYNC_RECEIVE:
   1056                    7407 00104$:
                     1056  7408 	C$easyax5043.c$991$2$297 ==.
                           7409 ;	../COMMON/easyax5043.c:991: case AXRADIO_MODE_WOR_RECEIVE:
   1056                    7410 00105$:
                     1056  7411 	C$easyax5043.c$992$2$297 ==.
                           7412 ;	../COMMON/easyax5043.c:992: if (axradio_syncstate == syncstate_asynctx)
   1056 90r00r00      [24] 7413 	mov	dptr,#_axradio_syncstate
   1059 E0            [24] 7414 	movx	a,@dptr
   105A FF            [12] 7415 	mov	r7,a
   105B BF 02 03      [24] 7416 	cjne	r7,#0x02,00264$
   105E 02r10rF7      [24] 7417 	ljmp	00112$
   1061                    7418 00264$:
                     1061  7419 	C$easyax5043.c$994$2$297 ==.
                           7420 ;	../COMMON/easyax5043.c:994: wtimer_remove(&axradio_timer);
   1061 90r02r85      [24] 7421 	mov	dptr,#_axradio_timer
   1064 12r00r00      [24] 7422 	lcall	_wtimer_remove
                     1067  7423 	C$easyax5043.c$995$2$297 ==.
                           7424 ;	../COMMON/easyax5043.c:995: rearmcstimer:
   1067                    7425 00108$:
                     1067  7426 	C$easyax5043.c$996$2$297 ==.
                           7427 ;	../COMMON/easyax5043.c:996: axradio_timer.time = axradio_phy_cs_period;
   1067 90r00r00      [24] 7428 	mov	dptr,#_axradio_phy_cs_period
   106A E4            [12] 7429 	clr	a
   106B 93            [24] 7430 	movc	a,@a+dptr
   106C FE            [12] 7431 	mov	r6,a
   106D 74 01         [12] 7432 	mov	a,#0x01
   106F 93            [24] 7433 	movc	a,@a+dptr
   1070 FF            [12] 7434 	mov	r7,a
   1071 7D 00         [12] 7435 	mov	r5,#0x00
   1073 7C 00         [12] 7436 	mov	r4,#0x00
   1075 90r02r89      [24] 7437 	mov	dptr,#(_axradio_timer + 0x0004)
   1078 EE            [12] 7438 	mov	a,r6
   1079 F0            [24] 7439 	movx	@dptr,a
   107A EF            [12] 7440 	mov	a,r7
   107B A3            [24] 7441 	inc	dptr
   107C F0            [24] 7442 	movx	@dptr,a
   107D ED            [12] 7443 	mov	a,r5
   107E A3            [24] 7444 	inc	dptr
   107F F0            [24] 7445 	movx	@dptr,a
   1080 EC            [12] 7446 	mov	a,r4
   1081 A3            [24] 7447 	inc	dptr
   1082 F0            [24] 7448 	movx	@dptr,a
                     1083  7449 	C$easyax5043.c$997$2$297 ==.
                           7450 ;	../COMMON/easyax5043.c:997: wtimer0_addrelative(&axradio_timer);
   1083 90r02r85      [24] 7451 	mov	dptr,#_axradio_timer
   1086 12r00r00      [24] 7452 	lcall	_wtimer0_addrelative
                     1089  7453 	C$easyax5043.c$998$2$297 ==.
                           7454 ;	../COMMON/easyax5043.c:998: chanstatecb:
   1089                    7455 00109$:
                     1089  7456 	C$easyax5043.c$999$2$297 ==.
                           7457 ;	../COMMON/easyax5043.c:999: update_timeanchor();
   1089 12r00r00      [24] 7458 	lcall	_update_timeanchor
                     108C  7459 	C$easyax5043.c$1000$2$297 ==.
                           7460 ;	../COMMON/easyax5043.c:1000: wtimer_remove_callback(&axradio_cb_channelstate.cb);
   108C 90r02r5A      [24] 7461 	mov	dptr,#_axradio_cb_channelstate
   108F 12r00r00      [24] 7462 	lcall	_wtimer_remove_callback
                     1092  7463 	C$easyax5043.c$1001$2$297 ==.
                           7464 ;	../COMMON/easyax5043.c:1001: axradio_cb_channelstate.st.error = AXRADIO_ERR_NOERROR;
   1092 90r02r5F      [24] 7465 	mov	dptr,#(_axradio_cb_channelstate + 0x0005)
   1095 E4            [12] 7466 	clr	a
   1096 F0            [24] 7467 	movx	@dptr,a
                     1097  7468 	C$easyax5043.c$1003$3$297 ==.
                           7469 ;	../COMMON/easyax5043.c:1003: int8_t __autodata r = AX5043_RSSI;
   1097 90 40 40      [24] 7470 	mov	dptr,#_AX5043_RSSI
   109A E0            [24] 7471 	movx	a,@dptr
                     109B  7472 	C$easyax5043.c$1004$3$298 ==.
                           7473 ;	../COMMON/easyax5043.c:1004: axradio_cb_channelstate.st.cs.rssi = r - (int16_t)axradio_phy_rssioffset;
   109B FF            [12] 7474 	mov	r7,a
   109C FD            [12] 7475 	mov	r5,a
   109D 33            [12] 7476 	rlc	a
   109E 95 E0         [12] 7477 	subb	a,acc
   10A0 FE            [12] 7478 	mov	r6,a
   10A1 90r00r00      [24] 7479 	mov	dptr,#_axradio_phy_rssioffset
   10A4 E4            [12] 7480 	clr	a
   10A5 93            [24] 7481 	movc	a,@a+dptr
   10A6 FC            [12] 7482 	mov	r4,a
   10A7 33            [12] 7483 	rlc	a
   10A8 95 E0         [12] 7484 	subb	a,acc
   10AA FB            [12] 7485 	mov	r3,a
   10AB ED            [12] 7486 	mov	a,r5
   10AC C3            [12] 7487 	clr	c
   10AD 9C            [12] 7488 	subb	a,r4
   10AE FD            [12] 7489 	mov	r5,a
   10AF EE            [12] 7490 	mov	a,r6
   10B0 9B            [12] 7491 	subb	a,r3
   10B1 FE            [12] 7492 	mov	r6,a
   10B2 90r02r64      [24] 7493 	mov	dptr,#(_axradio_cb_channelstate + 0x000a)
   10B5 ED            [12] 7494 	mov	a,r5
   10B6 F0            [24] 7495 	movx	@dptr,a
   10B7 EE            [12] 7496 	mov	a,r6
   10B8 A3            [24] 7497 	inc	dptr
   10B9 F0            [24] 7498 	movx	@dptr,a
                     10BA  7499 	C$easyax5043.c$1005$3$298 ==.
                           7500 ;	../COMMON/easyax5043.c:1005: axradio_cb_channelstate.st.cs.busy = r >= axradio_phy_channelbusy;
   10BA 90r00r00      [24] 7501 	mov	dptr,#_axradio_phy_channelbusy
   10BD E4            [12] 7502 	clr	a
   10BE 93            [24] 7503 	movc	a,@a+dptr
   10BF FE            [12] 7504 	mov	r6,a
   10C0 C3            [12] 7505 	clr	c
   10C1 EF            [12] 7506 	mov	a,r7
   10C2 64 80         [12] 7507 	xrl	a,#0x80
   10C4 8E F0         [24] 7508 	mov	b,r6
   10C6 63 F0 80      [24] 7509 	xrl	b,#0x80
   10C9 95 F0         [12] 7510 	subb	a,b
   10CB B3            [12] 7511 	cpl	c
   10CC E4            [12] 7512 	clr	a
   10CD 33            [12] 7513 	rlc	a
   10CE 90r02r66      [24] 7514 	mov	dptr,#(_axradio_cb_channelstate + 0x000c)
   10D1 F0            [24] 7515 	movx	@dptr,a
                     10D2  7516 	C$easyax5043.c$1007$2$297 ==.
                           7517 ;	../COMMON/easyax5043.c:1007: axradio_cb_channelstate.st.time.t = axradio_timeanchor.radiotimer;
   10D2 90r00r16      [24] 7518 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   10D5 E0            [24] 7519 	movx	a,@dptr
   10D6 FC            [12] 7520 	mov	r4,a
   10D7 A3            [24] 7521 	inc	dptr
   10D8 E0            [24] 7522 	movx	a,@dptr
   10D9 FD            [12] 7523 	mov	r5,a
   10DA A3            [24] 7524 	inc	dptr
   10DB E0            [24] 7525 	movx	a,@dptr
   10DC FE            [12] 7526 	mov	r6,a
   10DD A3            [24] 7527 	inc	dptr
   10DE E0            [24] 7528 	movx	a,@dptr
   10DF FF            [12] 7529 	mov	r7,a
   10E0 90r02r60      [24] 7530 	mov	dptr,#(_axradio_cb_channelstate + 0x0006)
   10E3 EC            [12] 7531 	mov	a,r4
   10E4 F0            [24] 7532 	movx	@dptr,a
   10E5 ED            [12] 7533 	mov	a,r5
   10E6 A3            [24] 7534 	inc	dptr
   10E7 F0            [24] 7535 	movx	@dptr,a
   10E8 EE            [12] 7536 	mov	a,r6
   10E9 A3            [24] 7537 	inc	dptr
   10EA F0            [24] 7538 	movx	@dptr,a
   10EB EF            [12] 7539 	mov	a,r7
   10EC A3            [24] 7540 	inc	dptr
   10ED F0            [24] 7541 	movx	@dptr,a
                     10EE  7542 	C$easyax5043.c$1008$2$297 ==.
                           7543 ;	../COMMON/easyax5043.c:1008: wtimer_add_callback(&axradio_cb_channelstate.cb);
   10EE 90r02r5A      [24] 7544 	mov	dptr,#_axradio_cb_channelstate
   10F1 12r00r00      [24] 7545 	lcall	_wtimer_add_callback
                     10F4  7546 	C$easyax5043.c$1009$2$297 ==.
                           7547 ;	../COMMON/easyax5043.c:1009: break;
   10F4 02r18r3B      [24] 7548 	ljmp	00173$
                     10F7  7549 	C$easyax5043.c$1011$2$297 ==.
                           7550 ;	../COMMON/easyax5043.c:1011: case AXRADIO_MODE_ASYNC_TRANSMIT:
   10F7                    7551 00110$:
                     10F7  7552 	C$easyax5043.c$1012$2$297 ==.
                           7553 ;	../COMMON/easyax5043.c:1012: case AXRADIO_MODE_WOR_TRANSMIT:
   10F7                    7554 00111$:
                     10F7  7555 	C$easyax5043.c$1013$2$297 ==.
                           7556 ;	../COMMON/easyax5043.c:1013: transmitcs:
   10F7                    7557 00112$:
                     10F7  7558 	C$easyax5043.c$1014$2$297 ==.
                           7559 ;	../COMMON/easyax5043.c:1014: if (axradio_ack_count)
   10F7 90r00r0A      [24] 7560 	mov	dptr,#_axradio_ack_count
   10FA E0            [24] 7561 	movx	a,@dptr
   10FB FF            [12] 7562 	mov	r7,a
   10FC 60 06         [24] 7563 	jz	00114$
                     10FE  7564 	C$easyax5043.c$1015$2$297 ==.
                           7565 ;	../COMMON/easyax5043.c:1015: --axradio_ack_count;
   10FE EF            [12] 7566 	mov	a,r7
   10FF 14            [12] 7567 	dec	a
   1100 90r00r0A      [24] 7568 	mov	dptr,#_axradio_ack_count
   1103 F0            [24] 7569 	movx	@dptr,a
   1104                    7570 00114$:
                     1104  7571 	C$easyax5043.c$1016$2$297 ==.
                           7572 ;	../COMMON/easyax5043.c:1016: wtimer_remove(&axradio_timer);
   1104 90r02r85      [24] 7573 	mov	dptr,#_axradio_timer
   1107 12r00r00      [24] 7574 	lcall	_wtimer_remove
                     110A  7575 	C$easyax5043.c$1017$2$297 ==.
                           7576 ;	../COMMON/easyax5043.c:1017: if ((int8_t)AX5043_RSSI < axradio_phy_channelbusy ||
   110A 90 40 40      [24] 7577 	mov	dptr,#_AX5043_RSSI
   110D E0            [24] 7578 	movx	a,@dptr
   110E FF            [12] 7579 	mov	r7,a
   110F 90r00r00      [24] 7580 	mov	dptr,#_axradio_phy_channelbusy
   1112 E4            [12] 7581 	clr	a
   1113 93            [24] 7582 	movc	a,@a+dptr
   1114 FE            [12] 7583 	mov	r6,a
   1115 C3            [12] 7584 	clr	c
   1116 EF            [12] 7585 	mov	a,r7
   1117 64 80         [12] 7586 	xrl	a,#0x80
   1119 8E F0         [24] 7587 	mov	b,r6
   111B 63 F0 80      [24] 7588 	xrl	b,#0x80
   111E 95 F0         [12] 7589 	subb	a,b
   1120 40 0F         [24] 7590 	jc	00115$
                     1122  7591 	C$easyax5043.c$1018$2$297 ==.
                           7592 ;	../COMMON/easyax5043.c:1018: (!axradio_ack_count && axradio_phy_lbt_forcetx)) {
   1122 90r00r0A      [24] 7593 	mov	dptr,#_axradio_ack_count
   1125 E0            [24] 7594 	movx	a,@dptr
   1126 FF            [12] 7595 	mov	r7,a
   1127 70 25         [24] 7596 	jnz	00116$
   1129 90r00r00      [24] 7597 	mov	dptr,#_axradio_phy_lbt_forcetx
   112C E4            [12] 7598 	clr	a
   112D 93            [24] 7599 	movc	a,@a+dptr
   112E FE            [12] 7600 	mov	r6,a
   112F 60 1D         [24] 7601 	jz	00116$
   1131                    7602 00115$:
                     1131  7603 	C$easyax5043.c$1019$3$299 ==.
                           7604 ;	../COMMON/easyax5043.c:1019: axradio_syncstate = syncstate_off;
   1131 90r00r00      [24] 7605 	mov	dptr,#_axradio_syncstate
   1134 E4            [12] 7606 	clr	a
   1135 F0            [24] 7607 	movx	@dptr,a
                     1136  7608 	C$easyax5043.c$1020$3$299 ==.
                           7609 ;	../COMMON/easyax5043.c:1020: axradio_txbuffer_cnt = axradio_phy_preamble_longlen;
   1136 90r00r00      [24] 7610 	mov	dptr,#_axradio_phy_preamble_longlen
   1139 E4            [12] 7611 	clr	a
   113A 93            [24] 7612 	movc	a,@a+dptr
   113B FD            [12] 7613 	mov	r5,a
   113C 74 01         [12] 7614 	mov	a,#0x01
   113E 93            [24] 7615 	movc	a,@a+dptr
   113F FE            [12] 7616 	mov	r6,a
   1140 90r00r03      [24] 7617 	mov	dptr,#_axradio_txbuffer_cnt
   1143 ED            [12] 7618 	mov	a,r5
   1144 F0            [24] 7619 	movx	@dptr,a
   1145 EE            [12] 7620 	mov	a,r6
   1146 A3            [24] 7621 	inc	dptr
   1147 F0            [24] 7622 	movx	@dptr,a
                     1148  7623 	C$easyax5043.c$1021$3$299 ==.
                           7624 ;	../COMMON/easyax5043.c:1021: ax5043_prepare_tx();
   1148 12r0Cr24      [24] 7625 	lcall	_ax5043_prepare_tx
                     114B  7626 	C$easyax5043.c$1022$3$299 ==.
                           7627 ;	../COMMON/easyax5043.c:1022: goto chanstatecb;
   114B 02r10r89      [24] 7628 	ljmp	00109$
   114E                    7629 00116$:
                     114E  7630 	C$easyax5043.c$1024$2$297 ==.
                           7631 ;	../COMMON/easyax5043.c:1024: if (axradio_ack_count)
   114E EF            [12] 7632 	mov	a,r7
   114F 60 03         [24] 7633 	jz	00270$
   1151 02r10r67      [24] 7634 	ljmp	00108$
   1154                    7635 00270$:
                     1154  7636 	C$easyax5043.c$1026$2$297 ==.
                           7637 ;	../COMMON/easyax5043.c:1026: update_timeanchor();
   1154 12r00r00      [24] 7638 	lcall	_update_timeanchor
                     1157  7639 	C$easyax5043.c$1027$2$297 ==.
                           7640 ;	../COMMON/easyax5043.c:1027: axradio_syncstate = syncstate_off;
   1157 90r00r00      [24] 7641 	mov	dptr,#_axradio_syncstate
   115A E4            [12] 7642 	clr	a
   115B F0            [24] 7643 	movx	@dptr,a
                     115C  7644 	C$easyax5043.c$1028$2$297 ==.
                           7645 ;	../COMMON/easyax5043.c:1028: ax5043_off();
   115C 12r0Cr4A      [24] 7646 	lcall	_ax5043_off
                     115F  7647 	C$easyax5043.c$1029$2$297 ==.
                           7648 ;	../COMMON/easyax5043.c:1029: wtimer_remove_callback(&axradio_cb_transmitstart.cb);
   115F 90r02r67      [24] 7649 	mov	dptr,#_axradio_cb_transmitstart
   1162 12r00r00      [24] 7650 	lcall	_wtimer_remove_callback
                     1165  7651 	C$easyax5043.c$1030$2$297 ==.
                           7652 ;	../COMMON/easyax5043.c:1030: axradio_cb_transmitstart.st.error = AXRADIO_ERR_TIMEOUT;
   1165 90r02r6C      [24] 7653 	mov	dptr,#(_axradio_cb_transmitstart + 0x0005)
   1168 74 03         [12] 7654 	mov	a,#0x03
   116A F0            [24] 7655 	movx	@dptr,a
                     116B  7656 	C$easyax5043.c$1031$2$297 ==.
                           7657 ;	../COMMON/easyax5043.c:1031: axradio_cb_transmitstart.st.time.t = axradio_timeanchor.radiotimer;
   116B 90r00r16      [24] 7658 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   116E E0            [24] 7659 	movx	a,@dptr
   116F FC            [12] 7660 	mov	r4,a
   1170 A3            [24] 7661 	inc	dptr
   1171 E0            [24] 7662 	movx	a,@dptr
   1172 FD            [12] 7663 	mov	r5,a
   1173 A3            [24] 7664 	inc	dptr
   1174 E0            [24] 7665 	movx	a,@dptr
   1175 FE            [12] 7666 	mov	r6,a
   1176 A3            [24] 7667 	inc	dptr
   1177 E0            [24] 7668 	movx	a,@dptr
   1178 FF            [12] 7669 	mov	r7,a
   1179 90r02r6D      [24] 7670 	mov	dptr,#(_axradio_cb_transmitstart + 0x0006)
   117C EC            [12] 7671 	mov	a,r4
   117D F0            [24] 7672 	movx	@dptr,a
   117E ED            [12] 7673 	mov	a,r5
   117F A3            [24] 7674 	inc	dptr
   1180 F0            [24] 7675 	movx	@dptr,a
   1181 EE            [12] 7676 	mov	a,r6
   1182 A3            [24] 7677 	inc	dptr
   1183 F0            [24] 7678 	movx	@dptr,a
   1184 EF            [12] 7679 	mov	a,r7
   1185 A3            [24] 7680 	inc	dptr
   1186 F0            [24] 7681 	movx	@dptr,a
                     1187  7682 	C$easyax5043.c$1032$2$297 ==.
                           7683 ;	../COMMON/easyax5043.c:1032: wtimer_add_callback(&axradio_cb_transmitstart.cb);
   1187 90r02r67      [24] 7684 	mov	dptr,#_axradio_cb_transmitstart
   118A 12r00r00      [24] 7685 	lcall	_wtimer_add_callback
                     118D  7686 	C$easyax5043.c$1033$2$297 ==.
                           7687 ;	../COMMON/easyax5043.c:1033: break;
   118D 02r18r3B      [24] 7688 	ljmp	00173$
                     1190  7689 	C$easyax5043.c$1035$2$297 ==.
                           7690 ;	../COMMON/easyax5043.c:1035: case AXRADIO_MODE_ACK_TRANSMIT:
   1190                    7691 00121$:
                     1190  7692 	C$easyax5043.c$1036$2$297 ==.
                           7693 ;	../COMMON/easyax5043.c:1036: case AXRADIO_MODE_WOR_ACK_TRANSMIT:
   1190                    7694 00122$:
                     1190  7695 	C$easyax5043.c$1037$2$297 ==.
                           7696 ;	../COMMON/easyax5043.c:1037: if (axradio_syncstate == syncstate_lbt)
   1190 90r00r00      [24] 7697 	mov	dptr,#_axradio_syncstate
   1193 E0            [24] 7698 	movx	a,@dptr
   1194 FF            [12] 7699 	mov	r7,a
   1195 BF 01 03      [24] 7700 	cjne	r7,#0x01,00271$
   1198 02r10rF7      [24] 7701 	ljmp	00112$
   119B                    7702 00271$:
                     119B  7703 	C$easyax5043.c$1039$2$297 ==.
                           7704 ;	../COMMON/easyax5043.c:1039: ax5043_off();
   119B 12r0Cr4A      [24] 7705 	lcall	_ax5043_off
                     119E  7706 	C$easyax5043.c$1040$2$297 ==.
                           7707 ;	../COMMON/easyax5043.c:1040: if (!axradio_ack_count) {
   119E 90r00r0A      [24] 7708 	mov	dptr,#_axradio_ack_count
   11A1 E0            [24] 7709 	movx	a,@dptr
   11A2 FF            [12] 7710 	mov	r7,a
   11A3 70 34         [24] 7711 	jnz	00126$
                     11A5  7712 	C$easyax5043.c$1041$3$300 ==.
                           7713 ;	../COMMON/easyax5043.c:1041: update_timeanchor();
   11A5 12r00r00      [24] 7714 	lcall	_update_timeanchor
                     11A8  7715 	C$easyax5043.c$1042$3$300 ==.
                           7716 ;	../COMMON/easyax5043.c:1042: wtimer_remove_callback(&axradio_cb_transmitend.cb);
   11A8 90r02r71      [24] 7717 	mov	dptr,#_axradio_cb_transmitend
   11AB 12r00r00      [24] 7718 	lcall	_wtimer_remove_callback
                     11AE  7719 	C$easyax5043.c$1043$3$300 ==.
                           7720 ;	../COMMON/easyax5043.c:1043: axradio_cb_transmitend.st.error = AXRADIO_ERR_TIMEOUT;
   11AE 90r02r76      [24] 7721 	mov	dptr,#(_axradio_cb_transmitend + 0x0005)
   11B1 74 03         [12] 7722 	mov	a,#0x03
   11B3 F0            [24] 7723 	movx	@dptr,a
                     11B4  7724 	C$easyax5043.c$1044$3$300 ==.
                           7725 ;	../COMMON/easyax5043.c:1044: axradio_cb_transmitend.st.time.t = axradio_timeanchor.radiotimer;
   11B4 90r00r16      [24] 7726 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   11B7 E0            [24] 7727 	movx	a,@dptr
   11B8 FB            [12] 7728 	mov	r3,a
   11B9 A3            [24] 7729 	inc	dptr
   11BA E0            [24] 7730 	movx	a,@dptr
   11BB FC            [12] 7731 	mov	r4,a
   11BC A3            [24] 7732 	inc	dptr
   11BD E0            [24] 7733 	movx	a,@dptr
   11BE FD            [12] 7734 	mov	r5,a
   11BF A3            [24] 7735 	inc	dptr
   11C0 E0            [24] 7736 	movx	a,@dptr
   11C1 FE            [12] 7737 	mov	r6,a
   11C2 90r02r77      [24] 7738 	mov	dptr,#(_axradio_cb_transmitend + 0x0006)
   11C5 EB            [12] 7739 	mov	a,r3
   11C6 F0            [24] 7740 	movx	@dptr,a
   11C7 EC            [12] 7741 	mov	a,r4
   11C8 A3            [24] 7742 	inc	dptr
   11C9 F0            [24] 7743 	movx	@dptr,a
   11CA ED            [12] 7744 	mov	a,r5
   11CB A3            [24] 7745 	inc	dptr
   11CC F0            [24] 7746 	movx	@dptr,a
   11CD EE            [12] 7747 	mov	a,r6
   11CE A3            [24] 7748 	inc	dptr
   11CF F0            [24] 7749 	movx	@dptr,a
                     11D0  7750 	C$easyax5043.c$1045$3$300 ==.
                           7751 ;	../COMMON/easyax5043.c:1045: wtimer_add_callback(&axradio_cb_transmitend.cb);
   11D0 90r02r71      [24] 7752 	mov	dptr,#_axradio_cb_transmitend
   11D3 12r00r00      [24] 7753 	lcall	_wtimer_add_callback
                     11D6  7754 	C$easyax5043.c$1046$3$300 ==.
                           7755 ;	../COMMON/easyax5043.c:1046: break;
   11D6 02r18r3B      [24] 7756 	ljmp	00173$
   11D9                    7757 00126$:
                     11D9  7758 	C$easyax5043.c$1048$2$297 ==.
                           7759 ;	../COMMON/easyax5043.c:1048: --axradio_ack_count;
   11D9 EF            [12] 7760 	mov	a,r7
   11DA 14            [12] 7761 	dec	a
   11DB 90r00r0A      [24] 7762 	mov	dptr,#_axradio_ack_count
   11DE F0            [24] 7763 	movx	@dptr,a
                     11DF  7764 	C$easyax5043.c$1049$2$297 ==.
                           7765 ;	../COMMON/easyax5043.c:1049: axradio_txbuffer_cnt = axradio_phy_preamble_longlen;
   11DF 90r00r00      [24] 7766 	mov	dptr,#_axradio_phy_preamble_longlen
   11E2 E4            [12] 7767 	clr	a
   11E3 93            [24] 7768 	movc	a,@a+dptr
   11E4 FE            [12] 7769 	mov	r6,a
   11E5 74 01         [12] 7770 	mov	a,#0x01
   11E7 93            [24] 7771 	movc	a,@a+dptr
   11E8 FF            [12] 7772 	mov	r7,a
   11E9 90r00r03      [24] 7773 	mov	dptr,#_axradio_txbuffer_cnt
   11EC EE            [12] 7774 	mov	a,r6
   11ED F0            [24] 7775 	movx	@dptr,a
   11EE EF            [12] 7776 	mov	a,r7
   11EF A3            [24] 7777 	inc	dptr
   11F0 F0            [24] 7778 	movx	@dptr,a
                     11F1  7779 	C$easyax5043.c$1050$2$297 ==.
                           7780 ;	../COMMON/easyax5043.c:1050: ax5043_prepare_tx();
   11F1 12r0Cr24      [24] 7781 	lcall	_ax5043_prepare_tx
                     11F4  7782 	C$easyax5043.c$1051$2$297 ==.
                           7783 ;	../COMMON/easyax5043.c:1051: break;
   11F4 02r18r3B      [24] 7784 	ljmp	00173$
                     11F7  7785 	C$easyax5043.c$1053$2$297 ==.
                           7786 ;	../COMMON/easyax5043.c:1053: case AXRADIO_MODE_ACK_RECEIVE:
   11F7                    7787 00127$:
                     11F7  7788 	C$easyax5043.c$1054$2$297 ==.
                           7789 ;	../COMMON/easyax5043.c:1054: case AXRADIO_MODE_WOR_ACK_RECEIVE:
   11F7                    7790 00128$:
                     11F7  7791 	C$easyax5043.c$1055$2$297 ==.
                           7792 ;	../COMMON/easyax5043.c:1055: if (axradio_syncstate == syncstate_lbt)
   11F7 90r00r00      [24] 7793 	mov	dptr,#_axradio_syncstate
   11FA E0            [24] 7794 	movx	a,@dptr
   11FB FF            [12] 7795 	mov	r7,a
   11FC BF 01 03      [24] 7796 	cjne	r7,#0x01,00273$
   11FF 02r10rF7      [24] 7797 	ljmp	00112$
   1202                    7798 00273$:
                     1202  7799 	C$easyax5043.c$1057$2$297 ==.
                           7800 ;	../COMMON/easyax5043.c:1057: transmitack:
   1202                    7801 00131$:
                     1202  7802 	C$easyax5043.c$1058$2$297 ==.
                           7803 ;	../COMMON/easyax5043.c:1058: AX5043_FIFOSTAT = 3;
   1202 90 40 28      [24] 7804 	mov	dptr,#_AX5043_FIFOSTAT
   1205 74 03         [12] 7805 	mov	a,#0x03
   1207 F0            [24] 7806 	movx	@dptr,a
                     1208  7807 	C$easyax5043.c$1059$2$297 ==.
                           7808 ;	../COMMON/easyax5043.c:1059: AX5043_PWRMODE = AX5043_PWRSTATE_FULL_TX;
   1208 90 40 02      [24] 7809 	mov	dptr,#_AX5043_PWRMODE
   120B 74 0D         [12] 7810 	mov	a,#0x0D
   120D F0            [24] 7811 	movx	@dptr,a
                     120E  7812 	C$easyax5043.c$1060$2$297 ==.
                           7813 ;	../COMMON/easyax5043.c:1060: while (!(AX5043_POWSTAT & 0x08)); // wait for modem vdd so writing the FIFO is safe
   120E                    7814 00132$:
   120E 90 40 03      [24] 7815 	mov	dptr,#_AX5043_POWSTAT
   1211 E0            [24] 7816 	movx	a,@dptr
   1212 FF            [12] 7817 	mov	r7,a
   1213 30 E3 F8      [24] 7818 	jnb	acc.3,00132$
                     1216  7819 	C$easyax5043.c$1061$2$297 ==.
                           7820 ;	../COMMON/easyax5043.c:1061: ax5043_init_registers_tx();
   1216 12r00r96      [24] 7821 	lcall	_ax5043_init_registers_tx
                     1219  7822 	C$easyax5043.c$1062$2$297 ==.
                           7823 ;	../COMMON/easyax5043.c:1062: AX5043_RADIOEVENTREQ0; // make sure REVRDONE bit is cleared, so it is a reliable indicator that the packet is out
   1219 90 40 0F      [24] 7824 	mov	dptr,#_AX5043_RADIOEVENTREQ0
   121C E0            [24] 7825 	movx	a,@dptr
                     121D  7826 	C$easyax5043.c$1063$2$297 ==.
                           7827 ;	../COMMON/easyax5043.c:1063: AX5043_FIFOTHRESH1 = 0;
   121D 90 40 2E      [24] 7828 	mov	dptr,#_AX5043_FIFOTHRESH1
   1220 E4            [12] 7829 	clr	a
   1221 F0            [24] 7830 	movx	@dptr,a
                     1222  7831 	C$easyax5043.c$1064$2$297 ==.
                           7832 ;	../COMMON/easyax5043.c:1064: AX5043_FIFOTHRESH0 = 0x80;
   1222 90 40 2F      [24] 7833 	mov	dptr,#_AX5043_FIFOTHRESH0
   1225 74 80         [12] 7834 	mov	a,#0x80
   1227 F0            [24] 7835 	movx	@dptr,a
                     1228  7836 	C$easyax5043.c$1065$2$297 ==.
                           7837 ;	../COMMON/easyax5043.c:1065: axradio_trxstate = trxstate_tx_longpreamble;
   1228 75*01 0A      [24] 7838 	mov	_axradio_trxstate,#0x0A
                     122B  7839 	C$easyax5043.c$1066$2$297 ==.
                           7840 ;	../COMMON/easyax5043.c:1066: axradio_txbuffer_cnt = axradio_phy_preamble_longlen;
   122B 90r00r00      [24] 7841 	mov	dptr,#_axradio_phy_preamble_longlen
   122E E4            [12] 7842 	clr	a
   122F 93            [24] 7843 	movc	a,@a+dptr
   1230 FE            [12] 7844 	mov	r6,a
   1231 74 01         [12] 7845 	mov	a,#0x01
   1233 93            [24] 7846 	movc	a,@a+dptr
   1234 FF            [12] 7847 	mov	r7,a
   1235 90r00r03      [24] 7848 	mov	dptr,#_axradio_txbuffer_cnt
   1238 EE            [12] 7849 	mov	a,r6
   1239 F0            [24] 7850 	movx	@dptr,a
   123A EF            [12] 7851 	mov	a,r7
   123B A3            [24] 7852 	inc	dptr
   123C F0            [24] 7853 	movx	@dptr,a
                     123D  7854 	C$easyax5043.c$1068$2$297 ==.
                           7855 ;	../COMMON/easyax5043.c:1068: if ((AX5043_MODULATION & 0x0F) == 9) { // 4-FSK
   123D 90 40 10      [24] 7856 	mov	dptr,#_AX5043_MODULATION
   1240 E0            [24] 7857 	movx	a,@dptr
   1241 FF            [12] 7858 	mov	r7,a
   1242 53 07 0F      [24] 7859 	anl	ar7,#0x0F
   1245 BF 09 0F      [24] 7860 	cjne	r7,#0x09,00136$
                     1248  7861 	C$easyax5043.c$1069$3$301 ==.
                           7862 ;	../COMMON/easyax5043.c:1069: AX5043_FIFODATA = AX5043_FIFOCMD_DATA | (7 << 5);
                     1248  7863 	C$easyax5043.c$1070$3$301 ==.
                           7864 ;	../COMMON/easyax5043.c:1070: AX5043_FIFODATA = 2;  // length (including flags)
                     1248  7865 	C$easyax5043.c$1071$3$301 ==.
                           7866 ;	../COMMON/easyax5043.c:1071: AX5043_FIFODATA = 0x01;  // flag PKTSTART -> dibit sync
                     1248  7867 	C$easyax5043.c$1072$3$301 ==.
                           7868 ;	../COMMON/easyax5043.c:1072: AX5043_FIFODATA = 0x11; // dummy byte for forcing dibit sync
   1248 90 40 29      [24] 7869 	mov	dptr,#_AX5043_FIFODATA
   124B 74 E1         [12] 7870 	mov	a,#0xE1
   124D F0            [24] 7871 	movx	@dptr,a
   124E 74 02         [12] 7872 	mov	a,#0x02
   1250 F0            [24] 7873 	movx	@dptr,a
   1251 74 01         [12] 7874 	mov	a,#0x01
   1253 F0            [24] 7875 	movx	@dptr,a
   1254 74 11         [12] 7876 	mov	a,#0x11
   1256 F0            [24] 7877 	movx	@dptr,a
   1257                    7878 00136$:
                     1257  7879 	C$easyax5043.c$1079$2$297 ==.
                           7880 ;	../COMMON/easyax5043.c:1079: AX5043_IRQMASK0 = 0x08; // enable fifo free threshold
   1257 90 40 07      [24] 7881 	mov	dptr,#_AX5043_IRQMASK0
   125A 74 08         [12] 7882 	mov	a,#0x08
   125C F0            [24] 7883 	movx	@dptr,a
                     125D  7884 	C$easyax5043.c$1080$2$297 ==.
                           7885 ;	../COMMON/easyax5043.c:1080: update_timeanchor();
   125D 12r00r00      [24] 7886 	lcall	_update_timeanchor
                     1260  7887 	C$easyax5043.c$1081$2$297 ==.
                           7888 ;	../COMMON/easyax5043.c:1081: wtimer_remove_callback(&axradio_cb_transmitstart.cb);
   1260 90r02r67      [24] 7889 	mov	dptr,#_axradio_cb_transmitstart
   1263 12r00r00      [24] 7890 	lcall	_wtimer_remove_callback
                     1266  7891 	C$easyax5043.c$1082$2$297 ==.
                           7892 ;	../COMMON/easyax5043.c:1082: axradio_cb_transmitstart.st.error = AXRADIO_ERR_NOERROR;
   1266 90r02r6C      [24] 7893 	mov	dptr,#(_axradio_cb_transmitstart + 0x0005)
   1269 E4            [12] 7894 	clr	a
   126A F0            [24] 7895 	movx	@dptr,a
                     126B  7896 	C$easyax5043.c$1083$2$297 ==.
                           7897 ;	../COMMON/easyax5043.c:1083: axradio_cb_transmitstart.st.time.t = axradio_timeanchor.radiotimer;
   126B 90r00r16      [24] 7898 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   126E E0            [24] 7899 	movx	a,@dptr
   126F FC            [12] 7900 	mov	r4,a
   1270 A3            [24] 7901 	inc	dptr
   1271 E0            [24] 7902 	movx	a,@dptr
   1272 FD            [12] 7903 	mov	r5,a
   1273 A3            [24] 7904 	inc	dptr
   1274 E0            [24] 7905 	movx	a,@dptr
   1275 FE            [12] 7906 	mov	r6,a
   1276 A3            [24] 7907 	inc	dptr
   1277 E0            [24] 7908 	movx	a,@dptr
   1278 FF            [12] 7909 	mov	r7,a
   1279 90r02r6D      [24] 7910 	mov	dptr,#(_axradio_cb_transmitstart + 0x0006)
   127C EC            [12] 7911 	mov	a,r4
   127D F0            [24] 7912 	movx	@dptr,a
   127E ED            [12] 7913 	mov	a,r5
   127F A3            [24] 7914 	inc	dptr
   1280 F0            [24] 7915 	movx	@dptr,a
   1281 EE            [12] 7916 	mov	a,r6
   1282 A3            [24] 7917 	inc	dptr
   1283 F0            [24] 7918 	movx	@dptr,a
   1284 EF            [12] 7919 	mov	a,r7
   1285 A3            [24] 7920 	inc	dptr
   1286 F0            [24] 7921 	movx	@dptr,a
                     1287  7922 	C$easyax5043.c$1084$2$297 ==.
                           7923 ;	../COMMON/easyax5043.c:1084: wtimer_add_callback(&axradio_cb_transmitstart.cb);
   1287 90r02r67      [24] 7924 	mov	dptr,#_axradio_cb_transmitstart
   128A 12r00r00      [24] 7925 	lcall	_wtimer_add_callback
                     128D  7926 	C$easyax5043.c$1085$2$297 ==.
                           7927 ;	../COMMON/easyax5043.c:1085: break;
   128D 02r18r3B      [24] 7928 	ljmp	00173$
                     1290  7929 	C$easyax5043.c$1087$2$297 ==.
                           7930 ;	../COMMON/easyax5043.c:1087: case AXRADIO_MODE_SYNC_MASTER:
   1290                    7931 00137$:
                     1290  7932 	C$easyax5043.c$1088$2$297 ==.
                           7933 ;	../COMMON/easyax5043.c:1088: case AXRADIO_MODE_SYNC_ACK_MASTER:
   1290                    7934 00138$:
                     1290  7935 	C$easyax5043.c$1089$2$297 ==.
                           7936 ;	../COMMON/easyax5043.c:1089: switch (axradio_syncstate) {
   1290 90r00r00      [24] 7937 	mov	dptr,#_axradio_syncstate
   1293 E0            [24] 7938 	movx	a,@dptr
   1294 FF            [12] 7939 	mov	r7,a
   1295 BF 04 02      [24] 7940 	cjne	r7,#0x04,00277$
   1298 80 5E         [24] 7941 	sjmp	00140$
   129A                    7942 00277$:
   129A BF 05 03      [24] 7943 	cjne	r7,#0x05,00278$
   129D 02r13rD6      [24] 7944 	ljmp	00148$
   12A0                    7945 00278$:
                     12A0  7946 	C$easyax5043.c$1091$3$302 ==.
                           7947 ;	../COMMON/easyax5043.c:1091: AX5043_PWRMODE = AX5043_PWRSTATE_XTAL_ON;
   12A0 90 40 02      [24] 7948 	mov	dptr,#_AX5043_PWRMODE
   12A3 74 05         [12] 7949 	mov	a,#0x05
   12A5 F0            [24] 7950 	movx	@dptr,a
                     12A6  7951 	C$easyax5043.c$1092$3$302 ==.
                           7952 ;	../COMMON/easyax5043.c:1092: ax5043_init_registers_tx();
   12A6 12r00r96      [24] 7953 	lcall	_ax5043_init_registers_tx
                     12A9  7954 	C$easyax5043.c$1093$3$302 ==.
                           7955 ;	../COMMON/easyax5043.c:1093: axradio_syncstate = syncstate_master_xostartup;
   12A9 90r00r00      [24] 7956 	mov	dptr,#_axradio_syncstate
   12AC 74 04         [12] 7957 	mov	a,#0x04
   12AE F0            [24] 7958 	movx	@dptr,a
                     12AF  7959 	C$easyax5043.c$1094$3$302 ==.
                           7960 ;	../COMMON/easyax5043.c:1094: wtimer_remove_callback(&axradio_cb_transmitdata.cb);
   12AF 90r02r7B      [24] 7961 	mov	dptr,#_axradio_cb_transmitdata
   12B2 12r00r00      [24] 7962 	lcall	_wtimer_remove_callback
                     12B5  7963 	C$easyax5043.c$1095$3$302 ==.
                           7964 ;	../COMMON/easyax5043.c:1095: axradio_cb_transmitdata.st.error = AXRADIO_ERR_NOERROR;
   12B5 90r02r80      [24] 7965 	mov	dptr,#(_axradio_cb_transmitdata + 0x0005)
                     12B8  7966 	C$easyax5043.c$1096$3$302 ==.
                           7967 ;	../COMMON/easyax5043.c:1096: axradio_cb_transmitdata.st.time.t = 0;
   12B8 E4            [12] 7968 	clr	a
   12B9 F0            [24] 7969 	movx	@dptr,a
   12BA 90r02r81      [24] 7970 	mov	dptr,#(_axradio_cb_transmitdata + 0x0006)
   12BD F0            [24] 7971 	movx	@dptr,a
   12BE E4            [12] 7972 	clr	a
   12BF A3            [24] 7973 	inc	dptr
   12C0 F0            [24] 7974 	movx	@dptr,a
   12C1 E4            [12] 7975 	clr	a
   12C2 A3            [24] 7976 	inc	dptr
   12C3 F0            [24] 7977 	movx	@dptr,a
   12C4 E4            [12] 7978 	clr	a
   12C5 A3            [24] 7979 	inc	dptr
   12C6 F0            [24] 7980 	movx	@dptr,a
                     12C7  7981 	C$easyax5043.c$1097$3$302 ==.
                           7982 ;	../COMMON/easyax5043.c:1097: wtimer_add_callback(&axradio_cb_transmitdata.cb);
   12C7 90r02r7B      [24] 7983 	mov	dptr,#_axradio_cb_transmitdata
   12CA 12r00r00      [24] 7984 	lcall	_wtimer_add_callback
                     12CD  7985 	C$easyax5043.c$1098$3$302 ==.
                           7986 ;	../COMMON/easyax5043.c:1098: wtimer_remove(&axradio_timer);
   12CD 90r02r85      [24] 7987 	mov	dptr,#_axradio_timer
   12D0 12r00r00      [24] 7988 	lcall	_wtimer_remove
                     12D3  7989 	C$easyax5043.c$1099$3$302 ==.
                           7990 ;	../COMMON/easyax5043.c:1099: axradio_timer.time = axradio_sync_time;
   12D3 90r00r0C      [24] 7991 	mov	dptr,#_axradio_sync_time
   12D6 E0            [24] 7992 	movx	a,@dptr
   12D7 FC            [12] 7993 	mov	r4,a
   12D8 A3            [24] 7994 	inc	dptr
   12D9 E0            [24] 7995 	movx	a,@dptr
   12DA FD            [12] 7996 	mov	r5,a
   12DB A3            [24] 7997 	inc	dptr
   12DC E0            [24] 7998 	movx	a,@dptr
   12DD FE            [12] 7999 	mov	r6,a
   12DE A3            [24] 8000 	inc	dptr
   12DF E0            [24] 8001 	movx	a,@dptr
   12E0 FF            [12] 8002 	mov	r7,a
   12E1 90r02r89      [24] 8003 	mov	dptr,#(_axradio_timer + 0x0004)
   12E4 EC            [12] 8004 	mov	a,r4
   12E5 F0            [24] 8005 	movx	@dptr,a
   12E6 ED            [12] 8006 	mov	a,r5
   12E7 A3            [24] 8007 	inc	dptr
   12E8 F0            [24] 8008 	movx	@dptr,a
   12E9 EE            [12] 8009 	mov	a,r6
   12EA A3            [24] 8010 	inc	dptr
   12EB F0            [24] 8011 	movx	@dptr,a
   12EC EF            [12] 8012 	mov	a,r7
   12ED A3            [24] 8013 	inc	dptr
   12EE F0            [24] 8014 	movx	@dptr,a
                     12EF  8015 	C$easyax5043.c$1100$3$302 ==.
                           8016 ;	../COMMON/easyax5043.c:1100: wtimer0_addabsolute(&axradio_timer);
   12EF 90r02r85      [24] 8017 	mov	dptr,#_axradio_timer
   12F2 12r00r00      [24] 8018 	lcall	_wtimer0_addabsolute
                     12F5  8019 	C$easyax5043.c$1101$3$302 ==.
                           8020 ;	../COMMON/easyax5043.c:1101: break;
   12F5 02r18r3B      [24] 8021 	ljmp	00173$
                     12F8  8022 	C$easyax5043.c$1103$3$302 ==.
                           8023 ;	../COMMON/easyax5043.c:1103: case syncstate_master_xostartup:
   12F8                    8024 00140$:
                     12F8  8025 	C$easyax5043.c$1104$3$302 ==.
                           8026 ;	../COMMON/easyax5043.c:1104: AX5043_FIFOSTAT = 3;
   12F8 90 40 28      [24] 8027 	mov	dptr,#_AX5043_FIFOSTAT
   12FB 74 03         [12] 8028 	mov	a,#0x03
   12FD F0            [24] 8029 	movx	@dptr,a
                     12FE  8030 	C$easyax5043.c$1105$3$302 ==.
                           8031 ;	../COMMON/easyax5043.c:1105: AX5043_PWRMODE = AX5043_PWRSTATE_FULL_TX;
   12FE 90 40 02      [24] 8032 	mov	dptr,#_AX5043_PWRMODE
   1301 74 0D         [12] 8033 	mov	a,#0x0D
   1303 F0            [24] 8034 	movx	@dptr,a
                     1304  8035 	C$easyax5043.c$1106$3$302 ==.
                           8036 ;	../COMMON/easyax5043.c:1106: while (!(AX5043_POWSTAT & 0x08)); // wait for modem vdd so writing the FIFO is safe
   1304                    8037 00141$:
   1304 90 40 03      [24] 8038 	mov	dptr,#_AX5043_POWSTAT
   1307 E0            [24] 8039 	movx	a,@dptr
   1308 FF            [12] 8040 	mov	r7,a
   1309 30 E3 F8      [24] 8041 	jnb	acc.3,00141$
                     130C  8042 	C$easyax5043.c$1107$3$302 ==.
                           8043 ;	../COMMON/easyax5043.c:1107: AX5043_RADIOEVENTREQ0; // make sure REVRDONE bit is cleared, so it is a reliable indicator that the packet is out
   130C 90 40 0F      [24] 8044 	mov	dptr,#_AX5043_RADIOEVENTREQ0
   130F E0            [24] 8045 	movx	a,@dptr
                     1310  8046 	C$easyax5043.c$1108$3$302 ==.
                           8047 ;	../COMMON/easyax5043.c:1108: AX5043_FIFOTHRESH1 = 0;
   1310 90 40 2E      [24] 8048 	mov	dptr,#_AX5043_FIFOTHRESH1
   1313 E4            [12] 8049 	clr	a
   1314 F0            [24] 8050 	movx	@dptr,a
                     1315  8051 	C$easyax5043.c$1109$3$302 ==.
                           8052 ;	../COMMON/easyax5043.c:1109: AX5043_FIFOTHRESH0 = 0x80;
   1315 90 40 2F      [24] 8053 	mov	dptr,#_AX5043_FIFOTHRESH0
   1318 74 80         [12] 8054 	mov	a,#0x80
   131A F0            [24] 8055 	movx	@dptr,a
                     131B  8056 	C$easyax5043.c$1110$3$302 ==.
                           8057 ;	../COMMON/easyax5043.c:1110: axradio_trxstate = trxstate_tx_longpreamble;
   131B 75*01 0A      [24] 8058 	mov	_axradio_trxstate,#0x0A
                     131E  8059 	C$easyax5043.c$1111$3$302 ==.
                           8060 ;	../COMMON/easyax5043.c:1111: axradio_txbuffer_cnt = axradio_phy_preamble_longlen;
   131E 90r00r00      [24] 8061 	mov	dptr,#_axradio_phy_preamble_longlen
   1321 E4            [12] 8062 	clr	a
   1322 93            [24] 8063 	movc	a,@a+dptr
   1323 FE            [12] 8064 	mov	r6,a
   1324 74 01         [12] 8065 	mov	a,#0x01
   1326 93            [24] 8066 	movc	a,@a+dptr
   1327 FF            [12] 8067 	mov	r7,a
   1328 90r00r03      [24] 8068 	mov	dptr,#_axradio_txbuffer_cnt
   132B EE            [12] 8069 	mov	a,r6
   132C F0            [24] 8070 	movx	@dptr,a
   132D EF            [12] 8071 	mov	a,r7
   132E A3            [24] 8072 	inc	dptr
   132F F0            [24] 8073 	movx	@dptr,a
                     1330  8074 	C$easyax5043.c$1113$3$302 ==.
                           8075 ;	../COMMON/easyax5043.c:1113: if ((AX5043_MODULATION & 0x0F) == 9) { // 4-FSK
   1330 90 40 10      [24] 8076 	mov	dptr,#_AX5043_MODULATION
   1333 E0            [24] 8077 	movx	a,@dptr
   1334 FF            [12] 8078 	mov	r7,a
   1335 53 07 0F      [24] 8079 	anl	ar7,#0x0F
   1338 BF 09 0F      [24] 8080 	cjne	r7,#0x09,00145$
                     133B  8081 	C$easyax5043.c$1114$4$303 ==.
                           8082 ;	../COMMON/easyax5043.c:1114: AX5043_FIFODATA = AX5043_FIFOCMD_DATA | (7 << 5);
                     133B  8083 	C$easyax5043.c$1115$4$303 ==.
                           8084 ;	../COMMON/easyax5043.c:1115: AX5043_FIFODATA = 2;  // length (including flags)
                     133B  8085 	C$easyax5043.c$1116$4$303 ==.
                           8086 ;	../COMMON/easyax5043.c:1116: AX5043_FIFODATA = 0x01;  // flag PKTSTART -> dibit sync
                     133B  8087 	C$easyax5043.c$1117$4$303 ==.
                           8088 ;	../COMMON/easyax5043.c:1117: AX5043_FIFODATA = 0x11; // dummy byte for forcing dibit sync
   133B 90 40 29      [24] 8089 	mov	dptr,#_AX5043_FIFODATA
   133E 74 E1         [12] 8090 	mov	a,#0xE1
   1340 F0            [24] 8091 	movx	@dptr,a
   1341 74 02         [12] 8092 	mov	a,#0x02
   1343 F0            [24] 8093 	movx	@dptr,a
   1344 74 01         [12] 8094 	mov	a,#0x01
   1346 F0            [24] 8095 	movx	@dptr,a
   1347 74 11         [12] 8096 	mov	a,#0x11
   1349 F0            [24] 8097 	movx	@dptr,a
   134A                    8098 00145$:
                     134A  8099 	C$easyax5043.c$1124$3$302 ==.
                           8100 ;	../COMMON/easyax5043.c:1124: wtimer_remove(&axradio_timer);
   134A 90r02r85      [24] 8101 	mov	dptr,#_axradio_timer
   134D 12r00r00      [24] 8102 	lcall	_wtimer_remove
                     1350  8103 	C$easyax5043.c$1125$3$302 ==.
                           8104 ;	../COMMON/easyax5043.c:1125: update_timeanchor();
   1350 12r00r00      [24] 8105 	lcall	_update_timeanchor
                     1353  8106 	C$easyax5043.c$1126$3$302 ==.
                           8107 ;	../COMMON/easyax5043.c:1126: AX5043_IRQMASK0 = 0x08; // enable fifo free threshold
   1353 90 40 07      [24] 8108 	mov	dptr,#_AX5043_IRQMASK0
   1356 74 08         [12] 8109 	mov	a,#0x08
   1358 F0            [24] 8110 	movx	@dptr,a
                     1359  8111 	C$easyax5043.c$1127$3$302 ==.
                           8112 ;	../COMMON/easyax5043.c:1127: axradio_sync_addtime(axradio_sync_period);
   1359 90r00r00      [24] 8113 	mov	dptr,#_axradio_sync_period
   135C E4            [12] 8114 	clr	a
   135D 93            [24] 8115 	movc	a,@a+dptr
   135E FC            [12] 8116 	mov	r4,a
   135F 74 01         [12] 8117 	mov	a,#0x01
   1361 93            [24] 8118 	movc	a,@a+dptr
   1362 FD            [12] 8119 	mov	r5,a
   1363 74 02         [12] 8120 	mov	a,#0x02
   1365 93            [24] 8121 	movc	a,@a+dptr
   1366 FE            [12] 8122 	mov	r6,a
   1367 74 03         [12] 8123 	mov	a,#0x03
   1369 93            [24] 8124 	movc	a,@a+dptr
   136A 8C 82         [24] 8125 	mov	dpl,r4
   136C 8D 83         [24] 8126 	mov	dph,r5
   136E 8E F0         [24] 8127 	mov	b,r6
   1370 12r0DrEA      [24] 8128 	lcall	_axradio_sync_addtime
                     1373  8129 	C$easyax5043.c$1128$3$302 ==.
                           8130 ;	../COMMON/easyax5043.c:1128: axradio_syncstate = syncstate_master_waitack;
   1373 90r00r00      [24] 8131 	mov	dptr,#_axradio_syncstate
   1376 74 05         [12] 8132 	mov	a,#0x05
   1378 F0            [24] 8133 	movx	@dptr,a
                     1379  8134 	C$easyax5043.c$1129$3$302 ==.
                           8135 ;	../COMMON/easyax5043.c:1129: if (axradio_mode != AXRADIO_MODE_SYNC_ACK_MASTER) {
   1379 74 21         [12] 8136 	mov	a,#0x21
   137B B5*00 02      [24] 8137 	cjne	a,_axradio_mode,00282$
   137E 80 26         [24] 8138 	sjmp	00147$
   1380                    8139 00282$:
                     1380  8140 	C$easyax5043.c$1130$4$304 ==.
                           8141 ;	../COMMON/easyax5043.c:1130: axradio_syncstate = syncstate_master_normal;
   1380 90r00r00      [24] 8142 	mov	dptr,#_axradio_syncstate
   1383 74 03         [12] 8143 	mov	a,#0x03
   1385 F0            [24] 8144 	movx	@dptr,a
                     1386  8145 	C$easyax5043.c$1131$4$304 ==.
                           8146 ;	../COMMON/easyax5043.c:1131: axradio_sync_settimeradv(axradio_sync_xoscstartup);
   1386 90r00r00      [24] 8147 	mov	dptr,#_axradio_sync_xoscstartup
   1389 E4            [12] 8148 	clr	a
   138A 93            [24] 8149 	movc	a,@a+dptr
   138B FC            [12] 8150 	mov	r4,a
   138C 74 01         [12] 8151 	mov	a,#0x01
   138E 93            [24] 8152 	movc	a,@a+dptr
   138F FD            [12] 8153 	mov	r5,a
   1390 74 02         [12] 8154 	mov	a,#0x02
   1392 93            [24] 8155 	movc	a,@a+dptr
   1393 FE            [12] 8156 	mov	r6,a
   1394 74 03         [12] 8157 	mov	a,#0x03
   1396 93            [24] 8158 	movc	a,@a+dptr
   1397 8C 82         [24] 8159 	mov	dpl,r4
   1399 8D 83         [24] 8160 	mov	dph,r5
   139B 8E F0         [24] 8161 	mov	b,r6
   139D 12r0Er3B      [24] 8162 	lcall	_axradio_sync_settimeradv
                     13A0  8163 	C$easyax5043.c$1132$4$304 ==.
                           8164 ;	../COMMON/easyax5043.c:1132: wtimer0_addabsolute(&axradio_timer);
   13A0 90r02r85      [24] 8165 	mov	dptr,#_axradio_timer
   13A3 12r00r00      [24] 8166 	lcall	_wtimer0_addabsolute
   13A6                    8167 00147$:
                     13A6  8168 	C$easyax5043.c$1134$3$302 ==.
                           8169 ;	../COMMON/easyax5043.c:1134: wtimer_remove_callback(&axradio_cb_transmitstart.cb);
   13A6 90r02r67      [24] 8170 	mov	dptr,#_axradio_cb_transmitstart
   13A9 12r00r00      [24] 8171 	lcall	_wtimer_remove_callback
                     13AC  8172 	C$easyax5043.c$1135$3$302 ==.
                           8173 ;	../COMMON/easyax5043.c:1135: axradio_cb_transmitstart.st.error = AXRADIO_ERR_NOERROR;
   13AC 90r02r6C      [24] 8174 	mov	dptr,#(_axradio_cb_transmitstart + 0x0005)
   13AF E4            [12] 8175 	clr	a
   13B0 F0            [24] 8176 	movx	@dptr,a
                     13B1  8177 	C$easyax5043.c$1136$3$302 ==.
                           8178 ;	../COMMON/easyax5043.c:1136: axradio_cb_transmitstart.st.time.t = axradio_timeanchor.radiotimer;
   13B1 90r00r16      [24] 8179 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   13B4 E0            [24] 8180 	movx	a,@dptr
   13B5 FC            [12] 8181 	mov	r4,a
   13B6 A3            [24] 8182 	inc	dptr
   13B7 E0            [24] 8183 	movx	a,@dptr
   13B8 FD            [12] 8184 	mov	r5,a
   13B9 A3            [24] 8185 	inc	dptr
   13BA E0            [24] 8186 	movx	a,@dptr
   13BB FE            [12] 8187 	mov	r6,a
   13BC A3            [24] 8188 	inc	dptr
   13BD E0            [24] 8189 	movx	a,@dptr
   13BE FF            [12] 8190 	mov	r7,a
   13BF 90r02r6D      [24] 8191 	mov	dptr,#(_axradio_cb_transmitstart + 0x0006)
   13C2 EC            [12] 8192 	mov	a,r4
   13C3 F0            [24] 8193 	movx	@dptr,a
   13C4 ED            [12] 8194 	mov	a,r5
   13C5 A3            [24] 8195 	inc	dptr
   13C6 F0            [24] 8196 	movx	@dptr,a
   13C7 EE            [12] 8197 	mov	a,r6
   13C8 A3            [24] 8198 	inc	dptr
   13C9 F0            [24] 8199 	movx	@dptr,a
   13CA EF            [12] 8200 	mov	a,r7
   13CB A3            [24] 8201 	inc	dptr
   13CC F0            [24] 8202 	movx	@dptr,a
                     13CD  8203 	C$easyax5043.c$1137$3$302 ==.
                           8204 ;	../COMMON/easyax5043.c:1137: wtimer_add_callback(&axradio_cb_transmitstart.cb);
   13CD 90r02r67      [24] 8205 	mov	dptr,#_axradio_cb_transmitstart
   13D0 12r00r00      [24] 8206 	lcall	_wtimer_add_callback
                     13D3  8207 	C$easyax5043.c$1138$3$302 ==.
                           8208 ;	../COMMON/easyax5043.c:1138: break;
   13D3 02r18r3B      [24] 8209 	ljmp	00173$
                     13D6  8210 	C$easyax5043.c$1140$3$302 ==.
                           8211 ;	../COMMON/easyax5043.c:1140: case syncstate_master_waitack:
   13D6                    8212 00148$:
                     13D6  8213 	C$easyax5043.c$1141$3$302 ==.
                           8214 ;	../COMMON/easyax5043.c:1141: ax5043_off();
   13D6 12r0Cr4A      [24] 8215 	lcall	_ax5043_off
                     13D9  8216 	C$easyax5043.c$1142$3$302 ==.
                           8217 ;	../COMMON/easyax5043.c:1142: axradio_syncstate = syncstate_master_normal;
   13D9 90r00r00      [24] 8218 	mov	dptr,#_axradio_syncstate
   13DC 74 03         [12] 8219 	mov	a,#0x03
   13DE F0            [24] 8220 	movx	@dptr,a
                     13DF  8221 	C$easyax5043.c$1143$3$302 ==.
                           8222 ;	../COMMON/easyax5043.c:1143: wtimer_remove(&axradio_timer);
   13DF 90r02r85      [24] 8223 	mov	dptr,#_axradio_timer
   13E2 12r00r00      [24] 8224 	lcall	_wtimer_remove
                     13E5  8225 	C$easyax5043.c$1144$3$302 ==.
                           8226 ;	../COMMON/easyax5043.c:1144: axradio_sync_settimeradv(axradio_sync_xoscstartup);
   13E5 90r00r00      [24] 8227 	mov	dptr,#_axradio_sync_xoscstartup
   13E8 E4            [12] 8228 	clr	a
   13E9 93            [24] 8229 	movc	a,@a+dptr
   13EA FC            [12] 8230 	mov	r4,a
   13EB 74 01         [12] 8231 	mov	a,#0x01
   13ED 93            [24] 8232 	movc	a,@a+dptr
   13EE FD            [12] 8233 	mov	r5,a
   13EF 74 02         [12] 8234 	mov	a,#0x02
   13F1 93            [24] 8235 	movc	a,@a+dptr
   13F2 FE            [12] 8236 	mov	r6,a
   13F3 74 03         [12] 8237 	mov	a,#0x03
   13F5 93            [24] 8238 	movc	a,@a+dptr
   13F6 8C 82         [24] 8239 	mov	dpl,r4
   13F8 8D 83         [24] 8240 	mov	dph,r5
   13FA 8E F0         [24] 8241 	mov	b,r6
   13FC 12r0Er3B      [24] 8242 	lcall	_axradio_sync_settimeradv
                     13FF  8243 	C$easyax5043.c$1145$3$302 ==.
                           8244 ;	../COMMON/easyax5043.c:1145: wtimer0_addabsolute(&axradio_timer);
   13FF 90r02r85      [24] 8245 	mov	dptr,#_axradio_timer
   1402 12r00r00      [24] 8246 	lcall	_wtimer0_addabsolute
                     1405  8247 	C$easyax5043.c$1146$3$302 ==.
                           8248 ;	../COMMON/easyax5043.c:1146: update_timeanchor();
   1405 12r00r00      [24] 8249 	lcall	_update_timeanchor
                     1408  8250 	C$easyax5043.c$1147$3$302 ==.
                           8251 ;	../COMMON/easyax5043.c:1147: wtimer_remove_callback(&axradio_cb_transmitend.cb);
   1408 90r02r71      [24] 8252 	mov	dptr,#_axradio_cb_transmitend
   140B 12r00r00      [24] 8253 	lcall	_wtimer_remove_callback
                     140E  8254 	C$easyax5043.c$1148$3$302 ==.
                           8255 ;	../COMMON/easyax5043.c:1148: axradio_cb_transmitend.st.error = AXRADIO_ERR_TIMEOUT;
   140E 90r02r76      [24] 8256 	mov	dptr,#(_axradio_cb_transmitend + 0x0005)
   1411 74 03         [12] 8257 	mov	a,#0x03
   1413 F0            [24] 8258 	movx	@dptr,a
                     1414  8259 	C$easyax5043.c$1149$3$302 ==.
                           8260 ;	../COMMON/easyax5043.c:1149: axradio_cb_transmitend.st.time.t = axradio_timeanchor.radiotimer;
   1414 90r00r16      [24] 8261 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   1417 E0            [24] 8262 	movx	a,@dptr
   1418 FC            [12] 8263 	mov	r4,a
   1419 A3            [24] 8264 	inc	dptr
   141A E0            [24] 8265 	movx	a,@dptr
   141B FD            [12] 8266 	mov	r5,a
   141C A3            [24] 8267 	inc	dptr
   141D E0            [24] 8268 	movx	a,@dptr
   141E FE            [12] 8269 	mov	r6,a
   141F A3            [24] 8270 	inc	dptr
   1420 E0            [24] 8271 	movx	a,@dptr
   1421 FF            [12] 8272 	mov	r7,a
   1422 90r02r77      [24] 8273 	mov	dptr,#(_axradio_cb_transmitend + 0x0006)
   1425 EC            [12] 8274 	mov	a,r4
   1426 F0            [24] 8275 	movx	@dptr,a
   1427 ED            [12] 8276 	mov	a,r5
   1428 A3            [24] 8277 	inc	dptr
   1429 F0            [24] 8278 	movx	@dptr,a
   142A EE            [12] 8279 	mov	a,r6
   142B A3            [24] 8280 	inc	dptr
   142C F0            [24] 8281 	movx	@dptr,a
   142D EF            [12] 8282 	mov	a,r7
   142E A3            [24] 8283 	inc	dptr
   142F F0            [24] 8284 	movx	@dptr,a
                     1430  8285 	C$easyax5043.c$1150$3$302 ==.
                           8286 ;	../COMMON/easyax5043.c:1150: wtimer_add_callback(&axradio_cb_transmitend.cb);
   1430 90r02r71      [24] 8287 	mov	dptr,#_axradio_cb_transmitend
   1433 12r00r00      [24] 8288 	lcall	_wtimer_add_callback
                     1436  8289 	C$easyax5043.c$1153$2$297 ==.
                           8290 ;	../COMMON/easyax5043.c:1153: break;
   1436 02r18r3B      [24] 8291 	ljmp	00173$
                     1439  8292 	C$easyax5043.c$1155$2$297 ==.
                           8293 ;	../COMMON/easyax5043.c:1155: case AXRADIO_MODE_SYNC_SLAVE:
   1439                    8294 00150$:
                     1439  8295 	C$easyax5043.c$1156$2$297 ==.
                           8296 ;	../COMMON/easyax5043.c:1156: case AXRADIO_MODE_SYNC_ACK_SLAVE:
   1439                    8297 00151$:
                     1439  8298 	C$easyax5043.c$1157$2$297 ==.
                           8299 ;	../COMMON/easyax5043.c:1157: switch (axradio_syncstate) {
   1439 90r00r00      [24] 8300 	mov	dptr,#_axradio_syncstate
   143C E0            [24] 8301 	movx	a,@dptr
   143D FF            [12] 8302 	mov  r7,a
   143E 24 F3         [12] 8303 	add	a,#0xff - 0x0C
   1440 50 03         [24] 8304 	jnc	00283$
   1442 02r14r70      [24] 8305 	ljmp	00153$
   1445                    8306 00283$:
   1445 EF            [12] 8307 	mov	a,r7
   1446 F5 F0         [12] 8308 	mov	b,a
   1448 24 0B         [12] 8309 	add	a,#(00284$-3-.)
   144A 83            [24] 8310 	movc	a,@a+pc
   144B F5 82         [12] 8311 	mov	dpl,a
   144D E5 F0         [12] 8312 	mov	a,b
   144F 24 11         [12] 8313 	add	a,#(00285$-3-.)
   1451 83            [24] 8314 	movc	a,@a+pc
   1452 F5 83         [12] 8315 	mov	dph,a
   1454 E4            [12] 8316 	clr	a
   1455 73            [24] 8317 	jmp	@a+dptr
   1456                    8318 00284$:
   1456r70                 8319 	.db	00152$
   1457r70                 8320 	.db	00152$
   1458r70                 8321 	.db	00152$
   1459r70                 8322 	.db	00152$
   145Ar70                 8323 	.db	00152$
   145Br70                 8324 	.db	00152$
   145Cr70                 8325 	.db	00153$
   145DrFE                 8326 	.db	00154$
   145Er8F                 8327 	.db	00155$
   145FrE4                 8328 	.db	00156$
   1460r98                 8329 	.db	00159$
   1461rF3                 8330 	.db	00162$
   1462r0C                 8331 	.db	00169$
   1463                    8332 00285$:
   1463s14                 8333 	.db	00152$>>8
   1464s14                 8334 	.db	00152$>>8
   1465s14                 8335 	.db	00152$>>8
   1466s14                 8336 	.db	00152$>>8
   1467s14                 8337 	.db	00152$>>8
   1468s14                 8338 	.db	00152$>>8
   1469s14                 8339 	.db	00153$>>8
   146As14                 8340 	.db	00154$>>8
   146Bs15                 8341 	.db	00155$>>8
   146Cs15                 8342 	.db	00156$>>8
   146Ds16                 8343 	.db	00159$>>8
   146Es16                 8344 	.db	00162$>>8
   146Fs18                 8345 	.db	00169$>>8
                     1470  8346 	C$easyax5043.c$1158$3$305 ==.
                           8347 ;	../COMMON/easyax5043.c:1158: default:
   1470                    8348 00152$:
                     1470  8349 	C$easyax5043.c$1159$3$305 ==.
                           8350 ;	../COMMON/easyax5043.c:1159: case syncstate_slave_synchunt:
   1470                    8351 00153$:
                     1470  8352 	C$easyax5043.c$1160$3$305 ==.
                           8353 ;	../COMMON/easyax5043.c:1160: ax5043_off();
   1470 12r0Cr4A      [24] 8354 	lcall	_ax5043_off
                     1473  8355 	C$easyax5043.c$1161$3$305 ==.
                           8356 ;	../COMMON/easyax5043.c:1161: axradio_syncstate = syncstate_slave_syncpause;
   1473 90r00r00      [24] 8357 	mov	dptr,#_axradio_syncstate
   1476 74 07         [12] 8358 	mov	a,#0x07
   1478 F0            [24] 8359 	movx	@dptr,a
                     1479  8360 	C$easyax5043.c$1162$3$305 ==.
                           8361 ;	../COMMON/easyax5043.c:1162: axradio_sync_addtime(axradio_sync_slave_syncpause);
   1479 90r00r00      [24] 8362 	mov	dptr,#_axradio_sync_slave_syncpause
   147C E4            [12] 8363 	clr	a
   147D 93            [24] 8364 	movc	a,@a+dptr
   147E FC            [12] 8365 	mov	r4,a
   147F 74 01         [12] 8366 	mov	a,#0x01
   1481 93            [24] 8367 	movc	a,@a+dptr
   1482 FD            [12] 8368 	mov	r5,a
   1483 74 02         [12] 8369 	mov	a,#0x02
   1485 93            [24] 8370 	movc	a,@a+dptr
   1486 FE            [12] 8371 	mov	r6,a
   1487 74 03         [12] 8372 	mov	a,#0x03
   1489 93            [24] 8373 	movc	a,@a+dptr
   148A 8C 82         [24] 8374 	mov	dpl,r4
   148C 8D 83         [24] 8375 	mov	dph,r5
   148E 8E F0         [24] 8376 	mov	b,r6
   1490 12r0DrEA      [24] 8377 	lcall	_axradio_sync_addtime
                     1493  8378 	C$easyax5043.c$1163$3$305 ==.
                           8379 ;	../COMMON/easyax5043.c:1163: wtimer_remove(&axradio_timer);
   1493 90r02r85      [24] 8380 	mov	dptr,#_axradio_timer
   1496 12r00r00      [24] 8381 	lcall	_wtimer_remove
                     1499  8382 	C$easyax5043.c$1164$3$305 ==.
                           8383 ;	../COMMON/easyax5043.c:1164: axradio_timer.time = axradio_sync_time;
   1499 90r00r0C      [24] 8384 	mov	dptr,#_axradio_sync_time
   149C E0            [24] 8385 	movx	a,@dptr
   149D FC            [12] 8386 	mov	r4,a
   149E A3            [24] 8387 	inc	dptr
   149F E0            [24] 8388 	movx	a,@dptr
   14A0 FD            [12] 8389 	mov	r5,a
   14A1 A3            [24] 8390 	inc	dptr
   14A2 E0            [24] 8391 	movx	a,@dptr
   14A3 FE            [12] 8392 	mov	r6,a
   14A4 A3            [24] 8393 	inc	dptr
   14A5 E0            [24] 8394 	movx	a,@dptr
   14A6 FF            [12] 8395 	mov	r7,a
   14A7 90r02r89      [24] 8396 	mov	dptr,#(_axradio_timer + 0x0004)
   14AA EC            [12] 8397 	mov	a,r4
   14AB F0            [24] 8398 	movx	@dptr,a
   14AC ED            [12] 8399 	mov	a,r5
   14AD A3            [24] 8400 	inc	dptr
   14AE F0            [24] 8401 	movx	@dptr,a
   14AF EE            [12] 8402 	mov	a,r6
   14B0 A3            [24] 8403 	inc	dptr
   14B1 F0            [24] 8404 	movx	@dptr,a
   14B2 EF            [12] 8405 	mov	a,r7
   14B3 A3            [24] 8406 	inc	dptr
   14B4 F0            [24] 8407 	movx	@dptr,a
                     14B5  8408 	C$easyax5043.c$1165$3$305 ==.
                           8409 ;	../COMMON/easyax5043.c:1165: wtimer0_addabsolute(&axradio_timer);
   14B5 90r02r85      [24] 8410 	mov	dptr,#_axradio_timer
   14B8 12r00r00      [24] 8411 	lcall	_wtimer0_addabsolute
                     14BB  8412 	C$easyax5043.c$1166$3$305 ==.
                           8413 ;	../COMMON/easyax5043.c:1166: wtimer_remove_callback(&axradio_cb_receive.cb);
   14BB 90r02r2E      [24] 8414 	mov	dptr,#_axradio_cb_receive
   14BE 12r00r00      [24] 8415 	lcall	_wtimer_remove_callback
                     14C1  8416 	C$easyax5043.c$1167$3$305 ==.
                           8417 ;	../COMMON/easyax5043.c:1167: memset_xdata(&axradio_cb_receive.st, 0, sizeof(axradio_cb_receive.st));
   14C1 75*00 00      [24] 8418 	mov	_memset_PARM_2,#0x00
   14C4 75*00 1E      [24] 8419 	mov	_memset_PARM_3,#0x1E
   14C7 75*01 00      [24] 8420 	mov	(_memset_PARM_3 + 1),#0x00
   14CA 90r02r32      [24] 8421 	mov	dptr,#(_axradio_cb_receive + 0x0004)
   14CD 75 F0 00      [24] 8422 	mov	b,#0x00
   14D0 12r00r00      [24] 8423 	lcall	_memset
                     14D3  8424 	C$easyax5043.c$1168$3$305 ==.
                           8425 ;	../COMMON/easyax5043.c:1168: axradio_cb_receive.st.time.t = axradio_timeanchor.radiotimer;
   14D3 90r00r16      [24] 8426 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   14D6 E0            [24] 8427 	movx	a,@dptr
   14D7 FC            [12] 8428 	mov	r4,a
   14D8 A3            [24] 8429 	inc	dptr
   14D9 E0            [24] 8430 	movx	a,@dptr
   14DA FD            [12] 8431 	mov	r5,a
   14DB A3            [24] 8432 	inc	dptr
   14DC E0            [24] 8433 	movx	a,@dptr
   14DD FE            [12] 8434 	mov	r6,a
   14DE A3            [24] 8435 	inc	dptr
   14DF E0            [24] 8436 	movx	a,@dptr
   14E0 FF            [12] 8437 	mov	r7,a
   14E1 90r02r34      [24] 8438 	mov	dptr,#(_axradio_cb_receive + 0x0006)
   14E4 EC            [12] 8439 	mov	a,r4
   14E5 F0            [24] 8440 	movx	@dptr,a
   14E6 ED            [12] 8441 	mov	a,r5
   14E7 A3            [24] 8442 	inc	dptr
   14E8 F0            [24] 8443 	movx	@dptr,a
   14E9 EE            [12] 8444 	mov	a,r6
   14EA A3            [24] 8445 	inc	dptr
   14EB F0            [24] 8446 	movx	@dptr,a
   14EC EF            [12] 8447 	mov	a,r7
   14ED A3            [24] 8448 	inc	dptr
   14EE F0            [24] 8449 	movx	@dptr,a
                     14EF  8450 	C$easyax5043.c$1169$3$305 ==.
                           8451 ;	../COMMON/easyax5043.c:1169: axradio_cb_receive.st.error = AXRADIO_ERR_RESYNCTIMEOUT;
   14EF 90r02r33      [24] 8452 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   14F2 74 0A         [12] 8453 	mov	a,#0x0A
   14F4 F0            [24] 8454 	movx	@dptr,a
                     14F5  8455 	C$easyax5043.c$1170$3$305 ==.
                           8456 ;	../COMMON/easyax5043.c:1170: wtimer_add_callback(&axradio_cb_receive.cb);
   14F5 90r02r2E      [24] 8457 	mov	dptr,#_axradio_cb_receive
   14F8 12r00r00      [24] 8458 	lcall	_wtimer_add_callback
                     14FB  8459 	C$easyax5043.c$1171$3$305 ==.
                           8460 ;	../COMMON/easyax5043.c:1171: break;
   14FB 02r18r3B      [24] 8461 	ljmp	00173$
                     14FE  8462 	C$easyax5043.c$1173$3$305 ==.
                           8463 ;	../COMMON/easyax5043.c:1173: case syncstate_slave_syncpause:
   14FE                    8464 00154$:
                     14FE  8465 	C$easyax5043.c$1174$3$305 ==.
                           8466 ;	../COMMON/easyax5043.c:1174: ax5043_receiver_on_continuous();
   14FE 12r0Br05      [24] 8467 	lcall	_ax5043_receiver_on_continuous
                     1501  8468 	C$easyax5043.c$1175$3$305 ==.
                           8469 ;	../COMMON/easyax5043.c:1175: axradio_syncstate = syncstate_slave_synchunt;
   1501 90r00r00      [24] 8470 	mov	dptr,#_axradio_syncstate
   1504 74 06         [12] 8471 	mov	a,#0x06
   1506 F0            [24] 8472 	movx	@dptr,a
                     1507  8473 	C$easyax5043.c$1176$3$305 ==.
                           8474 ;	../COMMON/easyax5043.c:1176: axradio_sync_addtime(axradio_sync_slave_syncwindow);
   1507 90r00r00      [24] 8475 	mov	dptr,#_axradio_sync_slave_syncwindow
   150A E4            [12] 8476 	clr	a
   150B 93            [24] 8477 	movc	a,@a+dptr
   150C FC            [12] 8478 	mov	r4,a
   150D 74 01         [12] 8479 	mov	a,#0x01
   150F 93            [24] 8480 	movc	a,@a+dptr
   1510 FD            [12] 8481 	mov	r5,a
   1511 74 02         [12] 8482 	mov	a,#0x02
   1513 93            [24] 8483 	movc	a,@a+dptr
   1514 FE            [12] 8484 	mov	r6,a
   1515 74 03         [12] 8485 	mov	a,#0x03
   1517 93            [24] 8486 	movc	a,@a+dptr
   1518 8C 82         [24] 8487 	mov	dpl,r4
   151A 8D 83         [24] 8488 	mov	dph,r5
   151C 8E F0         [24] 8489 	mov	b,r6
   151E 12r0DrEA      [24] 8490 	lcall	_axradio_sync_addtime
                     1521  8491 	C$easyax5043.c$1177$3$305 ==.
                           8492 ;	../COMMON/easyax5043.c:1177: wtimer_remove(&axradio_timer);
   1521 90r02r85      [24] 8493 	mov	dptr,#_axradio_timer
   1524 12r00r00      [24] 8494 	lcall	_wtimer_remove
                     1527  8495 	C$easyax5043.c$1178$3$305 ==.
                           8496 ;	../COMMON/easyax5043.c:1178: axradio_timer.time = axradio_sync_time;
   1527 90r00r0C      [24] 8497 	mov	dptr,#_axradio_sync_time
   152A E0            [24] 8498 	movx	a,@dptr
   152B FC            [12] 8499 	mov	r4,a
   152C A3            [24] 8500 	inc	dptr
   152D E0            [24] 8501 	movx	a,@dptr
   152E FD            [12] 8502 	mov	r5,a
   152F A3            [24] 8503 	inc	dptr
   1530 E0            [24] 8504 	movx	a,@dptr
   1531 FE            [12] 8505 	mov	r6,a
   1532 A3            [24] 8506 	inc	dptr
   1533 E0            [24] 8507 	movx	a,@dptr
   1534 FF            [12] 8508 	mov	r7,a
   1535 90r02r89      [24] 8509 	mov	dptr,#(_axradio_timer + 0x0004)
   1538 EC            [12] 8510 	mov	a,r4
   1539 F0            [24] 8511 	movx	@dptr,a
   153A ED            [12] 8512 	mov	a,r5
   153B A3            [24] 8513 	inc	dptr
   153C F0            [24] 8514 	movx	@dptr,a
   153D EE            [12] 8515 	mov	a,r6
   153E A3            [24] 8516 	inc	dptr
   153F F0            [24] 8517 	movx	@dptr,a
   1540 EF            [12] 8518 	mov	a,r7
   1541 A3            [24] 8519 	inc	dptr
   1542 F0            [24] 8520 	movx	@dptr,a
                     1543  8521 	C$easyax5043.c$1179$3$305 ==.
                           8522 ;	../COMMON/easyax5043.c:1179: wtimer0_addabsolute(&axradio_timer);
   1543 90r02r85      [24] 8523 	mov	dptr,#_axradio_timer
   1546 12r00r00      [24] 8524 	lcall	_wtimer0_addabsolute
                     1549  8525 	C$easyax5043.c$1180$3$305 ==.
                           8526 ;	../COMMON/easyax5043.c:1180: update_timeanchor();
   1549 12r00r00      [24] 8527 	lcall	_update_timeanchor
                     154C  8528 	C$easyax5043.c$1181$3$305 ==.
                           8529 ;	../COMMON/easyax5043.c:1181: wtimer_remove_callback(&axradio_cb_receive.cb);
   154C 90r02r2E      [24] 8530 	mov	dptr,#_axradio_cb_receive
   154F 12r00r00      [24] 8531 	lcall	_wtimer_remove_callback
                     1552  8532 	C$easyax5043.c$1182$3$305 ==.
                           8533 ;	../COMMON/easyax5043.c:1182: memset_xdata(&axradio_cb_receive.st, 0, sizeof(axradio_cb_receive.st));
   1552 75*00 00      [24] 8534 	mov	_memset_PARM_2,#0x00
   1555 75*00 1E      [24] 8535 	mov	_memset_PARM_3,#0x1E
   1558 75*01 00      [24] 8536 	mov	(_memset_PARM_3 + 1),#0x00
   155B 90r02r32      [24] 8537 	mov	dptr,#(_axradio_cb_receive + 0x0004)
   155E 75 F0 00      [24] 8538 	mov	b,#0x00
   1561 12r00r00      [24] 8539 	lcall	_memset
                     1564  8540 	C$easyax5043.c$1183$3$305 ==.
                           8541 ;	../COMMON/easyax5043.c:1183: axradio_cb_receive.st.time.t = axradio_timeanchor.radiotimer;
   1564 90r00r16      [24] 8542 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   1567 E0            [24] 8543 	movx	a,@dptr
   1568 FC            [12] 8544 	mov	r4,a
   1569 A3            [24] 8545 	inc	dptr
   156A E0            [24] 8546 	movx	a,@dptr
   156B FD            [12] 8547 	mov	r5,a
   156C A3            [24] 8548 	inc	dptr
   156D E0            [24] 8549 	movx	a,@dptr
   156E FE            [12] 8550 	mov	r6,a
   156F A3            [24] 8551 	inc	dptr
   1570 E0            [24] 8552 	movx	a,@dptr
   1571 FF            [12] 8553 	mov	r7,a
   1572 90r02r34      [24] 8554 	mov	dptr,#(_axradio_cb_receive + 0x0006)
   1575 EC            [12] 8555 	mov	a,r4
   1576 F0            [24] 8556 	movx	@dptr,a
   1577 ED            [12] 8557 	mov	a,r5
   1578 A3            [24] 8558 	inc	dptr
   1579 F0            [24] 8559 	movx	@dptr,a
   157A EE            [12] 8560 	mov	a,r6
   157B A3            [24] 8561 	inc	dptr
   157C F0            [24] 8562 	movx	@dptr,a
   157D EF            [12] 8563 	mov	a,r7
   157E A3            [24] 8564 	inc	dptr
   157F F0            [24] 8565 	movx	@dptr,a
                     1580  8566 	C$easyax5043.c$1184$3$305 ==.
                           8567 ;	../COMMON/easyax5043.c:1184: axradio_cb_receive.st.error = AXRADIO_ERR_RESYNC;
   1580 90r02r33      [24] 8568 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   1583 74 09         [12] 8569 	mov	a,#0x09
   1585 F0            [24] 8570 	movx	@dptr,a
                     1586  8571 	C$easyax5043.c$1185$3$305 ==.
                           8572 ;	../COMMON/easyax5043.c:1185: wtimer_add_callback(&axradio_cb_receive.cb);
   1586 90r02r2E      [24] 8573 	mov	dptr,#_axradio_cb_receive
   1589 12r00r00      [24] 8574 	lcall	_wtimer_add_callback
                     158C  8575 	C$easyax5043.c$1186$3$305 ==.
                           8576 ;	../COMMON/easyax5043.c:1186: break;
   158C 02r18r3B      [24] 8577 	ljmp	00173$
                     158F  8578 	C$easyax5043.c$1188$3$305 ==.
                           8579 ;	../COMMON/easyax5043.c:1188: case syncstate_slave_rxidle:
   158F                    8580 00155$:
                     158F  8581 	C$easyax5043.c$1189$3$305 ==.
                           8582 ;	../COMMON/easyax5043.c:1189: AX5043_PWRMODE = AX5043_PWRSTATE_XTAL_ON;
   158F 90 40 02      [24] 8583 	mov	dptr,#_AX5043_PWRMODE
   1592 74 05         [12] 8584 	mov	a,#0x05
   1594 F0            [24] 8585 	movx	@dptr,a
                     1595  8586 	C$easyax5043.c$1190$3$305 ==.
                           8587 ;	../COMMON/easyax5043.c:1190: axradio_syncstate = syncstate_slave_rxxosc;
   1595 90r00r00      [24] 8588 	mov	dptr,#_axradio_syncstate
   1598 74 09         [12] 8589 	mov	a,#0x09
   159A F0            [24] 8590 	movx	@dptr,a
                     159B  8591 	C$easyax5043.c$1191$3$305 ==.
                           8592 ;	../COMMON/easyax5043.c:1191: wtimer_remove(&axradio_timer);
   159B 90r02r85      [24] 8593 	mov	dptr,#_axradio_timer
   159E 12r00r00      [24] 8594 	lcall	_wtimer_remove
                     15A1  8595 	C$easyax5043.c$1192$3$305 ==.
                           8596 ;	../COMMON/easyax5043.c:1192: axradio_timer.time += axradio_sync_xoscstartup;
   15A1 90r02r89      [24] 8597 	mov	dptr,#(_axradio_timer + 0x0004)
   15A4 E0            [24] 8598 	movx	a,@dptr
   15A5 FC            [12] 8599 	mov	r4,a
   15A6 A3            [24] 8600 	inc	dptr
   15A7 E0            [24] 8601 	movx	a,@dptr
   15A8 FD            [12] 8602 	mov	r5,a
   15A9 A3            [24] 8603 	inc	dptr
   15AA E0            [24] 8604 	movx	a,@dptr
   15AB FE            [12] 8605 	mov	r6,a
   15AC A3            [24] 8606 	inc	dptr
   15AD E0            [24] 8607 	movx	a,@dptr
   15AE FF            [12] 8608 	mov	r7,a
   15AF 90r00r00      [24] 8609 	mov	dptr,#_axradio_sync_xoscstartup
   15B2 E4            [12] 8610 	clr	a
   15B3 93            [24] 8611 	movc	a,@a+dptr
   15B4 F8            [12] 8612 	mov	r0,a
   15B5 74 01         [12] 8613 	mov	a,#0x01
   15B7 93            [24] 8614 	movc	a,@a+dptr
   15B8 F9            [12] 8615 	mov	r1,a
   15B9 74 02         [12] 8616 	mov	a,#0x02
   15BB 93            [24] 8617 	movc	a,@a+dptr
   15BC FA            [12] 8618 	mov	r2,a
   15BD 74 03         [12] 8619 	mov	a,#0x03
   15BF 93            [24] 8620 	movc	a,@a+dptr
   15C0 FB            [12] 8621 	mov	r3,a
   15C1 E8            [12] 8622 	mov	a,r0
   15C2 2C            [12] 8623 	add	a,r4
   15C3 FC            [12] 8624 	mov	r4,a
   15C4 E9            [12] 8625 	mov	a,r1
   15C5 3D            [12] 8626 	addc	a,r5
   15C6 FD            [12] 8627 	mov	r5,a
   15C7 EA            [12] 8628 	mov	a,r2
   15C8 3E            [12] 8629 	addc	a,r6
   15C9 FE            [12] 8630 	mov	r6,a
   15CA EB            [12] 8631 	mov	a,r3
   15CB 3F            [12] 8632 	addc	a,r7
   15CC FF            [12] 8633 	mov	r7,a
   15CD 90r02r89      [24] 8634 	mov	dptr,#(_axradio_timer + 0x0004)
   15D0 EC            [12] 8635 	mov	a,r4
   15D1 F0            [24] 8636 	movx	@dptr,a
   15D2 ED            [12] 8637 	mov	a,r5
   15D3 A3            [24] 8638 	inc	dptr
   15D4 F0            [24] 8639 	movx	@dptr,a
   15D5 EE            [12] 8640 	mov	a,r6
   15D6 A3            [24] 8641 	inc	dptr
   15D7 F0            [24] 8642 	movx	@dptr,a
   15D8 EF            [12] 8643 	mov	a,r7
   15D9 A3            [24] 8644 	inc	dptr
   15DA F0            [24] 8645 	movx	@dptr,a
                     15DB  8646 	C$easyax5043.c$1193$3$305 ==.
                           8647 ;	../COMMON/easyax5043.c:1193: wtimer0_addabsolute(&axradio_timer);
   15DB 90r02r85      [24] 8648 	mov	dptr,#_axradio_timer
   15DE 12r00r00      [24] 8649 	lcall	_wtimer0_addabsolute
                     15E1  8650 	C$easyax5043.c$1194$3$305 ==.
                           8651 ;	../COMMON/easyax5043.c:1194: break;
   15E1 02r18r3B      [24] 8652 	ljmp	00173$
                     15E4  8653 	C$easyax5043.c$1196$3$305 ==.
                           8654 ;	../COMMON/easyax5043.c:1196: case syncstate_slave_rxxosc:
   15E4                    8655 00156$:
                     15E4  8656 	C$easyax5043.c$1197$3$305 ==.
                           8657 ;	../COMMON/easyax5043.c:1197: ax5043_receiver_on_continuous();
   15E4 12r0Br05      [24] 8658 	lcall	_ax5043_receiver_on_continuous
                     15E7  8659 	C$easyax5043.c$1198$3$305 ==.
                           8660 ;	../COMMON/easyax5043.c:1198: axradio_syncstate = syncstate_slave_rxsfdwindow;
   15E7 90r00r00      [24] 8661 	mov	dptr,#_axradio_syncstate
   15EA 74 0A         [12] 8662 	mov	a,#0x0A
   15EC F0            [24] 8663 	movx	@dptr,a
                     15ED  8664 	C$easyax5043.c$1199$3$305 ==.
                           8665 ;	../COMMON/easyax5043.c:1199: update_timeanchor();
   15ED 12r00r00      [24] 8666 	lcall	_update_timeanchor
                     15F0  8667 	C$easyax5043.c$1200$3$305 ==.
                           8668 ;	../COMMON/easyax5043.c:1200: wtimer_remove_callback(&axradio_cb_receive.cb);
   15F0 90r02r2E      [24] 8669 	mov	dptr,#_axradio_cb_receive
   15F3 12r00r00      [24] 8670 	lcall	_wtimer_remove_callback
                     15F6  8671 	C$easyax5043.c$1201$3$305 ==.
                           8672 ;	../COMMON/easyax5043.c:1201: memset_xdata(&axradio_cb_receive.st, 0, sizeof(axradio_cb_receive.st));
   15F6 75*00 00      [24] 8673 	mov	_memset_PARM_2,#0x00
   15F9 75*00 1E      [24] 8674 	mov	_memset_PARM_3,#0x1E
   15FC 75*01 00      [24] 8675 	mov	(_memset_PARM_3 + 1),#0x00
   15FF 90r02r32      [24] 8676 	mov	dptr,#(_axradio_cb_receive + 0x0004)
   1602 75 F0 00      [24] 8677 	mov	b,#0x00
   1605 12r00r00      [24] 8678 	lcall	_memset
                     1608  8679 	C$easyax5043.c$1202$3$305 ==.
                           8680 ;	../COMMON/easyax5043.c:1202: axradio_cb_receive.st.time.t = axradio_timeanchor.radiotimer;
   1608 90r00r16      [24] 8681 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   160B E0            [24] 8682 	movx	a,@dptr
   160C FC            [12] 8683 	mov	r4,a
   160D A3            [24] 8684 	inc	dptr
   160E E0            [24] 8685 	movx	a,@dptr
   160F FD            [12] 8686 	mov	r5,a
   1610 A3            [24] 8687 	inc	dptr
   1611 E0            [24] 8688 	movx	a,@dptr
   1612 FE            [12] 8689 	mov	r6,a
   1613 A3            [24] 8690 	inc	dptr
   1614 E0            [24] 8691 	movx	a,@dptr
   1615 FF            [12] 8692 	mov	r7,a
   1616 90r02r34      [24] 8693 	mov	dptr,#(_axradio_cb_receive + 0x0006)
   1619 EC            [12] 8694 	mov	a,r4
   161A F0            [24] 8695 	movx	@dptr,a
   161B ED            [12] 8696 	mov	a,r5
   161C A3            [24] 8697 	inc	dptr
   161D F0            [24] 8698 	movx	@dptr,a
   161E EE            [12] 8699 	mov	a,r6
   161F A3            [24] 8700 	inc	dptr
   1620 F0            [24] 8701 	movx	@dptr,a
   1621 EF            [12] 8702 	mov	a,r7
   1622 A3            [24] 8703 	inc	dptr
   1623 F0            [24] 8704 	movx	@dptr,a
                     1624  8705 	C$easyax5043.c$1203$3$305 ==.
                           8706 ;	../COMMON/easyax5043.c:1203: axradio_cb_receive.st.error = AXRADIO_ERR_RECEIVESTART;
   1624 90r02r33      [24] 8707 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   1627 74 0B         [12] 8708 	mov	a,#0x0B
   1629 F0            [24] 8709 	movx	@dptr,a
                     162A  8710 	C$easyax5043.c$1204$3$305 ==.
                           8711 ;	../COMMON/easyax5043.c:1204: wtimer_add_callback(&axradio_cb_receive.cb);
   162A 90r02r2E      [24] 8712 	mov	dptr,#_axradio_cb_receive
   162D 12r00r00      [24] 8713 	lcall	_wtimer_add_callback
                     1630  8714 	C$easyax5043.c$1205$3$305 ==.
                           8715 ;	../COMMON/easyax5043.c:1205: wtimer_remove(&axradio_timer);
   1630 90r02r85      [24] 8716 	mov	dptr,#_axradio_timer
   1633 12r00r00      [24] 8717 	lcall	_wtimer_remove
                     1636  8718 	C$easyax5043.c$1207$4$305 ==.
                           8719 ;	../COMMON/easyax5043.c:1207: uint8_t __autodata idx = axradio_sync_seqnr;
   1636 90r00r0B      [24] 8720 	mov	dptr,#_axradio_ack_seqnr
   1639 E0            [24] 8721 	movx	a,@dptr
   163A FF            [12] 8722 	mov	r7,a
                     163B  8723 	C$easyax5043.c$1208$4$306 ==.
                           8724 ;	../COMMON/easyax5043.c:1208: if (idx >= axradio_sync_slave_nrrx)
   163B 90r00r00      [24] 8725 	mov	dptr,#_axradio_sync_slave_nrrx
   163E E4            [12] 8726 	clr	a
   163F 93            [24] 8727 	movc	a,@a+dptr
   1640 FE            [12] 8728 	mov	r6,a
   1641 C3            [12] 8729 	clr	c
   1642 EF            [12] 8730 	mov	a,r7
   1643 9E            [12] 8731 	subb	a,r6
   1644 40 03         [24] 8732 	jc	00158$
                     1646  8733 	C$easyax5043.c$1209$4$306 ==.
                           8734 ;	../COMMON/easyax5043.c:1209: idx = axradio_sync_slave_nrrx - 1;
   1646 EE            [12] 8735 	mov	a,r6
   1647 14            [12] 8736 	dec	a
   1648 FF            [12] 8737 	mov	r7,a
   1649                    8738 00158$:
                     1649  8739 	C$easyax5043.c$1210$4$306 ==.
                           8740 ;	../COMMON/easyax5043.c:1210: axradio_timer.time += axradio_sync_slave_rxwindow[idx];
   1649 90r02r89      [24] 8741 	mov	dptr,#(_axradio_timer + 0x0004)
   164C E0            [24] 8742 	movx	a,@dptr
   164D FB            [12] 8743 	mov	r3,a
   164E A3            [24] 8744 	inc	dptr
   164F E0            [24] 8745 	movx	a,@dptr
   1650 FC            [12] 8746 	mov	r4,a
   1651 A3            [24] 8747 	inc	dptr
   1652 E0            [24] 8748 	movx	a,@dptr
   1653 FD            [12] 8749 	mov	r5,a
   1654 A3            [24] 8750 	inc	dptr
   1655 E0            [24] 8751 	movx	a,@dptr
   1656 FE            [12] 8752 	mov	r6,a
   1657 EF            [12] 8753 	mov	a,r7
   1658 75 F0 04      [24] 8754 	mov	b,#0x04
   165B A4            [48] 8755 	mul	ab
   165C 24r00         [12] 8756 	add	a,#_axradio_sync_slave_rxwindow
   165E F5 82         [12] 8757 	mov	dpl,a
   1660 74s00         [12] 8758 	mov	a,#(_axradio_sync_slave_rxwindow >> 8)
   1662 35 F0         [12] 8759 	addc	a,b
   1664 F5 83         [12] 8760 	mov	dph,a
   1666 E4            [12] 8761 	clr	a
   1667 93            [24] 8762 	movc	a,@a+dptr
   1668 F8            [12] 8763 	mov	r0,a
   1669 A3            [24] 8764 	inc	dptr
   166A E4            [12] 8765 	clr	a
   166B 93            [24] 8766 	movc	a,@a+dptr
   166C F9            [12] 8767 	mov	r1,a
   166D A3            [24] 8768 	inc	dptr
   166E E4            [12] 8769 	clr	a
   166F 93            [24] 8770 	movc	a,@a+dptr
   1670 FA            [12] 8771 	mov	r2,a
   1671 A3            [24] 8772 	inc	dptr
   1672 E4            [12] 8773 	clr	a
   1673 93            [24] 8774 	movc	a,@a+dptr
   1674 FF            [12] 8775 	mov	r7,a
   1675 E8            [12] 8776 	mov	a,r0
   1676 2B            [12] 8777 	add	a,r3
   1677 FB            [12] 8778 	mov	r3,a
   1678 E9            [12] 8779 	mov	a,r1
   1679 3C            [12] 8780 	addc	a,r4
   167A FC            [12] 8781 	mov	r4,a
   167B EA            [12] 8782 	mov	a,r2
   167C 3D            [12] 8783 	addc	a,r5
   167D FD            [12] 8784 	mov	r5,a
   167E EF            [12] 8785 	mov	a,r7
   167F 3E            [12] 8786 	addc	a,r6
   1680 FE            [12] 8787 	mov	r6,a
   1681 90r02r89      [24] 8788 	mov	dptr,#(_axradio_timer + 0x0004)
   1684 EB            [12] 8789 	mov	a,r3
   1685 F0            [24] 8790 	movx	@dptr,a
   1686 EC            [12] 8791 	mov	a,r4
   1687 A3            [24] 8792 	inc	dptr
   1688 F0            [24] 8793 	movx	@dptr,a
   1689 ED            [12] 8794 	mov	a,r5
   168A A3            [24] 8795 	inc	dptr
   168B F0            [24] 8796 	movx	@dptr,a
   168C EE            [12] 8797 	mov	a,r6
   168D A3            [24] 8798 	inc	dptr
   168E F0            [24] 8799 	movx	@dptr,a
                     168F  8800 	C$easyax5043.c$1212$3$305 ==.
                           8801 ;	../COMMON/easyax5043.c:1212: wtimer0_addabsolute(&axradio_timer);
   168F 90r02r85      [24] 8802 	mov	dptr,#_axradio_timer
   1692 12r00r00      [24] 8803 	lcall	_wtimer0_addabsolute
                     1695  8804 	C$easyax5043.c$1213$3$305 ==.
                           8805 ;	../COMMON/easyax5043.c:1213: break;
   1695 02r18r3B      [24] 8806 	ljmp	00173$
                     1698  8807 	C$easyax5043.c$1215$3$305 ==.
                           8808 ;	../COMMON/easyax5043.c:1215: case syncstate_slave_rxsfdwindow:
   1698                    8809 00159$:
                     1698  8810 	C$easyax5043.c$1216$3$305 ==.
                           8811 ;	../COMMON/easyax5043.c:1216: if (!(0x0F & (uint8_t)~AX5043_RADIOSTATE)) {
   1698 90 40 1C      [24] 8812 	mov	dptr,#_AX5043_RADIOSTATE
   169B E0            [24] 8813 	movx	a,@dptr
   169C F4            [12] 8814 	cpl	a
   169D FF            [12] 8815 	mov	r7,a
   169E 54 0F         [12] 8816 	anl	a,#0x0F
   16A0 60 02         [24] 8817 	jz	00288$
   16A2 80 4F         [24] 8818 	sjmp	00162$
   16A4                    8819 00288$:
                     16A4  8820 	C$easyax5043.c$1217$4$307 ==.
                           8821 ;	../COMMON/easyax5043.c:1217: axradio_syncstate = syncstate_slave_rxpacket;
   16A4 90r00r00      [24] 8822 	mov	dptr,#_axradio_syncstate
   16A7 74 0B         [12] 8823 	mov	a,#0x0B
   16A9 F0            [24] 8824 	movx	@dptr,a
                     16AA  8825 	C$easyax5043.c$1218$4$307 ==.
                           8826 ;	../COMMON/easyax5043.c:1218: wtimer_remove(&axradio_timer);
   16AA 90r02r85      [24] 8827 	mov	dptr,#_axradio_timer
   16AD 12r00r00      [24] 8828 	lcall	_wtimer_remove
                     16B0  8829 	C$easyax5043.c$1219$4$307 ==.
                           8830 ;	../COMMON/easyax5043.c:1219: axradio_timer.time += axradio_sync_slave_rxtimeout;
   16B0 90r02r89      [24] 8831 	mov	dptr,#(_axradio_timer + 0x0004)
   16B3 E0            [24] 8832 	movx	a,@dptr
   16B4 FC            [12] 8833 	mov	r4,a
   16B5 A3            [24] 8834 	inc	dptr
   16B6 E0            [24] 8835 	movx	a,@dptr
   16B7 FD            [12] 8836 	mov	r5,a
   16B8 A3            [24] 8837 	inc	dptr
   16B9 E0            [24] 8838 	movx	a,@dptr
   16BA FE            [12] 8839 	mov	r6,a
   16BB A3            [24] 8840 	inc	dptr
   16BC E0            [24] 8841 	movx	a,@dptr
   16BD FF            [12] 8842 	mov	r7,a
   16BE 90r00r00      [24] 8843 	mov	dptr,#_axradio_sync_slave_rxtimeout
   16C1 E4            [12] 8844 	clr	a
   16C2 93            [24] 8845 	movc	a,@a+dptr
   16C3 F8            [12] 8846 	mov	r0,a
   16C4 74 01         [12] 8847 	mov	a,#0x01
   16C6 93            [24] 8848 	movc	a,@a+dptr
   16C7 F9            [12] 8849 	mov	r1,a
   16C8 74 02         [12] 8850 	mov	a,#0x02
   16CA 93            [24] 8851 	movc	a,@a+dptr
   16CB FA            [12] 8852 	mov	r2,a
   16CC 74 03         [12] 8853 	mov	a,#0x03
   16CE 93            [24] 8854 	movc	a,@a+dptr
   16CF FB            [12] 8855 	mov	r3,a
   16D0 E8            [12] 8856 	mov	a,r0
   16D1 2C            [12] 8857 	add	a,r4
   16D2 FC            [12] 8858 	mov	r4,a
   16D3 E9            [12] 8859 	mov	a,r1
   16D4 3D            [12] 8860 	addc	a,r5
   16D5 FD            [12] 8861 	mov	r5,a
   16D6 EA            [12] 8862 	mov	a,r2
   16D7 3E            [12] 8863 	addc	a,r6
   16D8 FE            [12] 8864 	mov	r6,a
   16D9 EB            [12] 8865 	mov	a,r3
   16DA 3F            [12] 8866 	addc	a,r7
   16DB FF            [12] 8867 	mov	r7,a
   16DC 90r02r89      [24] 8868 	mov	dptr,#(_axradio_timer + 0x0004)
   16DF EC            [12] 8869 	mov	a,r4
   16E0 F0            [24] 8870 	movx	@dptr,a
   16E1 ED            [12] 8871 	mov	a,r5
   16E2 A3            [24] 8872 	inc	dptr
   16E3 F0            [24] 8873 	movx	@dptr,a
   16E4 EE            [12] 8874 	mov	a,r6
   16E5 A3            [24] 8875 	inc	dptr
   16E6 F0            [24] 8876 	movx	@dptr,a
   16E7 EF            [12] 8877 	mov	a,r7
   16E8 A3            [24] 8878 	inc	dptr
   16E9 F0            [24] 8879 	movx	@dptr,a
                     16EA  8880 	C$easyax5043.c$1220$4$307 ==.
                           8881 ;	../COMMON/easyax5043.c:1220: wtimer0_addabsolute(&axradio_timer);
   16EA 90r02r85      [24] 8882 	mov	dptr,#_axradio_timer
   16ED 12r00r00      [24] 8883 	lcall	_wtimer0_addabsolute
                     16F0  8884 	C$easyax5043.c$1221$4$307 ==.
                           8885 ;	../COMMON/easyax5043.c:1221: break;
   16F0 02r18r3B      [24] 8886 	ljmp	00173$
                     16F3  8887 	C$easyax5043.c$1225$3$305 ==.
                           8888 ;	../COMMON/easyax5043.c:1225: case syncstate_slave_rxpacket:
   16F3                    8889 00162$:
                     16F3  8890 	C$easyax5043.c$1226$3$305 ==.
                           8891 ;	../COMMON/easyax5043.c:1226: ax5043_off();
   16F3 12r0Cr4A      [24] 8892 	lcall	_ax5043_off
                     16F6  8893 	C$easyax5043.c$1227$3$305 ==.
                           8894 ;	../COMMON/easyax5043.c:1227: if (!axradio_sync_seqnr)
   16F6 90r00r0B      [24] 8895 	mov	dptr,#_axradio_ack_seqnr
   16F9 E0            [24] 8896 	movx	a,@dptr
   16FA FF            [12] 8897 	mov	r7,a
   16FB 70 06         [24] 8898 	jnz	00164$
                     16FD  8899 	C$easyax5043.c$1228$3$305 ==.
                           8900 ;	../COMMON/easyax5043.c:1228: axradio_sync_seqnr = 1;
   16FD 90r00r0B      [24] 8901 	mov	dptr,#_axradio_ack_seqnr
   1700 74 01         [12] 8902 	mov	a,#0x01
   1702 F0            [24] 8903 	movx	@dptr,a
   1703                    8904 00164$:
                     1703  8905 	C$easyax5043.c$1229$3$305 ==.
                           8906 ;	../COMMON/easyax5043.c:1229: ++axradio_sync_seqnr;
   1703 90r00r0B      [24] 8907 	mov	dptr,#_axradio_ack_seqnr
   1706 E0            [24] 8908 	movx	a,@dptr
   1707 24 01         [12] 8909 	add	a,#0x01
   1709 F0            [24] 8910 	movx	@dptr,a
                     170A  8911 	C$easyax5043.c$1230$3$305 ==.
                           8912 ;	../COMMON/easyax5043.c:1230: update_timeanchor();
   170A 12r00r00      [24] 8913 	lcall	_update_timeanchor
                     170D  8914 	C$easyax5043.c$1231$3$305 ==.
                           8915 ;	../COMMON/easyax5043.c:1231: wtimer_remove_callback(&axradio_cb_receive.cb);
   170D 90r02r2E      [24] 8916 	mov	dptr,#_axradio_cb_receive
   1710 12r00r00      [24] 8917 	lcall	_wtimer_remove_callback
                     1713  8918 	C$easyax5043.c$1232$3$305 ==.
                           8919 ;	../COMMON/easyax5043.c:1232: memset_xdata(&axradio_cb_receive.st, 0, sizeof(axradio_cb_receive.st));
   1713 75*00 00      [24] 8920 	mov	_memset_PARM_2,#0x00
   1716 75*00 1E      [24] 8921 	mov	_memset_PARM_3,#0x1E
   1719 75*01 00      [24] 8922 	mov	(_memset_PARM_3 + 1),#0x00
   171C 90r02r32      [24] 8923 	mov	dptr,#(_axradio_cb_receive + 0x0004)
   171F 75 F0 00      [24] 8924 	mov	b,#0x00
   1722 12r00r00      [24] 8925 	lcall	_memset
                     1725  8926 	C$easyax5043.c$1233$3$305 ==.
                           8927 ;	../COMMON/easyax5043.c:1233: axradio_cb_receive.st.time.t = axradio_timeanchor.radiotimer;
   1725 90r00r16      [24] 8928 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   1728 E0            [24] 8929 	movx	a,@dptr
   1729 FC            [12] 8930 	mov	r4,a
   172A A3            [24] 8931 	inc	dptr
   172B E0            [24] 8932 	movx	a,@dptr
   172C FD            [12] 8933 	mov	r5,a
   172D A3            [24] 8934 	inc	dptr
   172E E0            [24] 8935 	movx	a,@dptr
   172F FE            [12] 8936 	mov	r6,a
   1730 A3            [24] 8937 	inc	dptr
   1731 E0            [24] 8938 	movx	a,@dptr
   1732 FF            [12] 8939 	mov	r7,a
   1733 90r02r34      [24] 8940 	mov	dptr,#(_axradio_cb_receive + 0x0006)
   1736 EC            [12] 8941 	mov	a,r4
   1737 F0            [24] 8942 	movx	@dptr,a
   1738 ED            [12] 8943 	mov	a,r5
   1739 A3            [24] 8944 	inc	dptr
   173A F0            [24] 8945 	movx	@dptr,a
   173B EE            [12] 8946 	mov	a,r6
   173C A3            [24] 8947 	inc	dptr
   173D F0            [24] 8948 	movx	@dptr,a
   173E EF            [12] 8949 	mov	a,r7
   173F A3            [24] 8950 	inc	dptr
   1740 F0            [24] 8951 	movx	@dptr,a
                     1741  8952 	C$easyax5043.c$1234$3$305 ==.
                           8953 ;	../COMMON/easyax5043.c:1234: axradio_cb_receive.st.error = AXRADIO_ERR_TIMEOUT;
   1741 90r02r33      [24] 8954 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   1744 74 03         [12] 8955 	mov	a,#0x03
   1746 F0            [24] 8956 	movx	@dptr,a
                     1747  8957 	C$easyax5043.c$1235$3$305 ==.
                           8958 ;	../COMMON/easyax5043.c:1235: if (axradio_sync_seqnr <= axradio_sync_slave_resyncloss) {
   1747 90r00r0B      [24] 8959 	mov	dptr,#_axradio_ack_seqnr
   174A E0            [24] 8960 	movx	a,@dptr
   174B FF            [12] 8961 	mov	r7,a
   174C 90r00r00      [24] 8962 	mov	dptr,#_axradio_sync_slave_resyncloss
   174F E4            [12] 8963 	clr	a
   1750 93            [24] 8964 	movc	a,@a+dptr
   1751 FE            [12] 8965 	mov	r6,a
   1752 C3            [12] 8966 	clr	c
   1753 9F            [12] 8967 	subb	a,r7
   1754 40 57         [24] 8968 	jc	00168$
                     1756  8969 	C$easyax5043.c$1236$4$308 ==.
                           8970 ;	../COMMON/easyax5043.c:1236: wtimer_add_callback(&axradio_cb_receive.cb);
   1756 90r02r2E      [24] 8971 	mov	dptr,#_axradio_cb_receive
   1759 12r00r00      [24] 8972 	lcall	_wtimer_add_callback
                     175C  8973 	C$easyax5043.c$1237$4$308 ==.
                           8974 ;	../COMMON/easyax5043.c:1237: axradio_sync_slave_nextperiod();
   175C 12r0FrA1      [24] 8975 	lcall	_axradio_sync_slave_nextperiod
                     175F  8976 	C$easyax5043.c$1238$4$308 ==.
                           8977 ;	../COMMON/easyax5043.c:1238: axradio_syncstate = syncstate_slave_rxidle;
   175F 90r00r00      [24] 8978 	mov	dptr,#_axradio_syncstate
   1762 74 08         [12] 8979 	mov	a,#0x08
   1764 F0            [24] 8980 	movx	@dptr,a
                     1765  8981 	C$easyax5043.c$1239$4$308 ==.
                           8982 ;	../COMMON/easyax5043.c:1239: wtimer_remove(&axradio_timer);
   1765 90r02r85      [24] 8983 	mov	dptr,#_axradio_timer
   1768 12r00r00      [24] 8984 	lcall	_wtimer_remove
                     176B  8985 	C$easyax5043.c$1241$5$308 ==.
                           8986 ;	../COMMON/easyax5043.c:1241: uint8_t __autodata idx = axradio_sync_seqnr;
   176B 90r00r0B      [24] 8987 	mov	dptr,#_axradio_ack_seqnr
   176E E0            [24] 8988 	movx	a,@dptr
   176F FF            [12] 8989 	mov	r7,a
                     1770  8990 	C$easyax5043.c$1242$5$309 ==.
                           8991 ;	../COMMON/easyax5043.c:1242: if (idx >= axradio_sync_slave_nrrx)
   1770 90r00r00      [24] 8992 	mov	dptr,#_axradio_sync_slave_nrrx
   1773 E4            [12] 8993 	clr	a
   1774 93            [24] 8994 	movc	a,@a+dptr
   1775 FE            [12] 8995 	mov	r6,a
   1776 C3            [12] 8996 	clr	c
   1777 EF            [12] 8997 	mov	a,r7
   1778 9E            [12] 8998 	subb	a,r6
   1779 40 03         [24] 8999 	jc	00166$
                     177B  9000 	C$easyax5043.c$1243$5$309 ==.
                           9001 ;	../COMMON/easyax5043.c:1243: idx = axradio_sync_slave_nrrx - 1;
   177B EE            [12] 9002 	mov	a,r6
   177C 14            [12] 9003 	dec	a
   177D FF            [12] 9004 	mov	r7,a
   177E                    9005 00166$:
                     177E  9006 	C$easyax5043.c$1244$5$309 ==.
                           9007 ;	../COMMON/easyax5043.c:1244: axradio_sync_settimeradv(axradio_sync_slave_rxadvance[idx]);
   177E EF            [12] 9008 	mov	a,r7
   177F 75 F0 04      [24] 9009 	mov	b,#0x04
   1782 A4            [48] 9010 	mul	ab
   1783 24r00         [12] 9011 	add	a,#_axradio_sync_slave_rxadvance
   1785 F5 82         [12] 9012 	mov	dpl,a
   1787 74s00         [12] 9013 	mov	a,#(_axradio_sync_slave_rxadvance >> 8)
   1789 35 F0         [12] 9014 	addc	a,b
   178B F5 83         [12] 9015 	mov	dph,a
   178D E4            [12] 9016 	clr	a
   178E 93            [24] 9017 	movc	a,@a+dptr
   178F FC            [12] 9018 	mov	r4,a
   1790 A3            [24] 9019 	inc	dptr
   1791 E4            [12] 9020 	clr	a
   1792 93            [24] 9021 	movc	a,@a+dptr
   1793 FD            [12] 9022 	mov	r5,a
   1794 A3            [24] 9023 	inc	dptr
   1795 E4            [12] 9024 	clr	a
   1796 93            [24] 9025 	movc	a,@a+dptr
   1797 FE            [12] 9026 	mov	r6,a
   1798 A3            [24] 9027 	inc	dptr
   1799 E4            [12] 9028 	clr	a
   179A 93            [24] 9029 	movc	a,@a+dptr
   179B 8C 82         [24] 9030 	mov	dpl,r4
   179D 8D 83         [24] 9031 	mov	dph,r5
   179F 8E F0         [24] 9032 	mov	b,r6
   17A1 12r0Er3B      [24] 9033 	lcall	_axradio_sync_settimeradv
                     17A4  9034 	C$easyax5043.c$1246$4$308 ==.
                           9035 ;	../COMMON/easyax5043.c:1246: wtimer0_addabsolute(&axradio_timer);
   17A4 90r02r85      [24] 9036 	mov	dptr,#_axradio_timer
   17A7 12r00r00      [24] 9037 	lcall	_wtimer0_addabsolute
                     17AA  9038 	C$easyax5043.c$1247$4$308 ==.
                           9039 ;	../COMMON/easyax5043.c:1247: break;
   17AA 02r18r3B      [24] 9040 	ljmp	00173$
   17AD                    9041 00168$:
                     17AD  9042 	C$easyax5043.c$1249$3$305 ==.
                           9043 ;	../COMMON/easyax5043.c:1249: axradio_cb_receive.st.error = AXRADIO_ERR_RESYNC;
   17AD 90r02r33      [24] 9044 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   17B0 74 09         [12] 9045 	mov	a,#0x09
   17B2 F0            [24] 9046 	movx	@dptr,a
                     17B3  9047 	C$easyax5043.c$1250$3$305 ==.
                           9048 ;	../COMMON/easyax5043.c:1250: wtimer_add_callback(&axradio_cb_receive.cb);
   17B3 90r02r2E      [24] 9049 	mov	dptr,#_axradio_cb_receive
   17B6 12r00r00      [24] 9050 	lcall	_wtimer_add_callback
                     17B9  9051 	C$easyax5043.c$1251$3$305 ==.
                           9052 ;	../COMMON/easyax5043.c:1251: ax5043_receiver_on_continuous();
   17B9 12r0Br05      [24] 9053 	lcall	_ax5043_receiver_on_continuous
                     17BC  9054 	C$easyax5043.c$1252$3$305 ==.
                           9055 ;	../COMMON/easyax5043.c:1252: axradio_syncstate = syncstate_slave_synchunt;
   17BC 90r00r00      [24] 9056 	mov	dptr,#_axradio_syncstate
   17BF 74 06         [12] 9057 	mov	a,#0x06
   17C1 F0            [24] 9058 	movx	@dptr,a
                     17C2  9059 	C$easyax5043.c$1253$3$305 ==.
                           9060 ;	../COMMON/easyax5043.c:1253: wtimer_remove(&axradio_timer);
   17C2 90r02r85      [24] 9061 	mov	dptr,#_axradio_timer
   17C5 12r00r00      [24] 9062 	lcall	_wtimer_remove
                     17C8  9063 	C$easyax5043.c$1254$3$305 ==.
                           9064 ;	../COMMON/easyax5043.c:1254: axradio_timer.time = axradio_sync_slave_syncwindow;
   17C8 90r00r00      [24] 9065 	mov	dptr,#_axradio_sync_slave_syncwindow
   17CB E4            [12] 9066 	clr	a
   17CC 93            [24] 9067 	movc	a,@a+dptr
   17CD FC            [12] 9068 	mov	r4,a
   17CE 74 01         [12] 9069 	mov	a,#0x01
   17D0 93            [24] 9070 	movc	a,@a+dptr
   17D1 FD            [12] 9071 	mov	r5,a
   17D2 74 02         [12] 9072 	mov	a,#0x02
   17D4 93            [24] 9073 	movc	a,@a+dptr
   17D5 FE            [12] 9074 	mov	r6,a
   17D6 74 03         [12] 9075 	mov	a,#0x03
   17D8 93            [24] 9076 	movc	a,@a+dptr
   17D9 FF            [12] 9077 	mov	r7,a
   17DA 90r02r89      [24] 9078 	mov	dptr,#(_axradio_timer + 0x0004)
   17DD EC            [12] 9079 	mov	a,r4
   17DE F0            [24] 9080 	movx	@dptr,a
   17DF ED            [12] 9081 	mov	a,r5
   17E0 A3            [24] 9082 	inc	dptr
   17E1 F0            [24] 9083 	movx	@dptr,a
   17E2 EE            [12] 9084 	mov	a,r6
   17E3 A3            [24] 9085 	inc	dptr
   17E4 F0            [24] 9086 	movx	@dptr,a
   17E5 EF            [12] 9087 	mov	a,r7
   17E6 A3            [24] 9088 	inc	dptr
   17E7 F0            [24] 9089 	movx	@dptr,a
                     17E8  9090 	C$easyax5043.c$1255$3$305 ==.
                           9091 ;	../COMMON/easyax5043.c:1255: wtimer0_addrelative(&axradio_timer);
   17E8 90r02r85      [24] 9092 	mov	dptr,#_axradio_timer
   17EB 12r00r00      [24] 9093 	lcall	_wtimer0_addrelative
                     17EE  9094 	C$easyax5043.c$1256$3$305 ==.
                           9095 ;	../COMMON/easyax5043.c:1256: axradio_sync_time = axradio_timer.time;
   17EE 90r02r89      [24] 9096 	mov	dptr,#(_axradio_timer + 0x0004)
   17F1 E0            [24] 9097 	movx	a,@dptr
   17F2 FC            [12] 9098 	mov	r4,a
   17F3 A3            [24] 9099 	inc	dptr
   17F4 E0            [24] 9100 	movx	a,@dptr
   17F5 FD            [12] 9101 	mov	r5,a
   17F6 A3            [24] 9102 	inc	dptr
   17F7 E0            [24] 9103 	movx	a,@dptr
   17F8 FE            [12] 9104 	mov	r6,a
   17F9 A3            [24] 9105 	inc	dptr
   17FA E0            [24] 9106 	movx	a,@dptr
   17FB FF            [12] 9107 	mov	r7,a
   17FC 90r00r0C      [24] 9108 	mov	dptr,#_axradio_sync_time
   17FF EC            [12] 9109 	mov	a,r4
   1800 F0            [24] 9110 	movx	@dptr,a
   1801 ED            [12] 9111 	mov	a,r5
   1802 A3            [24] 9112 	inc	dptr
   1803 F0            [24] 9113 	movx	@dptr,a
   1804 EE            [12] 9114 	mov	a,r6
   1805 A3            [24] 9115 	inc	dptr
   1806 F0            [24] 9116 	movx	@dptr,a
   1807 EF            [12] 9117 	mov	a,r7
   1808 A3            [24] 9118 	inc	dptr
   1809 F0            [24] 9119 	movx	@dptr,a
                     180A  9120 	C$easyax5043.c$1257$3$305 ==.
                           9121 ;	../COMMON/easyax5043.c:1257: break;
                     180A  9122 	C$easyax5043.c$1259$3$305 ==.
                           9123 ;	../COMMON/easyax5043.c:1259: case syncstate_slave_rxack:
   180A 80 2F         [24] 9124 	sjmp	00173$
   180C                    9125 00169$:
                     180C  9126 	C$easyax5043.c$1260$3$305 ==.
                           9127 ;	../COMMON/easyax5043.c:1260: axradio_syncstate = syncstate_slave_rxidle;
   180C 90r00r00      [24] 9128 	mov	dptr,#_axradio_syncstate
   180F 74 08         [12] 9129 	mov	a,#0x08
   1811 F0            [24] 9130 	movx	@dptr,a
                     1812  9131 	C$easyax5043.c$1261$3$305 ==.
                           9132 ;	../COMMON/easyax5043.c:1261: wtimer_remove(&axradio_timer);
   1812 90r02r85      [24] 9133 	mov	dptr,#_axradio_timer
   1815 12r00r00      [24] 9134 	lcall	_wtimer_remove
                     1818  9135 	C$easyax5043.c$1262$3$305 ==.
                           9136 ;	../COMMON/easyax5043.c:1262: axradio_sync_settimeradv(axradio_sync_slave_rxadvance[1]);
   1818 90r00r04      [24] 9137 	mov	dptr,#(_axradio_sync_slave_rxadvance + 0x0004)
   181B E4            [12] 9138 	clr	a
   181C 93            [24] 9139 	movc	a,@a+dptr
   181D FC            [12] 9140 	mov	r4,a
   181E A3            [24] 9141 	inc	dptr
   181F E4            [12] 9142 	clr	a
   1820 93            [24] 9143 	movc	a,@a+dptr
   1821 FD            [12] 9144 	mov	r5,a
   1822 A3            [24] 9145 	inc	dptr
   1823 E4            [12] 9146 	clr	a
   1824 93            [24] 9147 	movc	a,@a+dptr
   1825 FE            [12] 9148 	mov	r6,a
   1826 A3            [24] 9149 	inc	dptr
   1827 E4            [12] 9150 	clr	a
   1828 93            [24] 9151 	movc	a,@a+dptr
   1829 8C 82         [24] 9152 	mov	dpl,r4
   182B 8D 83         [24] 9153 	mov	dph,r5
   182D 8E F0         [24] 9154 	mov	b,r6
   182F 12r0Er3B      [24] 9155 	lcall	_axradio_sync_settimeradv
                     1832  9156 	C$easyax5043.c$1263$3$305 ==.
                           9157 ;	../COMMON/easyax5043.c:1263: wtimer0_addabsolute(&axradio_timer);
   1832 90r02r85      [24] 9158 	mov	dptr,#_axradio_timer
   1835 12r00r00      [24] 9159 	lcall	_wtimer0_addabsolute
                     1838  9160 	C$easyax5043.c$1264$3$305 ==.
                           9161 ;	../COMMON/easyax5043.c:1264: goto transmitack;
   1838 02r12r02      [24] 9162 	ljmp	00131$
                     183B  9163 	C$easyax5043.c$1268$2$297 ==.
                           9164 ;	../COMMON/easyax5043.c:1268: default:
   183B                    9165 00171$:
                     183B  9166 	C$easyax5043.c$1270$1$296 ==.
                           9167 ;	../COMMON/easyax5043.c:1270: }
   183B                    9168 00173$:
                     183B  9169 	C$easyax5043.c$1271$1$296 ==.
                     183B  9170 	XFeasyax5043$axradio_timer_callback$0$0 ==.
   183B 22            [24] 9171 	ret
                           9172 ;------------------------------------------------------------
                           9173 ;Allocation info for local variables in function 'axradio_callback_fwd'
                           9174 ;------------------------------------------------------------
                           9175 ;desc                      Allocated to registers r6 r7 
                           9176 ;------------------------------------------------------------
                     183C  9177 	Feasyax5043$axradio_callback_fwd$0$0 ==.
                     183C  9178 	C$easyax5043.c$1273$1$296 ==.
                           9179 ;	../COMMON/easyax5043.c:1273: static __reentrantb void axradio_callback_fwd(struct wtimer_callback __xdata *desc) __reentrant
                           9180 ;	-----------------------------------------
                           9181 ;	 function axradio_callback_fwd
                           9182 ;	-----------------------------------------
   183C                    9183 _axradio_callback_fwd:
   183C AE 82         [24] 9184 	mov	r6,dpl
   183E AF 83         [24] 9185 	mov	r7,dph
                     1840  9186 	C$easyax5043.c$1275$1$311 ==.
                           9187 ;	../COMMON/easyax5043.c:1275: axradio_statuschange((struct axradio_status __xdata *)(desc + 1));
   1840 74 04         [12] 9188 	mov	a,#0x04
   1842 2E            [12] 9189 	add	a,r6
   1843 FE            [12] 9190 	mov	r6,a
   1844 E4            [12] 9191 	clr	a
   1845 3F            [12] 9192 	addc	a,r7
   1846 FF            [12] 9193 	mov	r7,a
   1847 8E 82         [24] 9194 	mov	dpl,r6
   1849 8F 83         [24] 9195 	mov	dph,r7
   184B 12r00r00      [24] 9196 	lcall	_axradio_statuschange
                     184E  9197 	C$easyax5043.c$1276$1$311 ==.
                     184E  9198 	XFeasyax5043$axradio_callback_fwd$0$0 ==.
   184E 22            [24] 9199 	ret
                           9200 ;------------------------------------------------------------
                           9201 ;Allocation info for local variables in function 'axradio_receive_callback_fwd'
                           9202 ;------------------------------------------------------------
                           9203 ;desc                      Allocated to registers 
                           9204 ;len                       Allocated to registers r6 r7 
                           9205 ;len                       Allocated to registers r6 r7 
                           9206 ;seqnr                     Allocated to registers r6 
                           9207 ;len_byte                  Allocated to registers r6 
                           9208 ;trxst                     Allocated to registers r6 
                           9209 ;iesave                    Allocated to registers r7 
                           9210 ;------------------------------------------------------------
                     184F  9211 	Feasyax5043$axradio_receive_callback_fwd$0$0 ==.
                     184F  9212 	C$easyax5043.c$1278$1$311 ==.
                           9213 ;	../COMMON/easyax5043.c:1278: static void axradio_receive_callback_fwd(struct wtimer_callback __xdata *desc)
                           9214 ;	-----------------------------------------
                           9215 ;	 function axradio_receive_callback_fwd
                           9216 ;	-----------------------------------------
   184F                    9217 _axradio_receive_callback_fwd:
                     184F  9218 	C$easyax5043.c$1284$1$313 ==.
                           9219 ;	../COMMON/easyax5043.c:1284: if (DBGLNKSTAT & 0x10)
   184F E5 E2         [12] 9220 	mov	a,_DBGLNKSTAT
   1851 30 E4 09      [24] 9221 	jnb	acc.4,00102$
                     1854  9222 	C$easyax5043.c$1285$1$313 ==.
                           9223 ;	../COMMON/easyax5043.c:1285: dbglink_writestr("RX\n");
   1854 90r00r00      [24] 9224 	mov	dptr,#__str_0
   1857 75 F0 80      [24] 9225 	mov	b,#0x80
   185A 12r00r00      [24] 9226 	lcall	_dbglink_writestr
   185D                    9227 00102$:
                     185D  9228 	C$easyax5043.c$1288$1$313 ==.
                           9229 ;	../COMMON/easyax5043.c:1288: if (axradio_cb_receive.st.error != AXRADIO_ERR_NOERROR) {
   185D 90r02r33      [24] 9230 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   1860 E0            [24] 9231 	movx	a,@dptr
   1861 60 09         [24] 9232 	jz	00104$
                     1863  9233 	C$easyax5043.c$1289$2$314 ==.
                           9234 ;	../COMMON/easyax5043.c:1289: axradio_statuschange((struct axradio_status __xdata *)&axradio_cb_receive.st);
   1863 90r02r32      [24] 9235 	mov	dptr,#(_axradio_cb_receive + 0x0004)
   1866 12r00r00      [24] 9236 	lcall	_axradio_statuschange
                     1869  9237 	C$easyax5043.c$1290$2$314 ==.
                           9238 ;	../COMMON/easyax5043.c:1290: return;
   1869 02r1Dr72      [24] 9239 	ljmp	00182$
   186C                    9240 00104$:
                     186C  9241 	C$easyax5043.c$1292$1$313 ==.
                           9242 ;	../COMMON/easyax5043.c:1292: if (axradio_phy_pn9 && !(axradio_mode == AXRADIO_MODE_STREAM_RECEIVE ||
   186C 90r00r00      [24] 9243 	mov	dptr,#_axradio_phy_pn9
   186F E4            [12] 9244 	clr	a
   1870 93            [24] 9245 	movc	a,@a+dptr
   1871 FF            [12] 9246 	mov	r7,a
   1872 60 5C         [24] 9247 	jz	00106$
   1874 74 1C         [12] 9248 	mov	a,#0x1C
   1876 B5*00 02      [24] 9249 	cjne	a,_axradio_mode,00304$
   1879 80 55         [24] 9250 	sjmp	00106$
   187B                    9251 00304$:
                     187B  9252 	C$easyax5043.c$1293$1$313 ==.
                           9253 ;	../COMMON/easyax5043.c:1293: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_UNENC ||
   187B 74 1D         [12] 9254 	mov	a,#0x1D
   187D B5*00 02      [24] 9255 	cjne	a,_axradio_mode,00305$
   1880 80 4E         [24] 9256 	sjmp	00106$
   1882                    9257 00305$:
                     1882  9258 	C$easyax5043.c$1294$1$313 ==.
                           9259 ;	../COMMON/easyax5043.c:1294: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_SCRAM)) {
   1882 74 1E         [12] 9260 	mov	a,#0x1E
   1884 B5*00 02      [24] 9261 	cjne	a,_axradio_mode,00306$
   1887 80 47         [24] 9262 	sjmp	00106$
   1889                    9263 00306$:
                     1889  9264 	C$easyax5043.c$1295$2$315 ==.
                           9265 ;	../COMMON/easyax5043.c:1295: uint16_t __autodata len = axradio_cb_receive.st.rx.pktlen;
   1889 90r02r4E      [24] 9266 	mov	dptr,#(_axradio_cb_receive + 0x0020)
   188C E0            [24] 9267 	movx	a,@dptr
   188D FE            [12] 9268 	mov	r6,a
   188E A3            [24] 9269 	inc	dptr
   188F E0            [24] 9270 	movx	a,@dptr
   1890 FF            [12] 9271 	mov	r7,a
                     1891  9272 	C$easyax5043.c$1296$2$315 ==.
                           9273 ;	../COMMON/easyax5043.c:1296: len += axradio_framing_maclen;
   1891 90r00r00      [24] 9274 	mov	dptr,#_axradio_framing_maclen
   1894 E4            [12] 9275 	clr	a
   1895 93            [24] 9276 	movc	a,@a+dptr
   1896 7C 00         [12] 9277 	mov	r4,#0x00
   1898 2E            [12] 9278 	add	a,r6
   1899 FE            [12] 9279 	mov	r6,a
   189A EC            [12] 9280 	mov	a,r4
   189B 3F            [12] 9281 	addc	a,r7
   189C FF            [12] 9282 	mov	r7,a
                     189D  9283 	C$easyax5043.c$1297$2$315 ==.
                           9284 ;	../COMMON/easyax5043.c:1297: pn9_buffer((__xdata uint8_t *)axradio_cb_receive.st.rx.mac.raw, len, 0x1ff, -(AX5043_ENCODING & 0x01));
   189D 90 40 11      [24] 9285 	mov	dptr,#_AX5043_ENCODING
   18A0 E0            [24] 9286 	movx	a,@dptr
   18A1 FD            [12] 9287 	mov	r5,a
   18A2 53 05 01      [24] 9288 	anl	ar5,#0x01
   18A5 C3            [12] 9289 	clr	c
   18A6 E4            [12] 9290 	clr	a
   18A7 9D            [12] 9291 	subb	a,r5
   18A8 FD            [12] 9292 	mov	r5,a
   18A9 90r02r4A      [24] 9293 	mov	dptr,#(_axradio_cb_receive + 0x001c)
   18AC E0            [24] 9294 	movx	a,@dptr
   18AD FB            [12] 9295 	mov	r3,a
   18AE A3            [24] 9296 	inc	dptr
   18AF E0            [24] 9297 	movx	a,@dptr
   18B0 FC            [12] 9298 	mov	r4,a
   18B1 7A 00         [12] 9299 	mov	r2,#0x00
   18B3 C0 05         [24] 9300 	push	ar5
   18B5 74 FF         [12] 9301 	mov	a,#0xFF
   18B7 C0 E0         [24] 9302 	push	acc
   18B9 74 01         [12] 9303 	mov	a,#0x01
   18BB C0 E0         [24] 9304 	push	acc
   18BD C0 06         [24] 9305 	push	ar6
   18BF C0 07         [24] 9306 	push	ar7
   18C1 8B 82         [24] 9307 	mov	dpl,r3
   18C3 8C 83         [24] 9308 	mov	dph,r4
   18C5 8A F0         [24] 9309 	mov	b,r2
   18C7 12r00r00      [24] 9310 	lcall	_pn9_buffer
   18CA E5 81         [12] 9311 	mov	a,sp
   18CC 24 FB         [12] 9312 	add	a,#0xfb
   18CE F5 81         [12] 9313 	mov	sp,a
   18D0                    9314 00106$:
                     18D0  9315 	C$easyax5043.c$1299$1$313 ==.
                           9316 ;	../COMMON/easyax5043.c:1299: if (axradio_framing_swcrclen && !(axradio_mode == AXRADIO_MODE_STREAM_RECEIVE ||
   18D0 90r00r00      [24] 9317 	mov	dptr,#_axradio_framing_swcrclen
   18D3 E4            [12] 9318 	clr	a
   18D4 93            [24] 9319 	movc	a,@a+dptr
   18D5 FF            [12] 9320 	mov	r7,a
   18D6 60 67         [24] 9321 	jz	00113$
   18D8 74 1C         [12] 9322 	mov	a,#0x1C
   18DA B5*00 02      [24] 9323 	cjne	a,_axradio_mode,00308$
   18DD 80 60         [24] 9324 	sjmp	00113$
   18DF                    9325 00308$:
                     18DF  9326 	C$easyax5043.c$1300$1$313 ==.
                           9327 ;	../COMMON/easyax5043.c:1300: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_UNENC ||
   18DF 74 1D         [12] 9328 	mov	a,#0x1D
   18E1 B5*00 02      [24] 9329 	cjne	a,_axradio_mode,00309$
   18E4 80 59         [24] 9330 	sjmp	00113$
   18E6                    9331 00309$:
                     18E6  9332 	C$easyax5043.c$1301$1$313 ==.
                           9333 ;	../COMMON/easyax5043.c:1301: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_SCRAM)) {
   18E6 74 1E         [12] 9334 	mov	a,#0x1E
   18E8 B5*00 02      [24] 9335 	cjne	a,_axradio_mode,00310$
   18EB 80 52         [24] 9336 	sjmp	00113$
   18ED                    9337 00310$:
                     18ED  9338 	C$easyax5043.c$1302$2$316 ==.
                           9339 ;	../COMMON/easyax5043.c:1302: uint16_t __autodata len = axradio_cb_receive.st.rx.pktlen;
   18ED 90r02r4E      [24] 9340 	mov	dptr,#(_axradio_cb_receive + 0x0020)
   18F0 E0            [24] 9341 	movx	a,@dptr
   18F1 FE            [12] 9342 	mov	r6,a
   18F2 A3            [24] 9343 	inc	dptr
   18F3 E0            [24] 9344 	movx	a,@dptr
   18F4 FF            [12] 9345 	mov	r7,a
                     18F5  9346 	C$easyax5043.c$1303$2$316 ==.
                           9347 ;	../COMMON/easyax5043.c:1303: len += axradio_framing_maclen;
   18F5 90r00r00      [24] 9348 	mov	dptr,#_axradio_framing_maclen
   18F8 E4            [12] 9349 	clr	a
   18F9 93            [24] 9350 	movc	a,@a+dptr
   18FA 7C 00         [12] 9351 	mov	r4,#0x00
   18FC 2E            [12] 9352 	add	a,r6
   18FD FE            [12] 9353 	mov	r6,a
   18FE EC            [12] 9354 	mov	a,r4
   18FF 3F            [12] 9355 	addc	a,r7
   1900 FF            [12] 9356 	mov	r7,a
                     1901  9357 	C$easyax5043.c$1304$2$316 ==.
                           9358 ;	../COMMON/easyax5043.c:1304: if (!axradio_framing_check_crc((__xdata uint8_t *)axradio_cb_receive.st.rx.mac.raw, len)) {
   1901 90r02r4A      [24] 9359 	mov	dptr,#(_axradio_cb_receive + 0x001c)
   1904 E0            [24] 9360 	movx	a,@dptr
   1905 FC            [12] 9361 	mov	r4,a
   1906 A3            [24] 9362 	inc	dptr
   1907 E0            [24] 9363 	movx	a,@dptr
   1908 FD            [12] 9364 	mov	r5,a
   1909 C0 06         [24] 9365 	push	ar6
   190B C0 07         [24] 9366 	push	ar7
   190D 8C 82         [24] 9367 	mov	dpl,r4
   190F 8D 83         [24] 9368 	mov	dph,r5
   1911 12r00r00      [24] 9369 	lcall	_axradio_framing_check_crc
   1914 AF 82         [24] 9370 	mov	r7,dpl
   1916 15 81         [12] 9371 	dec	sp
   1918 15 81         [12] 9372 	dec	sp
   191A EF            [12] 9373 	mov	a,r7
   191B 70 03         [24] 9374 	jnz	00311$
   191D 02r1Dr26      [24] 9375 	ljmp	00165$
   1920                    9376 00311$:
                     1920  9377 	C$easyax5043.c$1308$2$316 ==.
                           9378 ;	../COMMON/easyax5043.c:1308: axradio_cb_receive.st.rx.pktlen -= axradio_framing_swcrclen; // drop crc
   1920 90r02r4E      [24] 9379 	mov	dptr,#(_axradio_cb_receive + 0x0020)
   1923 E0            [24] 9380 	movx	a,@dptr
   1924 FE            [12] 9381 	mov	r6,a
   1925 A3            [24] 9382 	inc	dptr
   1926 E0            [24] 9383 	movx	a,@dptr
   1927 FF            [12] 9384 	mov	r7,a
   1928 90r00r00      [24] 9385 	mov	dptr,#_axradio_framing_swcrclen
   192B E4            [12] 9386 	clr	a
   192C 93            [24] 9387 	movc	a,@a+dptr
   192D FD            [12] 9388 	mov	r5,a
   192E 7C 00         [12] 9389 	mov	r4,#0x00
   1930 EE            [12] 9390 	mov	a,r6
   1931 C3            [12] 9391 	clr	c
   1932 9D            [12] 9392 	subb	a,r5
   1933 FE            [12] 9393 	mov	r6,a
   1934 EF            [12] 9394 	mov	a,r7
   1935 9C            [12] 9395 	subb	a,r4
   1936 FF            [12] 9396 	mov	r7,a
   1937 90r02r4E      [24] 9397 	mov	dptr,#(_axradio_cb_receive + 0x0020)
   193A EE            [12] 9398 	mov	a,r6
   193B F0            [24] 9399 	movx	@dptr,a
   193C EF            [12] 9400 	mov	a,r7
   193D A3            [24] 9401 	inc	dptr
   193E F0            [24] 9402 	movx	@dptr,a
   193F                    9403 00113$:
                     193F  9404 	C$easyax5043.c$1312$1$313 ==.
                           9405 ;	../COMMON/easyax5043.c:1312: axradio_cb_receive.st.rx.phy.timeoffset = 0;
   193F 90r02r3E      [24] 9406 	mov	dptr,#(_axradio_cb_receive + 0x0010)
   1942 E4            [12] 9407 	clr	a
   1943 F0            [24] 9408 	movx	@dptr,a
   1944 E4            [12] 9409 	clr	a
   1945 A3            [24] 9410 	inc	dptr
   1946 F0            [24] 9411 	movx	@dptr,a
                     1947  9412 	C$easyax5043.c$1313$1$313 ==.
                           9413 ;	../COMMON/easyax5043.c:1313: axradio_cb_receive.st.rx.phy.period = 0;
   1947 90r02r40      [24] 9414 	mov	dptr,#(_axradio_cb_receive + 0x0012)
   194A E4            [12] 9415 	clr	a
   194B F0            [24] 9416 	movx	@dptr,a
   194C E4            [12] 9417 	clr	a
   194D A3            [24] 9418 	inc	dptr
   194E F0            [24] 9419 	movx	@dptr,a
                     194F  9420 	C$easyax5043.c$1314$1$313 ==.
                           9421 ;	../COMMON/easyax5043.c:1314: if (axradio_mode == AXRADIO_MODE_ACK_TRANSMIT ||
   194F 74 12         [12] 9422 	mov	a,#0x12
   1951 B5*00 02      [24] 9423 	cjne	a,_axradio_mode,00312$
   1954 80 0C         [24] 9424 	sjmp	00119$
   1956                    9425 00312$:
                     1956  9426 	C$easyax5043.c$1315$1$313 ==.
                           9427 ;	../COMMON/easyax5043.c:1315: axradio_mode == AXRADIO_MODE_WOR_ACK_TRANSMIT ||
   1956 74 13         [12] 9428 	mov	a,#0x13
   1958 B5*00 02      [24] 9429 	cjne	a,_axradio_mode,00313$
   195B 80 05         [24] 9430 	sjmp	00119$
   195D                    9431 00313$:
                     195D  9432 	C$easyax5043.c$1316$1$313 ==.
                           9433 ;	../COMMON/easyax5043.c:1316: axradio_mode == AXRADIO_MODE_SYNC_ACK_MASTER) {
   195D 74 21         [12] 9434 	mov	a,#0x21
   195F B5*00 60      [24] 9435 	cjne	a,_axradio_mode,00120$
   1962                    9436 00119$:
                     1962  9437 	C$easyax5043.c$1317$2$318 ==.
                           9438 ;	../COMMON/easyax5043.c:1317: ax5043_off();
   1962 12r0Cr4A      [24] 9439 	lcall	_ax5043_off
                     1965  9440 	C$easyax5043.c$1318$2$318 ==.
                           9441 ;	../COMMON/easyax5043.c:1318: wtimer_remove(&axradio_timer);
   1965 90r02r85      [24] 9442 	mov	dptr,#_axradio_timer
   1968 12r00r00      [24] 9443 	lcall	_wtimer_remove
                     196B  9444 	C$easyax5043.c$1319$2$318 ==.
                           9445 ;	../COMMON/easyax5043.c:1319: if (axradio_mode == AXRADIO_MODE_SYNC_ACK_MASTER) {
   196B 74 21         [12] 9446 	mov	a,#0x21
   196D B5*00 26      [24] 9447 	cjne	a,_axradio_mode,00118$
                     1970  9448 	C$easyax5043.c$1320$3$319 ==.
                           9449 ;	../COMMON/easyax5043.c:1320: axradio_syncstate = syncstate_master_normal;
   1970 90r00r00      [24] 9450 	mov	dptr,#_axradio_syncstate
   1973 74 03         [12] 9451 	mov	a,#0x03
   1975 F0            [24] 9452 	movx	@dptr,a
                     1976  9453 	C$easyax5043.c$1321$3$319 ==.
                           9454 ;	../COMMON/easyax5043.c:1321: axradio_sync_settimeradv(axradio_sync_xoscstartup);
   1976 90r00r00      [24] 9455 	mov	dptr,#_axradio_sync_xoscstartup
   1979 E4            [12] 9456 	clr	a
   197A 93            [24] 9457 	movc	a,@a+dptr
   197B FC            [12] 9458 	mov	r4,a
   197C 74 01         [12] 9459 	mov	a,#0x01
   197E 93            [24] 9460 	movc	a,@a+dptr
   197F FD            [12] 9461 	mov	r5,a
   1980 74 02         [12] 9462 	mov	a,#0x02
   1982 93            [24] 9463 	movc	a,@a+dptr
   1983 FE            [12] 9464 	mov	r6,a
   1984 74 03         [12] 9465 	mov	a,#0x03
   1986 93            [24] 9466 	movc	a,@a+dptr
   1987 8C 82         [24] 9467 	mov	dpl,r4
   1989 8D 83         [24] 9468 	mov	dph,r5
   198B 8E F0         [24] 9469 	mov	b,r6
   198D 12r0Er3B      [24] 9470 	lcall	_axradio_sync_settimeradv
                     1990  9471 	C$easyax5043.c$1322$3$319 ==.
                           9472 ;	../COMMON/easyax5043.c:1322: wtimer0_addabsolute(&axradio_timer);
   1990 90r02r85      [24] 9473 	mov	dptr,#_axradio_timer
   1993 12r00r00      [24] 9474 	lcall	_wtimer0_addabsolute
   1996                    9475 00118$:
                     1996  9476 	C$easyax5043.c$1324$2$318 ==.
                           9477 ;	../COMMON/easyax5043.c:1324: wtimer_remove_callback(&axradio_cb_transmitend.cb);
   1996 90r02r71      [24] 9478 	mov	dptr,#_axradio_cb_transmitend
   1999 12r00r00      [24] 9479 	lcall	_wtimer_remove_callback
                     199C  9480 	C$easyax5043.c$1325$2$318 ==.
                           9481 ;	../COMMON/easyax5043.c:1325: axradio_cb_transmitend.st.error = AXRADIO_ERR_NOERROR;
   199C 90r02r76      [24] 9482 	mov	dptr,#(_axradio_cb_transmitend + 0x0005)
   199F E4            [12] 9483 	clr	a
   19A0 F0            [24] 9484 	movx	@dptr,a
                     19A1  9485 	C$easyax5043.c$1326$2$318 ==.
                           9486 ;	../COMMON/easyax5043.c:1326: axradio_cb_transmitend.st.time.t = radio_read24((uint16_t)&AX5043_TIMER2);
   19A1 90 40 59      [24] 9487 	mov	dptr,#_AX5043_TIMER2
   19A4 12r00r00      [24] 9488 	lcall	_radio_read24
   19A7 AC 82         [24] 9489 	mov	r4,dpl
   19A9 AD 83         [24] 9490 	mov	r5,dph
   19AB AE F0         [24] 9491 	mov	r6,b
   19AD FF            [12] 9492 	mov	r7,a
   19AE 90r02r77      [24] 9493 	mov	dptr,#(_axradio_cb_transmitend + 0x0006)
   19B1 EC            [12] 9494 	mov	a,r4
   19B2 F0            [24] 9495 	movx	@dptr,a
   19B3 ED            [12] 9496 	mov	a,r5
   19B4 A3            [24] 9497 	inc	dptr
   19B5 F0            [24] 9498 	movx	@dptr,a
   19B6 EE            [12] 9499 	mov	a,r6
   19B7 A3            [24] 9500 	inc	dptr
   19B8 F0            [24] 9501 	movx	@dptr,a
   19B9 EF            [12] 9502 	mov	a,r7
   19BA A3            [24] 9503 	inc	dptr
   19BB F0            [24] 9504 	movx	@dptr,a
                     19BC  9505 	C$easyax5043.c$1327$2$318 ==.
                           9506 ;	../COMMON/easyax5043.c:1327: wtimer_add_callback(&axradio_cb_transmitend.cb);
   19BC 90r02r71      [24] 9507 	mov	dptr,#_axradio_cb_transmitend
   19BF 12r00r00      [24] 9508 	lcall	_wtimer_add_callback
   19C2                    9509 00120$:
                     19C2  9510 	C$easyax5043.c$1329$1$313 ==.
                           9511 ;	../COMMON/easyax5043.c:1329: if (axradio_framing_destaddrpos != 0xff)
   19C2 90r00r00      [24] 9512 	mov	dptr,#_axradio_framing_destaddrpos
   19C5 E4            [12] 9513 	clr	a
   19C6 93            [24] 9514 	movc	a,@a+dptr
   19C7 FF            [12] 9515 	mov	r7,a
   19C8 BF FF 02      [24] 9516 	cjne	r7,#0xFF,00318$
   19CB 80 29         [24] 9517 	sjmp	00124$
   19CD                    9518 00318$:
                     19CD  9519 	C$easyax5043.c$1330$1$313 ==.
                           9520 ;	../COMMON/easyax5043.c:1330: memcpy_xdata(&axradio_cb_receive.st.rx.mac.localaddr, &axradio_cb_receive.st.rx.mac.raw[axradio_framing_destaddrpos], axradio_framing_addrlen);
   19CD 90r02r4A      [24] 9521 	mov	dptr,#(_axradio_cb_receive + 0x001c)
   19D0 E0            [24] 9522 	movx	a,@dptr
   19D1 FD            [12] 9523 	mov	r5,a
   19D2 A3            [24] 9524 	inc	dptr
   19D3 E0            [24] 9525 	movx	a,@dptr
   19D4 FE            [12] 9526 	mov	r6,a
   19D5 EF            [12] 9527 	mov	a,r7
   19D6 2D            [12] 9528 	add	a,r5
   19D7 FF            [12] 9529 	mov	r7,a
   19D8 E4            [12] 9530 	clr	a
   19D9 3E            [12] 9531 	addc	a,r6
   19DA FC            [12] 9532 	mov	r4,a
   19DB 8F*00         [24] 9533 	mov	_memcpy_PARM_2,r7
   19DD 8C*01         [24] 9534 	mov	(_memcpy_PARM_2 + 1),r4
   19DF 75*02 00      [24] 9535 	mov	(_memcpy_PARM_2 + 2),#0x00
   19E2 90r00r00      [24] 9536 	mov	dptr,#_axradio_framing_addrlen
   19E5 E4            [12] 9537 	clr	a
   19E6 93            [24] 9538 	movc	a,@a+dptr
   19E7 FF            [12] 9539 	mov	r7,a
   19E8 8F*00         [24] 9540 	mov	_memcpy_PARM_3,r7
   19EA 75*01 00      [24] 9541 	mov	(_memcpy_PARM_3 + 1),#0x00
   19ED 90r02r46      [24] 9542 	mov	dptr,#(_axradio_cb_receive + 0x0018)
   19F0 75 F0 00      [24] 9543 	mov	b,#0x00
   19F3 12r00r00      [24] 9544 	lcall	_memcpy
   19F6                    9545 00124$:
                     19F6  9546 	C$easyax5043.c$1331$1$313 ==.
                           9547 ;	../COMMON/easyax5043.c:1331: if (axradio_framing_sourceaddrpos != 0xff)
   19F6 90r00r00      [24] 9548 	mov	dptr,#_axradio_framing_sourceaddrpos
   19F9 E4            [12] 9549 	clr	a
   19FA 93            [24] 9550 	movc	a,@a+dptr
   19FB FF            [12] 9551 	mov	r7,a
   19FC BF FF 02      [24] 9552 	cjne	r7,#0xFF,00319$
   19FF 80 29         [24] 9553 	sjmp	00126$
   1A01                    9554 00319$:
                     1A01  9555 	C$easyax5043.c$1332$1$313 ==.
                           9556 ;	../COMMON/easyax5043.c:1332: memcpy_xdata(&axradio_cb_receive.st.rx.mac.remoteaddr, &axradio_cb_receive.st.rx.mac.raw[axradio_framing_sourceaddrpos], axradio_framing_addrlen);
   1A01 90r02r4A      [24] 9557 	mov	dptr,#(_axradio_cb_receive + 0x001c)
   1A04 E0            [24] 9558 	movx	a,@dptr
   1A05 FD            [12] 9559 	mov	r5,a
   1A06 A3            [24] 9560 	inc	dptr
   1A07 E0            [24] 9561 	movx	a,@dptr
   1A08 FE            [12] 9562 	mov	r6,a
   1A09 EF            [12] 9563 	mov	a,r7
   1A0A 2D            [12] 9564 	add	a,r5
   1A0B FF            [12] 9565 	mov	r7,a
   1A0C E4            [12] 9566 	clr	a
   1A0D 3E            [12] 9567 	addc	a,r6
   1A0E FC            [12] 9568 	mov	r4,a
   1A0F 8F*00         [24] 9569 	mov	_memcpy_PARM_2,r7
   1A11 8C*01         [24] 9570 	mov	(_memcpy_PARM_2 + 1),r4
   1A13 75*02 00      [24] 9571 	mov	(_memcpy_PARM_2 + 2),#0x00
   1A16 90r00r00      [24] 9572 	mov	dptr,#_axradio_framing_addrlen
   1A19 E4            [12] 9573 	clr	a
   1A1A 93            [24] 9574 	movc	a,@a+dptr
   1A1B FF            [12] 9575 	mov	r7,a
   1A1C 8F*00         [24] 9576 	mov	_memcpy_PARM_3,r7
   1A1E 75*01 00      [24] 9577 	mov	(_memcpy_PARM_3 + 1),#0x00
   1A21 90r02r42      [24] 9578 	mov	dptr,#(_axradio_cb_receive + 0x0014)
   1A24 75 F0 00      [24] 9579 	mov	b,#0x00
   1A27 12r00r00      [24] 9580 	lcall	_memcpy
   1A2A                    9581 00126$:
                     1A2A  9582 	C$easyax5043.c$1333$1$313 ==.
                           9583 ;	../COMMON/easyax5043.c:1333: if (axradio_mode == AXRADIO_MODE_ACK_RECEIVE ||
   1A2A 74 1A         [12] 9584 	mov	a,#0x1A
   1A2C B5*00 02      [24] 9585 	cjne	a,_axradio_mode,00320$
   1A2F 80 11         [24] 9586 	sjmp	00148$
   1A31                    9587 00320$:
                     1A31  9588 	C$easyax5043.c$1334$1$313 ==.
                           9589 ;	../COMMON/easyax5043.c:1334: axradio_mode == AXRADIO_MODE_WOR_ACK_RECEIVE ||
   1A31 74 1B         [12] 9590 	mov	a,#0x1B
   1A33 B5*00 02      [24] 9591 	cjne	a,_axradio_mode,00321$
   1A36 80 0A         [24] 9592 	sjmp	00148$
   1A38                    9593 00321$:
                     1A38  9594 	C$easyax5043.c$1335$1$313 ==.
                           9595 ;	../COMMON/easyax5043.c:1335: axradio_mode == AXRADIO_MODE_SYNC_ACK_SLAVE) {
   1A38 74 23         [12] 9596 	mov	a,#0x23
   1A3A B5*00 02      [24] 9597 	cjne	a,_axradio_mode,00322$
   1A3D 80 03         [24] 9598 	sjmp	00323$
   1A3F                    9599 00322$:
   1A3F 02r1Cr3C      [24] 9600 	ljmp	00149$
   1A42                    9601 00323$:
   1A42                    9602 00148$:
                     1A42  9603 	C$easyax5043.c$1336$2$320 ==.
                           9604 ;	../COMMON/easyax5043.c:1336: axradio_ack_count = 0;
   1A42 90r00r0A      [24] 9605 	mov	dptr,#_axradio_ack_count
   1A45 E4            [12] 9606 	clr	a
   1A46 F0            [24] 9607 	movx	@dptr,a
                     1A47  9608 	C$easyax5043.c$1337$2$320 ==.
                           9609 ;	../COMMON/easyax5043.c:1337: axradio_txbuffer_len = axradio_framing_maclen + axradio_framing_minpayloadlen;
   1A47 90r00r00      [24] 9610 	mov	dptr,#_axradio_framing_maclen
   1A4A E4            [12] 9611 	clr	a
   1A4B 93            [24] 9612 	movc	a,@a+dptr
   1A4C FF            [12] 9613 	mov	r7,a
   1A4D FD            [12] 9614 	mov	r5,a
   1A4E 7E 00         [12] 9615 	mov	r6,#0x00
   1A50 90r00r00      [24] 9616 	mov	dptr,#_axradio_framing_minpayloadlen
   1A53 E4            [12] 9617 	clr	a
   1A54 93            [24] 9618 	movc	a,@a+dptr
   1A55 FC            [12] 9619 	mov	r4,a
   1A56 7B 00         [12] 9620 	mov	r3,#0x00
   1A58 90r00r01      [24] 9621 	mov	dptr,#_axradio_txbuffer_len
   1A5B EC            [12] 9622 	mov	a,r4
   1A5C 2D            [12] 9623 	add	a,r5
   1A5D F0            [24] 9624 	movx	@dptr,a
   1A5E EB            [12] 9625 	mov	a,r3
   1A5F 3E            [12] 9626 	addc	a,r6
   1A60 A3            [24] 9627 	inc	dptr
   1A61 F0            [24] 9628 	movx	@dptr,a
                     1A62  9629 	C$easyax5043.c$1338$2$320 ==.
                           9630 ;	../COMMON/easyax5043.c:1338: memset_xdata(axradio_txbuffer, 0, axradio_framing_maclen);
   1A62 8F*00         [24] 9631 	mov	_memset_PARM_3,r7
   1A64 75*01 00      [24] 9632 	mov	(_memset_PARM_3 + 1),#0x00
   1A67 75*00 00      [24] 9633 	mov	_memset_PARM_2,#0x00
   1A6A 90r00r26      [24] 9634 	mov	dptr,#_axradio_txbuffer
   1A6D 75 F0 00      [24] 9635 	mov	b,#0x00
   1A70 12r00r00      [24] 9636 	lcall	_memset
                     1A73  9637 	C$easyax5043.c$1339$2$320 ==.
                           9638 ;	../COMMON/easyax5043.c:1339: if (axradio_framing_ack_seqnrpos != 0xff) {
   1A73 90r00r00      [24] 9639 	mov	dptr,#_axradio_framing_ack_seqnrpos
   1A76 E4            [12] 9640 	clr	a
   1A77 93            [24] 9641 	movc	a,@a+dptr
   1A78 FF            [12] 9642 	mov	r7,a
   1A79 BF FF 02      [24] 9643 	cjne	r7,#0xFF,00324$
   1A7C 80 35         [24] 9644 	sjmp	00131$
   1A7E                    9645 00324$:
                     1A7E  9646 	C$easyax5043.c$1340$3$321 ==.
                           9647 ;	../COMMON/easyax5043.c:1340: uint8_t seqnr = axradio_cb_receive.st.rx.mac.raw[axradio_framing_ack_seqnrpos];
   1A7E 90r02r4A      [24] 9648 	mov	dptr,#(_axradio_cb_receive + 0x001c)
   1A81 E0            [24] 9649 	movx	a,@dptr
   1A82 FD            [12] 9650 	mov	r5,a
   1A83 A3            [24] 9651 	inc	dptr
   1A84 E0            [24] 9652 	movx	a,@dptr
   1A85 FE            [12] 9653 	mov	r6,a
   1A86 EF            [12] 9654 	mov	a,r7
   1A87 2D            [12] 9655 	add	a,r5
   1A88 F5 82         [12] 9656 	mov	dpl,a
   1A8A E4            [12] 9657 	clr	a
   1A8B 3E            [12] 9658 	addc	a,r6
   1A8C F5 83         [12] 9659 	mov	dph,a
   1A8E E0            [24] 9660 	movx	a,@dptr
   1A8F FE            [12] 9661 	mov	r6,a
                     1A90  9662 	C$easyax5043.c$1341$3$321 ==.
                           9663 ;	../COMMON/easyax5043.c:1341: axradio_txbuffer[axradio_framing_ack_seqnrpos] = seqnr;
   1A90 EF            [12] 9664 	mov	a,r7
   1A91 24r26         [12] 9665 	add	a,#_axradio_txbuffer
   1A93 F5 82         [12] 9666 	mov	dpl,a
   1A95 E4            [12] 9667 	clr	a
   1A96 34s00         [12] 9668 	addc	a,#(_axradio_txbuffer >> 8)
   1A98 F5 83         [12] 9669 	mov	dph,a
   1A9A EE            [12] 9670 	mov	a,r6
   1A9B F0            [24] 9671 	movx	@dptr,a
                     1A9C  9672 	C$easyax5043.c$1342$3$321 ==.
                           9673 ;	../COMMON/easyax5043.c:1342: if (axradio_ack_seqnr != seqnr)
   1A9C 90r00r0B      [24] 9674 	mov	dptr,#_axradio_ack_seqnr
   1A9F E0            [24] 9675 	movx	a,@dptr
   1AA0 FF            [12] 9676 	mov	r7,a
   1AA1 B5 06 02      [24] 9677 	cjne	a,ar6,00325$
   1AA4 80 07         [24] 9678 	sjmp	00128$
   1AA6                    9679 00325$:
                     1AA6  9680 	C$easyax5043.c$1343$3$321 ==.
                           9681 ;	../COMMON/easyax5043.c:1343: axradio_ack_seqnr = seqnr;
   1AA6 90r00r0B      [24] 9682 	mov	dptr,#_axradio_ack_seqnr
   1AA9 EE            [12] 9683 	mov	a,r6
   1AAA F0            [24] 9684 	movx	@dptr,a
   1AAB 80 06         [24] 9685 	sjmp	00131$
   1AAD                    9686 00128$:
                     1AAD  9687 	C$easyax5043.c$1345$3$321 ==.
                           9688 ;	../COMMON/easyax5043.c:1345: axradio_cb_receive.st.error = AXRADIO_ERR_RETRANSMISSION;
   1AAD 90r02r33      [24] 9689 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   1AB0 74 08         [12] 9690 	mov	a,#0x08
   1AB2 F0            [24] 9691 	movx	@dptr,a
   1AB3                    9692 00131$:
                     1AB3  9693 	C$easyax5043.c$1347$2$320 ==.
                           9694 ;	../COMMON/easyax5043.c:1347: if (axradio_framing_destaddrpos != 0xff) {
   1AB3 90r00r00      [24] 9695 	mov	dptr,#_axradio_framing_destaddrpos
   1AB6 E4            [12] 9696 	clr	a
   1AB7 93            [24] 9697 	movc	a,@a+dptr
   1AB8 FF            [12] 9698 	mov	r7,a
   1AB9 BF FF 02      [24] 9699 	cjne	r7,#0xFF,00326$
   1ABC 80 5B         [24] 9700 	sjmp	00136$
   1ABE                    9701 00326$:
                     1ABE  9702 	C$easyax5043.c$1348$3$322 ==.
                           9703 ;	../COMMON/easyax5043.c:1348: if (axradio_framing_sourceaddrpos != 0xff)
   1ABE 90r00r00      [24] 9704 	mov	dptr,#_axradio_framing_sourceaddrpos
   1AC1 E4            [12] 9705 	clr	a
   1AC2 93            [24] 9706 	movc	a,@a+dptr
   1AC3 FE            [12] 9707 	mov	r6,a
   1AC4 BE FF 02      [24] 9708 	cjne	r6,#0xFF,00327$
   1AC7 80 29         [24] 9709 	sjmp	00133$
   1AC9                    9710 00327$:
                     1AC9  9711 	C$easyax5043.c$1349$3$322 ==.
                           9712 ;	../COMMON/easyax5043.c:1349: memcpy_xdata(&axradio_txbuffer[axradio_framing_destaddrpos], &axradio_cb_receive.st.rx.mac.remoteaddr, axradio_framing_addrlen);
   1AC9 EF            [12] 9713 	mov	a,r7
   1ACA 24r26         [12] 9714 	add	a,#_axradio_txbuffer
   1ACC FD            [12] 9715 	mov	r5,a
   1ACD E4            [12] 9716 	clr	a
   1ACE 34s00         [12] 9717 	addc	a,#(_axradio_txbuffer >> 8)
   1AD0 FE            [12] 9718 	mov	r6,a
   1AD1 7C 00         [12] 9719 	mov	r4,#0x00
   1AD3 75*00r42      [24] 9720 	mov	_memcpy_PARM_2,#(_axradio_cb_receive + 0x0014)
   1AD6 75*01s02      [24] 9721 	mov	(_memcpy_PARM_2 + 1),#((_axradio_cb_receive + 0x0014) >> 8)
   1AD9 75*02 00      [24] 9722 	mov	(_memcpy_PARM_2 + 2),#0x00
   1ADC 90r00r00      [24] 9723 	mov	dptr,#_axradio_framing_addrlen
   1ADF E4            [12] 9724 	clr	a
   1AE0 93            [24] 9725 	movc	a,@a+dptr
   1AE1 FB            [12] 9726 	mov	r3,a
   1AE2 8B*00         [24] 9727 	mov	_memcpy_PARM_3,r3
   1AE4 75*01 00      [24] 9728 	mov	(_memcpy_PARM_3 + 1),#0x00
   1AE7 8D 82         [24] 9729 	mov	dpl,r5
   1AE9 8E 83         [24] 9730 	mov	dph,r6
   1AEB 8C F0         [24] 9731 	mov	b,r4
   1AED 12r00r00      [24] 9732 	lcall	_memcpy
   1AF0 80 27         [24] 9733 	sjmp	00136$
   1AF2                    9734 00133$:
                     1AF2  9735 	C$easyax5043.c$1351$3$322 ==.
                           9736 ;	../COMMON/easyax5043.c:1351: memcpy_xdata(&axradio_txbuffer[axradio_framing_destaddrpos], &axradio_default_remoteaddr, axradio_framing_addrlen);
   1AF2 EF            [12] 9737 	mov	a,r7
   1AF3 24r26         [12] 9738 	add	a,#_axradio_txbuffer
   1AF5 FF            [12] 9739 	mov	r7,a
   1AF6 E4            [12] 9740 	clr	a
   1AF7 34s00         [12] 9741 	addc	a,#(_axradio_txbuffer >> 8)
   1AF9 FE            [12] 9742 	mov	r6,a
   1AFA 7D 00         [12] 9743 	mov	r5,#0x00
   1AFC 75*00r22      [24] 9744 	mov	_memcpy_PARM_2,#_axradio_default_remoteaddr
   1AFF 75*01s00      [24] 9745 	mov	(_memcpy_PARM_2 + 1),#(_axradio_default_remoteaddr >> 8)
   1B02 75*02 00      [24] 9746 	mov	(_memcpy_PARM_2 + 2),#0x00
   1B05 90r00r00      [24] 9747 	mov	dptr,#_axradio_framing_addrlen
   1B08 E4            [12] 9748 	clr	a
   1B09 93            [24] 9749 	movc	a,@a+dptr
   1B0A FC            [12] 9750 	mov	r4,a
   1B0B 8C*00         [24] 9751 	mov	_memcpy_PARM_3,r4
   1B0D 75*01 00      [24] 9752 	mov	(_memcpy_PARM_3 + 1),#0x00
   1B10 8F 82         [24] 9753 	mov	dpl,r7
   1B12 8E 83         [24] 9754 	mov	dph,r6
   1B14 8D F0         [24] 9755 	mov	b,r5
   1B16 12r00r00      [24] 9756 	lcall	_memcpy
   1B19                    9757 00136$:
                     1B19  9758 	C$easyax5043.c$1353$2$320 ==.
                           9759 ;	../COMMON/easyax5043.c:1353: if (axradio_framing_sourceaddrpos != 0xff)
   1B19 90r00r00      [24] 9760 	mov	dptr,#_axradio_framing_sourceaddrpos
   1B1C E4            [12] 9761 	clr	a
   1B1D 93            [24] 9762 	movc	a,@a+dptr
   1B1E FF            [12] 9763 	mov	r7,a
   1B1F BF FF 02      [24] 9764 	cjne	r7,#0xFF,00328$
   1B22 80 27         [24] 9765 	sjmp	00138$
   1B24                    9766 00328$:
                     1B24  9767 	C$easyax5043.c$1354$2$320 ==.
                           9768 ;	../COMMON/easyax5043.c:1354: memcpy_xdata(&axradio_txbuffer[axradio_framing_sourceaddrpos], &axradio_localaddr.addr, axradio_framing_addrlen);
   1B24 EF            [12] 9769 	mov	a,r7
   1B25 24r26         [12] 9770 	add	a,#_axradio_txbuffer
   1B27 FF            [12] 9771 	mov	r7,a
   1B28 E4            [12] 9772 	clr	a
   1B29 34s00         [12] 9773 	addc	a,#(_axradio_txbuffer >> 8)
   1B2B FE            [12] 9774 	mov	r6,a
   1B2C 7D 00         [12] 9775 	mov	r5,#0x00
   1B2E 75*00r1A      [24] 9776 	mov	_memcpy_PARM_2,#_axradio_localaddr
   1B31 75*01s00      [24] 9777 	mov	(_memcpy_PARM_2 + 1),#(_axradio_localaddr >> 8)
   1B34 75*02 00      [24] 9778 	mov	(_memcpy_PARM_2 + 2),#0x00
   1B37 90r00r00      [24] 9779 	mov	dptr,#_axradio_framing_addrlen
   1B3A E4            [12] 9780 	clr	a
   1B3B 93            [24] 9781 	movc	a,@a+dptr
   1B3C FC            [12] 9782 	mov	r4,a
   1B3D 8C*00         [24] 9783 	mov	_memcpy_PARM_3,r4
   1B3F 75*01 00      [24] 9784 	mov	(_memcpy_PARM_3 + 1),#0x00
   1B42 8F 82         [24] 9785 	mov	dpl,r7
   1B44 8E 83         [24] 9786 	mov	dph,r6
   1B46 8D F0         [24] 9787 	mov	b,r5
   1B48 12r00r00      [24] 9788 	lcall	_memcpy
   1B4B                    9789 00138$:
                     1B4B  9790 	C$easyax5043.c$1355$2$320 ==.
                           9791 ;	../COMMON/easyax5043.c:1355: if (axradio_framing_lenmask) {
   1B4B 90r00r00      [24] 9792 	mov	dptr,#_axradio_framing_lenmask
   1B4E E4            [12] 9793 	clr	a
   1B4F 93            [24] 9794 	movc	a,@a+dptr
   1B50 FF            [12] 9795 	mov	r7,a
   1B51 60 30         [24] 9796 	jz	00140$
                     1B53  9797 	C$easyax5043.c$1356$3$323 ==.
                           9798 ;	../COMMON/easyax5043.c:1356: uint8_t len_byte = (uint8_t)(axradio_txbuffer_len - axradio_framing_lenoffs) & axradio_framing_lenmask; // if you prefer not counting the len byte itself, set LENOFFS = 1
   1B53 90r00r01      [24] 9799 	mov	dptr,#_axradio_txbuffer_len
   1B56 E0            [24] 9800 	movx	a,@dptr
   1B57 FD            [12] 9801 	mov	r5,a
   1B58 A3            [24] 9802 	inc	dptr
   1B59 E0            [24] 9803 	movx	a,@dptr
   1B5A 90r00r00      [24] 9804 	mov	dptr,#_axradio_framing_lenoffs
   1B5D E4            [12] 9805 	clr	a
   1B5E 93            [24] 9806 	movc	a,@a+dptr
   1B5F FE            [12] 9807 	mov	r6,a
   1B60 ED            [12] 9808 	mov	a,r5
   1B61 C3            [12] 9809 	clr	c
   1B62 9E            [12] 9810 	subb	a,r6
   1B63 5F            [12] 9811 	anl	a,r7
   1B64 FE            [12] 9812 	mov	r6,a
                     1B65  9813 	C$easyax5043.c$1357$3$323 ==.
                           9814 ;	../COMMON/easyax5043.c:1357: axradio_txbuffer[axradio_framing_lenpos] = (axradio_txbuffer[axradio_framing_lenpos] & (uint8_t)~axradio_framing_lenmask) | len_byte;
   1B65 90r00r00      [24] 9815 	mov	dptr,#_axradio_framing_lenpos
   1B68 E4            [12] 9816 	clr	a
   1B69 93            [24] 9817 	movc	a,@a+dptr
   1B6A 24r26         [12] 9818 	add	a,#_axradio_txbuffer
   1B6C FD            [12] 9819 	mov	r5,a
   1B6D E4            [12] 9820 	clr	a
   1B6E 34s00         [12] 9821 	addc	a,#(_axradio_txbuffer >> 8)
   1B70 FC            [12] 9822 	mov	r4,a
   1B71 8D 82         [24] 9823 	mov	dpl,r5
   1B73 8C 83         [24] 9824 	mov	dph,r4
   1B75 E0            [24] 9825 	movx	a,@dptr
   1B76 FB            [12] 9826 	mov	r3,a
   1B77 EF            [12] 9827 	mov	a,r7
   1B78 F4            [12] 9828 	cpl	a
   1B79 FF            [12] 9829 	mov	r7,a
   1B7A 5B            [12] 9830 	anl	a,r3
   1B7B 42 06         [12] 9831 	orl	ar6,a
   1B7D 8D 82         [24] 9832 	mov	dpl,r5
   1B7F 8C 83         [24] 9833 	mov	dph,r4
   1B81 EE            [12] 9834 	mov	a,r6
   1B82 F0            [24] 9835 	movx	@dptr,a
   1B83                    9836 00140$:
                     1B83  9837 	C$easyax5043.c$1359$2$320 ==.
                           9838 ;	../COMMON/easyax5043.c:1359: if (axradio_framing_swcrclen) {
   1B83 90r00r00      [24] 9839 	mov	dptr,#_axradio_framing_swcrclen
   1B86 E4            [12] 9840 	clr	a
   1B87 93            [24] 9841 	movc	a,@a+dptr
   1B88 FF            [12] 9842 	mov	r7,a
   1B89 60 2E         [24] 9843 	jz	00142$
                     1B8B  9844 	C$easyax5043.c$1360$3$324 ==.
                           9845 ;	../COMMON/easyax5043.c:1360: axradio_framing_append_crc(axradio_txbuffer, axradio_txbuffer_len);
   1B8B 90r00r01      [24] 9846 	mov	dptr,#_axradio_txbuffer_len
   1B8E E0            [24] 9847 	movx	a,@dptr
   1B8F C0 E0         [24] 9848 	push	acc
   1B91 A3            [24] 9849 	inc	dptr
   1B92 E0            [24] 9850 	movx	a,@dptr
   1B93 C0 E0         [24] 9851 	push	acc
   1B95 90r00r26      [24] 9852 	mov	dptr,#_axradio_txbuffer
   1B98 12r00r00      [24] 9853 	lcall	_axradio_framing_append_crc
   1B9B 15 81         [12] 9854 	dec	sp
   1B9D 15 81         [12] 9855 	dec	sp
                     1B9F  9856 	C$easyax5043.c$1361$3$324 ==.
                           9857 ;	../COMMON/easyax5043.c:1361: axradio_txbuffer_len += axradio_framing_swcrclen;
   1B9F 90r00r00      [24] 9858 	mov	dptr,#_axradio_framing_swcrclen
   1BA2 E4            [12] 9859 	clr	a
   1BA3 93            [24] 9860 	movc	a,@a+dptr
   1BA4 FF            [12] 9861 	mov	r7,a
   1BA5 7E 00         [12] 9862 	mov	r6,#0x00
   1BA7 90r00r01      [24] 9863 	mov	dptr,#_axradio_txbuffer_len
   1BAA E0            [24] 9864 	movx	a,@dptr
   1BAB FC            [12] 9865 	mov	r4,a
   1BAC A3            [24] 9866 	inc	dptr
   1BAD E0            [24] 9867 	movx	a,@dptr
   1BAE FD            [12] 9868 	mov	r5,a
   1BAF 90r00r01      [24] 9869 	mov	dptr,#_axradio_txbuffer_len
   1BB2 EF            [12] 9870 	mov	a,r7
   1BB3 2C            [12] 9871 	add	a,r4
   1BB4 F0            [24] 9872 	movx	@dptr,a
   1BB5 EE            [12] 9873 	mov	a,r6
   1BB6 3D            [12] 9874 	addc	a,r5
   1BB7 A3            [24] 9875 	inc	dptr
   1BB8 F0            [24] 9876 	movx	@dptr,a
   1BB9                    9877 00142$:
                     1BB9  9878 	C$easyax5043.c$1363$2$320 ==.
                           9879 ;	../COMMON/easyax5043.c:1363: if (axradio_phy_pn9) {
   1BB9 90r00r00      [24] 9880 	mov	dptr,#_axradio_phy_pn9
   1BBC E4            [12] 9881 	clr	a
   1BBD 93            [24] 9882 	movc	a,@a+dptr
   1BBE FF            [12] 9883 	mov	r7,a
   1BBF 60 2F         [24] 9884 	jz	00144$
                     1BC1  9885 	C$easyax5043.c$1364$3$325 ==.
                           9886 ;	../COMMON/easyax5043.c:1364: pn9_buffer(axradio_txbuffer, axradio_txbuffer_len, 0x1ff, -(AX5043_ENCODING & 0x01));
   1BC1 90 40 11      [24] 9887 	mov	dptr,#_AX5043_ENCODING
   1BC4 E0            [24] 9888 	movx	a,@dptr
   1BC5 FF            [12] 9889 	mov	r7,a
   1BC6 53 07 01      [24] 9890 	anl	ar7,#0x01
   1BC9 C3            [12] 9891 	clr	c
   1BCA E4            [12] 9892 	clr	a
   1BCB 9F            [12] 9893 	subb	a,r7
   1BCC FF            [12] 9894 	mov	r7,a
   1BCD C0 07         [24] 9895 	push	ar7
   1BCF 74 FF         [12] 9896 	mov	a,#0xFF
   1BD1 C0 E0         [24] 9897 	push	acc
   1BD3 74 01         [12] 9898 	mov	a,#0x01
   1BD5 C0 E0         [24] 9899 	push	acc
   1BD7 90r00r01      [24] 9900 	mov	dptr,#_axradio_txbuffer_len
   1BDA E0            [24] 9901 	movx	a,@dptr
   1BDB C0 E0         [24] 9902 	push	acc
   1BDD A3            [24] 9903 	inc	dptr
   1BDE E0            [24] 9904 	movx	a,@dptr
   1BDF C0 E0         [24] 9905 	push	acc
   1BE1 90r00r26      [24] 9906 	mov	dptr,#_axradio_txbuffer
   1BE4 75 F0 00      [24] 9907 	mov	b,#0x00
   1BE7 12r00r00      [24] 9908 	lcall	_pn9_buffer
   1BEA E5 81         [12] 9909 	mov	a,sp
   1BEC 24 FB         [12] 9910 	add	a,#0xfb
   1BEE F5 81         [12] 9911 	mov	sp,a
   1BF0                    9912 00144$:
                     1BF0  9913 	C$easyax5043.c$1366$2$320 ==.
                           9914 ;	../COMMON/easyax5043.c:1366: AX5043_IRQMASK1 = 0x00;
   1BF0 90 40 06      [24] 9915 	mov	dptr,#_AX5043_IRQMASK1
                     1BF3  9916 	C$easyax5043.c$1367$2$320 ==.
                           9917 ;	../COMMON/easyax5043.c:1367: AX5043_IRQMASK0 = 0x00;
   1BF3 E4            [12] 9918 	clr	a
   1BF4 F0            [24] 9919 	movx	@dptr,a
   1BF5 90 40 07      [24] 9920 	mov	dptr,#_AX5043_IRQMASK0
   1BF8 F0            [24] 9921 	movx	@dptr,a
                     1BF9  9922 	C$easyax5043.c$1368$2$320 ==.
                           9923 ;	../COMMON/easyax5043.c:1368: AX5043_PWRMODE = AX5043_PWRSTATE_XTAL_ON;
   1BF9 90 40 02      [24] 9924 	mov	dptr,#_AX5043_PWRMODE
   1BFC 74 05         [12] 9925 	mov	a,#0x05
   1BFE F0            [24] 9926 	movx	@dptr,a
                     1BFF  9927 	C$easyax5043.c$1369$2$320 ==.
                           9928 ;	../COMMON/easyax5043.c:1369: AX5043_FIFOSTAT = 3;
   1BFF 90 40 28      [24] 9929 	mov	dptr,#_AX5043_FIFOSTAT
   1C02 74 03         [12] 9930 	mov	a,#0x03
   1C04 F0            [24] 9931 	movx	@dptr,a
                     1C05  9932 	C$easyax5043.c$1370$2$320 ==.
                           9933 ;	../COMMON/easyax5043.c:1370: axradio_trxstate = trxstate_tx_longpreamble; // ensure that trxstate != off, otherwise we would prematurely enable the receiver, see below
   1C05 75*01 0A      [24] 9934 	mov	_axradio_trxstate,#0x0A
                     1C08  9935 	C$easyax5043.c$1371$2$320 ==.
                           9936 ;	../COMMON/easyax5043.c:1371: while (AX5043_POWSTAT & 0x08);
   1C08                    9937 00145$:
   1C08 90 40 03      [24] 9938 	mov	dptr,#_AX5043_POWSTAT
   1C0B E0            [24] 9939 	movx	a,@dptr
   1C0C FF            [12] 9940 	mov	r7,a
   1C0D 20 E3 F8      [24] 9941 	jb	acc.3,00145$
                     1C10  9942 	C$easyax5043.c$1372$2$320 ==.
                           9943 ;	../COMMON/easyax5043.c:1372: wtimer_remove(&axradio_timer);
   1C10 90r02r85      [24] 9944 	mov	dptr,#_axradio_timer
   1C13 12r00r00      [24] 9945 	lcall	_wtimer_remove
                     1C16  9946 	C$easyax5043.c$1373$2$320 ==.
                           9947 ;	../COMMON/easyax5043.c:1373: axradio_timer.time = axradio_framing_ack_delay;
   1C16 90r00r00      [24] 9948 	mov	dptr,#_axradio_framing_ack_delay
   1C19 E4            [12] 9949 	clr	a
   1C1A 93            [24] 9950 	movc	a,@a+dptr
   1C1B FC            [12] 9951 	mov	r4,a
   1C1C 74 01         [12] 9952 	mov	a,#0x01
   1C1E 93            [24] 9953 	movc	a,@a+dptr
   1C1F FD            [12] 9954 	mov	r5,a
   1C20 74 02         [12] 9955 	mov	a,#0x02
   1C22 93            [24] 9956 	movc	a,@a+dptr
   1C23 FE            [12] 9957 	mov	r6,a
   1C24 74 03         [12] 9958 	mov	a,#0x03
   1C26 93            [24] 9959 	movc	a,@a+dptr
   1C27 FF            [12] 9960 	mov	r7,a
   1C28 90r02r89      [24] 9961 	mov	dptr,#(_axradio_timer + 0x0004)
   1C2B EC            [12] 9962 	mov	a,r4
   1C2C F0            [24] 9963 	movx	@dptr,a
   1C2D ED            [12] 9964 	mov	a,r5
   1C2E A3            [24] 9965 	inc	dptr
   1C2F F0            [24] 9966 	movx	@dptr,a
   1C30 EE            [12] 9967 	mov	a,r6
   1C31 A3            [24] 9968 	inc	dptr
   1C32 F0            [24] 9969 	movx	@dptr,a
   1C33 EF            [12] 9970 	mov	a,r7
   1C34 A3            [24] 9971 	inc	dptr
   1C35 F0            [24] 9972 	movx	@dptr,a
                     1C36  9973 	C$easyax5043.c$1374$2$320 ==.
                           9974 ;	../COMMON/easyax5043.c:1374: wtimer1_addrelative(&axradio_timer);
   1C36 90r02r85      [24] 9975 	mov	dptr,#_axradio_timer
   1C39 12r00r00      [24] 9976 	lcall	_wtimer1_addrelative
   1C3C                    9977 00149$:
                     1C3C  9978 	C$easyax5043.c$1376$1$313 ==.
                           9979 ;	../COMMON/easyax5043.c:1376: if (axradio_mode == AXRADIO_MODE_SYNC_SLAVE ||
   1C3C 74 22         [12] 9980 	mov	a,#0x22
   1C3E B5*00 02      [24] 9981 	cjne	a,_axradio_mode,00333$
   1C41 80 0A         [24] 9982 	sjmp	00162$
   1C43                    9983 00333$:
                     1C43  9984 	C$easyax5043.c$1377$1$313 ==.
                           9985 ;	../COMMON/easyax5043.c:1377: axradio_mode == AXRADIO_MODE_SYNC_ACK_SLAVE) {
   1C43 74 23         [12] 9986 	mov	a,#0x23
   1C45 B5*00 02      [24] 9987 	cjne	a,_axradio_mode,00334$
   1C48 80 03         [24] 9988 	sjmp	00335$
   1C4A                    9989 00334$:
   1C4A 02r1Dr20      [24] 9990 	ljmp	00163$
   1C4D                    9991 00335$:
   1C4D                    9992 00162$:
                     1C4D  9993 	C$easyax5043.c$1378$2$326 ==.
                           9994 ;	../COMMON/easyax5043.c:1378: if (axradio_mode != AXRADIO_MODE_SYNC_ACK_SLAVE)
   1C4D 74 23         [12] 9995 	mov	a,#0x23
   1C4F B5*00 02      [24] 9996 	cjne	a,_axradio_mode,00336$
   1C52 80 03         [24] 9997 	sjmp	00153$
   1C54                    9998 00336$:
                     1C54  9999 	C$easyax5043.c$1379$2$326 ==.
                          10000 ;	../COMMON/easyax5043.c:1379: ax5043_off();
   1C54 12r0Cr4A      [24]10001 	lcall	_ax5043_off
   1C57                   10002 00153$:
                     1C57 10003 	C$easyax5043.c$1380$2$326 ==.
                          10004 ;	../COMMON/easyax5043.c:1380: switch (axradio_syncstate) {
   1C57 90r00r00      [24]10005 	mov	dptr,#_axradio_syncstate
   1C5A E0            [24]10006 	movx	a,@dptr
   1C5B FF            [12]10007 	mov	r7,a
   1C5C BF 08 02      [24]10008 	cjne	r7,#0x08,00337$
   1C5F 80 45         [24]10009 	sjmp	00157$
   1C61                   10010 00337$:
   1C61 BF 0A 02      [24]10011 	cjne	r7,#0x0A,00338$
   1C64 80 40         [24]10012 	sjmp	00157$
   1C66                   10013 00338$:
   1C66 BF 0B 02      [24]10014 	cjne	r7,#0x0B,00339$
   1C69 80 3B         [24]10015 	sjmp	00157$
   1C6B                   10016 00339$:
                     1C6B 10017 	C$easyax5043.c$1384$3$327 ==.
                          10018 ;	../COMMON/easyax5043.c:1384: axradio_sync_time = axradio_conv_time_totimer0(axradio_cb_receive.st.time.t);
   1C6B 90r02r34      [24]10019 	mov	dptr,#(_axradio_cb_receive + 0x0006)
   1C6E E0            [24]10020 	movx	a,@dptr
   1C6F FC            [12]10021 	mov	r4,a
   1C70 A3            [24]10022 	inc	dptr
   1C71 E0            [24]10023 	movx	a,@dptr
   1C72 FD            [12]10024 	mov	r5,a
   1C73 A3            [24]10025 	inc	dptr
   1C74 E0            [24]10026 	movx	a,@dptr
   1C75 FE            [12]10027 	mov	r6,a
   1C76 A3            [24]10028 	inc	dptr
   1C77 E0            [24]10029 	movx	a,@dptr
   1C78 8C 82         [24]10030 	mov	dpl,r4
   1C7A 8D 83         [24]10031 	mov	dph,r5
   1C7C 8E F0         [24]10032 	mov	b,r6
   1C7E 12r00r42      [24]10033 	lcall	_axradio_conv_time_totimer0
   1C81 AC 82         [24]10034 	mov	r4,dpl
   1C83 AD 83         [24]10035 	mov	r5,dph
   1C85 AE F0         [24]10036 	mov	r6,b
   1C87 FF            [12]10037 	mov	r7,a
   1C88 90r00r0C      [24]10038 	mov	dptr,#_axradio_sync_time
   1C8B EC            [12]10039 	mov	a,r4
   1C8C F0            [24]10040 	movx	@dptr,a
   1C8D ED            [12]10041 	mov	a,r5
   1C8E A3            [24]10042 	inc	dptr
   1C8F F0            [24]10043 	movx	@dptr,a
   1C90 EE            [12]10044 	mov	a,r6
   1C91 A3            [24]10045 	inc	dptr
   1C92 F0            [24]10046 	movx	@dptr,a
   1C93 EF            [12]10047 	mov	a,r7
   1C94 A3            [24]10048 	inc	dptr
   1C95 F0            [24]10049 	movx	@dptr,a
                     1C96 10050 	C$easyax5043.c$1385$3$327 ==.
                          10051 ;	../COMMON/easyax5043.c:1385: axradio_sync_periodcorr = -32768;
   1C96 90r00r10      [24]10052 	mov	dptr,#_axradio_sync_periodcorr
   1C99 E4            [12]10053 	clr	a
   1C9A F0            [24]10054 	movx	@dptr,a
   1C9B 74 80         [12]10055 	mov	a,#0x80
   1C9D A3            [24]10056 	inc	dptr
   1C9E F0            [24]10057 	movx	@dptr,a
                     1C9F 10058 	C$easyax5043.c$1386$3$327 ==.
                          10059 ;	../COMMON/easyax5043.c:1386: axradio_sync_seqnr = 0;
   1C9F 90r00r0B      [24]10060 	mov	dptr,#_axradio_ack_seqnr
   1CA2 E4            [12]10061 	clr	a
   1CA3 F0            [24]10062 	movx	@dptr,a
                     1CA4 10063 	C$easyax5043.c$1387$3$327 ==.
                          10064 ;	../COMMON/easyax5043.c:1387: break;
                     1CA4 10065 	C$easyax5043.c$1391$3$327 ==.
                          10066 ;	../COMMON/easyax5043.c:1391: case syncstate_slave_rxpacket:
   1CA4 80 2D         [24]10067 	sjmp	00158$
   1CA6                   10068 00157$:
                     1CA6 10069 	C$easyax5043.c$1392$3$327 ==.
                          10070 ;	../COMMON/easyax5043.c:1392: axradio_sync_adjustperiodcorr();
   1CA6 12r0Er7A      [24]10071 	lcall	_axradio_sync_adjustperiodcorr
                     1CA9 10072 	C$easyax5043.c$1393$3$327 ==.
                          10073 ;	../COMMON/easyax5043.c:1393: axradio_cb_receive.st.rx.phy.period = axradio_sync_periodcorr >> SYNC_K1;
   1CA9 90r00r10      [24]10074 	mov	dptr,#_axradio_sync_periodcorr
   1CAC E0            [24]10075 	movx	a,@dptr
   1CAD FE            [12]10076 	mov	r6,a
   1CAE A3            [24]10077 	inc	dptr
   1CAF E0            [24]10078 	movx	a,@dptr
   1CB0 FF            [12]10079 	mov	r7,a
   1CB1 C4            [12]10080 	swap	a
   1CB2 03            [12]10081 	rr	a
   1CB3 CE            [12]10082 	xch	a,r6
   1CB4 C4            [12]10083 	swap	a
   1CB5 03            [12]10084 	rr	a
   1CB6 54 07         [12]10085 	anl	a,#0x07
   1CB8 6E            [12]10086 	xrl	a,r6
   1CB9 CE            [12]10087 	xch	a,r6
   1CBA 54 07         [12]10088 	anl	a,#0x07
   1CBC CE            [12]10089 	xch	a,r6
   1CBD 6E            [12]10090 	xrl	a,r6
   1CBE CE            [12]10091 	xch	a,r6
   1CBF 30 E2 02      [24]10092 	jnb	acc.2,00340$
   1CC2 44 F8         [12]10093 	orl	a,#0xF8
   1CC4                   10094 00340$:
   1CC4 FF            [12]10095 	mov	r7,a
   1CC5 90r02r40      [24]10096 	mov	dptr,#(_axradio_cb_receive + 0x0012)
   1CC8 EE            [12]10097 	mov	a,r6
   1CC9 F0            [24]10098 	movx	@dptr,a
   1CCA EF            [12]10099 	mov	a,r7
   1CCB A3            [24]10100 	inc	dptr
   1CCC F0            [24]10101 	movx	@dptr,a
                     1CCD 10102 	C$easyax5043.c$1394$3$327 ==.
                          10103 ;	../COMMON/easyax5043.c:1394: axradio_sync_seqnr = 1;
   1CCD 90r00r0B      [24]10104 	mov	dptr,#_axradio_ack_seqnr
   1CD0 74 01         [12]10105 	mov	a,#0x01
   1CD2 F0            [24]10106 	movx	@dptr,a
                     1CD3 10107 	C$easyax5043.c$1396$2$326 ==.
                          10108 ;	../COMMON/easyax5043.c:1396: };
   1CD3                   10109 00158$:
                     1CD3 10110 	C$easyax5043.c$1397$2$326 ==.
                          10111 ;	../COMMON/easyax5043.c:1397: axradio_sync_slave_nextperiod();
   1CD3 12r0FrA1      [24]10112 	lcall	_axradio_sync_slave_nextperiod
                     1CD6 10113 	C$easyax5043.c$1398$2$326 ==.
                          10114 ;	../COMMON/easyax5043.c:1398: if (axradio_mode != AXRADIO_MODE_SYNC_ACK_SLAVE) {
   1CD6 74 23         [12]10115 	mov	a,#0x23
   1CD8 B5*00 02      [24]10116 	cjne	a,_axradio_mode,00341$
   1CDB 80 3D         [24]10117 	sjmp	00160$
   1CDD                   10118 00341$:
                     1CDD 10119 	C$easyax5043.c$1399$3$328 ==.
                          10120 ;	../COMMON/easyax5043.c:1399: axradio_syncstate = syncstate_slave_rxidle;
   1CDD 90r00r00      [24]10121 	mov	dptr,#_axradio_syncstate
   1CE0 74 08         [12]10122 	mov	a,#0x08
   1CE2 F0            [24]10123 	movx	@dptr,a
                     1CE3 10124 	C$easyax5043.c$1400$3$328 ==.
                          10125 ;	../COMMON/easyax5043.c:1400: wtimer_remove(&axradio_timer);
   1CE3 90r02r85      [24]10126 	mov	dptr,#_axradio_timer
   1CE6 12r00r00      [24]10127 	lcall	_wtimer_remove
                     1CE9 10128 	C$easyax5043.c$1401$3$328 ==.
                          10129 ;	../COMMON/easyax5043.c:1401: axradio_sync_settimeradv(axradio_sync_slave_rxadvance[axradio_sync_seqnr]);
   1CE9 90r00r0B      [24]10130 	mov	dptr,#_axradio_ack_seqnr
   1CEC E0            [24]10131 	movx	a,@dptr
   1CED 75 F0 04      [24]10132 	mov	b,#0x04
   1CF0 A4            [48]10133 	mul	ab
   1CF1 24r00         [12]10134 	add	a,#_axradio_sync_slave_rxadvance
   1CF3 F5 82         [12]10135 	mov	dpl,a
   1CF5 74s00         [12]10136 	mov	a,#(_axradio_sync_slave_rxadvance >> 8)
   1CF7 35 F0         [12]10137 	addc	a,b
   1CF9 F5 83         [12]10138 	mov	dph,a
   1CFB E4            [12]10139 	clr	a
   1CFC 93            [24]10140 	movc	a,@a+dptr
   1CFD FC            [12]10141 	mov	r4,a
   1CFE A3            [24]10142 	inc	dptr
   1CFF E4            [12]10143 	clr	a
   1D00 93            [24]10144 	movc	a,@a+dptr
   1D01 FD            [12]10145 	mov	r5,a
   1D02 A3            [24]10146 	inc	dptr
   1D03 E4            [12]10147 	clr	a
   1D04 93            [24]10148 	movc	a,@a+dptr
   1D05 FE            [12]10149 	mov	r6,a
   1D06 A3            [24]10150 	inc	dptr
   1D07 E4            [12]10151 	clr	a
   1D08 93            [24]10152 	movc	a,@a+dptr
   1D09 8C 82         [24]10153 	mov	dpl,r4
   1D0B 8D 83         [24]10154 	mov	dph,r5
   1D0D 8E F0         [24]10155 	mov	b,r6
   1D0F 12r0Er3B      [24]10156 	lcall	_axradio_sync_settimeradv
                     1D12 10157 	C$easyax5043.c$1402$3$328 ==.
                          10158 ;	../COMMON/easyax5043.c:1402: wtimer0_addabsolute(&axradio_timer);
   1D12 90r02r85      [24]10159 	mov	dptr,#_axradio_timer
   1D15 12r00r00      [24]10160 	lcall	_wtimer0_addabsolute
   1D18 80 06         [24]10161 	sjmp	00163$
   1D1A                   10162 00160$:
                     1D1A 10163 	C$easyax5043.c$1404$3$329 ==.
                          10164 ;	../COMMON/easyax5043.c:1404: axradio_syncstate = syncstate_slave_rxack;
   1D1A 90r00r00      [24]10165 	mov	dptr,#_axradio_syncstate
   1D1D 74 0C         [12]10166 	mov	a,#0x0C
   1D1F F0            [24]10167 	movx	@dptr,a
   1D20                   10168 00163$:
                     1D20 10169 	C$easyax5043.c$1407$1$313 ==.
                          10170 ;	../COMMON/easyax5043.c:1407: axradio_statuschange((struct axradio_status __xdata *)&axradio_cb_receive.st);
   1D20 90r02r32      [24]10171 	mov	dptr,#(_axradio_cb_receive + 0x0004)
   1D23 12r00r00      [24]10172 	lcall	_axradio_statuschange
                     1D26 10173 	C$easyax5043.c$1408$1$313 ==.
                          10174 ;	../COMMON/easyax5043.c:1408: endcb:
   1D26                   10175 00165$:
                     1D26 10176 	C$easyax5043.c$1409$1$313 ==.
                          10177 ;	../COMMON/easyax5043.c:1409: if (axradio_mode == AXRADIO_MODE_WOR_RECEIVE) {
   1D26 74 19         [12]10178 	mov	a,#0x19
   1D28 B5*00 05      [24]10179 	cjne	a,_axradio_mode,00180$
                     1D2B 10180 	C$easyax5043.c$1410$2$330 ==.
                          10181 ;	../COMMON/easyax5043.c:1410: ax5043_receiver_on_wor();
   1D2B 12r0Br9F      [24]10182 	lcall	_ax5043_receiver_on_wor
   1D2E 80 42         [24]10183 	sjmp	00182$
   1D30                   10184 00180$:
                     1D30 10185 	C$easyax5043.c$1411$1$313 ==.
                          10186 ;	../COMMON/easyax5043.c:1411: } else if (axradio_mode == AXRADIO_MODE_ACK_RECEIVE ||
   1D30 74 1A         [12]10187 	mov	a,#0x1A
   1D32 B5*00 02      [24]10188 	cjne	a,_axradio_mode,00344$
   1D35 80 05         [24]10189 	sjmp	00175$
   1D37                   10190 00344$:
                     1D37 10191 	C$easyax5043.c$1412$1$313 ==.
                          10192 ;	../COMMON/easyax5043.c:1412: axradio_mode == AXRADIO_MODE_WOR_ACK_RECEIVE) {
   1D37 74 1B         [12]10193 	mov	a,#0x1B
   1D39 B5*00 24      [24]10194 	cjne	a,_axradio_mode,00176$
   1D3C                   10195 00175$:
                     1D3C 10196 	C$easyax5043.c$1415$3$332 ==.
                          10197 ;	../COMMON/easyax5043.c:1415: uint8_t __autodata iesave = IE & 0x80;
   1D3C 74 80         [12]10198 	mov	a,#0x80
   1D3E 55 A8         [12]10199 	anl	a,_IE
   1D40 FF            [12]10200 	mov	r7,a
                     1D41 10201 	C$easyax5043.c$1416$3$332 ==.
                          10202 ;	../COMMON/easyax5043.c:1416: EA = 0;
   1D41 C2 AF         [12]10203 	clr	_EA
                     1D43 10204 	C$easyax5043.c$1417$3$332 ==.
                          10205 ;	../COMMON/easyax5043.c:1417: trxst = axradio_trxstate;
   1D43 AE*01         [24]10206 	mov	r6,_axradio_trxstate
                     1D45 10207 	C$easyax5043.c$1418$3$332 ==.
                          10208 ;	../COMMON/easyax5043.c:1418: axradio_cb_receive.st.error = AXRADIO_ERR_PACKETDONE;
   1D45 90r02r33      [24]10209 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   1D48 74 F0         [12]10210 	mov	a,#0xF0
   1D4A F0            [24]10211 	movx	@dptr,a
                     1D4B 10212 	C$easyax5043.c$1419$3$332 ==.
                          10213 ;	../COMMON/easyax5043.c:1419: IE |= iesave;
   1D4B EF            [12]10214 	mov	a,r7
   1D4C 42 A8         [12]10215 	orl	_IE,a
                     1D4E 10216 	C$easyax5043.c$1421$2$331 ==.
                          10217 ;	../COMMON/easyax5043.c:1421: if (trxst == trxstate_off) {
   1D4E EE            [12]10218 	mov	a,r6
   1D4F 70 21         [24]10219 	jnz	00182$
                     1D51 10220 	C$easyax5043.c$1422$3$333 ==.
                          10221 ;	../COMMON/easyax5043.c:1422: if (axradio_mode == AXRADIO_MODE_WOR_ACK_RECEIVE)
   1D51 74 1B         [12]10222 	mov	a,#0x1B
   1D53 B5*00 05      [24]10223 	cjne	a,_axradio_mode,00167$
                     1D56 10224 	C$easyax5043.c$1423$3$333 ==.
                          10225 ;	../COMMON/easyax5043.c:1423: ax5043_receiver_on_wor();
   1D56 12r0Br9F      [24]10226 	lcall	_ax5043_receiver_on_wor
   1D59 80 17         [24]10227 	sjmp	00182$
   1D5B                   10228 00167$:
                     1D5B 10229 	C$easyax5043.c$1425$3$333 ==.
                          10230 ;	../COMMON/easyax5043.c:1425: ax5043_receiver_on_continuous();
   1D5B 12r0Br05      [24]10231 	lcall	_ax5043_receiver_on_continuous
   1D5E 80 12         [24]10232 	sjmp	00182$
   1D60                   10233 00176$:
                     1D60 10234 	C$easyax5043.c$1428$2$334 ==.
                          10235 ;	../COMMON/easyax5043.c:1428: switch (axradio_trxstate) {
   1D60 AF*01         [24]10236 	mov	r7,_axradio_trxstate
   1D62 BF 01 02      [24]10237 	cjne	r7,#0x01,00350$
   1D65 80 03         [24]10238 	sjmp	00172$
   1D67                   10239 00350$:
   1D67 BF 02 08      [24]10240 	cjne	r7,#0x02,00182$
                     1D6A 10241 	C$easyax5043.c$1430$3$335 ==.
                          10242 ;	../COMMON/easyax5043.c:1430: case trxstate_rxwor:
   1D6A                   10243 00172$:
                     1D6A 10244 	C$easyax5043.c$1431$3$335 ==.
                          10245 ;	../COMMON/easyax5043.c:1431: AX5043_IRQMASK0 |= 0x01; // re-enable FIFO not empty irq
   1D6A 90 40 07      [24]10246 	mov	dptr,#_AX5043_IRQMASK0
   1D6D E0            [24]10247 	movx	a,@dptr
   1D6E FF            [12]10248 	mov	r7,a
   1D6F 44 01         [12]10249 	orl	a,#0x01
   1D71 F0            [24]10250 	movx	@dptr,a
                     1D72 10251 	C$easyax5043.c$1436$1$313 ==.
                          10252 ;	../COMMON/easyax5043.c:1436: }
   1D72                   10253 00182$:
                     1D72 10254 	C$easyax5043.c$1438$1$313 ==.
                     1D72 10255 	XFeasyax5043$axradio_receive_callback_fwd$0$0 ==.
   1D72 22            [24]10256 	ret
                          10257 ;------------------------------------------------------------
                          10258 ;Allocation info for local variables in function 'axradio_killallcb'
                          10259 ;------------------------------------------------------------
                     1D73 10260 	Feasyax5043$axradio_killallcb$0$0 ==.
                     1D73 10261 	C$easyax5043.c$1440$1$313 ==.
                          10262 ;	../COMMON/easyax5043.c:1440: static void axradio_killallcb(void)
                          10263 ;	-----------------------------------------
                          10264 ;	 function axradio_killallcb
                          10265 ;	-----------------------------------------
   1D73                   10266 _axradio_killallcb:
                     1D73 10267 	C$easyax5043.c$1442$1$337 ==.
                          10268 ;	../COMMON/easyax5043.c:1442: wtimer_remove_callback(&axradio_cb_receive.cb);
   1D73 90r02r2E      [24]10269 	mov	dptr,#_axradio_cb_receive
   1D76 12r00r00      [24]10270 	lcall	_wtimer_remove_callback
                     1D79 10271 	C$easyax5043.c$1443$1$337 ==.
                          10272 ;	../COMMON/easyax5043.c:1443: wtimer_remove_callback(&axradio_cb_receivesfd.cb);
   1D79 90r02r50      [24]10273 	mov	dptr,#_axradio_cb_receivesfd
   1D7C 12r00r00      [24]10274 	lcall	_wtimer_remove_callback
                     1D7F 10275 	C$easyax5043.c$1444$1$337 ==.
                          10276 ;	../COMMON/easyax5043.c:1444: wtimer_remove_callback(&axradio_cb_channelstate.cb);
   1D7F 90r02r5A      [24]10277 	mov	dptr,#_axradio_cb_channelstate
   1D82 12r00r00      [24]10278 	lcall	_wtimer_remove_callback
                     1D85 10279 	C$easyax5043.c$1445$1$337 ==.
                          10280 ;	../COMMON/easyax5043.c:1445: wtimer_remove_callback(&axradio_cb_transmitstart.cb);
   1D85 90r02r67      [24]10281 	mov	dptr,#_axradio_cb_transmitstart
   1D88 12r00r00      [24]10282 	lcall	_wtimer_remove_callback
                     1D8B 10283 	C$easyax5043.c$1446$1$337 ==.
                          10284 ;	../COMMON/easyax5043.c:1446: wtimer_remove_callback(&axradio_cb_transmitend.cb);
   1D8B 90r02r71      [24]10285 	mov	dptr,#_axradio_cb_transmitend
   1D8E 12r00r00      [24]10286 	lcall	_wtimer_remove_callback
                     1D91 10287 	C$easyax5043.c$1447$1$337 ==.
                          10288 ;	../COMMON/easyax5043.c:1447: wtimer_remove_callback(&axradio_cb_transmitdata.cb);
   1D91 90r02r7B      [24]10289 	mov	dptr,#_axradio_cb_transmitdata
   1D94 12r00r00      [24]10290 	lcall	_wtimer_remove_callback
                     1D97 10291 	C$easyax5043.c$1448$1$337 ==.
                          10292 ;	../COMMON/easyax5043.c:1448: wtimer_remove(&axradio_timer);
   1D97 90r02r85      [24]10293 	mov	dptr,#_axradio_timer
   1D9A 12r00r00      [24]10294 	lcall	_wtimer_remove
                     1D9D 10295 	C$easyax5043.c$1449$1$337 ==.
                     1D9D 10296 	XFeasyax5043$axradio_killallcb$0$0 ==.
   1D9D 22            [24]10297 	ret
                          10298 ;------------------------------------------------------------
                          10299 ;Allocation info for local variables in function 'axradio_init'
                          10300 ;------------------------------------------------------------
                          10301 ;i                         Allocated to registers r5 
                          10302 ;pllloop_save              Allocated to registers r7 
                          10303 ;pllcpi_save               Allocated to registers r6 
                          10304 ;iesave                    Allocated to registers r4 
                          10305 ;f                         Allocated to registers r1 r2 r3 r4 
                          10306 ;r                         Allocated to registers r3 
                          10307 ;iesave                    Allocated to registers r4 
                          10308 ;r                         Allocated to registers r3 
                          10309 ;f                         Allocated to registers r2 r3 r4 r5 
                          10310 ;------------------------------------------------------------
                     1D9E 10311 	G$axradio_init$0$0 ==.
                     1D9E 10312 	C$easyax5043.c$1455$1$337 ==.
                          10313 ;	../COMMON/easyax5043.c:1455: uint8_t axradio_init(void)
                          10314 ;	-----------------------------------------
                          10315 ;	 function axradio_init
                          10316 ;	-----------------------------------------
   1D9E                   10317 _axradio_init:
                     1D9E 10318 	C$easyax5043.c$1458$1$339 ==.
                          10319 ;	../COMMON/easyax5043.c:1458: axradio_mode = AXRADIO_MODE_UNINIT;
   1D9E 75*00 00      [24]10320 	mov	_axradio_mode,#0x00
                     1DA1 10321 	C$easyax5043.c$1459$1$339 ==.
                          10322 ;	../COMMON/easyax5043.c:1459: axradio_killallcb();
   1DA1 12r1Dr73      [24]10323 	lcall	_axradio_killallcb
                     1DA4 10324 	C$easyax5043.c$1460$1$339 ==.
                          10325 ;	../COMMON/easyax5043.c:1460: axradio_cb_receive.cb.handler = axradio_receive_callback_fwd;
   1DA4 90r02r30      [24]10326 	mov	dptr,#(_axradio_cb_receive + 0x0002)
   1DA7 74r4F         [12]10327 	mov	a,#_axradio_receive_callback_fwd
   1DA9 F0            [24]10328 	movx	@dptr,a
   1DAA 74s18         [12]10329 	mov	a,#(_axradio_receive_callback_fwd >> 8)
   1DAC A3            [24]10330 	inc	dptr
   1DAD F0            [24]10331 	movx	@dptr,a
                     1DAE 10332 	C$easyax5043.c$1461$1$339 ==.
                          10333 ;	../COMMON/easyax5043.c:1461: axradio_cb_receive.st.status = AXRADIO_STAT_RECEIVE;
   1DAE 90r02r32      [24]10334 	mov	dptr,#(_axradio_cb_receive + 0x0004)
   1DB1 E4            [12]10335 	clr	a
   1DB2 F0            [24]10336 	movx	@dptr,a
                     1DB3 10337 	C$easyax5043.c$1462$1$339 ==.
                          10338 ;	../COMMON/easyax5043.c:1462: memset_xdata(axradio_cb_receive.st.rx.mac.remoteaddr, 0, sizeof(axradio_cb_receive.st.rx.mac.remoteaddr));
   1DB3 75*00 00      [24]10339 	mov	_memset_PARM_2,#0x00
   1DB6 75*00 04      [24]10340 	mov	_memset_PARM_3,#0x04
   1DB9 75*01 00      [24]10341 	mov	(_memset_PARM_3 + 1),#0x00
   1DBC 90r02r42      [24]10342 	mov	dptr,#(_axradio_cb_receive + 0x0014)
   1DBF 75 F0 00      [24]10343 	mov	b,#0x00
   1DC2 12r00r00      [24]10344 	lcall	_memset
                     1DC5 10345 	C$easyax5043.c$1463$1$339 ==.
                          10346 ;	../COMMON/easyax5043.c:1463: memset_xdata(axradio_cb_receive.st.rx.mac.localaddr, 0, sizeof(axradio_cb_receive.st.rx.mac.localaddr));
   1DC5 75*00 00      [24]10347 	mov	_memset_PARM_2,#0x00
   1DC8 75*00 04      [24]10348 	mov	_memset_PARM_3,#0x04
   1DCB 75*01 00      [24]10349 	mov	(_memset_PARM_3 + 1),#0x00
   1DCE 90r02r46      [24]10350 	mov	dptr,#(_axradio_cb_receive + 0x0018)
   1DD1 75 F0 00      [24]10351 	mov	b,#0x00
   1DD4 12r00r00      [24]10352 	lcall	_memset
                     1DD7 10353 	C$easyax5043.c$1464$1$339 ==.
                          10354 ;	../COMMON/easyax5043.c:1464: axradio_cb_receivesfd.cb.handler = axradio_callback_fwd;
   1DD7 90r02r52      [24]10355 	mov	dptr,#(_axradio_cb_receivesfd + 0x0002)
   1DDA 74r3C         [12]10356 	mov	a,#_axradio_callback_fwd
   1DDC F0            [24]10357 	movx	@dptr,a
   1DDD 74s18         [12]10358 	mov	a,#(_axradio_callback_fwd >> 8)
   1DDF A3            [24]10359 	inc	dptr
   1DE0 F0            [24]10360 	movx	@dptr,a
                     1DE1 10361 	C$easyax5043.c$1465$1$339 ==.
                          10362 ;	../COMMON/easyax5043.c:1465: axradio_cb_receivesfd.st.status = AXRADIO_STAT_RECEIVESFD;
   1DE1 90r02r54      [24]10363 	mov	dptr,#(_axradio_cb_receivesfd + 0x0004)
   1DE4 74 01         [12]10364 	mov	a,#0x01
   1DE6 F0            [24]10365 	movx	@dptr,a
                     1DE7 10366 	C$easyax5043.c$1466$1$339 ==.
                          10367 ;	../COMMON/easyax5043.c:1466: axradio_cb_channelstate.cb.handler = axradio_callback_fwd;
   1DE7 90r02r5C      [24]10368 	mov	dptr,#(_axradio_cb_channelstate + 0x0002)
   1DEA 74r3C         [12]10369 	mov	a,#_axradio_callback_fwd
   1DEC F0            [24]10370 	movx	@dptr,a
   1DED 74s18         [12]10371 	mov	a,#(_axradio_callback_fwd >> 8)
   1DEF A3            [24]10372 	inc	dptr
   1DF0 F0            [24]10373 	movx	@dptr,a
                     1DF1 10374 	C$easyax5043.c$1467$1$339 ==.
                          10375 ;	../COMMON/easyax5043.c:1467: axradio_cb_channelstate.st.status = AXRADIO_STAT_CHANNELSTATE;
   1DF1 90r02r5E      [24]10376 	mov	dptr,#(_axradio_cb_channelstate + 0x0004)
   1DF4 74 02         [12]10377 	mov	a,#0x02
   1DF6 F0            [24]10378 	movx	@dptr,a
                     1DF7 10379 	C$easyax5043.c$1468$1$339 ==.
                          10380 ;	../COMMON/easyax5043.c:1468: axradio_cb_transmitstart.cb.handler = axradio_callback_fwd;
   1DF7 90r02r69      [24]10381 	mov	dptr,#(_axradio_cb_transmitstart + 0x0002)
   1DFA 74r3C         [12]10382 	mov	a,#_axradio_callback_fwd
   1DFC F0            [24]10383 	movx	@dptr,a
   1DFD 74s18         [12]10384 	mov	a,#(_axradio_callback_fwd >> 8)
   1DFF A3            [24]10385 	inc	dptr
   1E00 F0            [24]10386 	movx	@dptr,a
                     1E01 10387 	C$easyax5043.c$1469$1$339 ==.
                          10388 ;	../COMMON/easyax5043.c:1469: axradio_cb_transmitstart.st.status = AXRADIO_STAT_TRANSMITSTART;
   1E01 90r02r6B      [24]10389 	mov	dptr,#(_axradio_cb_transmitstart + 0x0004)
   1E04 74 03         [12]10390 	mov	a,#0x03
   1E06 F0            [24]10391 	movx	@dptr,a
                     1E07 10392 	C$easyax5043.c$1470$1$339 ==.
                          10393 ;	../COMMON/easyax5043.c:1470: axradio_cb_transmitend.cb.handler = axradio_callback_fwd;
   1E07 90r02r73      [24]10394 	mov	dptr,#(_axradio_cb_transmitend + 0x0002)
   1E0A 74r3C         [12]10395 	mov	a,#_axradio_callback_fwd
   1E0C F0            [24]10396 	movx	@dptr,a
   1E0D 74s18         [12]10397 	mov	a,#(_axradio_callback_fwd >> 8)
   1E0F A3            [24]10398 	inc	dptr
   1E10 F0            [24]10399 	movx	@dptr,a
                     1E11 10400 	C$easyax5043.c$1471$1$339 ==.
                          10401 ;	../COMMON/easyax5043.c:1471: axradio_cb_transmitend.st.status = AXRADIO_STAT_TRANSMITEND;
   1E11 90r02r75      [24]10402 	mov	dptr,#(_axradio_cb_transmitend + 0x0004)
   1E14 74 04         [12]10403 	mov	a,#0x04
   1E16 F0            [24]10404 	movx	@dptr,a
                     1E17 10405 	C$easyax5043.c$1472$1$339 ==.
                          10406 ;	../COMMON/easyax5043.c:1472: axradio_cb_transmitdata.cb.handler = axradio_callback_fwd;
   1E17 90r02r7D      [24]10407 	mov	dptr,#(_axradio_cb_transmitdata + 0x0002)
   1E1A 74r3C         [12]10408 	mov	a,#_axradio_callback_fwd
   1E1C F0            [24]10409 	movx	@dptr,a
   1E1D 74s18         [12]10410 	mov	a,#(_axradio_callback_fwd >> 8)
   1E1F A3            [24]10411 	inc	dptr
   1E20 F0            [24]10412 	movx	@dptr,a
                     1E21 10413 	C$easyax5043.c$1473$1$339 ==.
                          10414 ;	../COMMON/easyax5043.c:1473: axradio_cb_transmitdata.st.status = AXRADIO_STAT_TRANSMITDATA;
   1E21 90r02r7F      [24]10415 	mov	dptr,#(_axradio_cb_transmitdata + 0x0004)
   1E24 74 05         [12]10416 	mov	a,#0x05
   1E26 F0            [24]10417 	movx	@dptr,a
                     1E27 10418 	C$easyax5043.c$1474$1$339 ==.
                          10419 ;	../COMMON/easyax5043.c:1474: axradio_timer.handler = axradio_timer_callback;
   1E27 90r02r87      [24]10420 	mov	dptr,#(_axradio_timer + 0x0002)
   1E2A 74r0B         [12]10421 	mov	a,#_axradio_timer_callback
   1E2C F0            [24]10422 	movx	@dptr,a
   1E2D 74s10         [12]10423 	mov	a,#(_axradio_timer_callback >> 8)
   1E2F A3            [24]10424 	inc	dptr
   1E30 F0            [24]10425 	movx	@dptr,a
                     1E31 10426 	C$easyax5043.c$1475$1$339 ==.
                          10427 ;	../COMMON/easyax5043.c:1475: axradio_curchannel = 0;
   1E31 90r00r05      [24]10428 	mov	dptr,#_axradio_curchannel
                     1E34 10429 	C$easyax5043.c$1476$1$339 ==.
                          10430 ;	../COMMON/easyax5043.c:1476: axradio_curfreqoffset = 0;
   1E34 E4            [12]10431 	clr	a
   1E35 F0            [24]10432 	movx	@dptr,a
   1E36 90r00r06      [24]10433 	mov	dptr,#_axradio_curfreqoffset
   1E39 F0            [24]10434 	movx	@dptr,a
   1E3A E4            [12]10435 	clr	a
   1E3B A3            [24]10436 	inc	dptr
   1E3C F0            [24]10437 	movx	@dptr,a
   1E3D E4            [12]10438 	clr	a
   1E3E A3            [24]10439 	inc	dptr
   1E3F F0            [24]10440 	movx	@dptr,a
   1E40 E4            [12]10441 	clr	a
   1E41 A3            [24]10442 	inc	dptr
   1E42 F0            [24]10443 	movx	@dptr,a
                     1E43 10444 	C$easyax5043.c$1477$1$339 ==.
                          10445 ;	../COMMON/easyax5043.c:1477: IE_4 = 0;
   1E43 C2 AC         [12]10446 	clr	_IE_4
                     1E45 10447 	C$easyax5043.c$1478$1$339 ==.
                          10448 ;	../COMMON/easyax5043.c:1478: axradio_trxstate = trxstate_off;
   1E45 75*01 00      [24]10449 	mov	_axradio_trxstate,#0x00
                     1E48 10450 	C$easyax5043.c$1479$1$339 ==.
                          10451 ;	../COMMON/easyax5043.c:1479: if (ax5043_reset())
   1E48 12r00r00      [24]10452 	lcall	_ax5043_reset
   1E4B E5 82         [12]10453 	mov	a,dpl
   1E4D 60 06         [24]10454 	jz	00102$
                     1E4F 10455 	C$easyax5043.c$1480$1$339 ==.
                          10456 ;	../COMMON/easyax5043.c:1480: return AXRADIO_ERR_NOCHIP;
   1E4F 75 82 05      [24]10457 	mov	dpl,#0x05
   1E52 02r20r8D      [24]10458 	ljmp	00139$
   1E55                   10459 00102$:
                     1E55 10460 	C$easyax5043.c$1481$1$339 ==.
                          10461 ;	../COMMON/easyax5043.c:1481: ax5043_init_registers();
   1E55 12r0DrC6      [24]10462 	lcall	_ax5043_init_registers
                     1E58 10463 	C$easyax5043.c$1482$1$339 ==.
                          10464 ;	../COMMON/easyax5043.c:1482: ax5043_set_registers_rx();
   1E58 12r00r00      [24]10465 	lcall	_ax5043_set_registers_rx
                     1E5B 10466 	C$easyax5043.c$1483$1$339 ==.
                          10467 ;	../COMMON/easyax5043.c:1483: pllloop_save = AX5043_PLLLOOP;
   1E5B 90 40 30      [24]10468 	mov	dptr,#_AX5043_PLLLOOP
   1E5E E0            [24]10469 	movx	a,@dptr
   1E5F FF            [12]10470 	mov	r7,a
                     1E60 10471 	C$easyax5043.c$1484$1$339 ==.
                          10472 ;	../COMMON/easyax5043.c:1484: pllcpi_save = AX5043_PLLCPI;
   1E60 90 40 31      [24]10473 	mov	dptr,#_AX5043_PLLCPI
   1E63 E0            [24]10474 	movx	a,@dptr
   1E64 FE            [12]10475 	mov	r6,a
                     1E65 10476 	C$easyax5043.c$1485$1$339 ==.
                          10477 ;	../COMMON/easyax5043.c:1485: AX5043_PLLLOOP = 0x09; // default 100kHz loop BW for ranging
   1E65 90 40 30      [24]10478 	mov	dptr,#_AX5043_PLLLOOP
   1E68 74 09         [12]10479 	mov	a,#0x09
   1E6A F0            [24]10480 	movx	@dptr,a
                     1E6B 10481 	C$easyax5043.c$1486$1$339 ==.
                          10482 ;	../COMMON/easyax5043.c:1486: AX5043_PLLCPI = 0x08;
   1E6B 90 40 31      [24]10483 	mov	dptr,#_AX5043_PLLCPI
   1E6E 74 08         [12]10484 	mov	a,#0x08
   1E70 F0            [24]10485 	movx	@dptr,a
                     1E71 10486 	C$easyax5043.c$1488$1$339 ==.
                          10487 ;	../COMMON/easyax5043.c:1488: IE_4 = 1;
   1E71 D2 AC         [12]10488 	setb	_IE_4
                     1E73 10489 	C$easyax5043.c$1490$1$339 ==.
                          10490 ;	../COMMON/easyax5043.c:1490: AX5043_PWRMODE = AX5043_PWRSTATE_XTAL_ON;
   1E73 90 40 02      [24]10491 	mov	dptr,#_AX5043_PWRMODE
   1E76 74 05         [12]10492 	mov	a,#0x05
   1E78 F0            [24]10493 	movx	@dptr,a
                     1E79 10494 	C$easyax5043.c$1491$1$339 ==.
                          10495 ;	../COMMON/easyax5043.c:1491: axradio_wait_for_xtal();
   1E79 C0 07         [24]10496 	push	ar7
   1E7B C0 06         [24]10497 	push	ar6
   1E7D 12r0Cr6B      [24]10498 	lcall	_axradio_wait_for_xtal
   1E80 D0 06         [24]10499 	pop	ar6
   1E82 D0 07         [24]10500 	pop	ar7
                     1E84 10501 	C$easyax5043.c$1493$3$341 ==.
                          10502 ;	../COMMON/easyax5043.c:1493: for (i = 0; i < axradio_phy_nrchannels; ++i) {
   1E84 7D 00         [12]10503 	mov	r5,#0x00
   1E86                   10504 00129$:
   1E86 90r00r00      [24]10505 	mov	dptr,#_axradio_phy_nrchannels
   1E89 E4            [12]10506 	clr	a
   1E8A 93            [24]10507 	movc	a,@a+dptr
   1E8B FC            [12]10508 	mov	r4,a
   1E8C C3            [12]10509 	clr	c
   1E8D ED            [12]10510 	mov	a,r5
   1E8E 9C            [12]10511 	subb	a,r4
   1E8F 40 03         [24]10512 	jc	00195$
   1E91 02r1Fr61      [24]10513 	ljmp	00113$
   1E94                   10514 00195$:
                     1E94 10515 	C$easyax5043.c$1496$3$341 ==.
                          10516 ;	../COMMON/easyax5043.c:1496: uint32_t __autodata f = axradio_phy_chanfreq[i];
   1E94 ED            [12]10517 	mov	a,r5
   1E95 75 F0 04      [24]10518 	mov	b,#0x04
   1E98 A4            [48]10519 	mul	ab
   1E99 24r00         [12]10520 	add	a,#_axradio_phy_chanfreq
   1E9B F5 82         [12]10521 	mov	dpl,a
   1E9D 74s00         [12]10522 	mov	a,#(_axradio_phy_chanfreq >> 8)
   1E9F 35 F0         [12]10523 	addc	a,b
   1EA1 F5 83         [12]10524 	mov	dph,a
   1EA3 E4            [12]10525 	clr	a
   1EA4 93            [24]10526 	movc	a,@a+dptr
   1EA5 F9            [12]10527 	mov	r1,a
   1EA6 A3            [24]10528 	inc	dptr
   1EA7 E4            [12]10529 	clr	a
   1EA8 93            [24]10530 	movc	a,@a+dptr
   1EA9 FA            [12]10531 	mov	r2,a
   1EAA A3            [24]10532 	inc	dptr
   1EAB E4            [12]10533 	clr	a
   1EAC 93            [24]10534 	movc	a,@a+dptr
   1EAD FB            [12]10535 	mov	r3,a
   1EAE A3            [24]10536 	inc	dptr
   1EAF E4            [12]10537 	clr	a
   1EB0 93            [24]10538 	movc	a,@a+dptr
   1EB1 FC            [12]10539 	mov	r4,a
                     1EB2 10540 	C$easyax5043.c$1497$3$341 ==.
                          10541 ;	../COMMON/easyax5043.c:1497: AX5043_FREQA0 = f;
   1EB2 90 40 37      [24]10542 	mov	dptr,#_AX5043_FREQA0
   1EB5 E9            [12]10543 	mov	a,r1
   1EB6 F0            [24]10544 	movx	@dptr,a
                     1EB7 10545 	C$easyax5043.c$1498$3$341 ==.
                          10546 ;	../COMMON/easyax5043.c:1498: AX5043_FREQA1 = f >> 8;
   1EB7 90 40 36      [24]10547 	mov	dptr,#_AX5043_FREQA1
   1EBA EA            [12]10548 	mov	a,r2
   1EBB F0            [24]10549 	movx	@dptr,a
                     1EBC 10550 	C$easyax5043.c$1499$3$341 ==.
                          10551 ;	../COMMON/easyax5043.c:1499: AX5043_FREQA2 = f >> 16;
   1EBC 90 40 35      [24]10552 	mov	dptr,#_AX5043_FREQA2
   1EBF EB            [12]10553 	mov	a,r3
   1EC0 F0            [24]10554 	movx	@dptr,a
                     1EC1 10555 	C$easyax5043.c$1500$3$341 ==.
                          10556 ;	../COMMON/easyax5043.c:1500: AX5043_FREQA3 = f >> 24;
   1EC1 90 40 34      [24]10557 	mov	dptr,#_AX5043_FREQA3
   1EC4 EC            [12]10558 	mov	a,r4
   1EC5 F0            [24]10559 	movx	@dptr,a
                     1EC6 10560 	C$easyax5043.c$1502$2$340 ==.
                          10561 ;	../COMMON/easyax5043.c:1502: iesave = IE & 0x80;
   1EC6 74 80         [12]10562 	mov	a,#0x80
   1EC8 55 A8         [12]10563 	anl	a,_IE
   1ECA FC            [12]10564 	mov	r4,a
                     1ECB 10565 	C$easyax5043.c$1503$2$340 ==.
                          10566 ;	../COMMON/easyax5043.c:1503: EA = 0;
   1ECB C2 AF         [12]10567 	clr	_EA
                     1ECD 10568 	C$easyax5043.c$1504$2$340 ==.
                          10569 ;	../COMMON/easyax5043.c:1504: axradio_trxstate = trxstate_pll_ranging;
   1ECD 75*01 05      [24]10570 	mov	_axradio_trxstate,#0x05
                     1ED0 10571 	C$easyax5043.c$1505$2$340 ==.
                          10572 ;	../COMMON/easyax5043.c:1505: AX5043_IRQMASK1 = 0x10; // enable pll autoranging done interrupt
   1ED0 90 40 06      [24]10573 	mov	dptr,#_AX5043_IRQMASK1
   1ED3 74 10         [12]10574 	mov	a,#0x10
   1ED5 F0            [24]10575 	movx	@dptr,a
                     1ED6 10576 	C$easyax5043.c$1508$3$342 ==.
                          10577 ;	../COMMON/easyax5043.c:1508: if( !(axradio_phy_chanpllrnginit[0] & 0xF0) ) { // start values for ranging available
   1ED6 90r00r00      [24]10578 	mov	dptr,#_axradio_phy_chanpllrnginit
   1ED9 E4            [12]10579 	clr	a
   1EDA 93            [24]10580 	movc	a,@a+dptr
   1EDB FB            [12]10581 	mov	r3,a
   1EDC 54 F0         [12]10582 	anl	a,#0xF0
   1EDE 70 0B         [24]10583 	jnz	00108$
                     1EE0 10584 	C$easyax5043.c$1509$4$343 ==.
                          10585 ;	../COMMON/easyax5043.c:1509: r = axradio_phy_chanpllrnginit[i] | 0x10;
   1EE0 ED            [12]10586 	mov	a,r5
   1EE1 90r00r00      [24]10587 	mov	dptr,#_axradio_phy_chanpllrnginit
   1EE4 93            [24]10588 	movc	a,@a+dptr
   1EE5 FB            [12]10589 	mov	r3,a
   1EE6 43 03 10      [24]10590 	orl	ar3,#0x10
   1EE9 80 25         [24]10591 	sjmp	00109$
   1EEB                   10592 00108$:
                     1EEB 10593 	C$easyax5043.c$1512$4$344 ==.
                          10594 ;	../COMMON/easyax5043.c:1512: r = 0x18;
   1EEB 7B 18         [12]10595 	mov	r3,#0x18
                     1EED 10596 	C$easyax5043.c$1513$4$344 ==.
                          10597 ;	../COMMON/easyax5043.c:1513: if (i) {
   1EED ED            [12]10598 	mov	a,r5
   1EEE 60 20         [24]10599 	jz	00109$
                     1EF0 10600 	C$easyax5043.c$1514$5$345 ==.
                          10601 ;	../COMMON/easyax5043.c:1514: r = axradio_phy_chanpllrng_rx[i - 1];
   1EF0 8D 01         [24]10602 	mov	ar1,r5
   1EF2 7A 00         [12]10603 	mov	r2,#0x00
   1EF4 19            [12]10604 	dec	r1
   1EF5 B9 FF 01      [24]10605 	cjne	r1,#0xFF,00199$
   1EF8 1A            [12]10606 	dec	r2
   1EF9                   10607 00199$:
   1EF9 E9            [12]10608 	mov	a,r1
   1EFA 24r00         [12]10609 	add	a,#_axradio_phy_chanpllrng_rx
   1EFC F5 82         [12]10610 	mov	dpl,a
   1EFE EA            [12]10611 	mov	a,r2
   1EFF 34s00         [12]10612 	addc	a,#(_axradio_phy_chanpllrng_rx >> 8)
   1F01 F5 83         [12]10613 	mov	dph,a
   1F03 E0            [24]10614 	movx	a,@dptr
                     1F04 10615 	C$easyax5043.c$1515$5$345 ==.
                          10616 ;	../COMMON/easyax5043.c:1515: if (r & 0x20)
   1F04 FB            [12]10617 	mov	r3,a
   1F05 30 E5 02      [24]10618 	jnb	acc.5,00104$
                     1F08 10619 	C$easyax5043.c$1516$5$345 ==.
                          10620 ;	../COMMON/easyax5043.c:1516: r = 0x08;
   1F08 7B 08         [12]10621 	mov	r3,#0x08
   1F0A                   10622 00104$:
                     1F0A 10623 	C$easyax5043.c$1517$5$345 ==.
                          10624 ;	../COMMON/easyax5043.c:1517: r &= 0x0F;
   1F0A 53 03 0F      [24]10625 	anl	ar3,#0x0F
                     1F0D 10626 	C$easyax5043.c$1518$5$345 ==.
                          10627 ;	../COMMON/easyax5043.c:1518: r |= 0x10;
   1F0D 43 03 10      [24]10628 	orl	ar3,#0x10
   1F10                   10629 00109$:
                     1F10 10630 	C$easyax5043.c$1521$3$342 ==.
                          10631 ;	../COMMON/easyax5043.c:1521: AX5043_PLLRANGINGA = r; // init ranging process starting from "range"
   1F10 90 40 33      [24]10632 	mov	dptr,#_AX5043_PLLRANGINGA
   1F13 EB            [12]10633 	mov	a,r3
   1F14 F0            [24]10634 	movx	@dptr,a
   1F15                   10635 00126$:
                     1F15 10636 	C$easyax5043.c$1524$3$346 ==.
                          10637 ;	../COMMON/easyax5043.c:1524: EA = 0;
   1F15 C2 AF         [12]10638 	clr	_EA
                     1F17 10639 	C$easyax5043.c$1525$3$346 ==.
                          10640 ;	../COMMON/easyax5043.c:1525: if (axradio_trxstate == trxstate_pll_ranging_done)
   1F17 74 06         [12]10641 	mov	a,#0x06
   1F19 B5*01 02      [24]10642 	cjne	a,_axradio_trxstate,00201$
   1F1C 80 22         [24]10643 	sjmp	00112$
   1F1E                   10644 00201$:
                     1F1E 10645 	C$easyax5043.c$1527$3$346 ==.
                          10646 ;	../COMMON/easyax5043.c:1527: wtimer_idle(WTFLAG_CANSTANDBY);
   1F1E 75 82 02      [24]10647 	mov	dpl,#0x02
   1F21 C0 07         [24]10648 	push	ar7
   1F23 C0 06         [24]10649 	push	ar6
   1F25 C0 05         [24]10650 	push	ar5
   1F27 C0 04         [24]10651 	push	ar4
   1F29 12r00r00      [24]10652 	lcall	_wtimer_idle
   1F2C D0 04         [24]10653 	pop	ar4
                     1F2E 10654 	C$easyax5043.c$1528$3$346 ==.
                          10655 ;	../COMMON/easyax5043.c:1528: IE |= iesave;
   1F2E EC            [12]10656 	mov	a,r4
   1F2F 42 A8         [12]10657 	orl	_IE,a
                     1F31 10658 	C$easyax5043.c$1529$3$346 ==.
                          10659 ;	../COMMON/easyax5043.c:1529: wtimer_runcallbacks();
   1F31 C0 04         [24]10660 	push	ar4
   1F33 12r00r00      [24]10661 	lcall	_wtimer_runcallbacks
   1F36 D0 04         [24]10662 	pop	ar4
   1F38 D0 05         [24]10663 	pop	ar5
   1F3A D0 06         [24]10664 	pop	ar6
   1F3C D0 07         [24]10665 	pop	ar7
   1F3E 80 D5         [24]10666 	sjmp	00126$
   1F40                   10667 00112$:
                     1F40 10668 	C$easyax5043.c$1531$2$340 ==.
                          10669 ;	../COMMON/easyax5043.c:1531: axradio_trxstate = trxstate_off;
   1F40 75*01 00      [24]10670 	mov	_axradio_trxstate,#0x00
                     1F43 10671 	C$easyax5043.c$1532$2$340 ==.
                          10672 ;	../COMMON/easyax5043.c:1532: AX5043_IRQMASK1 = 0x00;
   1F43 90 40 06      [24]10673 	mov	dptr,#_AX5043_IRQMASK1
   1F46 E4            [12]10674 	clr	a
   1F47 F0            [24]10675 	movx	@dptr,a
                     1F48 10676 	C$easyax5043.c$1533$2$340 ==.
                          10677 ;	../COMMON/easyax5043.c:1533: axradio_phy_chanpllrng_rx[i] = AX5043_PLLRANGINGA;
   1F48 ED            [12]10678 	mov	a,r5
   1F49 24r00         [12]10679 	add	a,#_axradio_phy_chanpllrng_rx
   1F4B FA            [12]10680 	mov	r2,a
   1F4C E4            [12]10681 	clr	a
   1F4D 34s00         [12]10682 	addc	a,#(_axradio_phy_chanpllrng_rx >> 8)
   1F4F FB            [12]10683 	mov	r3,a
   1F50 90 40 33      [24]10684 	mov	dptr,#_AX5043_PLLRANGINGA
   1F53 E0            [24]10685 	movx	a,@dptr
   1F54 F9            [12]10686 	mov	r1,a
   1F55 8A 82         [24]10687 	mov	dpl,r2
   1F57 8B 83         [24]10688 	mov	dph,r3
   1F59 F0            [24]10689 	movx	@dptr,a
                     1F5A 10690 	C$easyax5043.c$1534$2$340 ==.
                          10691 ;	../COMMON/easyax5043.c:1534: IE |= iesave;
   1F5A EC            [12]10692 	mov	a,r4
   1F5B 42 A8         [12]10693 	orl	_IE,a
                     1F5D 10694 	C$easyax5043.c$1493$1$339 ==.
                          10695 ;	../COMMON/easyax5043.c:1493: for (i = 0; i < axradio_phy_nrchannels; ++i) {
   1F5D 0D            [12]10696 	inc	r5
   1F5E 02r1Er86      [24]10697 	ljmp	00129$
   1F61                   10698 00113$:
                     1F61 10699 	C$easyax5043.c$1536$1$339 ==.
                          10700 ;	../COMMON/easyax5043.c:1536: ax5043_set_registers_tx();
   1F61 C0 07         [24]10701 	push	ar7
   1F63 C0 06         [24]10702 	push	ar6
   1F65 12r00r00      [24]10703 	lcall	_ax5043_set_registers_tx
   1F68 D0 06         [24]10704 	pop	ar6
   1F6A D0 07         [24]10705 	pop	ar7
                     1F6C 10706 	C$easyax5043.c$1537$1$339 ==.
                          10707 ;	../COMMON/easyax5043.c:1537: AX5043_PLLLOOP = 0x09; // default 100kHz loop BW for ranging
   1F6C 90 40 30      [24]10708 	mov	dptr,#_AX5043_PLLLOOP
   1F6F 74 09         [12]10709 	mov	a,#0x09
   1F71 F0            [24]10710 	movx	@dptr,a
                     1F72 10711 	C$easyax5043.c$1538$1$339 ==.
                          10712 ;	../COMMON/easyax5043.c:1538: AX5043_PLLCPI = 0x08;
   1F72 90 40 31      [24]10713 	mov	dptr,#_AX5043_PLLCPI
   1F75 74 08         [12]10714 	mov	a,#0x08
   1F77 F0            [24]10715 	movx	@dptr,a
                     1F78 10716 	C$easyax5043.c$1539$2$347 ==.
                          10717 ;	../COMMON/easyax5043.c:1539: for (i = 0; i < axradio_phy_nrchannels; ++i) {
   1F78 7D 00         [12]10718 	mov	r5,#0x00
   1F7A                   10719 00134$:
   1F7A 90r00r00      [24]10720 	mov	dptr,#_axradio_phy_nrchannels
   1F7D E4            [12]10721 	clr	a
   1F7E 93            [24]10722 	movc	a,@a+dptr
   1F7F FC            [12]10723 	mov	r4,a
   1F80 C3            [12]10724 	clr	c
   1F81 ED            [12]10725 	mov	a,r5
   1F82 9C            [12]10726 	subb	a,r4
   1F83 40 03         [24]10727 	jc	00202$
   1F85 02r20r15      [24]10728 	ljmp	00122$
   1F88                   10729 00202$:
                     1F88 10730 	C$easyax5043.c$1540$2$347 ==.
                          10731 ;	../COMMON/easyax5043.c:1540: uint8_t __autodata iesave = IE & 0x80;
   1F88 74 80         [12]10732 	mov	a,#0x80
   1F8A 55 A8         [12]10733 	anl	a,_IE
   1F8C FC            [12]10734 	mov	r4,a
                     1F8D 10735 	C$easyax5043.c$1541$2$347 ==.
                          10736 ;	../COMMON/easyax5043.c:1541: EA = 0;
   1F8D C2 AF         [12]10737 	clr	_EA
                     1F8F 10738 	C$easyax5043.c$1542$2$347 ==.
                          10739 ;	../COMMON/easyax5043.c:1542: axradio_trxstate = trxstate_pll_ranging;
   1F8F 75*01 05      [24]10740 	mov	_axradio_trxstate,#0x05
                     1F92 10741 	C$easyax5043.c$1543$2$347 ==.
                          10742 ;	../COMMON/easyax5043.c:1543: AX5043_IRQMASK1 = 0x10; // enable pll autoranging done interrupt
   1F92 90 40 06      [24]10743 	mov	dptr,#_AX5043_IRQMASK1
   1F95 74 10         [12]10744 	mov	a,#0x10
   1F97 F0            [24]10745 	movx	@dptr,a
                     1F98 10746 	C$easyax5043.c$1546$3$348 ==.
                          10747 ;	../COMMON/easyax5043.c:1546: if( !(axradio_phy_chanpllrnginit[0] & 0xF0) ) { // start values for ranging available
   1F98 90r00r00      [24]10748 	mov	dptr,#_axradio_phy_chanpllrnginit
   1F9B E4            [12]10749 	clr	a
   1F9C 93            [24]10750 	movc	a,@a+dptr
   1F9D FB            [12]10751 	mov	r3,a
   1F9E 54 F0         [12]10752 	anl	a,#0xF0
   1FA0 70 0B         [24]10753 	jnz	00117$
                     1FA2 10754 	C$easyax5043.c$1547$4$349 ==.
                          10755 ;	../COMMON/easyax5043.c:1547: r = axradio_phy_chanpllrnginit[i] | 0x10;
   1FA2 ED            [12]10756 	mov	a,r5
   1FA3 90r00r00      [24]10757 	mov	dptr,#_axradio_phy_chanpllrnginit
   1FA6 93            [24]10758 	movc	a,@a+dptr
   1FA7 FB            [12]10759 	mov	r3,a
   1FA8 43 03 10      [24]10760 	orl	ar3,#0x10
   1FAB 80 17         [24]10761 	sjmp	00118$
   1FAD                   10762 00117$:
                     1FAD 10763 	C$easyax5043.c$1550$4$350 ==.
                          10764 ;	../COMMON/easyax5043.c:1550: r = axradio_phy_chanpllrng_rx[i];
   1FAD ED            [12]10765 	mov	a,r5
   1FAE 24r00         [12]10766 	add	a,#_axradio_phy_chanpllrng_rx
   1FB0 F5 82         [12]10767 	mov	dpl,a
   1FB2 E4            [12]10768 	clr	a
   1FB3 34s00         [12]10769 	addc	a,#(_axradio_phy_chanpllrng_rx >> 8)
   1FB5 F5 83         [12]10770 	mov	dph,a
   1FB7 E0            [24]10771 	movx	a,@dptr
                     1FB8 10772 	C$easyax5043.c$1551$4$350 ==.
                          10773 ;	../COMMON/easyax5043.c:1551: if (r & 0x20)
   1FB8 FB            [12]10774 	mov	r3,a
   1FB9 30 E5 02      [24]10775 	jnb	acc.5,00115$
                     1FBC 10776 	C$easyax5043.c$1552$4$350 ==.
                          10777 ;	../COMMON/easyax5043.c:1552: r = 0x08;
   1FBC 7B 08         [12]10778 	mov	r3,#0x08
   1FBE                   10779 00115$:
                     1FBE 10780 	C$easyax5043.c$1553$4$350 ==.
                          10781 ;	../COMMON/easyax5043.c:1553: r &= 0x0F;
   1FBE 53 03 0F      [24]10782 	anl	ar3,#0x0F
                     1FC1 10783 	C$easyax5043.c$1554$4$350 ==.
                          10784 ;	../COMMON/easyax5043.c:1554: r |= 0x10;
   1FC1 43 03 10      [24]10785 	orl	ar3,#0x10
   1FC4                   10786 00118$:
                     1FC4 10787 	C$easyax5043.c$1556$3$348 ==.
                          10788 ;	../COMMON/easyax5043.c:1556: AX5043_PLLRANGINGA = r; // init ranging process starting from "range"
   1FC4 90 40 33      [24]10789 	mov	dptr,#_AX5043_PLLRANGINGA
   1FC7 EB            [12]10790 	mov	a,r3
   1FC8 F0            [24]10791 	movx	@dptr,a
   1FC9                   10792 00131$:
                     1FC9 10793 	C$easyax5043.c$1559$3$351 ==.
                          10794 ;	../COMMON/easyax5043.c:1559: EA = 0;
   1FC9 C2 AF         [12]10795 	clr	_EA
                     1FCB 10796 	C$easyax5043.c$1560$3$351 ==.
                          10797 ;	../COMMON/easyax5043.c:1560: if (axradio_trxstate == trxstate_pll_ranging_done)
   1FCB 74 06         [12]10798 	mov	a,#0x06
   1FCD B5*01 02      [24]10799 	cjne	a,_axradio_trxstate,00206$
   1FD0 80 22         [24]10800 	sjmp	00121$
   1FD2                   10801 00206$:
                     1FD2 10802 	C$easyax5043.c$1562$3$351 ==.
                          10803 ;	../COMMON/easyax5043.c:1562: wtimer_idle(WTFLAG_CANSTANDBY);
   1FD2 75 82 02      [24]10804 	mov	dpl,#0x02
   1FD5 C0 07         [24]10805 	push	ar7
   1FD7 C0 06         [24]10806 	push	ar6
   1FD9 C0 05         [24]10807 	push	ar5
   1FDB C0 04         [24]10808 	push	ar4
   1FDD 12r00r00      [24]10809 	lcall	_wtimer_idle
   1FE0 D0 04         [24]10810 	pop	ar4
                     1FE2 10811 	C$easyax5043.c$1563$3$351 ==.
                          10812 ;	../COMMON/easyax5043.c:1563: IE |= iesave;
   1FE2 EC            [12]10813 	mov	a,r4
   1FE3 42 A8         [12]10814 	orl	_IE,a
                     1FE5 10815 	C$easyax5043.c$1564$3$351 ==.
                          10816 ;	../COMMON/easyax5043.c:1564: wtimer_runcallbacks();
   1FE5 C0 04         [24]10817 	push	ar4
   1FE7 12r00r00      [24]10818 	lcall	_wtimer_runcallbacks
   1FEA D0 04         [24]10819 	pop	ar4
   1FEC D0 05         [24]10820 	pop	ar5
   1FEE D0 06         [24]10821 	pop	ar6
   1FF0 D0 07         [24]10822 	pop	ar7
   1FF2 80 D5         [24]10823 	sjmp	00131$
   1FF4                   10824 00121$:
                     1FF4 10825 	C$easyax5043.c$1566$2$347 ==.
                          10826 ;	../COMMON/easyax5043.c:1566: axradio_trxstate = trxstate_off;
   1FF4 75*01 00      [24]10827 	mov	_axradio_trxstate,#0x00
                     1FF7 10828 	C$easyax5043.c$1567$2$347 ==.
                          10829 ;	../COMMON/easyax5043.c:1567: AX5043_IRQMASK1 = 0x00;
   1FF7 90 40 06      [24]10830 	mov	dptr,#_AX5043_IRQMASK1
   1FFA E4            [12]10831 	clr	a
   1FFB F0            [24]10832 	movx	@dptr,a
                     1FFC 10833 	C$easyax5043.c$1568$2$347 ==.
                          10834 ;	../COMMON/easyax5043.c:1568: axradio_phy_chanpllrng_tx[i] = AX5043_PLLRANGINGA;
   1FFC ED            [12]10835 	mov	a,r5
   1FFD 24r00         [12]10836 	add	a,#_axradio_phy_chanpllrng_tx
   1FFF FA            [12]10837 	mov	r2,a
   2000 E4            [12]10838 	clr	a
   2001 34s00         [12]10839 	addc	a,#(_axradio_phy_chanpllrng_tx >> 8)
   2003 FB            [12]10840 	mov	r3,a
   2004 90 40 33      [24]10841 	mov	dptr,#_AX5043_PLLRANGINGA
   2007 E0            [24]10842 	movx	a,@dptr
   2008 F9            [12]10843 	mov	r1,a
   2009 8A 82         [24]10844 	mov	dpl,r2
   200B 8B 83         [24]10845 	mov	dph,r3
   200D F0            [24]10846 	movx	@dptr,a
                     200E 10847 	C$easyax5043.c$1569$2$347 ==.
                          10848 ;	../COMMON/easyax5043.c:1569: IE |= iesave;
   200E EC            [12]10849 	mov	a,r4
   200F 42 A8         [12]10850 	orl	_IE,a
                     2011 10851 	C$easyax5043.c$1539$1$339 ==.
                          10852 ;	../COMMON/easyax5043.c:1539: for (i = 0; i < axradio_phy_nrchannels; ++i) {
   2011 0D            [12]10853 	inc	r5
   2012 02r1Fr7A      [24]10854 	ljmp	00134$
   2015                   10855 00122$:
                     2015 10856 	C$easyax5043.c$1571$1$339 ==.
                          10857 ;	../COMMON/easyax5043.c:1571: AX5043_PWRMODE = AX5043_PWRSTATE_POWERDOWN;
   2015 90 40 02      [24]10858 	mov	dptr,#_AX5043_PWRMODE
   2018 E4            [12]10859 	clr	a
   2019 F0            [24]10860 	movx	@dptr,a
                     201A 10861 	C$easyax5043.c$1572$1$339 ==.
                          10862 ;	../COMMON/easyax5043.c:1572: AX5043_PLLRANGINGA = axradio_phy_chanpllrng_rx[0] & 0x0F;
   201A 90r00r00      [24]10863 	mov	dptr,#_axradio_phy_chanpllrng_rx
   201D E0            [24]10864 	movx	a,@dptr
   201E FD            [12]10865 	mov	r5,a
   201F 90 40 33      [24]10866 	mov	dptr,#_AX5043_PLLRANGINGA
   2022 74 0F         [12]10867 	mov	a,#0x0F
   2024 5D            [12]10868 	anl	a,r5
   2025 F0            [24]10869 	movx	@dptr,a
                     2026 10870 	C$easyax5043.c$1574$2$352 ==.
                          10871 ;	../COMMON/easyax5043.c:1574: uint32_t __autodata f = axradio_phy_chanfreq[0];
   2026 90r00r00      [24]10872 	mov	dptr,#_axradio_phy_chanfreq
   2029 E4            [12]10873 	clr	a
   202A 93            [24]10874 	movc	a,@a+dptr
   202B FA            [12]10875 	mov	r2,a
   202C A3            [24]10876 	inc	dptr
   202D E4            [12]10877 	clr	a
   202E 93            [24]10878 	movc	a,@a+dptr
   202F FB            [12]10879 	mov	r3,a
   2030 A3            [24]10880 	inc	dptr
   2031 E4            [12]10881 	clr	a
   2032 93            [24]10882 	movc	a,@a+dptr
   2033 FC            [12]10883 	mov	r4,a
   2034 A3            [24]10884 	inc	dptr
   2035 E4            [12]10885 	clr	a
   2036 93            [24]10886 	movc	a,@a+dptr
   2037 FD            [12]10887 	mov	r5,a
                     2038 10888 	C$easyax5043.c$1575$2$352 ==.
                          10889 ;	../COMMON/easyax5043.c:1575: AX5043_FREQA0 = f;
   2038 90 40 37      [24]10890 	mov	dptr,#_AX5043_FREQA0
   203B EA            [12]10891 	mov	a,r2
   203C F0            [24]10892 	movx	@dptr,a
                     203D 10893 	C$easyax5043.c$1576$2$352 ==.
                          10894 ;	../COMMON/easyax5043.c:1576: AX5043_FREQA1 = f >> 8;
   203D 90 40 36      [24]10895 	mov	dptr,#_AX5043_FREQA1
   2040 EB            [12]10896 	mov	a,r3
   2041 F0            [24]10897 	movx	@dptr,a
                     2042 10898 	C$easyax5043.c$1577$2$352 ==.
                          10899 ;	../COMMON/easyax5043.c:1577: AX5043_FREQA2 = f >> 16;
   2042 90 40 35      [24]10900 	mov	dptr,#_AX5043_FREQA2
   2045 EC            [12]10901 	mov	a,r4
   2046 F0            [24]10902 	movx	@dptr,a
                     2047 10903 	C$easyax5043.c$1578$2$352 ==.
                          10904 ;	../COMMON/easyax5043.c:1578: AX5043_FREQA3 = f >> 24;
   2047 90 40 34      [24]10905 	mov	dptr,#_AX5043_FREQA3
   204A ED            [12]10906 	mov	a,r5
   204B F0            [24]10907 	movx	@dptr,a
                     204C 10908 	C$easyax5043.c$1580$1$339 ==.
                          10909 ;	../COMMON/easyax5043.c:1580: AX5043_PLLLOOP = pllloop_save; // restore loop settings (works if they came from the common section, unimportant if the came from the rx / tx section)
   204C 90 40 30      [24]10910 	mov	dptr,#_AX5043_PLLLOOP
   204F EF            [12]10911 	mov	a,r7
   2050 F0            [24]10912 	movx	@dptr,a
                     2051 10913 	C$easyax5043.c$1581$1$339 ==.
                          10914 ;	../COMMON/easyax5043.c:1581: AX5043_PLLCPI = pllcpi_save;
   2051 90 40 31      [24]10915 	mov	dptr,#_AX5043_PLLCPI
   2054 EE            [12]10916 	mov	a,r6
   2055 F0            [24]10917 	movx	@dptr,a
                     2056 10918 	C$easyax5043.c$1583$1$339 ==.
                          10919 ;	../COMMON/easyax5043.c:1583: axradio_mode = AXRADIO_MODE_OFF;
   2056 75*00 01      [24]10920 	mov	_axradio_mode,#0x01
                     2059 10921 	C$easyax5043.c$1584$1$339 ==.
                          10922 ;	../COMMON/easyax5043.c:1584: for (i = 0; i < axradio_phy_nrchannels; ++i)
   2059 7F 00         [12]10923 	mov	r7,#0x00
   205B                   10924 00137$:
   205B 90r00r00      [24]10925 	mov	dptr,#_axradio_phy_nrchannels
   205E E4            [12]10926 	clr	a
   205F 93            [24]10927 	movc	a,@a+dptr
   2060 FE            [12]10928 	mov	r6,a
   2061 C3            [12]10929 	clr	c
   2062 EF            [12]10930 	mov	a,r7
   2063 9E            [12]10931 	subb	a,r6
   2064 50 24         [24]10932 	jnc	00125$
                     2066 10933 	C$easyax5043.c$1585$1$339 ==.
                          10934 ;	../COMMON/easyax5043.c:1585: if ((axradio_phy_chanpllrng_rx[i] | axradio_phy_chanpllrng_tx[i]) & 0x20)
   2066 EF            [12]10935 	mov	a,r7
   2067 24r00         [12]10936 	add	a,#_axradio_phy_chanpllrng_rx
   2069 F5 82         [12]10937 	mov	dpl,a
   206B E4            [12]10938 	clr	a
   206C 34s00         [12]10939 	addc	a,#(_axradio_phy_chanpllrng_rx >> 8)
   206E F5 83         [12]10940 	mov	dph,a
   2070 E0            [24]10941 	movx	a,@dptr
   2071 FE            [12]10942 	mov	r6,a
   2072 EF            [12]10943 	mov	a,r7
   2073 24r00         [12]10944 	add	a,#_axradio_phy_chanpllrng_tx
   2075 F5 82         [12]10945 	mov	dpl,a
   2077 E4            [12]10946 	clr	a
   2078 34s00         [12]10947 	addc	a,#(_axradio_phy_chanpllrng_tx >> 8)
   207A F5 83         [12]10948 	mov	dph,a
   207C E0            [24]10949 	movx	a,@dptr
   207D FD            [12]10950 	mov	r5,a
   207E 4E            [12]10951 	orl	a,r6
   207F 30 E5 05      [24]10952 	jnb	acc.5,00138$
                     2082 10953 	C$easyax5043.c$1586$1$339 ==.
                          10954 ;	../COMMON/easyax5043.c:1586: return AXRADIO_ERR_RANGING;
   2082 75 82 06      [24]10955 	mov	dpl,#0x06
   2085 80 06         [24]10956 	sjmp	00139$
   2087                   10957 00138$:
                     2087 10958 	C$easyax5043.c$1584$1$339 ==.
                          10959 ;	../COMMON/easyax5043.c:1584: for (i = 0; i < axradio_phy_nrchannels; ++i)
   2087 0F            [12]10960 	inc	r7
   2088 80 D1         [24]10961 	sjmp	00137$
   208A                   10962 00125$:
                     208A 10963 	C$easyax5043.c$1588$1$339 ==.
                          10964 ;	../COMMON/easyax5043.c:1588: return AXRADIO_ERR_NOERROR;
   208A 75 82 00      [24]10965 	mov	dpl,#0x00
   208D                   10966 00139$:
                     208D 10967 	C$easyax5043.c$1589$1$339 ==.
                     208D 10968 	XG$axradio_init$0$0 ==.
   208D 22            [24]10969 	ret
                          10970 ;------------------------------------------------------------
                          10971 ;Allocation info for local variables in function 'axradio_cansleep'
                          10972 ;------------------------------------------------------------
                     208E 10973 	G$axradio_cansleep$0$0 ==.
                     208E 10974 	C$easyax5043.c$1591$1$339 ==.
                          10975 ;	../COMMON/easyax5043.c:1591: __reentrantb uint8_t axradio_cansleep(void) __reentrant
                          10976 ;	-----------------------------------------
                          10977 ;	 function axradio_cansleep
                          10978 ;	-----------------------------------------
   208E                   10979 _axradio_cansleep:
                     208E 10980 	C$easyax5043.c$1593$1$354 ==.
                          10981 ;	../COMMON/easyax5043.c:1593: if (axradio_trxstate == trxstate_off || axradio_trxstate == trxstate_rxwor)
   208E E5*01         [12]10982 	mov	a,_axradio_trxstate
   2090 60 05         [24]10983 	jz	00101$
   2092 74 02         [12]10984 	mov	a,#0x02
   2094 B5*01 05      [24]10985 	cjne	a,_axradio_trxstate,00102$
   2097                   10986 00101$:
                     2097 10987 	C$easyax5043.c$1594$1$354 ==.
                          10988 ;	../COMMON/easyax5043.c:1594: return 1;
   2097 75 82 01      [24]10989 	mov	dpl,#0x01
   209A 80 03         [24]10990 	sjmp	00104$
   209C                   10991 00102$:
                     209C 10992 	C$easyax5043.c$1595$1$354 ==.
                          10993 ;	../COMMON/easyax5043.c:1595: return 0;
   209C 75 82 00      [24]10994 	mov	dpl,#0x00
   209F                   10995 00104$:
                     209F 10996 	C$easyax5043.c$1596$1$354 ==.
                     209F 10997 	XG$axradio_cansleep$0$0 ==.
   209F 22            [24]10998 	ret
                          10999 ;------------------------------------------------------------
                          11000 ;Allocation info for local variables in function 'wtimer_cansleep_dummy'
                          11001 ;------------------------------------------------------------
                     20A0 11002 	Feasyax5043$wtimer_cansleep_dummy$0$0 ==.
                     20A0 11003 	C$easyax5043.c$1599$1$354 ==.
                          11004 ;	../COMMON/easyax5043.c:1599: static void wtimer_cansleep_dummy(void) __naked
                          11005 ;	-----------------------------------------
                          11006 ;	 function wtimer_cansleep_dummy
                          11007 ;	-----------------------------------------
   20A0                   11008 _wtimer_cansleep_dummy:
                          11009 ;	naked function: no prologue.
                     20A0 11010 	C$easyax5043.c$1613$1$356 ==.
                          11011 ;	../COMMON/easyax5043.c:1613: __endasm;
                          11012 	.area WTCANSLP0 (CODE)
                          11013 	.area WTCANSLP1 (CODE)
                          11014 	.area WTCANSLP2 (CODE)
                          11015 	.area WTCANSLP1 (CODE)
   0000 12r20r8E      [24]11016 	lcall _axradio_cansleep
   0003 E5 82         [12]11017 	mov a,dpl
   0005 70 01         [24]11018 	jnz 00000$
   0007 22            [24]11019 	ret
   0008                   11020 	00000$:
                          11021 	.area CSEG (CODE)
                          11022 ;	naked function: no epilogue.
                     20A0 11023 	C$easyax5043.c$1614$1$356 ==.
                     20A0 11024 	XFeasyax5043$wtimer_cansleep_dummy$0$0 ==.
                          11025 ;------------------------------------------------------------
                          11026 ;Allocation info for local variables in function 'axradio_set_mode'
                          11027 ;------------------------------------------------------------
                          11028 ;mode                      Allocated to registers r7 
                          11029 ;r                         Allocated to registers r6 
                          11030 ;r                         Allocated to registers r6 
                          11031 ;iesave                    Allocated to registers r6 
                          11032 ;------------------------------------------------------------
                     20A0 11033 	G$axradio_set_mode$0$0 ==.
                     20A0 11034 	C$easyax5043.c$1617$1$356 ==.
                          11035 ;	../COMMON/easyax5043.c:1617: uint8_t axradio_set_mode(uint8_t mode)
                          11036 ;	-----------------------------------------
                          11037 ;	 function axradio_set_mode
                          11038 ;	-----------------------------------------
   20A0                   11039 _axradio_set_mode:
                     20A0 11040 	C$easyax5043.c$1619$1$358 ==.
                          11041 ;	../COMMON/easyax5043.c:1619: if (mode == axradio_mode)
   20A0 E5 82         [12]11042 	mov	a,dpl
   20A2 FF            [12]11043 	mov	r7,a
   20A3 B5*00 06      [24]11044 	cjne	a,_axradio_mode,00102$
                     20A6 11045 	C$easyax5043.c$1620$1$358 ==.
                          11046 ;	../COMMON/easyax5043.c:1620: return AXRADIO_ERR_NOERROR;
   20A6 75 82 00      [24]11047 	mov	dpl,#0x00
   20A9 02r24r8E      [24]11048 	ljmp	00161$
   20AC                   11049 00102$:
                     20AC 11050 	C$easyax5043.c$1621$1$358 ==.
                          11051 ;	../COMMON/easyax5043.c:1621: switch (axradio_mode) {
   20AC AE*00         [24]11052 	mov	r6,_axradio_mode
   20AE BE 00 02      [24]11053 	cjne	r6,#0x00,00237$
   20B1 80 2E         [24]11054 	sjmp	00103$
   20B3                   11055 00237$:
   20B3 BE 02 02      [24]11056 	cjne	r6,#0x02,00238$
   20B6 80 3D         [24]11057 	sjmp	00106$
   20B8                   11058 00238$:
   20B8 BE 03 02      [24]11059 	cjne	r6,#0x03,00239$
   20BB 80 6C         [24]11060 	sjmp	00114$
   20BD                   11061 00239$:
   20BD BE 14 02      [24]11062 	cjne	r6,#0x14,00240$
   20C0 80 67         [24]11063 	sjmp	00114$
   20C2                   11064 00240$:
   20C2 BE 15 02      [24]11065 	cjne	r6,#0x15,00241$
   20C5 80 62         [24]11066 	sjmp	00114$
   20C7                   11067 00241$:
   20C7 BE 16 02      [24]11068 	cjne	r6,#0x16,00242$
   20CA 80 5D         [24]11069 	sjmp	00114$
   20CC                   11070 00242$:
   20CC BE 1C 03      [24]11071 	cjne	r6,#0x1C,00243$
   20CF 02r21r82      [24]11072 	ljmp	00119$
   20D2                   11073 00243$:
   20D2 BE 1D 03      [24]11074 	cjne	r6,#0x1D,00244$
   20D5 02r21r82      [24]11075 	ljmp	00119$
   20D8                   11076 00244$:
   20D8 BE 1E 03      [24]11077 	cjne	r6,#0x1E,00245$
   20DB 02r21r82      [24]11078 	ljmp	00119$
   20DE                   11079 00245$:
   20DE 02r21r8F      [24]11080 	ljmp	00120$
                     20E1 11081 	C$easyax5043.c$1622$2$359 ==.
                          11082 ;	../COMMON/easyax5043.c:1622: case AXRADIO_MODE_UNINIT:
   20E1                   11083 00103$:
                     20E1 11084 	C$easyax5043.c$1624$3$360 ==.
                          11085 ;	../COMMON/easyax5043.c:1624: uint8_t __autodata r = axradio_init();
   20E1 C0 07         [24]11086 	push	ar7
   20E3 12r1Dr9E      [24]11087 	lcall	_axradio_init
   20E6 AE 82         [24]11088 	mov	r6,dpl
   20E8 D0 07         [24]11089 	pop	ar7
                     20EA 11090 	C$easyax5043.c$1625$3$360 ==.
                          11091 ;	../COMMON/easyax5043.c:1625: if (r != AXRADIO_ERR_NOERROR)
   20EA EE            [12]11092 	mov	a,r6
   20EB 70 03         [24]11093 	jnz	00246$
   20ED 02r21r99      [24]11094 	ljmp	00121$
   20F0                   11095 00246$:
                     20F0 11096 	C$easyax5043.c$1626$3$360 ==.
                          11097 ;	../COMMON/easyax5043.c:1626: return r;
   20F0 8E 82         [24]11098 	mov	dpl,r6
   20F2 02r24r8E      [24]11099 	ljmp	00161$
                     20F5 11100 	C$easyax5043.c$1630$2$359 ==.
                          11101 ;	../COMMON/easyax5043.c:1630: case AXRADIO_MODE_DEEPSLEEP:
   20F5                   11102 00106$:
                     20F5 11103 	C$easyax5043.c$1632$3$361 ==.
                          11104 ;	../COMMON/easyax5043.c:1632: uint8_t __autodata r = ax5043_wakeup_deepsleep();
   20F5 C0 07         [24]11105 	push	ar7
   20F7 12r00r00      [24]11106 	lcall	_ax5043_wakeup_deepsleep
   20FA AE 82         [24]11107 	mov	r6,dpl
   20FC D0 07         [24]11108 	pop	ar7
                     20FE 11109 	C$easyax5043.c$1633$3$361 ==.
                          11110 ;	../COMMON/easyax5043.c:1633: if (r)
   20FE EE            [12]11111 	mov	a,r6
   20FF 60 06         [24]11112 	jz	00108$
                     2101 11113 	C$easyax5043.c$1634$3$361 ==.
                          11114 ;	../COMMON/easyax5043.c:1634: return AXRADIO_ERR_NOCHIP;
   2101 75 82 05      [24]11115 	mov	dpl,#0x05
   2104 02r24r8E      [24]11116 	ljmp	00161$
   2107                   11117 00108$:
                     2107 11118 	C$easyax5043.c$1635$3$361 ==.
                          11119 ;	../COMMON/easyax5043.c:1635: ax5043_init_registers();
   2107 C0 07         [24]11120 	push	ar7
   2109 12r0DrC6      [24]11121 	lcall	_ax5043_init_registers
                     210C 11122 	C$easyax5043.c$1636$3$361 ==.
                          11123 ;	../COMMON/easyax5043.c:1636: r = axradio_set_channel(axradio_curchannel);
   210C 90r00r05      [24]11124 	mov	dptr,#_axradio_curchannel
   210F E0            [24]11125 	movx	a,@dptr
   2110 F5 82         [12]11126 	mov	dpl,a
   2112 12r24r93      [24]11127 	lcall	_axradio_set_channel
   2115 AE 82         [24]11128 	mov	r6,dpl
   2117 D0 07         [24]11129 	pop	ar7
                     2119 11130 	C$easyax5043.c$1637$3$361 ==.
                          11131 ;	../COMMON/easyax5043.c:1637: if (r != AXRADIO_ERR_NOERROR)
   2119 EE            [12]11132 	mov	a,r6
   211A 60 05         [24]11133 	jz	00110$
                     211C 11134 	C$easyax5043.c$1638$3$361 ==.
                          11135 ;	../COMMON/easyax5043.c:1638: return r;
   211C 8E 82         [24]11136 	mov	dpl,r6
   211E 02r24r8E      [24]11137 	ljmp	00161$
   2121                   11138 00110$:
                     2121 11139 	C$easyax5043.c$1639$3$361 ==.
                          11140 ;	../COMMON/easyax5043.c:1639: axradio_trxstate = trxstate_off;
   2121 75*01 00      [24]11141 	mov	_axradio_trxstate,#0x00
                     2124 11142 	C$easyax5043.c$1640$3$361 ==.
                          11143 ;	../COMMON/easyax5043.c:1640: axradio_mode = AXRADIO_MODE_OFF;
   2124 75*00 01      [24]11144 	mov	_axradio_mode,#0x01
                     2127 11145 	C$easyax5043.c$1641$3$361 ==.
                          11146 ;	../COMMON/easyax5043.c:1641: break;
                     2127 11147 	C$easyax5043.c$1647$2$359 ==.
                          11148 ;	../COMMON/easyax5043.c:1647: case AXRADIO_MODE_CW_TRANSMIT:
   2127 80 70         [24]11149 	sjmp	00121$
   2129                   11150 00114$:
                     2129 11151 	C$easyax5043.c$1649$3$362 ==.
                          11152 ;	../COMMON/easyax5043.c:1649: uint8_t __autodata iesave = IE & 0x80;
   2129 74 80         [12]11153 	mov	a,#0x80
   212B 55 A8         [12]11154 	anl	a,_IE
   212D FE            [12]11155 	mov	r6,a
                     212E 11156 	C$easyax5043.c$1650$3$362 ==.
                          11157 ;	../COMMON/easyax5043.c:1650: EA = 0;
   212E C2 AF         [12]11158 	clr	_EA
                     2130 11159 	C$easyax5043.c$1651$3$362 ==.
                          11160 ;	../COMMON/easyax5043.c:1651: if (axradio_trxstate == trxstate_off) {
   2130 E5*01         [12]11161 	mov	a,_axradio_trxstate
   2132 70 38         [24]11162 	jnz	00116$
                     2134 11163 	C$easyax5043.c$1652$4$363 ==.
                          11164 ;	../COMMON/easyax5043.c:1652: update_timeanchor();
   2134 C0 07         [24]11165 	push	ar7
   2136 C0 06         [24]11166 	push	ar6
   2138 12r00r00      [24]11167 	lcall	_update_timeanchor
                     213B 11168 	C$easyax5043.c$1653$4$363 ==.
                          11169 ;	../COMMON/easyax5043.c:1653: wtimer_remove_callback(&axradio_cb_transmitend.cb);
   213B 90r02r71      [24]11170 	mov	dptr,#_axradio_cb_transmitend
   213E 12r00r00      [24]11171 	lcall	_wtimer_remove_callback
                     2141 11172 	C$easyax5043.c$1654$4$363 ==.
                          11173 ;	../COMMON/easyax5043.c:1654: axradio_cb_transmitend.st.error = AXRADIO_ERR_NOERROR;
   2141 90r02r76      [24]11174 	mov	dptr,#(_axradio_cb_transmitend + 0x0005)
   2144 E4            [12]11175 	clr	a
   2145 F0            [24]11176 	movx	@dptr,a
                     2146 11177 	C$easyax5043.c$1655$4$363 ==.
                          11178 ;	../COMMON/easyax5043.c:1655: axradio_cb_transmitend.st.time.t = axradio_timeanchor.radiotimer;
   2146 90r00r16      [24]11179 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   2149 E0            [24]11180 	movx	a,@dptr
   214A FA            [12]11181 	mov	r2,a
   214B A3            [24]11182 	inc	dptr
   214C E0            [24]11183 	movx	a,@dptr
   214D FB            [12]11184 	mov	r3,a
   214E A3            [24]11185 	inc	dptr
   214F E0            [24]11186 	movx	a,@dptr
   2150 FC            [12]11187 	mov	r4,a
   2151 A3            [24]11188 	inc	dptr
   2152 E0            [24]11189 	movx	a,@dptr
   2153 FD            [12]11190 	mov	r5,a
   2154 90r02r77      [24]11191 	mov	dptr,#(_axradio_cb_transmitend + 0x0006)
   2157 EA            [12]11192 	mov	a,r2
   2158 F0            [24]11193 	movx	@dptr,a
   2159 EB            [12]11194 	mov	a,r3
   215A A3            [24]11195 	inc	dptr
   215B F0            [24]11196 	movx	@dptr,a
   215C EC            [12]11197 	mov	a,r4
   215D A3            [24]11198 	inc	dptr
   215E F0            [24]11199 	movx	@dptr,a
   215F ED            [12]11200 	mov	a,r5
   2160 A3            [24]11201 	inc	dptr
   2161 F0            [24]11202 	movx	@dptr,a
                     2162 11203 	C$easyax5043.c$1656$4$363 ==.
                          11204 ;	../COMMON/easyax5043.c:1656: wtimer_add_callback(&axradio_cb_transmitend.cb);
   2162 90r02r71      [24]11205 	mov	dptr,#_axradio_cb_transmitend
   2165 12r00r00      [24]11206 	lcall	_wtimer_add_callback
   2168 D0 06         [24]11207 	pop	ar6
   216A D0 07         [24]11208 	pop	ar7
   216C                   11209 00116$:
                     216C 11210 	C$easyax5043.c$1658$3$362 ==.
                          11211 ;	../COMMON/easyax5043.c:1658: ax5043_off();
   216C C0 07         [24]11212 	push	ar7
   216E C0 06         [24]11213 	push	ar6
   2170 12r0Cr4A      [24]11214 	lcall	_ax5043_off
   2173 D0 06         [24]11215 	pop	ar6
                     2175 11216 	C$easyax5043.c$1659$3$362 ==.
                          11217 ;	../COMMON/easyax5043.c:1659: IE |= iesave;
   2175 EE            [12]11218 	mov	a,r6
   2176 42 A8         [12]11219 	orl	_IE,a
                     2178 11220 	C$easyax5043.c$1661$3$362 ==.
                          11221 ;	../COMMON/easyax5043.c:1661: ax5043_init_registers();
   2178 12r0DrC6      [24]11222 	lcall	_ax5043_init_registers
   217B D0 07         [24]11223 	pop	ar7
                     217D 11224 	C$easyax5043.c$1662$3$362 ==.
                          11225 ;	../COMMON/easyax5043.c:1662: axradio_mode = AXRADIO_MODE_OFF;
   217D 75*00 01      [24]11226 	mov	_axradio_mode,#0x01
                     2180 11227 	C$easyax5043.c$1663$3$362 ==.
                          11228 ;	../COMMON/easyax5043.c:1663: break;
                     2180 11229 	C$easyax5043.c$1668$2$359 ==.
                          11230 ;	../COMMON/easyax5043.c:1668: case AXRADIO_MODE_STREAM_RECEIVE_SCRAM:
   2180 80 17         [24]11231 	sjmp	00121$
   2182                   11232 00119$:
                     2182 11233 	C$easyax5043.c$1669$2$359 ==.
                          11234 ;	../COMMON/easyax5043.c:1669: ax5043_off();
   2182 C0 07         [24]11235 	push	ar7
   2184 12r0Cr4A      [24]11236 	lcall	_ax5043_off
                     2187 11237 	C$easyax5043.c$1670$2$359 ==.
                          11238 ;	../COMMON/easyax5043.c:1670: ax5043_init_registers();
   2187 12r0DrC6      [24]11239 	lcall	_ax5043_init_registers
   218A D0 07         [24]11240 	pop	ar7
                     218C 11241 	C$easyax5043.c$1671$2$359 ==.
                          11242 ;	../COMMON/easyax5043.c:1671: axradio_mode = AXRADIO_MODE_OFF;
   218C 75*00 01      [24]11243 	mov	_axradio_mode,#0x01
                     218F 11244 	C$easyax5043.c$1673$2$359 ==.
                          11245 ;	../COMMON/easyax5043.c:1673: default:
   218F                   11246 00120$:
                     218F 11247 	C$easyax5043.c$1674$2$359 ==.
                          11248 ;	../COMMON/easyax5043.c:1674: ax5043_off();
   218F C0 07         [24]11249 	push	ar7
   2191 12r0Cr4A      [24]11250 	lcall	_ax5043_off
   2194 D0 07         [24]11251 	pop	ar7
                     2196 11252 	C$easyax5043.c$1675$2$359 ==.
                          11253 ;	../COMMON/easyax5043.c:1675: axradio_mode = AXRADIO_MODE_OFF;
   2196 75*00 01      [24]11254 	mov	_axradio_mode,#0x01
                     2199 11255 	C$easyax5043.c$1677$1$358 ==.
                          11256 ;	../COMMON/easyax5043.c:1677: }
   2199                   11257 00121$:
                     2199 11258 	C$easyax5043.c$1678$1$358 ==.
                          11259 ;	../COMMON/easyax5043.c:1678: axradio_killallcb();
   2199 C0 07         [24]11260 	push	ar7
   219B 12r1Dr73      [24]11261 	lcall	_axradio_killallcb
   219E D0 07         [24]11262 	pop	ar7
                     21A0 11263 	C$easyax5043.c$1679$1$358 ==.
                          11264 ;	../COMMON/easyax5043.c:1679: if (mode == AXRADIO_MODE_UNINIT)
   21A0 EF            [12]11265 	mov	a,r7
   21A1 70 06         [24]11266 	jnz	00123$
                     21A3 11267 	C$easyax5043.c$1680$1$358 ==.
                          11268 ;	../COMMON/easyax5043.c:1680: return AXRADIO_ERR_NOTSUPPORTED;
   21A3 75 82 01      [24]11269 	mov	dpl,#0x01
   21A6 02r24r8E      [24]11270 	ljmp	00161$
   21A9                   11271 00123$:
                     21A9 11272 	C$easyax5043.c$1681$1$358 ==.
                          11273 ;	../COMMON/easyax5043.c:1681: axradio_syncstate = syncstate_off;
   21A9 90r00r00      [24]11274 	mov	dptr,#_axradio_syncstate
   21AC E4            [12]11275 	clr	a
   21AD F0            [24]11276 	movx	@dptr,a
                     21AE 11277 	C$easyax5043.c$1682$1$358 ==.
                          11278 ;	../COMMON/easyax5043.c:1682: switch (mode) {
   21AE EF            [12]11279 	mov	a,r7
   21AF 24 DC         [12]11280 	add	a,#0xff - 0x23
   21B1 50 03         [24]11281 	jnc	00251$
   21B3 02r24r8B      [24]11282 	ljmp	00159$
   21B6                   11283 00251$:
   21B6 EF            [12]11284 	mov	a,r7
   21B7 24 0A         [12]11285 	add	a,#(00252$-3-.)
   21B9 83            [24]11286 	movc	a,@a+pc
   21BA F5 82         [12]11287 	mov	dpl,a
   21BC EF            [12]11288 	mov	a,r7
   21BD 24 28         [12]11289 	add	a,#(00253$-3-.)
   21BF 83            [24]11290 	movc	a,@a+pc
   21C0 F5 83         [12]11291 	mov	dph,a
   21C2 E4            [12]11292 	clr	a
   21C3 73            [24]11293 	jmp	@a+dptr
   21C4                   11294 00252$:
   21C4r8B                11295 	.db	00159$
   21C5r0C                11296 	.db	00124$
   21C6r12                11297 	.db	00125$
   21C7r49                11298 	.db	00154$
   21C8r8B                11299 	.db	00159$
   21C9r8B                11300 	.db	00159$
   21CAr8B                11301 	.db	00159$
   21CBr8B                11302 	.db	00159$
   21CCr8B                11303 	.db	00159$
   21CDr8B                11304 	.db	00159$
   21CEr8B                11305 	.db	00159$
   21CFr8B                11306 	.db	00159$
   21D0r8B                11307 	.db	00159$
   21D1r8B                11308 	.db	00159$
   21D2r8B                11309 	.db	00159$
   21D3r8B                11310 	.db	00159$
   21D4r1E                11311 	.db	00126$
   21D5r33                11312 	.db	00128$
   21D6r1E                11313 	.db	00127$
   21D7r33                11314 	.db	00129$
   21D8rA8                11315 	.db	00137$
   21D9rA8                11316 	.db	00138$
   21DArA8                11317 	.db	00139$
   21DBr8B                11318 	.db	00159$
   21DCr48                11319 	.db	00130$
   21DDr90                11320 	.db	00135$
   21DEr48                11321 	.db	00131$
   21DFr90                11322 	.db	00136$
   21E0r15                11323 	.db	00147$
   21E1r15                11324 	.db	00148$
   21E2r15                11325 	.db	00149$
   21E3r8B                11326 	.db	00159$
   21E4r91                11327 	.db	00155$
   21E5r91                11328 	.db	00156$
   21E6rF0                11329 	.db	00157$
   21E7rF0                11330 	.db	00158$
   21E8                   11331 00253$:
   21E8s24                11332 	.db	00159$>>8
   21E9s22                11333 	.db	00124$>>8
   21EAs22                11334 	.db	00125$>>8
   21EBs23                11335 	.db	00154$>>8
   21ECs24                11336 	.db	00159$>>8
   21EDs24                11337 	.db	00159$>>8
   21EEs24                11338 	.db	00159$>>8
   21EFs24                11339 	.db	00159$>>8
   21F0s24                11340 	.db	00159$>>8
   21F1s24                11341 	.db	00159$>>8
   21F2s24                11342 	.db	00159$>>8
   21F3s24                11343 	.db	00159$>>8
   21F4s24                11344 	.db	00159$>>8
   21F5s24                11345 	.db	00159$>>8
   21F6s24                11346 	.db	00159$>>8
   21F7s24                11347 	.db	00159$>>8
   21F8s22                11348 	.db	00126$>>8
   21F9s22                11349 	.db	00128$>>8
   21FAs22                11350 	.db	00127$>>8
   21FBs22                11351 	.db	00129$>>8
   21FCs22                11352 	.db	00137$>>8
   21FDs22                11353 	.db	00138$>>8
   21FEs22                11354 	.db	00139$>>8
   21FFs24                11355 	.db	00159$>>8
   2200s22                11356 	.db	00130$>>8
   2201s22                11357 	.db	00135$>>8
   2202s22                11358 	.db	00131$>>8
   2203s22                11359 	.db	00136$>>8
   2204s23                11360 	.db	00147$>>8
   2205s23                11361 	.db	00148$>>8
   2206s23                11362 	.db	00149$>>8
   2207s24                11363 	.db	00159$>>8
   2208s23                11364 	.db	00155$>>8
   2209s23                11365 	.db	00156$>>8
   220As23                11366 	.db	00157$>>8
   220Bs23                11367 	.db	00158$>>8
                     220C 11368 	C$easyax5043.c$1683$2$364 ==.
                          11369 ;	../COMMON/easyax5043.c:1683: case AXRADIO_MODE_OFF:
   220C                   11370 00124$:
                     220C 11371 	C$easyax5043.c$1684$2$364 ==.
                          11372 ;	../COMMON/easyax5043.c:1684: return AXRADIO_ERR_NOERROR;
   220C 75 82 00      [24]11373 	mov	dpl,#0x00
   220F 02r24r8E      [24]11374 	ljmp	00161$
                     2212 11375 	C$easyax5043.c$1686$2$364 ==.
                          11376 ;	../COMMON/easyax5043.c:1686: case AXRADIO_MODE_DEEPSLEEP:
   2212                   11377 00125$:
                     2212 11378 	C$easyax5043.c$1687$2$364 ==.
                          11379 ;	../COMMON/easyax5043.c:1687: ax5043_enter_deepsleep();
   2212 12r00r00      [24]11380 	lcall	_ax5043_enter_deepsleep
                     2215 11381 	C$easyax5043.c$1688$2$364 ==.
                          11382 ;	../COMMON/easyax5043.c:1688: axradio_mode = AXRADIO_MODE_DEEPSLEEP;
   2215 75*00 02      [24]11383 	mov	_axradio_mode,#0x02
                     2218 11384 	C$easyax5043.c$1689$2$364 ==.
                          11385 ;	../COMMON/easyax5043.c:1689: return AXRADIO_ERR_NOERROR;
   2218 75 82 00      [24]11386 	mov	dpl,#0x00
   221B 02r24r8E      [24]11387 	ljmp	00161$
                     221E 11388 	C$easyax5043.c$1691$2$364 ==.
                          11389 ;	../COMMON/easyax5043.c:1691: case AXRADIO_MODE_ASYNC_TRANSMIT:
   221E                   11390 00126$:
                     221E 11391 	C$easyax5043.c$1692$2$364 ==.
                          11392 ;	../COMMON/easyax5043.c:1692: case AXRADIO_MODE_ACK_TRANSMIT:
   221E                   11393 00127$:
                     221E 11394 	C$easyax5043.c$1693$2$364 ==.
                          11395 ;	../COMMON/easyax5043.c:1693: ax5043_init_registers_tx();
   221E C0 07         [24]11396 	push	ar7
   2220 12r00r96      [24]11397 	lcall	_ax5043_init_registers_tx
   2223 D0 07         [24]11398 	pop	ar7
                     2225 11399 	C$easyax5043.c$1694$2$364 ==.
                          11400 ;	../COMMON/easyax5043.c:1694: axradio_ack_seqnr = 0xff;
   2225 90r00r0B      [24]11401 	mov	dptr,#_axradio_ack_seqnr
   2228 74 FF         [12]11402 	mov	a,#0xFF
   222A F0            [24]11403 	movx	@dptr,a
                     222B 11404 	C$easyax5043.c$1695$2$364 ==.
                          11405 ;	../COMMON/easyax5043.c:1695: axradio_mode = mode;
   222B 8F*00         [24]11406 	mov	_axradio_mode,r7
                     222D 11407 	C$easyax5043.c$1696$2$364 ==.
                          11408 ;	../COMMON/easyax5043.c:1696: return AXRADIO_ERR_NOERROR;
   222D 75 82 00      [24]11409 	mov	dpl,#0x00
   2230 02r24r8E      [24]11410 	ljmp	00161$
                     2233 11411 	C$easyax5043.c$1698$2$364 ==.
                          11412 ;	../COMMON/easyax5043.c:1698: case AXRADIO_MODE_WOR_TRANSMIT:
   2233                   11413 00128$:
                     2233 11414 	C$easyax5043.c$1699$2$364 ==.
                          11415 ;	../COMMON/easyax5043.c:1699: case AXRADIO_MODE_WOR_ACK_TRANSMIT:
   2233                   11416 00129$:
                     2233 11417 	C$easyax5043.c$1700$2$364 ==.
                          11418 ;	../COMMON/easyax5043.c:1700: ax5043_init_registers_tx();
   2233 C0 07         [24]11419 	push	ar7
   2235 12r00r96      [24]11420 	lcall	_ax5043_init_registers_tx
   2238 D0 07         [24]11421 	pop	ar7
                     223A 11422 	C$easyax5043.c$1701$2$364 ==.
                          11423 ;	../COMMON/easyax5043.c:1701: axradio_ack_seqnr = 0xff;
   223A 90r00r0B      [24]11424 	mov	dptr,#_axradio_ack_seqnr
   223D 74 FF         [12]11425 	mov	a,#0xFF
   223F F0            [24]11426 	movx	@dptr,a
                     2240 11427 	C$easyax5043.c$1702$2$364 ==.
                          11428 ;	../COMMON/easyax5043.c:1702: axradio_mode = mode;
   2240 8F*00         [24]11429 	mov	_axradio_mode,r7
                     2242 11430 	C$easyax5043.c$1703$2$364 ==.
                          11431 ;	../COMMON/easyax5043.c:1703: return AXRADIO_ERR_NOERROR;
   2242 75 82 00      [24]11432 	mov	dpl,#0x00
   2245 02r24r8E      [24]11433 	ljmp	00161$
                     2248 11434 	C$easyax5043.c$1705$2$364 ==.
                          11435 ;	../COMMON/easyax5043.c:1705: case AXRADIO_MODE_ASYNC_RECEIVE:
   2248                   11436 00130$:
                     2248 11437 	C$easyax5043.c$1706$2$364 ==.
                          11438 ;	../COMMON/easyax5043.c:1706: case AXRADIO_MODE_ACK_RECEIVE:
   2248                   11439 00131$:
                     2248 11440 	C$easyax5043.c$1707$2$364 ==.
                          11441 ;	../COMMON/easyax5043.c:1707: ax5043_init_registers_rx();
   2248 C0 07         [24]11442 	push	ar7
   224A 12r00rCC      [24]11443 	lcall	_ax5043_init_registers_rx
                     224D 11444 	C$easyax5043.c$1708$2$364 ==.
                          11445 ;	../COMMON/easyax5043.c:1708: ax5043_receiver_on_continuous();
   224D 12r0Br05      [24]11446 	lcall	_ax5043_receiver_on_continuous
   2250 D0 07         [24]11447 	pop	ar7
                     2252 11448 	C$easyax5043.c$1709$2$364 ==.
                          11449 ;	../COMMON/easyax5043.c:1709: axradio_ack_seqnr = 0xff;
   2252 90r00r0B      [24]11450 	mov	dptr,#_axradio_ack_seqnr
   2255 74 FF         [12]11451 	mov	a,#0xFF
   2257 F0            [24]11452 	movx	@dptr,a
                     2258 11453 	C$easyax5043.c$1710$2$364 ==.
                          11454 ;	../COMMON/easyax5043.c:1710: axradio_mode = mode;
   2258 8F*00         [24]11455 	mov	_axradio_mode,r7
                     225A 11456 	C$easyax5043.c$1711$2$364 ==.
                          11457 ;	../COMMON/easyax5043.c:1711: enablecs:
   225A                   11458 00132$:
                     225A 11459 	C$easyax5043.c$1712$2$364 ==.
                          11460 ;	../COMMON/easyax5043.c:1712: if (axradio_phy_cs_enabled) {
   225A 90r00r00      [24]11461 	mov	dptr,#_axradio_phy_cs_enabled
   225D E4            [12]11462 	clr	a
   225E 93            [24]11463 	movc	a,@a+dptr
   225F FE            [12]11464 	mov	r6,a
   2260 60 28         [24]11465 	jz	00134$
                     2262 11466 	C$easyax5043.c$1713$3$365 ==.
                          11467 ;	../COMMON/easyax5043.c:1713: wtimer_remove(&axradio_timer);
   2262 90r02r85      [24]11468 	mov	dptr,#_axradio_timer
   2265 12r00r00      [24]11469 	lcall	_wtimer_remove
                     2268 11470 	C$easyax5043.c$1714$3$365 ==.
                          11471 ;	../COMMON/easyax5043.c:1714: axradio_timer.time = axradio_phy_cs_period;
   2268 90r00r00      [24]11472 	mov	dptr,#_axradio_phy_cs_period
   226B E4            [12]11473 	clr	a
   226C 93            [24]11474 	movc	a,@a+dptr
   226D FD            [12]11475 	mov	r5,a
   226E 74 01         [12]11476 	mov	a,#0x01
   2270 93            [24]11477 	movc	a,@a+dptr
   2271 FE            [12]11478 	mov	r6,a
   2272 7C 00         [12]11479 	mov	r4,#0x00
   2274 7B 00         [12]11480 	mov	r3,#0x00
   2276 90r02r89      [24]11481 	mov	dptr,#(_axradio_timer + 0x0004)
   2279 ED            [12]11482 	mov	a,r5
   227A F0            [24]11483 	movx	@dptr,a
   227B EE            [12]11484 	mov	a,r6
   227C A3            [24]11485 	inc	dptr
   227D F0            [24]11486 	movx	@dptr,a
   227E EC            [12]11487 	mov	a,r4
   227F A3            [24]11488 	inc	dptr
   2280 F0            [24]11489 	movx	@dptr,a
   2281 EB            [12]11490 	mov	a,r3
   2282 A3            [24]11491 	inc	dptr
   2283 F0            [24]11492 	movx	@dptr,a
                     2284 11493 	C$easyax5043.c$1715$3$365 ==.
                          11494 ;	../COMMON/easyax5043.c:1715: wtimer0_addrelative(&axradio_timer);
   2284 90r02r85      [24]11495 	mov	dptr,#_axradio_timer
   2287 12r00r00      [24]11496 	lcall	_wtimer0_addrelative
   228A                   11497 00134$:
                     228A 11498 	C$easyax5043.c$1717$2$364 ==.
                          11499 ;	../COMMON/easyax5043.c:1717: return AXRADIO_ERR_NOERROR;
   228A 75 82 00      [24]11500 	mov	dpl,#0x00
   228D 02r24r8E      [24]11501 	ljmp	00161$
                     2290 11502 	C$easyax5043.c$1719$2$364 ==.
                          11503 ;	../COMMON/easyax5043.c:1719: case AXRADIO_MODE_WOR_RECEIVE:
   2290                   11504 00135$:
                     2290 11505 	C$easyax5043.c$1720$2$364 ==.
                          11506 ;	../COMMON/easyax5043.c:1720: case AXRADIO_MODE_WOR_ACK_RECEIVE:
   2290                   11507 00136$:
                     2290 11508 	C$easyax5043.c$1721$2$364 ==.
                          11509 ;	../COMMON/easyax5043.c:1721: ax5043_init_registers_rx();
   2290 C0 07         [24]11510 	push	ar7
   2292 12r00rCC      [24]11511 	lcall	_ax5043_init_registers_rx
                     2295 11512 	C$easyax5043.c$1722$2$364 ==.
                          11513 ;	../COMMON/easyax5043.c:1722: ax5043_receiver_on_wor();
   2295 12r0Br9F      [24]11514 	lcall	_ax5043_receiver_on_wor
   2298 D0 07         [24]11515 	pop	ar7
                     229A 11516 	C$easyax5043.c$1723$2$364 ==.
                          11517 ;	../COMMON/easyax5043.c:1723: axradio_ack_seqnr = 0xff;
   229A 90r00r0B      [24]11518 	mov	dptr,#_axradio_ack_seqnr
   229D 74 FF         [12]11519 	mov	a,#0xFF
   229F F0            [24]11520 	movx	@dptr,a
                     22A0 11521 	C$easyax5043.c$1724$2$364 ==.
                          11522 ;	../COMMON/easyax5043.c:1724: axradio_mode = mode;
   22A0 8F*00         [24]11523 	mov	_axradio_mode,r7
                     22A2 11524 	C$easyax5043.c$1725$2$364 ==.
                          11525 ;	../COMMON/easyax5043.c:1725: return AXRADIO_ERR_NOERROR;
   22A2 75 82 00      [24]11526 	mov	dpl,#0x00
   22A5 02r24r8E      [24]11527 	ljmp	00161$
                     22A8 11528 	C$easyax5043.c$1727$2$364 ==.
                          11529 ;	../COMMON/easyax5043.c:1727: case AXRADIO_MODE_STREAM_TRANSMIT:
   22A8                   11530 00137$:
                     22A8 11531 	C$easyax5043.c$1728$2$364 ==.
                          11532 ;	../COMMON/easyax5043.c:1728: case AXRADIO_MODE_STREAM_TRANSMIT_UNENC:
   22A8                   11533 00138$:
                     22A8 11534 	C$easyax5043.c$1729$2$364 ==.
                          11535 ;	../COMMON/easyax5043.c:1729: case AXRADIO_MODE_STREAM_TRANSMIT_SCRAM:
   22A8                   11536 00139$:
                     22A8 11537 	C$easyax5043.c$1730$2$364 ==.
                          11538 ;	../COMMON/easyax5043.c:1730: axradio_mode = mode;
   22A8 8F*00         [24]11539 	mov	_axradio_mode,r7
                     22AA 11540 	C$easyax5043.c$1731$2$364 ==.
                          11541 ;	../COMMON/easyax5043.c:1731: if (axradio_mode == AXRADIO_MODE_STREAM_TRANSMIT_UNENC)
   22AA 74 15         [12]11542 	mov	a,#0x15
   22AC B5*00 05      [24]11543 	cjne	a,_axradio_mode,00141$
                     22AF 11544 	C$easyax5043.c$1732$2$364 ==.
                          11545 ;	../COMMON/easyax5043.c:1732: AX5043_ENCODING = 0;
   22AF 90 40 11      [24]11546 	mov	dptr,#_AX5043_ENCODING
   22B2 E4            [12]11547 	clr	a
   22B3 F0            [24]11548 	movx	@dptr,a
   22B4                   11549 00141$:
                     22B4 11550 	C$easyax5043.c$1733$2$364 ==.
                          11551 ;	../COMMON/easyax5043.c:1733: if (axradio_mode == AXRADIO_MODE_STREAM_TRANSMIT_SCRAM)
   22B4 74 16         [12]11552 	mov	a,#0x16
   22B6 B5*00 06      [24]11553 	cjne	a,_axradio_mode,00143$
                     22B9 11554 	C$easyax5043.c$1734$2$364 ==.
                          11555 ;	../COMMON/easyax5043.c:1734: AX5043_ENCODING = 4;
   22B9 90 40 11      [24]11556 	mov	dptr,#_AX5043_ENCODING
   22BC 74 04         [12]11557 	mov	a,#0x04
   22BE F0            [24]11558 	movx	@dptr,a
   22BF                   11559 00143$:
                     22BF 11560 	C$easyax5043.c$1735$2$364 ==.
                          11561 ;	../COMMON/easyax5043.c:1735: ax5043_init_registers_tx();
   22BF 12r00r96      [24]11562 	lcall	_ax5043_init_registers_tx
                     22C2 11563 	C$easyax5043.c$1736$2$364 ==.
                          11564 ;	../COMMON/easyax5043.c:1736: AX5043_FRAMING = 0;
   22C2 90 40 12      [24]11565 	mov	dptr,#_AX5043_FRAMING
   22C5 E4            [12]11566 	clr	a
   22C6 F0            [24]11567 	movx	@dptr,a
                     22C7 11568 	C$easyax5043.c$1737$2$364 ==.
                          11569 ;	../COMMON/easyax5043.c:1737: ax5043_prepare_tx();
   22C7 12r0Cr24      [24]11570 	lcall	_ax5043_prepare_tx
                     22CA 11571 	C$easyax5043.c$1738$2$364 ==.
                          11572 ;	../COMMON/easyax5043.c:1738: axradio_trxstate = trxstate_txstream_xtalwait;
   22CA 75*01 0F      [24]11573 	mov	_axradio_trxstate,#0x0F
                     22CD 11574 	C$easyax5043.c$1739$2$364 ==.
                          11575 ;	../COMMON/easyax5043.c:1739: while (!(AX5043_POWSTAT & 0x08)) {}; // wait for modem vdd so writing the FIFO is safe
   22CD                   11576 00144$:
   22CD 90 40 03      [24]11577 	mov	dptr,#_AX5043_POWSTAT
   22D0 E0            [24]11578 	movx	a,@dptr
   22D1 FE            [12]11579 	mov	r6,a
   22D2 30 E3 F8      [24]11580 	jnb	acc.3,00144$
                     22D5 11581 	C$easyax5043.c$1740$2$364 ==.
                          11582 ;	../COMMON/easyax5043.c:1740: AX5043_FIFOSTAT = 3; // clear FIFO data & flags (prevent transmitting anything left over in the FIFO, this has no effect if the FIFO is not powerered, in this case it is reset any way)
   22D5 90 40 28      [24]11583 	mov	dptr,#_AX5043_FIFOSTAT
   22D8 74 03         [12]11584 	mov	a,#0x03
   22DA F0            [24]11585 	movx	@dptr,a
                     22DB 11586 	C$easyax5043.c$1741$2$364 ==.
                          11587 ;	../COMMON/easyax5043.c:1741: AX5043_RADIOEVENTREQ0; // make sure REVRDONE bit is cleared, so it is a reliable indicator that the packet is out
   22DB 90 40 0F      [24]11588 	mov	dptr,#_AX5043_RADIOEVENTREQ0
   22DE E0            [24]11589 	movx	a,@dptr
                     22DF 11590 	C$easyax5043.c$1742$2$364 ==.
                          11591 ;	../COMMON/easyax5043.c:1742: update_timeanchor();
   22DF 12r00r00      [24]11592 	lcall	_update_timeanchor
                     22E2 11593 	C$easyax5043.c$1743$2$364 ==.
                          11594 ;	../COMMON/easyax5043.c:1743: wtimer_remove_callback(&axradio_cb_transmitdata.cb);
   22E2 90r02r7B      [24]11595 	mov	dptr,#_axradio_cb_transmitdata
   22E5 12r00r00      [24]11596 	lcall	_wtimer_remove_callback
                     22E8 11597 	C$easyax5043.c$1744$2$364 ==.
                          11598 ;	../COMMON/easyax5043.c:1744: axradio_cb_transmitdata.st.error = AXRADIO_ERR_NOERROR;
   22E8 90r02r80      [24]11599 	mov	dptr,#(_axradio_cb_transmitdata + 0x0005)
   22EB E4            [12]11600 	clr	a
   22EC F0            [24]11601 	movx	@dptr,a
                     22ED 11602 	C$easyax5043.c$1745$2$364 ==.
                          11603 ;	../COMMON/easyax5043.c:1745: axradio_cb_transmitdata.st.time.t = axradio_timeanchor.radiotimer;
   22ED 90r00r16      [24]11604 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   22F0 E0            [24]11605 	movx	a,@dptr
   22F1 FB            [12]11606 	mov	r3,a
   22F2 A3            [24]11607 	inc	dptr
   22F3 E0            [24]11608 	movx	a,@dptr
   22F4 FC            [12]11609 	mov	r4,a
   22F5 A3            [24]11610 	inc	dptr
   22F6 E0            [24]11611 	movx	a,@dptr
   22F7 FD            [12]11612 	mov	r5,a
   22F8 A3            [24]11613 	inc	dptr
   22F9 E0            [24]11614 	movx	a,@dptr
   22FA FE            [12]11615 	mov	r6,a
   22FB 90r02r81      [24]11616 	mov	dptr,#(_axradio_cb_transmitdata + 0x0006)
   22FE EB            [12]11617 	mov	a,r3
   22FF F0            [24]11618 	movx	@dptr,a
   2300 EC            [12]11619 	mov	a,r4
   2301 A3            [24]11620 	inc	dptr
   2302 F0            [24]11621 	movx	@dptr,a
   2303 ED            [12]11622 	mov	a,r5
   2304 A3            [24]11623 	inc	dptr
   2305 F0            [24]11624 	movx	@dptr,a
   2306 EE            [12]11625 	mov	a,r6
   2307 A3            [24]11626 	inc	dptr
   2308 F0            [24]11627 	movx	@dptr,a
                     2309 11628 	C$easyax5043.c$1746$2$364 ==.
                          11629 ;	../COMMON/easyax5043.c:1746: wtimer_add_callback(&axradio_cb_transmitdata.cb);
   2309 90r02r7B      [24]11630 	mov	dptr,#_axradio_cb_transmitdata
   230C 12r00r00      [24]11631 	lcall	_wtimer_add_callback
                     230F 11632 	C$easyax5043.c$1747$2$364 ==.
                          11633 ;	../COMMON/easyax5043.c:1747: return AXRADIO_ERR_NOERROR;
   230F 75 82 00      [24]11634 	mov	dpl,#0x00
   2312 02r24r8E      [24]11635 	ljmp	00161$
                     2315 11636 	C$easyax5043.c$1749$2$364 ==.
                          11637 ;	../COMMON/easyax5043.c:1749: case AXRADIO_MODE_STREAM_RECEIVE:
   2315                   11638 00147$:
                     2315 11639 	C$easyax5043.c$1750$2$364 ==.
                          11640 ;	../COMMON/easyax5043.c:1750: case AXRADIO_MODE_STREAM_RECEIVE_UNENC:
   2315                   11641 00148$:
                     2315 11642 	C$easyax5043.c$1751$2$364 ==.
                          11643 ;	../COMMON/easyax5043.c:1751: case AXRADIO_MODE_STREAM_RECEIVE_SCRAM:
   2315                   11644 00149$:
                     2315 11645 	C$easyax5043.c$1752$2$364 ==.
                          11646 ;	../COMMON/easyax5043.c:1752: ax5043_init_registers_rx();
   2315 C0 07         [24]11647 	push	ar7
   2317 12r00rCC      [24]11648 	lcall	_ax5043_init_registers_rx
   231A D0 07         [24]11649 	pop	ar7
                     231C 11650 	C$easyax5043.c$1753$2$364 ==.
                          11651 ;	../COMMON/easyax5043.c:1753: if (axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_UNENC)
   231C 74 1D         [12]11652 	mov	a,#0x1D
   231E B5*00 05      [24]11653 	cjne	a,_axradio_mode,00151$
                     2321 11654 	C$easyax5043.c$1754$2$364 ==.
                          11655 ;	../COMMON/easyax5043.c:1754: AX5043_ENCODING = 0;
   2321 90 40 11      [24]11656 	mov	dptr,#_AX5043_ENCODING
   2324 E4            [12]11657 	clr	a
   2325 F0            [24]11658 	movx	@dptr,a
   2326                   11659 00151$:
                     2326 11660 	C$easyax5043.c$1755$2$364 ==.
                          11661 ;	../COMMON/easyax5043.c:1755: if (axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_SCRAM)
   2326 74 1E         [12]11662 	mov	a,#0x1E
   2328 B5*00 06      [24]11663 	cjne	a,_axradio_mode,00153$
                     232B 11664 	C$easyax5043.c$1756$2$364 ==.
                          11665 ;	../COMMON/easyax5043.c:1756: AX5043_ENCODING = 4;
   232B 90 40 11      [24]11666 	mov	dptr,#_AX5043_ENCODING
   232E 74 04         [12]11667 	mov	a,#0x04
   2330 F0            [24]11668 	movx	@dptr,a
   2331                   11669 00153$:
                     2331 11670 	C$easyax5043.c$1757$2$364 ==.
                          11671 ;	../COMMON/easyax5043.c:1757: AX5043_FRAMING = 0;
   2331 90 40 12      [24]11672 	mov	dptr,#_AX5043_FRAMING
   2334 E4            [12]11673 	clr	a
   2335 F0            [24]11674 	movx	@dptr,a
                     2336 11675 	C$easyax5043.c$1758$2$364 ==.
                          11676 ;	../COMMON/easyax5043.c:1758: AX5043_PKTCHUNKSIZE = 8; // 64 byte
   2336 90 42 30      [24]11677 	mov	dptr,#_AX5043_PKTCHUNKSIZE
   2339 74 08         [12]11678 	mov	a,#0x08
   233B F0            [24]11679 	movx	@dptr,a
                     233C 11680 	C$easyax5043.c$1759$2$364 ==.
                          11681 ;	../COMMON/easyax5043.c:1759: AX5043_RXPARAMSETS = 0x00;
   233C 90 41 17      [24]11682 	mov	dptr,#_AX5043_RXPARAMSETS
   233F E4            [12]11683 	clr	a
   2340 F0            [24]11684 	movx	@dptr,a
                     2341 11685 	C$easyax5043.c$1760$2$364 ==.
                          11686 ;	../COMMON/easyax5043.c:1760: axradio_mode = mode;
   2341 8F*00         [24]11687 	mov	_axradio_mode,r7
                     2343 11688 	C$easyax5043.c$1761$2$364 ==.
                          11689 ;	../COMMON/easyax5043.c:1761: ax5043_receiver_on_continuous();
   2343 12r0Br05      [24]11690 	lcall	_ax5043_receiver_on_continuous
                     2346 11691 	C$easyax5043.c$1762$2$364 ==.
                          11692 ;	../COMMON/easyax5043.c:1762: goto enablecs;
   2346 02r22r5A      [24]11693 	ljmp	00132$
                     2349 11694 	C$easyax5043.c$1764$2$364 ==.
                          11695 ;	../COMMON/easyax5043.c:1764: case AXRADIO_MODE_CW_TRANSMIT:
   2349                   11696 00154$:
                     2349 11697 	C$easyax5043.c$1765$2$364 ==.
                          11698 ;	../COMMON/easyax5043.c:1765: ax5043_init_registers_tx();
   2349 12r00r96      [24]11699 	lcall	_ax5043_init_registers_tx
                     234C 11700 	C$easyax5043.c$1766$2$364 ==.
                          11701 ;	../COMMON/easyax5043.c:1766: AX5043_MODULATION = 8;   // Set an FSK mode
   234C 90 40 10      [24]11702 	mov	dptr,#_AX5043_MODULATION
   234F 74 08         [12]11703 	mov	a,#0x08
   2351 F0            [24]11704 	movx	@dptr,a
                     2352 11705 	C$easyax5043.c$1767$2$364 ==.
                          11706 ;	../COMMON/easyax5043.c:1767: AX5043_FSKDEV2 = 0x00;
   2352 90 41 61      [24]11707 	mov	dptr,#_AX5043_FSKDEV2
                     2355 11708 	C$easyax5043.c$1768$2$364 ==.
                          11709 ;	../COMMON/easyax5043.c:1768: AX5043_FSKDEV1 = 0x00;
                     2355 11710 	C$easyax5043.c$1769$2$364 ==.
                          11711 ;	../COMMON/easyax5043.c:1769: AX5043_FSKDEV0 = 0x00;
                     2355 11712 	C$easyax5043.c$1770$2$364 ==.
                          11713 ;	../COMMON/easyax5043.c:1770: AX5043_TXRATE2 = 0x00;
   2355 E4            [12]11714 	clr	a
   2356 F0            [24]11715 	movx	@dptr,a
   2357 90 41 62      [24]11716 	mov	dptr,#_AX5043_FSKDEV1
   235A F0            [24]11717 	movx	@dptr,a
   235B 90 41 63      [24]11718 	mov	dptr,#_AX5043_FSKDEV0
   235E F0            [24]11719 	movx	@dptr,a
   235F 90 41 65      [24]11720 	mov	dptr,#_AX5043_TXRATE2
   2362 F0            [24]11721 	movx	@dptr,a
                     2363 11722 	C$easyax5043.c$1771$2$364 ==.
                          11723 ;	../COMMON/easyax5043.c:1771: AX5043_TXRATE1 = 0x00;
   2363 90 41 66      [24]11724 	mov	dptr,#_AX5043_TXRATE1
   2366 E4            [12]11725 	clr	a
   2367 F0            [24]11726 	movx	@dptr,a
                     2368 11727 	C$easyax5043.c$1772$2$364 ==.
                          11728 ;	../COMMON/easyax5043.c:1772: AX5043_TXRATE0 = 0x01;
   2368 90 41 67      [24]11729 	mov	dptr,#_AX5043_TXRATE0
   236B 74 01         [12]11730 	mov	a,#0x01
   236D F0            [24]11731 	movx	@dptr,a
                     236E 11732 	C$easyax5043.c$1773$2$364 ==.
                          11733 ;	../COMMON/easyax5043.c:1773: AX5043_PINFUNCDATA = 0x04;
   236E 90 40 23      [24]11734 	mov	dptr,#_AX5043_PINFUNCDATA
   2371 74 04         [12]11735 	mov	a,#0x04
   2373 F0            [24]11736 	movx	@dptr,a
                     2374 11737 	C$easyax5043.c$1774$2$364 ==.
                          11738 ;	../COMMON/easyax5043.c:1774: axradio_mode = AXRADIO_MODE_CW_TRANSMIT;
   2374 75*00 03      [24]11739 	mov	_axradio_mode,#0x03
                     2377 11740 	C$easyax5043.c$1775$2$364 ==.
                          11741 ;	../COMMON/easyax5043.c:1775: AX5043_PWRMODE = AX5043_PWRSTATE_FIFO_ON;
   2377 90 40 02      [24]11742 	mov	dptr,#_AX5043_PWRMODE
   237A 74 07         [12]11743 	mov	a,#0x07
   237C F0            [24]11744 	movx	@dptr,a
                     237D 11745 	C$easyax5043.c$1776$2$364 ==.
                          11746 ;	../COMMON/easyax5043.c:1776: axradio_trxstate = trxstate_txcw_xtalwait;
   237D 75*01 0E      [24]11747 	mov	_axradio_trxstate,#0x0E
                     2380 11748 	C$easyax5043.c$1777$2$364 ==.
                          11749 ;	../COMMON/easyax5043.c:1777: AX5043_IRQMASK0 = 0x00;
   2380 90 40 07      [24]11750 	mov	dptr,#_AX5043_IRQMASK0
   2383 E4            [12]11751 	clr	a
   2384 F0            [24]11752 	movx	@dptr,a
                     2385 11753 	C$easyax5043.c$1778$2$364 ==.
                          11754 ;	../COMMON/easyax5043.c:1778: AX5043_IRQMASK1 = 0x01; // enable xtal ready interrupt
   2385 90 40 06      [24]11755 	mov	dptr,#_AX5043_IRQMASK1
   2388 74 01         [12]11756 	mov	a,#0x01
   238A F0            [24]11757 	movx	@dptr,a
                     238B 11758 	C$easyax5043.c$1779$2$364 ==.
                          11759 ;	../COMMON/easyax5043.c:1779: return AXRADIO_ERR_NOERROR;
   238B 75 82 00      [24]11760 	mov	dpl,#0x00
   238E 02r24r8E      [24]11761 	ljmp	00161$
                     2391 11762 	C$easyax5043.c$1781$2$364 ==.
                          11763 ;	../COMMON/easyax5043.c:1781: case AXRADIO_MODE_SYNC_MASTER:
   2391                   11764 00155$:
                     2391 11765 	C$easyax5043.c$1782$2$364 ==.
                          11766 ;	../COMMON/easyax5043.c:1782: case AXRADIO_MODE_SYNC_ACK_MASTER:
   2391                   11767 00156$:
                     2391 11768 	C$easyax5043.c$1783$2$364 ==.
                          11769 ;	../COMMON/easyax5043.c:1783: axradio_mode = mode;
   2391 8F*00         [24]11770 	mov	_axradio_mode,r7
                     2393 11771 	C$easyax5043.c$1784$2$364 ==.
                          11772 ;	../COMMON/easyax5043.c:1784: axradio_syncstate = syncstate_master_normal;
   2393 90r00r00      [24]11773 	mov	dptr,#_axradio_syncstate
   2396 74 03         [12]11774 	mov	a,#0x03
   2398 F0            [24]11775 	movx	@dptr,a
                     2399 11776 	C$easyax5043.c$1786$2$364 ==.
                          11777 ;	../COMMON/easyax5043.c:1786: wtimer_remove(&axradio_timer);
   2399 90r02r85      [24]11778 	mov	dptr,#_axradio_timer
   239C 12r00r00      [24]11779 	lcall	_wtimer_remove
                     239F 11780 	C$easyax5043.c$1787$2$364 ==.
                          11781 ;	../COMMON/easyax5043.c:1787: axradio_timer.time = 2;
   239F 90r02r89      [24]11782 	mov	dptr,#(_axradio_timer + 0x0004)
   23A2 74 02         [12]11783 	mov	a,#0x02
   23A4 F0            [24]11784 	movx	@dptr,a
   23A5 E4            [12]11785 	clr	a
   23A6 A3            [24]11786 	inc	dptr
   23A7 F0            [24]11787 	movx	@dptr,a
   23A8 E4            [12]11788 	clr	a
   23A9 A3            [24]11789 	inc	dptr
   23AA F0            [24]11790 	movx	@dptr,a
   23AB E4            [12]11791 	clr	a
   23AC A3            [24]11792 	inc	dptr
   23AD F0            [24]11793 	movx	@dptr,a
                     23AE 11794 	C$easyax5043.c$1788$2$364 ==.
                          11795 ;	../COMMON/easyax5043.c:1788: wtimer0_addrelative(&axradio_timer);
   23AE 90r02r85      [24]11796 	mov	dptr,#_axradio_timer
   23B1 12r00r00      [24]11797 	lcall	_wtimer0_addrelative
                     23B4 11798 	C$easyax5043.c$1789$2$364 ==.
                          11799 ;	../COMMON/easyax5043.c:1789: axradio_sync_time = axradio_timer.time;
   23B4 90r02r89      [24]11800 	mov	dptr,#(_axradio_timer + 0x0004)
   23B7 E0            [24]11801 	movx	a,@dptr
   23B8 FB            [12]11802 	mov	r3,a
   23B9 A3            [24]11803 	inc	dptr
   23BA E0            [24]11804 	movx	a,@dptr
   23BB FC            [12]11805 	mov	r4,a
   23BC A3            [24]11806 	inc	dptr
   23BD E0            [24]11807 	movx	a,@dptr
   23BE FD            [12]11808 	mov	r5,a
   23BF A3            [24]11809 	inc	dptr
   23C0 E0            [24]11810 	movx	a,@dptr
   23C1 FE            [12]11811 	mov	r6,a
   23C2 90r00r0C      [24]11812 	mov	dptr,#_axradio_sync_time
   23C5 EB            [12]11813 	mov	a,r3
   23C6 F0            [24]11814 	movx	@dptr,a
   23C7 EC            [12]11815 	mov	a,r4
   23C8 A3            [24]11816 	inc	dptr
   23C9 F0            [24]11817 	movx	@dptr,a
   23CA ED            [12]11818 	mov	a,r5
   23CB A3            [24]11819 	inc	dptr
   23CC F0            [24]11820 	movx	@dptr,a
   23CD EE            [12]11821 	mov	a,r6
   23CE A3            [24]11822 	inc	dptr
   23CF F0            [24]11823 	movx	@dptr,a
                     23D0 11824 	C$easyax5043.c$1790$2$364 ==.
                          11825 ;	../COMMON/easyax5043.c:1790: axradio_sync_addtime(axradio_sync_xoscstartup);
   23D0 90r00r00      [24]11826 	mov	dptr,#_axradio_sync_xoscstartup
   23D3 E4            [12]11827 	clr	a
   23D4 93            [24]11828 	movc	a,@a+dptr
   23D5 FB            [12]11829 	mov	r3,a
   23D6 74 01         [12]11830 	mov	a,#0x01
   23D8 93            [24]11831 	movc	a,@a+dptr
   23D9 FC            [12]11832 	mov	r4,a
   23DA 74 02         [12]11833 	mov	a,#0x02
   23DC 93            [24]11834 	movc	a,@a+dptr
   23DD FD            [12]11835 	mov	r5,a
   23DE 74 03         [12]11836 	mov	a,#0x03
   23E0 93            [24]11837 	movc	a,@a+dptr
   23E1 8B 82         [24]11838 	mov	dpl,r3
   23E3 8C 83         [24]11839 	mov	dph,r4
   23E5 8D F0         [24]11840 	mov	b,r5
   23E7 12r0DrEA      [24]11841 	lcall	_axradio_sync_addtime
                     23EA 11842 	C$easyax5043.c$1791$2$364 ==.
                          11843 ;	../COMMON/easyax5043.c:1791: return AXRADIO_ERR_NOERROR;
   23EA 75 82 00      [24]11844 	mov	dpl,#0x00
   23ED 02r24r8E      [24]11845 	ljmp	00161$
                     23F0 11846 	C$easyax5043.c$1793$2$364 ==.
                          11847 ;	../COMMON/easyax5043.c:1793: case AXRADIO_MODE_SYNC_SLAVE:
   23F0                   11848 00157$:
                     23F0 11849 	C$easyax5043.c$1794$2$364 ==.
                          11850 ;	../COMMON/easyax5043.c:1794: case AXRADIO_MODE_SYNC_ACK_SLAVE:
   23F0                   11851 00158$:
                     23F0 11852 	C$easyax5043.c$1795$2$364 ==.
                          11853 ;	../COMMON/easyax5043.c:1795: axradio_mode = mode;
   23F0 8F*00         [24]11854 	mov	_axradio_mode,r7
                     23F2 11855 	C$easyax5043.c$1796$2$364 ==.
                          11856 ;	../COMMON/easyax5043.c:1796: ax5043_init_registers_rx();
   23F2 12r00rCC      [24]11857 	lcall	_ax5043_init_registers_rx
                     23F5 11858 	C$easyax5043.c$1797$2$364 ==.
                          11859 ;	../COMMON/easyax5043.c:1797: ax5043_receiver_on_continuous();
   23F5 12r0Br05      [24]11860 	lcall	_ax5043_receiver_on_continuous
                     23F8 11861 	C$easyax5043.c$1798$2$364 ==.
                          11862 ;	../COMMON/easyax5043.c:1798: axradio_syncstate = syncstate_slave_synchunt;
   23F8 90r00r00      [24]11863 	mov	dptr,#_axradio_syncstate
   23FB 74 06         [12]11864 	mov	a,#0x06
   23FD F0            [24]11865 	movx	@dptr,a
                     23FE 11866 	C$easyax5043.c$1799$2$364 ==.
                          11867 ;	../COMMON/easyax5043.c:1799: wtimer_remove(&axradio_timer);
   23FE 90r02r85      [24]11868 	mov	dptr,#_axradio_timer
   2401 12r00r00      [24]11869 	lcall	_wtimer_remove
                     2404 11870 	C$easyax5043.c$1800$2$364 ==.
                          11871 ;	../COMMON/easyax5043.c:1800: axradio_timer.time = axradio_sync_slave_initialsyncwindow;
   2404 90r00r00      [24]11872 	mov	dptr,#_axradio_sync_slave_initialsyncwindow
   2407 E4            [12]11873 	clr	a
   2408 93            [24]11874 	movc	a,@a+dptr
   2409 FC            [12]11875 	mov	r4,a
   240A 74 01         [12]11876 	mov	a,#0x01
   240C 93            [24]11877 	movc	a,@a+dptr
   240D FD            [12]11878 	mov	r5,a
   240E 74 02         [12]11879 	mov	a,#0x02
   2410 93            [24]11880 	movc	a,@a+dptr
   2411 FE            [12]11881 	mov	r6,a
   2412 74 03         [12]11882 	mov	a,#0x03
   2414 93            [24]11883 	movc	a,@a+dptr
   2415 FF            [12]11884 	mov	r7,a
   2416 90r02r89      [24]11885 	mov	dptr,#(_axradio_timer + 0x0004)
   2419 EC            [12]11886 	mov	a,r4
   241A F0            [24]11887 	movx	@dptr,a
   241B ED            [12]11888 	mov	a,r5
   241C A3            [24]11889 	inc	dptr
   241D F0            [24]11890 	movx	@dptr,a
   241E EE            [12]11891 	mov	a,r6
   241F A3            [24]11892 	inc	dptr
   2420 F0            [24]11893 	movx	@dptr,a
   2421 EF            [12]11894 	mov	a,r7
   2422 A3            [24]11895 	inc	dptr
   2423 F0            [24]11896 	movx	@dptr,a
                     2424 11897 	C$easyax5043.c$1801$2$364 ==.
                          11898 ;	../COMMON/easyax5043.c:1801: wtimer0_addrelative(&axradio_timer);
   2424 90r02r85      [24]11899 	mov	dptr,#_axradio_timer
   2427 12r00r00      [24]11900 	lcall	_wtimer0_addrelative
                     242A 11901 	C$easyax5043.c$1802$2$364 ==.
                          11902 ;	../COMMON/easyax5043.c:1802: axradio_sync_time = axradio_timer.time;
   242A 90r02r89      [24]11903 	mov	dptr,#(_axradio_timer + 0x0004)
   242D E0            [24]11904 	movx	a,@dptr
   242E FC            [12]11905 	mov	r4,a
   242F A3            [24]11906 	inc	dptr
   2430 E0            [24]11907 	movx	a,@dptr
   2431 FD            [12]11908 	mov	r5,a
   2432 A3            [24]11909 	inc	dptr
   2433 E0            [24]11910 	movx	a,@dptr
   2434 FE            [12]11911 	mov	r6,a
   2435 A3            [24]11912 	inc	dptr
   2436 E0            [24]11913 	movx	a,@dptr
   2437 FF            [12]11914 	mov	r7,a
   2438 90r00r0C      [24]11915 	mov	dptr,#_axradio_sync_time
   243B EC            [12]11916 	mov	a,r4
   243C F0            [24]11917 	movx	@dptr,a
   243D ED            [12]11918 	mov	a,r5
   243E A3            [24]11919 	inc	dptr
   243F F0            [24]11920 	movx	@dptr,a
   2440 EE            [12]11921 	mov	a,r6
   2441 A3            [24]11922 	inc	dptr
   2442 F0            [24]11923 	movx	@dptr,a
   2443 EF            [12]11924 	mov	a,r7
   2444 A3            [24]11925 	inc	dptr
   2445 F0            [24]11926 	movx	@dptr,a
                     2446 11927 	C$easyax5043.c$1803$2$364 ==.
                          11928 ;	../COMMON/easyax5043.c:1803: wtimer_remove_callback(&axradio_cb_receive.cb);
   2446 90r02r2E      [24]11929 	mov	dptr,#_axradio_cb_receive
   2449 12r00r00      [24]11930 	lcall	_wtimer_remove_callback
                     244C 11931 	C$easyax5043.c$1804$2$364 ==.
                          11932 ;	../COMMON/easyax5043.c:1804: memset_xdata(&axradio_cb_receive.st, 0, sizeof(axradio_cb_receive.st));
   244C 75*00 00      [24]11933 	mov	_memset_PARM_2,#0x00
   244F 75*00 1E      [24]11934 	mov	_memset_PARM_3,#0x1E
   2452 75*01 00      [24]11935 	mov	(_memset_PARM_3 + 1),#0x00
   2455 90r02r32      [24]11936 	mov	dptr,#(_axradio_cb_receive + 0x0004)
   2458 75 F0 00      [24]11937 	mov	b,#0x00
   245B 12r00r00      [24]11938 	lcall	_memset
                     245E 11939 	C$easyax5043.c$1805$2$364 ==.
                          11940 ;	../COMMON/easyax5043.c:1805: axradio_cb_receive.st.time.t = axradio_timeanchor.radiotimer;
   245E 90r00r16      [24]11941 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   2461 E0            [24]11942 	movx	a,@dptr
   2462 FC            [12]11943 	mov	r4,a
   2463 A3            [24]11944 	inc	dptr
   2464 E0            [24]11945 	movx	a,@dptr
   2465 FD            [12]11946 	mov	r5,a
   2466 A3            [24]11947 	inc	dptr
   2467 E0            [24]11948 	movx	a,@dptr
   2468 FE            [12]11949 	mov	r6,a
   2469 A3            [24]11950 	inc	dptr
   246A E0            [24]11951 	movx	a,@dptr
   246B FF            [12]11952 	mov	r7,a
   246C 90r02r34      [24]11953 	mov	dptr,#(_axradio_cb_receive + 0x0006)
   246F EC            [12]11954 	mov	a,r4
   2470 F0            [24]11955 	movx	@dptr,a
   2471 ED            [12]11956 	mov	a,r5
   2472 A3            [24]11957 	inc	dptr
   2473 F0            [24]11958 	movx	@dptr,a
   2474 EE            [12]11959 	mov	a,r6
   2475 A3            [24]11960 	inc	dptr
   2476 F0            [24]11961 	movx	@dptr,a
   2477 EF            [12]11962 	mov	a,r7
   2478 A3            [24]11963 	inc	dptr
   2479 F0            [24]11964 	movx	@dptr,a
                     247A 11965 	C$easyax5043.c$1806$2$364 ==.
                          11966 ;	../COMMON/easyax5043.c:1806: axradio_cb_receive.st.error = AXRADIO_ERR_RESYNC;
   247A 90r02r33      [24]11967 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   247D 74 09         [12]11968 	mov	a,#0x09
   247F F0            [24]11969 	movx	@dptr,a
                     2480 11970 	C$easyax5043.c$1807$2$364 ==.
                          11971 ;	../COMMON/easyax5043.c:1807: wtimer_add_callback(&axradio_cb_receive.cb);
   2480 90r02r2E      [24]11972 	mov	dptr,#_axradio_cb_receive
   2483 12r00r00      [24]11973 	lcall	_wtimer_add_callback
                     2486 11974 	C$easyax5043.c$1808$2$364 ==.
                          11975 ;	../COMMON/easyax5043.c:1808: return AXRADIO_ERR_NOERROR;
   2486 75 82 00      [24]11976 	mov	dpl,#0x00
                     2489 11977 	C$easyax5043.c$1810$2$364 ==.
                          11978 ;	../COMMON/easyax5043.c:1810: default:
   2489 80 03         [24]11979 	sjmp	00161$
   248B                   11980 00159$:
                     248B 11981 	C$easyax5043.c$1811$2$364 ==.
                          11982 ;	../COMMON/easyax5043.c:1811: return AXRADIO_ERR_NOTSUPPORTED;
   248B 75 82 01      [24]11983 	mov	dpl,#0x01
                     248E 11984 	C$easyax5043.c$1812$1$358 ==.
                          11985 ;	../COMMON/easyax5043.c:1812: }
   248E                   11986 00161$:
                     248E 11987 	C$easyax5043.c$1813$1$358 ==.
                     248E 11988 	XG$axradio_set_mode$0$0 ==.
   248E 22            [24]11989 	ret
                          11990 ;------------------------------------------------------------
                          11991 ;Allocation info for local variables in function 'axradio_get_mode'
                          11992 ;------------------------------------------------------------
                     248F 11993 	G$axradio_get_mode$0$0 ==.
                     248F 11994 	C$easyax5043.c$1815$1$358 ==.
                          11995 ;	../COMMON/easyax5043.c:1815: uint8_t axradio_get_mode(void)
                          11996 ;	-----------------------------------------
                          11997 ;	 function axradio_get_mode
                          11998 ;	-----------------------------------------
   248F                   11999 _axradio_get_mode:
                     248F 12000 	C$easyax5043.c$1817$1$368 ==.
                          12001 ;	../COMMON/easyax5043.c:1817: return axradio_mode;
   248F 85*00 82      [24]12002 	mov	dpl,_axradio_mode
                     2492 12003 	C$easyax5043.c$1818$1$368 ==.
                     2492 12004 	XG$axradio_get_mode$0$0 ==.
   2492 22            [24]12005 	ret
                          12006 ;------------------------------------------------------------
                          12007 ;Allocation info for local variables in function 'axradio_set_channel'
                          12008 ;------------------------------------------------------------
                          12009 ;chnum                     Allocated to registers r7 
                          12010 ;rng                       Allocated with name '_axradio_set_channel_rng_1_370'
                          12011 ;f                         Allocated to registers r3 r4 r5 r7 
                          12012 ;------------------------------------------------------------
                     2493 12013 	G$axradio_set_channel$0$0 ==.
                     2493 12014 	C$easyax5043.c$1820$1$368 ==.
                          12015 ;	../COMMON/easyax5043.c:1820: uint8_t axradio_set_channel(uint8_t chnum)
                          12016 ;	-----------------------------------------
                          12017 ;	 function axradio_set_channel
                          12018 ;	-----------------------------------------
   2493                   12019 _axradio_set_channel:
   2493 AF 82         [24]12020 	mov	r7,dpl
                     2495 12021 	C$easyax5043.c$1823$1$370 ==.
                          12022 ;	../COMMON/easyax5043.c:1823: if (chnum >= axradio_phy_nrchannels)
   2495 90r00r00      [24]12023 	mov	dptr,#_axradio_phy_nrchannels
   2498 E4            [12]12024 	clr	a
   2499 93            [24]12025 	movc	a,@a+dptr
   249A FE            [12]12026 	mov	r6,a
   249B C3            [12]12027 	clr	c
   249C EF            [12]12028 	mov	a,r7
   249D 9E            [12]12029 	subb	a,r6
   249E 40 06         [24]12030 	jc	00102$
                     24A0 12031 	C$easyax5043.c$1824$1$370 ==.
                          12032 ;	../COMMON/easyax5043.c:1824: return AXRADIO_ERR_INVALID;
   24A0 75 82 04      [24]12033 	mov	dpl,#0x04
   24A3 02r25r46      [24]12034 	ljmp	00108$
   24A6                   12035 00102$:
                     24A6 12036 	C$easyax5043.c$1825$1$370 ==.
                          12037 ;	../COMMON/easyax5043.c:1825: axradio_curchannel = chnum;
   24A6 90r00r05      [24]12038 	mov	dptr,#_axradio_curchannel
   24A9 EF            [12]12039 	mov	a,r7
   24AA F0            [24]12040 	movx	@dptr,a
                     24AB 12041 	C$easyax5043.c$1826$1$370 ==.
                          12042 ;	../COMMON/easyax5043.c:1826: rng = axradio_phy_chanpllrng_rx[chnum];
   24AB EF            [12]12043 	mov	a,r7
   24AC 24r00         [12]12044 	add	a,#_axradio_phy_chanpllrng_rx
   24AE F5 82         [12]12045 	mov	dpl,a
   24B0 E4            [12]12046 	clr	a
   24B1 34s00         [12]12047 	addc	a,#(_axradio_phy_chanpllrng_rx >> 8)
   24B3 F5 83         [12]12048 	mov	dph,a
   24B5 E0            [24]12049 	movx	a,@dptr
                     24B6 12050 	C$easyax5043.c$1827$1$370 ==.
                          12051 ;	../COMMON/easyax5043.c:1827: if (rng & 0x20)
   24B6 F5*00         [12]12052 	mov	_axradio_set_channel_rng_1_370,a
   24B8 30 E5 06      [24]12053 	jnb	acc.5,00104$
                     24BB 12054 	C$easyax5043.c$1828$1$370 ==.
                          12055 ;	../COMMON/easyax5043.c:1828: return AXRADIO_ERR_RANGING;
   24BB 75 82 06      [24]12056 	mov	dpl,#0x06
   24BE 02r25r46      [24]12057 	ljmp	00108$
   24C1                   12058 00104$:
                     24C1 12059 	C$easyax5043.c$1830$2$371 ==.
                          12060 ;	../COMMON/easyax5043.c:1830: uint32_t __autodata f = axradio_phy_chanfreq[chnum];
   24C1 EF            [12]12061 	mov	a,r7
   24C2 75 F0 04      [24]12062 	mov	b,#0x04
   24C5 A4            [48]12063 	mul	ab
   24C6 24r00         [12]12064 	add	a,#_axradio_phy_chanfreq
   24C8 F5 82         [12]12065 	mov	dpl,a
   24CA 74s00         [12]12066 	mov	a,#(_axradio_phy_chanfreq >> 8)
   24CC 35 F0         [12]12067 	addc	a,b
   24CE F5 83         [12]12068 	mov	dph,a
   24D0 E4            [12]12069 	clr	a
   24D1 93            [24]12070 	movc	a,@a+dptr
   24D2 FB            [12]12071 	mov	r3,a
   24D3 A3            [24]12072 	inc	dptr
   24D4 E4            [12]12073 	clr	a
   24D5 93            [24]12074 	movc	a,@a+dptr
   24D6 FC            [12]12075 	mov	r4,a
   24D7 A3            [24]12076 	inc	dptr
   24D8 E4            [12]12077 	clr	a
   24D9 93            [24]12078 	movc	a,@a+dptr
   24DA FD            [12]12079 	mov	r5,a
   24DB A3            [24]12080 	inc	dptr
   24DC E4            [12]12081 	clr	a
   24DD 93            [24]12082 	movc	a,@a+dptr
   24DE FF            [12]12083 	mov	r7,a
                     24DF 12084 	C$easyax5043.c$1831$2$371 ==.
                          12085 ;	../COMMON/easyax5043.c:1831: f += axradio_curfreqoffset;
   24DF 90r00r06      [24]12086 	mov	dptr,#_axradio_curfreqoffset
   24E2 E0            [24]12087 	movx	a,@dptr
   24E3 F8            [12]12088 	mov	r0,a
   24E4 A3            [24]12089 	inc	dptr
   24E5 E0            [24]12090 	movx	a,@dptr
   24E6 F9            [12]12091 	mov	r1,a
   24E7 A3            [24]12092 	inc	dptr
   24E8 E0            [24]12093 	movx	a,@dptr
   24E9 FA            [12]12094 	mov	r2,a
   24EA A3            [24]12095 	inc	dptr
   24EB E0            [24]12096 	movx	a,@dptr
   24EC FE            [12]12097 	mov	r6,a
   24ED E8            [12]12098 	mov	a,r0
   24EE 2B            [12]12099 	add	a,r3
   24EF FB            [12]12100 	mov	r3,a
   24F0 E9            [12]12101 	mov	a,r1
   24F1 3C            [12]12102 	addc	a,r4
   24F2 FC            [12]12103 	mov	r4,a
   24F3 EA            [12]12104 	mov	a,r2
   24F4 3D            [12]12105 	addc	a,r5
   24F5 FD            [12]12106 	mov	r5,a
   24F6 EE            [12]12107 	mov	a,r6
   24F7 3F            [12]12108 	addc	a,r7
   24F8 FF            [12]12109 	mov	r7,a
                     24F9 12110 	C$easyax5043.c$1832$2$371 ==.
                          12111 ;	../COMMON/easyax5043.c:1832: if (AX5043_PLLLOOP & 0x80) {
   24F9 90 40 30      [24]12112 	mov	dptr,#_AX5043_PLLLOOP
   24FC E0            [24]12113 	movx	a,@dptr
   24FD FE            [12]12114 	mov	r6,a
   24FE 30 E7 1E      [24]12115 	jnb	acc.7,00106$
                     2501 12116 	C$easyax5043.c$1833$3$372 ==.
                          12117 ;	../COMMON/easyax5043.c:1833: AX5043_PLLRANGINGA = rng & 0x0F;
   2501 90 40 33      [24]12118 	mov	dptr,#_AX5043_PLLRANGINGA
   2504 74 0F         [12]12119 	mov	a,#0x0F
   2506 55*00         [12]12120 	anl	a,_axradio_set_channel_rng_1_370
   2508 F0            [24]12121 	movx	@dptr,a
                     2509 12122 	C$easyax5043.c$1834$3$372 ==.
                          12123 ;	../COMMON/easyax5043.c:1834: AX5043_FREQA0 = f;
   2509 90 40 37      [24]12124 	mov	dptr,#_AX5043_FREQA0
   250C EB            [12]12125 	mov	a,r3
   250D F0            [24]12126 	movx	@dptr,a
                     250E 12127 	C$easyax5043.c$1835$3$372 ==.
                          12128 ;	../COMMON/easyax5043.c:1835: AX5043_FREQA1 = f >> 8;
   250E 90 40 36      [24]12129 	mov	dptr,#_AX5043_FREQA1
   2511 EC            [12]12130 	mov	a,r4
   2512 F0            [24]12131 	movx	@dptr,a
                     2513 12132 	C$easyax5043.c$1836$3$372 ==.
                          12133 ;	../COMMON/easyax5043.c:1836: AX5043_FREQA2 = f >> 16;
   2513 90 40 35      [24]12134 	mov	dptr,#_AX5043_FREQA2
   2516 ED            [12]12135 	mov	a,r5
   2517 F0            [24]12136 	movx	@dptr,a
                     2518 12137 	C$easyax5043.c$1837$3$372 ==.
                          12138 ;	../COMMON/easyax5043.c:1837: AX5043_FREQA3 = f >> 24;
   2518 90 40 34      [24]12139 	mov	dptr,#_AX5043_FREQA3
   251B EF            [12]12140 	mov	a,r7
   251C F0            [24]12141 	movx	@dptr,a
   251D 80 1C         [24]12142 	sjmp	00107$
   251F                   12143 00106$:
                     251F 12144 	C$easyax5043.c$1839$3$373 ==.
                          12145 ;	../COMMON/easyax5043.c:1839: AX5043_PLLRANGINGB = rng & 0x0F;
   251F 90 40 3B      [24]12146 	mov	dptr,#_AX5043_PLLRANGINGB
   2522 74 0F         [12]12147 	mov	a,#0x0F
   2524 55*00         [12]12148 	anl	a,_axradio_set_channel_rng_1_370
   2526 F0            [24]12149 	movx	@dptr,a
                     2527 12150 	C$easyax5043.c$1840$3$373 ==.
                          12151 ;	../COMMON/easyax5043.c:1840: AX5043_FREQB0 = f;
   2527 90 40 3F      [24]12152 	mov	dptr,#_AX5043_FREQB0
   252A EB            [12]12153 	mov	a,r3
   252B F0            [24]12154 	movx	@dptr,a
                     252C 12155 	C$easyax5043.c$1841$3$373 ==.
                          12156 ;	../COMMON/easyax5043.c:1841: AX5043_FREQB1 = f >> 8;
   252C 90 40 3E      [24]12157 	mov	dptr,#_AX5043_FREQB1
   252F EC            [12]12158 	mov	a,r4
   2530 F0            [24]12159 	movx	@dptr,a
                     2531 12160 	C$easyax5043.c$1842$3$373 ==.
                          12161 ;	../COMMON/easyax5043.c:1842: AX5043_FREQB2 = f >> 16;
   2531 90 40 3D      [24]12162 	mov	dptr,#_AX5043_FREQB2
   2534 ED            [12]12163 	mov	a,r5
   2535 F0            [24]12164 	movx	@dptr,a
                     2536 12165 	C$easyax5043.c$1843$3$373 ==.
                          12166 ;	../COMMON/easyax5043.c:1843: AX5043_FREQB3 = f >> 24;
   2536 90 40 3C      [24]12167 	mov	dptr,#_AX5043_FREQB3
   2539 EF            [12]12168 	mov	a,r7
   253A F0            [24]12169 	movx	@dptr,a
   253B                   12170 00107$:
                     253B 12171 	C$easyax5043.c$1846$1$370 ==.
                          12172 ;	../COMMON/easyax5043.c:1846: AX5043_PLLLOOP ^= 0x80;
   253B 90 40 30      [24]12173 	mov	dptr,#_AX5043_PLLLOOP
   253E E0            [24]12174 	movx	a,@dptr
   253F FF            [12]12175 	mov	r7,a
   2540 64 80         [12]12176 	xrl	a,#0x80
   2542 F0            [24]12177 	movx	@dptr,a
                     2543 12178 	C$easyax5043.c$1847$1$370 ==.
                          12179 ;	../COMMON/easyax5043.c:1847: return AXRADIO_ERR_NOERROR;
   2543 75 82 00      [24]12180 	mov	dpl,#0x00
   2546                   12181 00108$:
                     2546 12182 	C$easyax5043.c$1848$1$370 ==.
                     2546 12183 	XG$axradio_set_channel$0$0 ==.
   2546 22            [24]12184 	ret
                          12185 ;------------------------------------------------------------
                          12186 ;Allocation info for local variables in function 'axradio_get_channel'
                          12187 ;------------------------------------------------------------
                     2547 12188 	G$axradio_get_channel$0$0 ==.
                     2547 12189 	C$easyax5043.c$1850$1$370 ==.
                          12190 ;	../COMMON/easyax5043.c:1850: uint8_t axradio_get_channel(void)
                          12191 ;	-----------------------------------------
                          12192 ;	 function axradio_get_channel
                          12193 ;	-----------------------------------------
   2547                   12194 _axradio_get_channel:
                     2547 12195 	C$easyax5043.c$1852$1$375 ==.
                          12196 ;	../COMMON/easyax5043.c:1852: return axradio_curchannel;
   2547 90r00r05      [24]12197 	mov	dptr,#_axradio_curchannel
   254A E0            [24]12198 	movx	a,@dptr
                     254B 12199 	C$easyax5043.c$1853$1$375 ==.
                     254B 12200 	XG$axradio_get_channel$0$0 ==.
   254B F5 82         [12]12201 	mov	dpl,a
   254D 22            [24]12202 	ret
                          12203 ;------------------------------------------------------------
                          12204 ;Allocation info for local variables in function 'axradio_get_pllrange'
                          12205 ;------------------------------------------------------------
                     254E 12206 	G$axradio_get_pllrange$0$0 ==.
                     254E 12207 	C$easyax5043.c$1855$1$375 ==.
                          12208 ;	../COMMON/easyax5043.c:1855: uint8_t axradio_get_pllrange(void)
                          12209 ;	-----------------------------------------
                          12210 ;	 function axradio_get_pllrange
                          12211 ;	-----------------------------------------
   254E                   12212 _axradio_get_pllrange:
                     254E 12213 	C$easyax5043.c$1857$1$377 ==.
                          12214 ;	../COMMON/easyax5043.c:1857: return axradio_phy_chanpllrng_rx[axradio_curchannel] & 0x0F;
   254E 90r00r05      [24]12215 	mov	dptr,#_axradio_curchannel
   2551 E0            [24]12216 	movx	a,@dptr
   2552 24r00         [12]12217 	add	a,#_axradio_phy_chanpllrng_rx
   2554 F5 82         [12]12218 	mov	dpl,a
   2556 E4            [12]12219 	clr	a
   2557 34s00         [12]12220 	addc	a,#(_axradio_phy_chanpllrng_rx >> 8)
   2559 F5 83         [12]12221 	mov	dph,a
   255B E0            [24]12222 	movx	a,@dptr
   255C FF            [12]12223 	mov	r7,a
   255D 74 0F         [12]12224 	mov	a,#0x0F
   255F 5F            [12]12225 	anl	a,r7
   2560 F5 82         [12]12226 	mov	dpl,a
                     2562 12227 	C$easyax5043.c$1858$1$377 ==.
                     2562 12228 	XG$axradio_get_pllrange$0$0 ==.
   2562 22            [24]12229 	ret
                          12230 ;------------------------------------------------------------
                          12231 ;Allocation info for local variables in function 'axradio_get_pllrange_tx'
                          12232 ;------------------------------------------------------------
                     2563 12233 	G$axradio_get_pllrange_tx$0$0 ==.
                     2563 12234 	C$easyax5043.c$1860$1$377 ==.
                          12235 ;	../COMMON/easyax5043.c:1860: uint8_t axradio_get_pllrange_tx(void)
                          12236 ;	-----------------------------------------
                          12237 ;	 function axradio_get_pllrange_tx
                          12238 ;	-----------------------------------------
   2563                   12239 _axradio_get_pllrange_tx:
                     2563 12240 	C$easyax5043.c$1862$1$379 ==.
                          12241 ;	../COMMON/easyax5043.c:1862: return axradio_phy_chanpllrng_tx[axradio_curchannel] & 0x0F;
   2563 90r00r05      [24]12242 	mov	dptr,#_axradio_curchannel
   2566 E0            [24]12243 	movx	a,@dptr
   2567 24r00         [12]12244 	add	a,#_axradio_phy_chanpllrng_tx
   2569 F5 82         [12]12245 	mov	dpl,a
   256B E4            [12]12246 	clr	a
   256C 34s00         [12]12247 	addc	a,#(_axradio_phy_chanpllrng_tx >> 8)
   256E F5 83         [12]12248 	mov	dph,a
   2570 E0            [24]12249 	movx	a,@dptr
   2571 FF            [12]12250 	mov	r7,a
   2572 74 0F         [12]12251 	mov	a,#0x0F
   2574 5F            [12]12252 	anl	a,r7
   2575 F5 82         [12]12253 	mov	dpl,a
                     2577 12254 	C$easyax5043.c$1863$1$379 ==.
                     2577 12255 	XG$axradio_get_pllrange_tx$0$0 ==.
   2577 22            [24]12256 	ret
                          12257 ;------------------------------------------------------------
                          12258 ;Allocation info for local variables in function 'axradio_set_curfreqoffset'
                          12259 ;------------------------------------------------------------
                          12260 ;offs                      Allocated to registers r4 r5 r6 r7 
                          12261 ;------------------------------------------------------------
                     2578 12262 	Feasyax5043$axradio_set_curfreqoffset$0$0 ==.
                     2578 12263 	C$easyax5043.c$1865$1$379 ==.
                          12264 ;	../COMMON/easyax5043.c:1865: static uint8_t axradio_set_curfreqoffset(int32_t offs)
                          12265 ;	-----------------------------------------
                          12266 ;	 function axradio_set_curfreqoffset
                          12267 ;	-----------------------------------------
   2578                   12268 _axradio_set_curfreqoffset:
   2578 AC 82         [24]12269 	mov	r4,dpl
   257A AD 83         [24]12270 	mov	r5,dph
   257C AE F0         [24]12271 	mov	r6,b
   257E FF            [12]12272 	mov	r7,a
                     257F 12273 	C$easyax5043.c$1867$1$381 ==.
                          12274 ;	../COMMON/easyax5043.c:1867: axradio_curfreqoffset = offs;
   257F 90r00r06      [24]12275 	mov	dptr,#_axradio_curfreqoffset
   2582 EC            [12]12276 	mov	a,r4
   2583 F0            [24]12277 	movx	@dptr,a
   2584 ED            [12]12278 	mov	a,r5
   2585 A3            [24]12279 	inc	dptr
   2586 F0            [24]12280 	movx	@dptr,a
   2587 EE            [12]12281 	mov	a,r6
   2588 A3            [24]12282 	inc	dptr
   2589 F0            [24]12283 	movx	@dptr,a
   258A EF            [12]12284 	mov	a,r7
   258B A3            [24]12285 	inc	dptr
   258C F0            [24]12286 	movx	@dptr,a
                     258D 12287 	C$easyax5043.c$1868$1$381 ==.
                          12288 ;	../COMMON/easyax5043.c:1868: if (checksignedlimit32(offs, axradio_phy_maxfreqoffset))
   258D 90r00r00      [24]12289 	mov	dptr,#_axradio_phy_maxfreqoffset
   2590 E4            [12]12290 	clr	a
   2591 93            [24]12291 	movc	a,@a+dptr
   2592 C0 E0         [24]12292 	push	acc
   2594 74 01         [12]12293 	mov	a,#0x01
   2596 93            [24]12294 	movc	a,@a+dptr
   2597 C0 E0         [24]12295 	push	acc
   2599 74 02         [12]12296 	mov	a,#0x02
   259B 93            [24]12297 	movc	a,@a+dptr
   259C C0 E0         [24]12298 	push	acc
   259E 74 03         [12]12299 	mov	a,#0x03
   25A0 93            [24]12300 	movc	a,@a+dptr
   25A1 C0 E0         [24]12301 	push	acc
   25A3 8C 82         [24]12302 	mov	dpl,r4
   25A5 8D 83         [24]12303 	mov	dph,r5
   25A7 8E F0         [24]12304 	mov	b,r6
   25A9 EF            [12]12305 	mov	a,r7
   25AA 12r00r00      [24]12306 	lcall	_checksignedlimit32
   25AD AF 82         [24]12307 	mov	r7,dpl
   25AF E5 81         [12]12308 	mov	a,sp
   25B1 24 FC         [12]12309 	add	a,#0xfc
   25B3 F5 81         [12]12310 	mov	sp,a
   25B5 EF            [12]12311 	mov	a,r7
   25B6 60 05         [24]12312 	jz	00102$
                     25B8 12313 	C$easyax5043.c$1869$1$381 ==.
                          12314 ;	../COMMON/easyax5043.c:1869: return AXRADIO_ERR_NOERROR;
   25B8 75 82 00      [24]12315 	mov	dpl,#0x00
   25BB 80 5B         [24]12316 	sjmp	00106$
   25BD                   12317 00102$:
                     25BD 12318 	C$easyax5043.c$1870$1$381 ==.
                          12319 ;	../COMMON/easyax5043.c:1870: if (axradio_curfreqoffset < 0)
   25BD 90r00r06      [24]12320 	mov	dptr,#_axradio_curfreqoffset
   25C0 E0            [24]12321 	movx	a,@dptr
   25C1 FC            [12]12322 	mov	r4,a
   25C2 A3            [24]12323 	inc	dptr
   25C3 E0            [24]12324 	movx	a,@dptr
   25C4 FD            [12]12325 	mov	r5,a
   25C5 A3            [24]12326 	inc	dptr
   25C6 E0            [24]12327 	movx	a,@dptr
   25C7 FE            [12]12328 	mov	r6,a
   25C8 A3            [24]12329 	inc	dptr
   25C9 E0            [24]12330 	movx	a,@dptr
   25CA FF            [12]12331 	mov	r7,a
   25CB 30 E7 27      [24]12332 	jnb	acc.7,00104$
                     25CE 12333 	C$easyax5043.c$1871$1$381 ==.
                          12334 ;	../COMMON/easyax5043.c:1871: axradio_curfreqoffset = -axradio_phy_maxfreqoffset;
   25CE 90r00r00      [24]12335 	mov	dptr,#_axradio_phy_maxfreqoffset
   25D1 E4            [12]12336 	clr	a
   25D2 93            [24]12337 	movc	a,@a+dptr
   25D3 FC            [12]12338 	mov	r4,a
   25D4 74 01         [12]12339 	mov	a,#0x01
   25D6 93            [24]12340 	movc	a,@a+dptr
   25D7 FD            [12]12341 	mov	r5,a
   25D8 74 02         [12]12342 	mov	a,#0x02
   25DA 93            [24]12343 	movc	a,@a+dptr
   25DB FE            [12]12344 	mov	r6,a
   25DC 74 03         [12]12345 	mov	a,#0x03
   25DE 93            [24]12346 	movc	a,@a+dptr
   25DF FF            [12]12347 	mov	r7,a
   25E0 90r00r06      [24]12348 	mov	dptr,#_axradio_curfreqoffset
   25E3 C3            [12]12349 	clr	c
   25E4 E4            [12]12350 	clr	a
   25E5 9C            [12]12351 	subb	a,r4
   25E6 F0            [24]12352 	movx	@dptr,a
   25E7 E4            [12]12353 	clr	a
   25E8 9D            [12]12354 	subb	a,r5
   25E9 A3            [24]12355 	inc	dptr
   25EA F0            [24]12356 	movx	@dptr,a
   25EB E4            [12]12357 	clr	a
   25EC 9E            [12]12358 	subb	a,r6
   25ED A3            [24]12359 	inc	dptr
   25EE F0            [24]12360 	movx	@dptr,a
   25EF E4            [12]12361 	clr	a
   25F0 9F            [12]12362 	subb	a,r7
   25F1 A3            [24]12363 	inc	dptr
   25F2 F0            [24]12364 	movx	@dptr,a
   25F3 80 20         [24]12365 	sjmp	00105$
   25F5                   12366 00104$:
                     25F5 12367 	C$easyax5043.c$1873$1$381 ==.
                          12368 ;	../COMMON/easyax5043.c:1873: axradio_curfreqoffset = axradio_phy_maxfreqoffset;
   25F5 90r00r00      [24]12369 	mov	dptr,#_axradio_phy_maxfreqoffset
   25F8 E4            [12]12370 	clr	a
   25F9 93            [24]12371 	movc	a,@a+dptr
   25FA FC            [12]12372 	mov	r4,a
   25FB 74 01         [12]12373 	mov	a,#0x01
   25FD 93            [24]12374 	movc	a,@a+dptr
   25FE FD            [12]12375 	mov	r5,a
   25FF 74 02         [12]12376 	mov	a,#0x02
   2601 93            [24]12377 	movc	a,@a+dptr
   2602 FE            [12]12378 	mov	r6,a
   2603 74 03         [12]12379 	mov	a,#0x03
   2605 93            [24]12380 	movc	a,@a+dptr
   2606 FF            [12]12381 	mov	r7,a
   2607 90r00r06      [24]12382 	mov	dptr,#_axradio_curfreqoffset
   260A EC            [12]12383 	mov	a,r4
   260B F0            [24]12384 	movx	@dptr,a
   260C ED            [12]12385 	mov	a,r5
   260D A3            [24]12386 	inc	dptr
   260E F0            [24]12387 	movx	@dptr,a
   260F EE            [12]12388 	mov	a,r6
   2610 A3            [24]12389 	inc	dptr
   2611 F0            [24]12390 	movx	@dptr,a
   2612 EF            [12]12391 	mov	a,r7
   2613 A3            [24]12392 	inc	dptr
   2614 F0            [24]12393 	movx	@dptr,a
   2615                   12394 00105$:
                     2615 12395 	C$easyax5043.c$1874$1$381 ==.
                          12396 ;	../COMMON/easyax5043.c:1874: return AXRADIO_ERR_INVALID;
   2615 75 82 04      [24]12397 	mov	dpl,#0x04
   2618                   12398 00106$:
                     2618 12399 	C$easyax5043.c$1875$1$381 ==.
                     2618 12400 	XFeasyax5043$axradio_set_curfreqoffset$0$0 ==.
   2618 22            [24]12401 	ret
                          12402 ;------------------------------------------------------------
                          12403 ;Allocation info for local variables in function 'axradio_set_freqoffset'
                          12404 ;------------------------------------------------------------
                          12405 ;offs                      Allocated to registers r4 r5 r6 r7 
                          12406 ;ret                       Allocated to registers r7 
                          12407 ;ret2                      Allocated to registers r6 
                          12408 ;------------------------------------------------------------
                     2619 12409 	G$axradio_set_freqoffset$0$0 ==.
                     2619 12410 	C$easyax5043.c$1877$1$381 ==.
                          12411 ;	../COMMON/easyax5043.c:1877: uint8_t axradio_set_freqoffset(int32_t offs)
                          12412 ;	-----------------------------------------
                          12413 ;	 function axradio_set_freqoffset
                          12414 ;	-----------------------------------------
   2619                   12415 _axradio_set_freqoffset:
                     2619 12416 	C$easyax5043.c$1879$1$383 ==.
                          12417 ;	../COMMON/easyax5043.c:1879: uint8_t __autodata ret = axradio_set_curfreqoffset(offs);
   2619 12r25r78      [24]12418 	lcall	_axradio_set_curfreqoffset
   261C AF 82         [24]12419 	mov	r7,dpl
                     261E 12420 	C$easyax5043.c$1881$2$384 ==.
                          12421 ;	../COMMON/easyax5043.c:1881: uint8_t __autodata ret2 = axradio_set_channel(axradio_curchannel);
   261E 90r00r05      [24]12422 	mov	dptr,#_axradio_curchannel
   2621 E0            [24]12423 	movx	a,@dptr
   2622 F5 82         [12]12424 	mov	dpl,a
   2624 C0 07         [24]12425 	push	ar7
   2626 12r24r93      [24]12426 	lcall	_axradio_set_channel
   2629 AE 82         [24]12427 	mov	r6,dpl
   262B D0 07         [24]12428 	pop	ar7
                     262D 12429 	C$easyax5043.c$1882$2$384 ==.
                          12430 ;	../COMMON/easyax5043.c:1882: if (ret == AXRADIO_ERR_NOERROR)
   262D EF            [12]12431 	mov	a,r7
   262E 70 02         [24]12432 	jnz	00102$
                     2630 12433 	C$easyax5043.c$1883$2$384 ==.
                          12434 ;	../COMMON/easyax5043.c:1883: ret = ret2;
   2630 8E 07         [24]12435 	mov	ar7,r6
   2632                   12436 00102$:
                     2632 12437 	C$easyax5043.c$1885$1$383 ==.
                          12438 ;	../COMMON/easyax5043.c:1885: return ret;
   2632 8F 82         [24]12439 	mov	dpl,r7
                     2634 12440 	C$easyax5043.c$1886$1$383 ==.
                     2634 12441 	XG$axradio_set_freqoffset$0$0 ==.
   2634 22            [24]12442 	ret
                          12443 ;------------------------------------------------------------
                          12444 ;Allocation info for local variables in function 'axradio_get_freqoffset'
                          12445 ;------------------------------------------------------------
                     2635 12446 	G$axradio_get_freqoffset$0$0 ==.
                     2635 12447 	C$easyax5043.c$1888$1$383 ==.
                          12448 ;	../COMMON/easyax5043.c:1888: int32_t axradio_get_freqoffset(void)
                          12449 ;	-----------------------------------------
                          12450 ;	 function axradio_get_freqoffset
                          12451 ;	-----------------------------------------
   2635                   12452 _axradio_get_freqoffset:
                     2635 12453 	C$easyax5043.c$1890$1$386 ==.
                          12454 ;	../COMMON/easyax5043.c:1890: return axradio_curfreqoffset;
   2635 90r00r06      [24]12455 	mov	dptr,#_axradio_curfreqoffset
   2638 E0            [24]12456 	movx	a,@dptr
   2639 FC            [12]12457 	mov	r4,a
   263A A3            [24]12458 	inc	dptr
   263B E0            [24]12459 	movx	a,@dptr
   263C FD            [12]12460 	mov	r5,a
   263D A3            [24]12461 	inc	dptr
   263E E0            [24]12462 	movx	a,@dptr
   263F FE            [12]12463 	mov	r6,a
   2640 A3            [24]12464 	inc	dptr
   2641 E0            [24]12465 	movx	a,@dptr
   2642 8C 82         [24]12466 	mov	dpl,r4
   2644 8D 83         [24]12467 	mov	dph,r5
   2646 8E F0         [24]12468 	mov	b,r6
                     2648 12469 	C$easyax5043.c$1891$1$386 ==.
                     2648 12470 	XG$axradio_get_freqoffset$0$0 ==.
   2648 22            [24]12471 	ret
                          12472 ;------------------------------------------------------------
                          12473 ;Allocation info for local variables in function 'axradio_set_local_address'
                          12474 ;------------------------------------------------------------
                          12475 ;addr                      Allocated to registers r5 r6 r7 
                          12476 ;------------------------------------------------------------
                     2649 12477 	G$axradio_set_local_address$0$0 ==.
                     2649 12478 	C$easyax5043.c$1893$1$386 ==.
                          12479 ;	../COMMON/easyax5043.c:1893: void axradio_set_local_address(const struct axradio_address_mask *addr)
                          12480 ;	-----------------------------------------
                          12481 ;	 function axradio_set_local_address
                          12482 ;	-----------------------------------------
   2649                   12483 _axradio_set_local_address:
   2649 AD 82         [24]12484 	mov	r5,dpl
   264B AE 83         [24]12485 	mov	r6,dph
   264D AF F0         [24]12486 	mov	r7,b
                     264F 12487 	C$easyax5043.c$1895$1$388 ==.
                          12488 ;	../COMMON/easyax5043.c:1895: memcpy_xdatageneric(&axradio_localaddr, addr, sizeof(axradio_localaddr));
   264F 8D*00         [24]12489 	mov	_memcpy_PARM_2,r5
   2651 8E*01         [24]12490 	mov	(_memcpy_PARM_2 + 1),r6
   2653 8F*02         [24]12491 	mov	(_memcpy_PARM_2 + 2),r7
   2655 75*00 08      [24]12492 	mov	_memcpy_PARM_3,#0x08
   2658 75*01 00      [24]12493 	mov	(_memcpy_PARM_3 + 1),#0x00
   265B 90r00r1A      [24]12494 	mov	dptr,#_axradio_localaddr
   265E 75 F0 00      [24]12495 	mov	b,#0x00
   2661 12r00r00      [24]12496 	lcall	_memcpy
                     2664 12497 	C$easyax5043.c$1896$1$388 ==.
                          12498 ;	../COMMON/easyax5043.c:1896: axradio_setaddrregs();
   2664 12r0Cr9B      [24]12499 	lcall	_axradio_setaddrregs
                     2667 12500 	C$easyax5043.c$1897$1$388 ==.
                     2667 12501 	XG$axradio_set_local_address$0$0 ==.
   2667 22            [24]12502 	ret
                          12503 ;------------------------------------------------------------
                          12504 ;Allocation info for local variables in function 'axradio_get_local_address'
                          12505 ;------------------------------------------------------------
                          12506 ;addr                      Allocated to registers r5 r6 r7 
                          12507 ;------------------------------------------------------------
                     2668 12508 	G$axradio_get_local_address$0$0 ==.
                     2668 12509 	C$easyax5043.c$1899$1$388 ==.
                          12510 ;	../COMMON/easyax5043.c:1899: void axradio_get_local_address(struct axradio_address_mask *addr)
                          12511 ;	-----------------------------------------
                          12512 ;	 function axradio_get_local_address
                          12513 ;	-----------------------------------------
   2668                   12514 _axradio_get_local_address:
   2668 AD 82         [24]12515 	mov	r5,dpl
   266A AE 83         [24]12516 	mov	r6,dph
   266C AF F0         [24]12517 	mov	r7,b
                     266E 12518 	C$easyax5043.c$1901$1$390 ==.
                          12519 ;	../COMMON/easyax5043.c:1901: memcpy_genericxdata(addr, &axradio_localaddr, sizeof(axradio_localaddr));
   266E 75*00r1A      [24]12520 	mov	_memcpy_PARM_2,#_axradio_localaddr
   2671 75*01s00      [24]12521 	mov	(_memcpy_PARM_2 + 1),#(_axradio_localaddr >> 8)
   2674 75*02 00      [24]12522 	mov	(_memcpy_PARM_2 + 2),#0x00
   2677 75*00 08      [24]12523 	mov	_memcpy_PARM_3,#0x08
   267A 75*01 00      [24]12524 	mov	(_memcpy_PARM_3 + 1),#0x00
   267D 8D 82         [24]12525 	mov	dpl,r5
   267F 8E 83         [24]12526 	mov	dph,r6
   2681 8F F0         [24]12527 	mov	b,r7
   2683 12r00r00      [24]12528 	lcall	_memcpy
                     2686 12529 	C$easyax5043.c$1902$1$390 ==.
                     2686 12530 	XG$axradio_get_local_address$0$0 ==.
   2686 22            [24]12531 	ret
                          12532 ;------------------------------------------------------------
                          12533 ;Allocation info for local variables in function 'axradio_set_default_remote_address'
                          12534 ;------------------------------------------------------------
                          12535 ;addr                      Allocated to registers r5 r6 r7 
                          12536 ;------------------------------------------------------------
                     2687 12537 	G$axradio_set_default_remote_address$0$0 ==.
                     2687 12538 	C$easyax5043.c$1904$1$390 ==.
                          12539 ;	../COMMON/easyax5043.c:1904: void axradio_set_default_remote_address(const struct axradio_address *addr)
                          12540 ;	-----------------------------------------
                          12541 ;	 function axradio_set_default_remote_address
                          12542 ;	-----------------------------------------
   2687                   12543 _axradio_set_default_remote_address:
   2687 AD 82         [24]12544 	mov	r5,dpl
   2689 AE 83         [24]12545 	mov	r6,dph
   268B AF F0         [24]12546 	mov	r7,b
                     268D 12547 	C$easyax5043.c$1906$1$392 ==.
                          12548 ;	../COMMON/easyax5043.c:1906: memcpy_xdatageneric(&axradio_default_remoteaddr, addr, sizeof(axradio_default_remoteaddr));
   268D 8D*00         [24]12549 	mov	_memcpy_PARM_2,r5
   268F 8E*01         [24]12550 	mov	(_memcpy_PARM_2 + 1),r6
   2691 8F*02         [24]12551 	mov	(_memcpy_PARM_2 + 2),r7
   2693 75*00 04      [24]12552 	mov	_memcpy_PARM_3,#0x04
   2696 75*01 00      [24]12553 	mov	(_memcpy_PARM_3 + 1),#0x00
   2699 90r00r22      [24]12554 	mov	dptr,#_axradio_default_remoteaddr
   269C 75 F0 00      [24]12555 	mov	b,#0x00
   269F 12r00r00      [24]12556 	lcall	_memcpy
                     26A2 12557 	C$easyax5043.c$1907$1$392 ==.
                     26A2 12558 	XG$axradio_set_default_remote_address$0$0 ==.
   26A2 22            [24]12559 	ret
                          12560 ;------------------------------------------------------------
                          12561 ;Allocation info for local variables in function 'axradio_get_default_remote_address'
                          12562 ;------------------------------------------------------------
                          12563 ;addr                      Allocated to registers r5 r6 r7 
                          12564 ;------------------------------------------------------------
                     26A3 12565 	G$axradio_get_default_remote_address$0$0 ==.
                     26A3 12566 	C$easyax5043.c$1909$1$392 ==.
                          12567 ;	../COMMON/easyax5043.c:1909: void axradio_get_default_remote_address(struct axradio_address *addr)
                          12568 ;	-----------------------------------------
                          12569 ;	 function axradio_get_default_remote_address
                          12570 ;	-----------------------------------------
   26A3                   12571 _axradio_get_default_remote_address:
   26A3 AD 82         [24]12572 	mov	r5,dpl
   26A5 AE 83         [24]12573 	mov	r6,dph
   26A7 AF F0         [24]12574 	mov	r7,b
                     26A9 12575 	C$easyax5043.c$1911$1$394 ==.
                          12576 ;	../COMMON/easyax5043.c:1911: memcpy_genericxdata(addr, &axradio_default_remoteaddr, sizeof(axradio_default_remoteaddr));
   26A9 75*00r22      [24]12577 	mov	_memcpy_PARM_2,#_axradio_default_remoteaddr
   26AC 75*01s00      [24]12578 	mov	(_memcpy_PARM_2 + 1),#(_axradio_default_remoteaddr >> 8)
   26AF 75*02 00      [24]12579 	mov	(_memcpy_PARM_2 + 2),#0x00
   26B2 75*00 04      [24]12580 	mov	_memcpy_PARM_3,#0x04
   26B5 75*01 00      [24]12581 	mov	(_memcpy_PARM_3 + 1),#0x00
   26B8 8D 82         [24]12582 	mov	dpl,r5
   26BA 8E 83         [24]12583 	mov	dph,r6
   26BC 8F F0         [24]12584 	mov	b,r7
   26BE 12r00r00      [24]12585 	lcall	_memcpy
                     26C1 12586 	C$easyax5043.c$1912$1$394 ==.
                     26C1 12587 	XG$axradio_get_default_remote_address$0$0 ==.
   26C1 22            [24]12588 	ret
                          12589 ;------------------------------------------------------------
                          12590 ;Allocation info for local variables in function 'axradio_transmit'
                          12591 ;------------------------------------------------------------
                          12592 ;pkt                       Allocated with name '_axradio_transmit_PARM_2'
                          12593 ;pktlen                    Allocated with name '_axradio_transmit_PARM_3'
                          12594 ;addr                      Allocated to registers r5 r6 r7 
                          12595 ;fifofree                  Allocated to registers r3 r4 
                          12596 ;i                         Allocated to registers r4 
                          12597 ;iesave                    Allocated to registers r4 
                          12598 ;len_byte                  Allocated to registers r6 
                          12599 ;------------------------------------------------------------
                     26C2 12600 	G$axradio_transmit$0$0 ==.
                     26C2 12601 	C$easyax5043.c$1914$1$394 ==.
                          12602 ;	../COMMON/easyax5043.c:1914: uint8_t axradio_transmit(const struct axradio_address *addr, const uint8_t *pkt, uint16_t pktlen)
                          12603 ;	-----------------------------------------
                          12604 ;	 function axradio_transmit
                          12605 ;	-----------------------------------------
   26C2                   12606 _axradio_transmit:
   26C2 AD 82         [24]12607 	mov	r5,dpl
   26C4 AE 83         [24]12608 	mov	r6,dph
   26C6 AF F0         [24]12609 	mov	r7,b
                     26C8 12610 	C$easyax5043.c$1916$1$396 ==.
                          12611 ;	../COMMON/easyax5043.c:1916: switch (axradio_mode) {
   26C8 AC*00         [24]12612 	mov	r4,_axradio_mode
   26CA BC 10 00      [24]12613 	cjne	r4,#0x10,00243$
   26CD                   12614 00243$:
   26CD 50 03         [24]12615 	jnc	00244$
   26CF 02r2Ar39      [24]12616 	ljmp	00160$
   26D2                   12617 00244$:
   26D2 EC            [12]12618 	mov	a,r4
   26D3 24 DE         [12]12619 	add	a,#0xff - 0x21
   26D5 50 03         [24]12620 	jnc	00245$
   26D7 02r2Ar39      [24]12621 	ljmp	00160$
   26DA                   12622 00245$:
   26DA EC            [12]12623 	mov	a,r4
   26DB 24 F0         [12]12624 	add	a,#0xF0
   26DD FC            [12]12625 	mov	r4,a
   26DE 24 0A         [12]12626 	add	a,#(00246$-3-.)
   26E0 83            [24]12627 	movc	a,@a+pc
   26E1 F5 82         [12]12628 	mov	dpl,a
   26E3 EC            [12]12629 	mov	a,r4
   26E4 24 16         [12]12630 	add	a,#(00247$-3-.)
   26E6 83            [24]12631 	movc	a,@a+pc
   26E7 F5 83         [12]12632 	mov	dph,a
   26E9 E4            [12]12633 	clr	a
   26EA 73            [24]12634 	jmp	@a+dptr
   26EB                   12635 00246$:
   26EBrBD                12636 	.db	00120$
   26ECrBD                12637 	.db	00121$
   26EDrBD                12638 	.db	00122$
   26EErBD                12639 	.db	00123$
   26EFr0F                12640 	.db	00101$
   26F0r0F                12641 	.db	00102$
   26F1r0F                12642 	.db	00103$
   26F2r39                12643 	.db	00160$
   26F3r82                12644 	.db	00113$
   26F4r82                12645 	.db	00114$
   26F5r39                12646 	.db	00160$
   26F6r39                12647 	.db	00160$
   26F7r39                12648 	.db	00160$
   26F8r39                12649 	.db	00160$
   26F9r39                12650 	.db	00160$
   26FAr39                12651 	.db	00160$
   26FBr80                12652 	.db	00111$
   26FCr80                12653 	.db	00112$
   26FD                   12654 00247$:
   26FDs27                12655 	.db	00120$>>8
   26FEs27                12656 	.db	00121$>>8
   26FFs27                12657 	.db	00122$>>8
   2700s27                12658 	.db	00123$>>8
   2701s27                12659 	.db	00101$>>8
   2702s27                12660 	.db	00102$>>8
   2703s27                12661 	.db	00103$>>8
   2704s2A                12662 	.db	00160$>>8
   2705s27                12663 	.db	00113$>>8
   2706s27                12664 	.db	00114$>>8
   2707s2A                12665 	.db	00160$>>8
   2708s2A                12666 	.db	00160$>>8
   2709s2A                12667 	.db	00160$>>8
   270As2A                12668 	.db	00160$>>8
   270Bs2A                12669 	.db	00160$>>8
   270Cs2A                12670 	.db	00160$>>8
   270Ds27                12671 	.db	00111$>>8
   270Es27                12672 	.db	00112$>>8
                     270F 12673 	C$easyax5043.c$1917$2$397 ==.
                          12674 ;	../COMMON/easyax5043.c:1917: case AXRADIO_MODE_STREAM_TRANSMIT:
   270F                   12675 00101$:
                     270F 12676 	C$easyax5043.c$1918$2$397 ==.
                          12677 ;	../COMMON/easyax5043.c:1918: case AXRADIO_MODE_STREAM_TRANSMIT_UNENC:
   270F                   12678 00102$:
                     270F 12679 	C$easyax5043.c$1919$2$397 ==.
                          12680 ;	../COMMON/easyax5043.c:1919: case AXRADIO_MODE_STREAM_TRANSMIT_SCRAM:
   270F                   12681 00103$:
                     270F 12682 	C$easyax5043.c$1921$3$398 ==.
                          12683 ;	../COMMON/easyax5043.c:1921: uint16_t __autodata fifofree = radio_read16((uint16_t)&AX5043_FIFOFREE1);
   270F 90 40 2C      [24]12684 	mov	dptr,#_AX5043_FIFOFREE1
   2712 12r00r00      [24]12685 	lcall	_radio_read16
   2715 AB 82         [24]12686 	mov	r3,dpl
   2717 AC 83         [24]12687 	mov	r4,dph
                     2719 12688 	C$easyax5043.c$1922$3$398 ==.
                          12689 ;	../COMMON/easyax5043.c:1922: if (fifofree < pktlen + 3)
   2719 74 03         [12]12690 	mov	a,#0x03
   271B 25*05         [12]12691 	add	a,_axradio_transmit_PARM_3
   271D F9            [12]12692 	mov	r1,a
   271E E4            [12]12693 	clr	a
   271F 35*06         [12]12694 	addc	a,(_axradio_transmit_PARM_3 + 1)
   2721 FA            [12]12695 	mov	r2,a
   2722 C3            [12]12696 	clr	c
   2723 EB            [12]12697 	mov	a,r3
   2724 99            [12]12698 	subb	a,r1
   2725 EC            [12]12699 	mov	a,r4
   2726 9A            [12]12700 	subb	a,r2
   2727 50 06         [24]12701 	jnc	00105$
                     2729 12702 	C$easyax5043.c$1923$3$398 ==.
                          12703 ;	../COMMON/easyax5043.c:1923: return AXRADIO_ERR_INVALID;
   2729 75 82 04      [24]12704 	mov	dpl,#0x04
   272C 02r2Ar3C      [24]12705 	ljmp	00162$
   272F                   12706 00105$:
                     272F 12707 	C$easyax5043.c$1925$2$397 ==.
                          12708 ;	../COMMON/easyax5043.c:1925: if (pktlen) {
   272F E5*05         [12]12709 	mov	a,_axradio_transmit_PARM_3
   2731 45*06         [12]12710 	orl	a,(_axradio_transmit_PARM_3 + 1)
   2733 60 2D         [24]12711 	jz	00110$
                     2735 12712 	C$easyax5043.c$1926$3$397 ==.
                          12713 ;	../COMMON/easyax5043.c:1926: uint8_t __autodata i = pktlen;
   2735 AC*05         [24]12714 	mov	r4,_axradio_transmit_PARM_3
                     2737 12715 	C$easyax5043.c$1927$3$399 ==.
                          12716 ;	../COMMON/easyax5043.c:1927: AX5043_FIFODATA = AX5043_FIFOCMD_DATA | (7 << 5);
                     2737 12717 	C$easyax5043.c$1928$3$399 ==.
                          12718 ;	../COMMON/easyax5043.c:1928: AX5043_FIFODATA = i + 1;
   2737 90 40 29      [24]12719 	mov	dptr,#_AX5043_FIFODATA
   273A 74 E1         [12]12720 	mov	a,#0xE1
   273C F0            [24]12721 	movx	@dptr,a
   273D EC            [12]12722 	mov	a,r4
   273E 04            [12]12723 	inc	a
   273F F0            [24]12724 	movx	@dptr,a
                     2740 12725 	C$easyax5043.c$1929$3$399 ==.
                          12726 ;	../COMMON/easyax5043.c:1929: AX5043_FIFODATA = 0x08;
   2740 90 40 29      [24]12727 	mov	dptr,#_AX5043_FIFODATA
   2743 74 08         [12]12728 	mov	a,#0x08
   2745 F0            [24]12729 	movx	@dptr,a
                     2746 12730 	C$easyax5043.c$1930$1$396 ==.
                          12731 ;	../COMMON/easyax5043.c:1930: do {
   2746 A9*02         [24]12732 	mov	r1,_axradio_transmit_PARM_2
   2748 AA*03         [24]12733 	mov	r2,(_axradio_transmit_PARM_2 + 1)
   274A AB*04         [24]12734 	mov	r3,(_axradio_transmit_PARM_2 + 2)
   274C                   12735 00106$:
                     274C 12736 	C$easyax5043.c$1931$4$400 ==.
                          12737 ;	../COMMON/easyax5043.c:1931: AX5043_FIFODATA = *pkt++;
   274C 89 82         [24]12738 	mov	dpl,r1
   274E 8A 83         [24]12739 	mov	dph,r2
   2750 8B F0         [24]12740 	mov	b,r3
   2752 12r00r00      [24]12741 	lcall	__gptrget
   2755 F8            [12]12742 	mov	r0,a
   2756 A3            [24]12743 	inc	dptr
   2757 A9 82         [24]12744 	mov	r1,dpl
   2759 AA 83         [24]12745 	mov	r2,dph
   275B 90 40 29      [24]12746 	mov	dptr,#_AX5043_FIFODATA
   275E E8            [12]12747 	mov	a,r0
   275F F0            [24]12748 	movx	@dptr,a
                     2760 12749 	C$easyax5043.c$1932$3$399 ==.
                          12750 ;	../COMMON/easyax5043.c:1932: } while (--i);
   2760 DC EA         [24]12751 	djnz	r4,00106$
   2762                   12752 00110$:
                     2762 12753 	C$easyax5043.c$1934$2$397 ==.
                          12754 ;	../COMMON/easyax5043.c:1934: AX5043_FIFOSTAT =  4; // FIFO commit
   2762 90 40 28      [24]12755 	mov	dptr,#_AX5043_FIFOSTAT
   2765 74 04         [12]12756 	mov	a,#0x04
   2767 F0            [24]12757 	movx	@dptr,a
                     2768 12758 	C$easyax5043.c$1936$3$401 ==.
                          12759 ;	../COMMON/easyax5043.c:1936: uint8_t __autodata iesave = IE & 0x80;
   2768 74 80         [12]12760 	mov	a,#0x80
   276A 55 A8         [12]12761 	anl	a,_IE
   276C FC            [12]12762 	mov	r4,a
                     276D 12763 	C$easyax5043.c$1937$3$401 ==.
                          12764 ;	../COMMON/easyax5043.c:1937: EA = 0;
   276D C2 AF         [12]12765 	clr	_EA
                     276F 12766 	C$easyax5043.c$1938$3$401 ==.
                          12767 ;	../COMMON/easyax5043.c:1938: AX5043_IRQMASK0 |= 0x08;
   276F 90 40 07      [24]12768 	mov	dptr,#_AX5043_IRQMASK0
   2772 E0            [24]12769 	movx	a,@dptr
   2773 FB            [12]12770 	mov	r3,a
   2774 44 08         [12]12771 	orl	a,#0x08
   2776 F0            [24]12772 	movx	@dptr,a
                     2777 12773 	C$easyax5043.c$1939$3$401 ==.
                          12774 ;	../COMMON/easyax5043.c:1939: IE |= iesave;
   2777 EC            [12]12775 	mov	a,r4
   2778 42 A8         [12]12776 	orl	_IE,a
                     277A 12777 	C$easyax5043.c$1941$2$397 ==.
                          12778 ;	../COMMON/easyax5043.c:1941: return AXRADIO_ERR_NOERROR;
   277A 75 82 00      [24]12779 	mov	dpl,#0x00
   277D 02r2Ar3C      [24]12780 	ljmp	00162$
                     2780 12781 	C$easyax5043.c$1943$2$397 ==.
                          12782 ;	../COMMON/easyax5043.c:1943: case AXRADIO_MODE_SYNC_MASTER:
   2780                   12783 00111$:
                     2780 12784 	C$easyax5043.c$1944$2$397 ==.
                          12785 ;	../COMMON/easyax5043.c:1944: case AXRADIO_MODE_SYNC_ACK_MASTER:
   2780                   12786 00112$:
                     2780 12787 	C$easyax5043.c$1945$2$397 ==.
                          12788 ;	../COMMON/easyax5043.c:1945: goto dotx;
                     2780 12789 	C$easyax5043.c$1947$2$397 ==.
                          12790 ;	../COMMON/easyax5043.c:1947: case AXRADIO_MODE_ASYNC_RECEIVE:
   2780 80 48         [24]12791 	sjmp	00126$
   2782                   12792 00113$:
                     2782 12793 	C$easyax5043.c$1948$2$397 ==.
                          12794 ;	../COMMON/easyax5043.c:1948: case AXRADIO_MODE_WOR_RECEIVE:
   2782                   12795 00114$:
                     2782 12796 	C$easyax5043.c$1949$2$397 ==.
                          12797 ;	../COMMON/easyax5043.c:1949: if (axradio_syncstate != syncstate_off)
   2782 90r00r00      [24]12798 	mov	dptr,#_axradio_syncstate
   2785 E0            [24]12799 	movx	a,@dptr
   2786 FC            [12]12800 	mov	r4,a
   2787 60 06         [24]12801 	jz	00116$
                     2789 12802 	C$easyax5043.c$1950$2$397 ==.
                          12803 ;	../COMMON/easyax5043.c:1950: return AXRADIO_ERR_BUSY;
   2789 75 82 02      [24]12804 	mov	dpl,#0x02
   278C 02r2Ar3C      [24]12805 	ljmp	00162$
   278F                   12806 00116$:
                     278F 12807 	C$easyax5043.c$1951$2$397 ==.
                          12808 ;	../COMMON/easyax5043.c:1951: AX5043_IRQMASK1 = 0x00;
   278F 90 40 06      [24]12809 	mov	dptr,#_AX5043_IRQMASK1
                     2792 12810 	C$easyax5043.c$1952$2$397 ==.
                          12811 ;	../COMMON/easyax5043.c:1952: AX5043_IRQMASK0 = 0x00;
   2792 E4            [12]12812 	clr	a
   2793 F0            [24]12813 	movx	@dptr,a
   2794 90 40 07      [24]12814 	mov	dptr,#_AX5043_IRQMASK0
   2797 F0            [24]12815 	movx	@dptr,a
                     2798 12816 	C$easyax5043.c$1953$2$397 ==.
                          12817 ;	../COMMON/easyax5043.c:1953: AX5043_PWRMODE = AX5043_PWRSTATE_XTAL_ON;
   2798 90 40 02      [24]12818 	mov	dptr,#_AX5043_PWRMODE
   279B 74 05         [12]12819 	mov	a,#0x05
   279D F0            [24]12820 	movx	@dptr,a
                     279E 12821 	C$easyax5043.c$1954$2$397 ==.
                          12822 ;	../COMMON/easyax5043.c:1954: AX5043_FIFOSTAT = 3;
   279E 90 40 28      [24]12823 	mov	dptr,#_AX5043_FIFOSTAT
   27A1 74 03         [12]12824 	mov	a,#0x03
   27A3 F0            [24]12825 	movx	@dptr,a
                     27A4 12826 	C$easyax5043.c$1955$2$397 ==.
                          12827 ;	../COMMON/easyax5043.c:1955: while (AX5043_POWSTAT & 0x08);
   27A4                   12828 00117$:
   27A4 90 40 03      [24]12829 	mov	dptr,#_AX5043_POWSTAT
   27A7 E0            [24]12830 	movx	a,@dptr
   27A8 FC            [12]12831 	mov	r4,a
   27A9 20 E3 F8      [24]12832 	jb	acc.3,00117$
                     27AC 12833 	C$easyax5043.c$1956$2$397 ==.
                          12834 ;	../COMMON/easyax5043.c:1956: ax5043_init_registers_tx();
   27AC C0 07         [24]12835 	push	ar7
   27AE C0 06         [24]12836 	push	ar6
   27B0 C0 05         [24]12837 	push	ar5
   27B2 12r00r96      [24]12838 	lcall	_ax5043_init_registers_tx
   27B5 D0 05         [24]12839 	pop	ar5
   27B7 D0 06         [24]12840 	pop	ar6
   27B9 D0 07         [24]12841 	pop	ar7
                     27BB 12842 	C$easyax5043.c$1957$2$397 ==.
                          12843 ;	../COMMON/easyax5043.c:1957: goto dotx;
                     27BB 12844 	C$easyax5043.c$1959$2$397 ==.
                          12845 ;	../COMMON/easyax5043.c:1959: case AXRADIO_MODE_ASYNC_TRANSMIT:
   27BB 80 0D         [24]12846 	sjmp	00126$
   27BD                   12847 00120$:
                     27BD 12848 	C$easyax5043.c$1960$2$397 ==.
                          12849 ;	../COMMON/easyax5043.c:1960: case AXRADIO_MODE_WOR_TRANSMIT:
   27BD                   12850 00121$:
                     27BD 12851 	C$easyax5043.c$1961$2$397 ==.
                          12852 ;	../COMMON/easyax5043.c:1961: case AXRADIO_MODE_ACK_TRANSMIT:
   27BD                   12853 00122$:
                     27BD 12854 	C$easyax5043.c$1962$2$397 ==.
                          12855 ;	../COMMON/easyax5043.c:1962: case AXRADIO_MODE_WOR_ACK_TRANSMIT:
   27BD                   12856 00123$:
                     27BD 12857 	C$easyax5043.c$1963$2$397 ==.
                          12858 ;	../COMMON/easyax5043.c:1963: if (axradio_syncstate != syncstate_off)
   27BD 90r00r00      [24]12859 	mov	dptr,#_axradio_syncstate
   27C0 E0            [24]12860 	movx	a,@dptr
   27C1 FC            [12]12861 	mov	r4,a
   27C2 60 06         [24]12862 	jz	00126$
                     27C4 12863 	C$easyax5043.c$1964$2$397 ==.
                          12864 ;	../COMMON/easyax5043.c:1964: return AXRADIO_ERR_BUSY;
   27C4 75 82 02      [24]12865 	mov	dpl,#0x02
   27C7 02r2Ar3C      [24]12866 	ljmp	00162$
                     27CA 12867 	C$easyax5043.c$1965$2$397 ==.
                          12868 ;	../COMMON/easyax5043.c:1965: dotx:
   27CA                   12869 00126$:
                     27CA 12870 	C$easyax5043.c$1966$2$397 ==.
                          12871 ;	../COMMON/easyax5043.c:1966: axradio_ack_count = axradio_framing_ack_retransmissions;
   27CA 90r00r00      [24]12872 	mov	dptr,#_axradio_framing_ack_retransmissions
   27CD E4            [12]12873 	clr	a
   27CE 93            [24]12874 	movc	a,@a+dptr
   27CF 90r00r0A      [24]12875 	mov	dptr,#_axradio_ack_count
   27D2 F0            [24]12876 	movx	@dptr,a
                     27D3 12877 	C$easyax5043.c$1967$2$397 ==.
                          12878 ;	../COMMON/easyax5043.c:1967: ++axradio_ack_seqnr;
   27D3 90r00r0B      [24]12879 	mov	dptr,#_axradio_ack_seqnr
   27D6 E0            [24]12880 	movx	a,@dptr
   27D7 24 01         [12]12881 	add	a,#0x01
   27D9 F0            [24]12882 	movx	@dptr,a
                     27DA 12883 	C$easyax5043.c$1968$2$397 ==.
                          12884 ;	../COMMON/easyax5043.c:1968: axradio_txbuffer_len = pktlen + axradio_framing_maclen;
   27DA 90r00r00      [24]12885 	mov	dptr,#_axradio_framing_maclen
   27DD E4            [12]12886 	clr	a
   27DE 93            [24]12887 	movc	a,@a+dptr
   27DF FC            [12]12888 	mov	r4,a
   27E0 7B 00         [12]12889 	mov	r3,#0x00
   27E2 25*05         [12]12890 	add	a,_axradio_transmit_PARM_3
   27E4 FA            [12]12891 	mov	r2,a
   27E5 EB            [12]12892 	mov	a,r3
   27E6 35*06         [12]12893 	addc	a,(_axradio_transmit_PARM_3 + 1)
   27E8 FB            [12]12894 	mov	r3,a
   27E9 90r00r01      [24]12895 	mov	dptr,#_axradio_txbuffer_len
   27EC EA            [12]12896 	mov	a,r2
   27ED F0            [24]12897 	movx	@dptr,a
   27EE EB            [12]12898 	mov	a,r3
   27EF A3            [24]12899 	inc	dptr
   27F0 F0            [24]12900 	movx	@dptr,a
                     27F1 12901 	C$easyax5043.c$1969$2$397 ==.
                          12902 ;	../COMMON/easyax5043.c:1969: if (axradio_txbuffer_len > sizeof(axradio_txbuffer))
   27F1 C3            [12]12903 	clr	c
   27F2 74 04         [12]12904 	mov	a,#0x04
   27F4 9A            [12]12905 	subb	a,r2
   27F5 74 01         [12]12906 	mov	a,#0x01
   27F7 9B            [12]12907 	subb	a,r3
   27F8 50 06         [24]12908 	jnc	00128$
                     27FA 12909 	C$easyax5043.c$1970$2$397 ==.
                          12910 ;	../COMMON/easyax5043.c:1970: return AXRADIO_ERR_INVALID;
   27FA 75 82 04      [24]12911 	mov	dpl,#0x04
   27FD 02r2Ar3C      [24]12912 	ljmp	00162$
   2800                   12913 00128$:
                     2800 12914 	C$easyax5043.c$1971$2$397 ==.
                          12915 ;	../COMMON/easyax5043.c:1971: memset_xdata(axradio_txbuffer, 0, axradio_framing_maclen);
   2800 8C*00         [24]12916 	mov	_memset_PARM_3,r4
   2802 75*01 00      [24]12917 	mov	(_memset_PARM_3 + 1),#0x00
   2805 75*00 00      [24]12918 	mov	_memset_PARM_2,#0x00
   2808 90r00r26      [24]12919 	mov	dptr,#_axradio_txbuffer
   280B 75 F0 00      [24]12920 	mov	b,#0x00
   280E C0 07         [24]12921 	push	ar7
   2810 C0 06         [24]12922 	push	ar6
   2812 C0 05         [24]12923 	push	ar5
   2814 12r00r00      [24]12924 	lcall	_memset
                     2817 12925 	C$easyax5043.c$1972$2$397 ==.
                          12926 ;	../COMMON/easyax5043.c:1972: memcpy_xdatageneric(&axradio_txbuffer[axradio_framing_maclen], pkt, pktlen);
   2817 90r00r00      [24]12927 	mov	dptr,#_axradio_framing_maclen
   281A E4            [12]12928 	clr	a
   281B 93            [24]12929 	movc	a,@a+dptr
   281C 24r26         [12]12930 	add	a,#_axradio_txbuffer
   281E FC            [12]12931 	mov	r4,a
   281F E4            [12]12932 	clr	a
   2820 34s00         [12]12933 	addc	a,#(_axradio_txbuffer >> 8)
   2822 FB            [12]12934 	mov	r3,a
   2823 7A 00         [12]12935 	mov	r2,#0x00
   2825 85*02*00      [24]12936 	mov	_memcpy_PARM_2,_axradio_transmit_PARM_2
   2828 85*03*01      [24]12937 	mov	(_memcpy_PARM_2 + 1),(_axradio_transmit_PARM_2 + 1)
   282B 85*04*02      [24]12938 	mov	(_memcpy_PARM_2 + 2),(_axradio_transmit_PARM_2 + 2)
   282E 85*05*00      [24]12939 	mov	_memcpy_PARM_3,_axradio_transmit_PARM_3
   2831 85*06*01      [24]12940 	mov	(_memcpy_PARM_3 + 1),(_axradio_transmit_PARM_3 + 1)
   2834 8C 82         [24]12941 	mov	dpl,r4
   2836 8B 83         [24]12942 	mov	dph,r3
   2838 8A F0         [24]12943 	mov	b,r2
   283A 12r00r00      [24]12944 	lcall	_memcpy
   283D D0 05         [24]12945 	pop	ar5
   283F D0 06         [24]12946 	pop	ar6
   2841 D0 07         [24]12947 	pop	ar7
                     2843 12948 	C$easyax5043.c$1973$2$397 ==.
                          12949 ;	../COMMON/easyax5043.c:1973: if (axradio_framing_ack_seqnrpos != 0xff)
   2843 90r00r00      [24]12950 	mov	dptr,#_axradio_framing_ack_seqnrpos
   2846 E4            [12]12951 	clr	a
   2847 93            [24]12952 	movc	a,@a+dptr
   2848 FC            [12]12953 	mov	r4,a
   2849 BC FF 02      [24]12954 	cjne	r4,#0xFF,00256$
   284C 80 12         [24]12955 	sjmp	00130$
   284E                   12956 00256$:
                     284E 12957 	C$easyax5043.c$1974$2$397 ==.
                          12958 ;	../COMMON/easyax5043.c:1974: axradio_txbuffer[axradio_framing_ack_seqnrpos] = axradio_ack_seqnr;
   284E EC            [12]12959 	mov	a,r4
   284F 24r26         [12]12960 	add	a,#_axradio_txbuffer
   2851 FC            [12]12961 	mov	r4,a
   2852 E4            [12]12962 	clr	a
   2853 34s00         [12]12963 	addc	a,#(_axradio_txbuffer >> 8)
   2855 FB            [12]12964 	mov	r3,a
   2856 90r00r0B      [24]12965 	mov	dptr,#_axradio_ack_seqnr
   2859 E0            [24]12966 	movx	a,@dptr
   285A FA            [12]12967 	mov	r2,a
   285B 8C 82         [24]12968 	mov	dpl,r4
   285D 8B 83         [24]12969 	mov	dph,r3
   285F F0            [24]12970 	movx	@dptr,a
   2860                   12971 00130$:
                     2860 12972 	C$easyax5043.c$1975$2$397 ==.
                          12973 ;	../COMMON/easyax5043.c:1975: if (axradio_framing_destaddrpos != 0xff)
   2860 90r00r00      [24]12974 	mov	dptr,#_axradio_framing_destaddrpos
   2863 E4            [12]12975 	clr	a
   2864 93            [24]12976 	movc	a,@a+dptr
   2865 FC            [12]12977 	mov	r4,a
   2866 BC FF 02      [24]12978 	cjne	r4,#0xFF,00257$
   2869 80 24         [24]12979 	sjmp	00132$
   286B                   12980 00257$:
                     286B 12981 	C$easyax5043.c$1976$2$397 ==.
                          12982 ;	../COMMON/easyax5043.c:1976: memcpy_xdatageneric(&axradio_txbuffer[axradio_framing_destaddrpos], &addr->addr, axradio_framing_addrlen);
   286B EC            [12]12983 	mov	a,r4
   286C 24r26         [12]12984 	add	a,#_axradio_txbuffer
   286E FC            [12]12985 	mov	r4,a
   286F E4            [12]12986 	clr	a
   2870 34s00         [12]12987 	addc	a,#(_axradio_txbuffer >> 8)
   2872 FB            [12]12988 	mov	r3,a
   2873 7A 00         [12]12989 	mov	r2,#0x00
   2875 8D*00         [24]12990 	mov	_memcpy_PARM_2,r5
   2877 8E*01         [24]12991 	mov	(_memcpy_PARM_2 + 1),r6
   2879 8F*02         [24]12992 	mov	(_memcpy_PARM_2 + 2),r7
   287B 90r00r00      [24]12993 	mov	dptr,#_axradio_framing_addrlen
   287E E4            [12]12994 	clr	a
   287F 93            [24]12995 	movc	a,@a+dptr
   2880 FF            [12]12996 	mov	r7,a
   2881 8F*00         [24]12997 	mov	_memcpy_PARM_3,r7
   2883 75*01 00      [24]12998 	mov	(_memcpy_PARM_3 + 1),#0x00
   2886 8C 82         [24]12999 	mov	dpl,r4
   2888 8B 83         [24]13000 	mov	dph,r3
   288A 8A F0         [24]13001 	mov	b,r2
   288C 12r00r00      [24]13002 	lcall	_memcpy
   288F                   13003 00132$:
                     288F 13004 	C$easyax5043.c$1977$2$397 ==.
                          13005 ;	../COMMON/easyax5043.c:1977: if (axradio_framing_sourceaddrpos != 0xff)
   288F 90r00r00      [24]13006 	mov	dptr,#_axradio_framing_sourceaddrpos
   2892 E4            [12]13007 	clr	a
   2893 93            [24]13008 	movc	a,@a+dptr
   2894 FF            [12]13009 	mov	r7,a
   2895 BF FF 02      [24]13010 	cjne	r7,#0xFF,00258$
   2898 80 27         [24]13011 	sjmp	00134$
   289A                   13012 00258$:
                     289A 13013 	C$easyax5043.c$1978$2$397 ==.
                          13014 ;	../COMMON/easyax5043.c:1978: memcpy_xdata(&axradio_txbuffer[axradio_framing_sourceaddrpos], &axradio_localaddr.addr, axradio_framing_addrlen);
   289A EF            [12]13015 	mov	a,r7
   289B 24r26         [12]13016 	add	a,#_axradio_txbuffer
   289D FF            [12]13017 	mov	r7,a
   289E E4            [12]13018 	clr	a
   289F 34s00         [12]13019 	addc	a,#(_axradio_txbuffer >> 8)
   28A1 FE            [12]13020 	mov	r6,a
   28A2 7D 00         [12]13021 	mov	r5,#0x00
   28A4 75*00r1A      [24]13022 	mov	_memcpy_PARM_2,#_axradio_localaddr
   28A7 75*01s00      [24]13023 	mov	(_memcpy_PARM_2 + 1),#(_axradio_localaddr >> 8)
   28AA 75*02 00      [24]13024 	mov	(_memcpy_PARM_2 + 2),#0x00
   28AD 90r00r00      [24]13025 	mov	dptr,#_axradio_framing_addrlen
   28B0 E4            [12]13026 	clr	a
   28B1 93            [24]13027 	movc	a,@a+dptr
   28B2 FC            [12]13028 	mov	r4,a
   28B3 8C*00         [24]13029 	mov	_memcpy_PARM_3,r4
   28B5 75*01 00      [24]13030 	mov	(_memcpy_PARM_3 + 1),#0x00
   28B8 8F 82         [24]13031 	mov	dpl,r7
   28BA 8E 83         [24]13032 	mov	dph,r6
   28BC 8D F0         [24]13033 	mov	b,r5
   28BE 12r00r00      [24]13034 	lcall	_memcpy
   28C1                   13035 00134$:
                     28C1 13036 	C$easyax5043.c$1979$2$397 ==.
                          13037 ;	../COMMON/easyax5043.c:1979: if (axradio_framing_lenmask) {
   28C1 90r00r00      [24]13038 	mov	dptr,#_axradio_framing_lenmask
   28C4 E4            [12]13039 	clr	a
   28C5 93            [24]13040 	movc	a,@a+dptr
   28C6 FF            [12]13041 	mov	r7,a
   28C7 60 30         [24]13042 	jz	00136$
                     28C9 13043 	C$easyax5043.c$1980$3$402 ==.
                          13044 ;	../COMMON/easyax5043.c:1980: uint8_t __autodata len_byte = (uint8_t)(axradio_txbuffer_len - axradio_framing_lenoffs) & axradio_framing_lenmask; // if you prefer not counting the len byte itself, set LENOFFS = 1
   28C9 90r00r01      [24]13045 	mov	dptr,#_axradio_txbuffer_len
   28CC E0            [24]13046 	movx	a,@dptr
   28CD FD            [12]13047 	mov	r5,a
   28CE A3            [24]13048 	inc	dptr
   28CF E0            [24]13049 	movx	a,@dptr
   28D0 90r00r00      [24]13050 	mov	dptr,#_axradio_framing_lenoffs
   28D3 E4            [12]13051 	clr	a
   28D4 93            [24]13052 	movc	a,@a+dptr
   28D5 FE            [12]13053 	mov	r6,a
   28D6 ED            [12]13054 	mov	a,r5
   28D7 C3            [12]13055 	clr	c
   28D8 9E            [12]13056 	subb	a,r6
   28D9 5F            [12]13057 	anl	a,r7
   28DA FE            [12]13058 	mov	r6,a
                     28DB 13059 	C$easyax5043.c$1981$3$402 ==.
                          13060 ;	../COMMON/easyax5043.c:1981: axradio_txbuffer[axradio_framing_lenpos] = (axradio_txbuffer[axradio_framing_lenpos] & (uint8_t)~axradio_framing_lenmask) | len_byte;
   28DB 90r00r00      [24]13061 	mov	dptr,#_axradio_framing_lenpos
   28DE E4            [12]13062 	clr	a
   28DF 93            [24]13063 	movc	a,@a+dptr
   28E0 24r26         [12]13064 	add	a,#_axradio_txbuffer
   28E2 FD            [12]13065 	mov	r5,a
   28E3 E4            [12]13066 	clr	a
   28E4 34s00         [12]13067 	addc	a,#(_axradio_txbuffer >> 8)
   28E6 FC            [12]13068 	mov	r4,a
   28E7 8D 82         [24]13069 	mov	dpl,r5
   28E9 8C 83         [24]13070 	mov	dph,r4
   28EB E0            [24]13071 	movx	a,@dptr
   28EC FB            [12]13072 	mov	r3,a
   28ED EF            [12]13073 	mov	a,r7
   28EE F4            [12]13074 	cpl	a
   28EF FF            [12]13075 	mov	r7,a
   28F0 5B            [12]13076 	anl	a,r3
   28F1 42 06         [12]13077 	orl	ar6,a
   28F3 8D 82         [24]13078 	mov	dpl,r5
   28F5 8C 83         [24]13079 	mov	dph,r4
   28F7 EE            [12]13080 	mov	a,r6
   28F8 F0            [24]13081 	movx	@dptr,a
   28F9                   13082 00136$:
                     28F9 13083 	C$easyax5043.c$1983$2$397 ==.
                          13084 ;	../COMMON/easyax5043.c:1983: if (axradio_framing_swcrclen) {
   28F9 90r00r00      [24]13085 	mov	dptr,#_axradio_framing_swcrclen
   28FC E4            [12]13086 	clr	a
   28FD 93            [24]13087 	movc	a,@a+dptr
   28FE FF            [12]13088 	mov	r7,a
   28FF 60 2E         [24]13089 	jz	00138$
                     2901 13090 	C$easyax5043.c$1984$3$403 ==.
                          13091 ;	../COMMON/easyax5043.c:1984: axradio_framing_append_crc(axradio_txbuffer, axradio_txbuffer_len);
   2901 90r00r01      [24]13092 	mov	dptr,#_axradio_txbuffer_len
   2904 E0            [24]13093 	movx	a,@dptr
   2905 C0 E0         [24]13094 	push	acc
   2907 A3            [24]13095 	inc	dptr
   2908 E0            [24]13096 	movx	a,@dptr
   2909 C0 E0         [24]13097 	push	acc
   290B 90r00r26      [24]13098 	mov	dptr,#_axradio_txbuffer
   290E 12r00r00      [24]13099 	lcall	_axradio_framing_append_crc
   2911 15 81         [12]13100 	dec	sp
   2913 15 81         [12]13101 	dec	sp
                     2915 13102 	C$easyax5043.c$1985$3$403 ==.
                          13103 ;	../COMMON/easyax5043.c:1985: axradio_txbuffer_len += axradio_framing_swcrclen;
   2915 90r00r00      [24]13104 	mov	dptr,#_axradio_framing_swcrclen
   2918 E4            [12]13105 	clr	a
   2919 93            [24]13106 	movc	a,@a+dptr
   291A FF            [12]13107 	mov	r7,a
   291B 7E 00         [12]13108 	mov	r6,#0x00
   291D 90r00r01      [24]13109 	mov	dptr,#_axradio_txbuffer_len
   2920 E0            [24]13110 	movx	a,@dptr
   2921 FC            [12]13111 	mov	r4,a
   2922 A3            [24]13112 	inc	dptr
   2923 E0            [24]13113 	movx	a,@dptr
   2924 FD            [12]13114 	mov	r5,a
   2925 90r00r01      [24]13115 	mov	dptr,#_axradio_txbuffer_len
   2928 EF            [12]13116 	mov	a,r7
   2929 2C            [12]13117 	add	a,r4
   292A F0            [24]13118 	movx	@dptr,a
   292B EE            [12]13119 	mov	a,r6
   292C 3D            [12]13120 	addc	a,r5
   292D A3            [24]13121 	inc	dptr
   292E F0            [24]13122 	movx	@dptr,a
   292F                   13123 00138$:
                     292F 13124 	C$easyax5043.c$1987$2$397 ==.
                          13125 ;	../COMMON/easyax5043.c:1987: if (axradio_phy_pn9)
   292F 90r00r00      [24]13126 	mov	dptr,#_axradio_phy_pn9
   2932 E4            [12]13127 	clr	a
   2933 93            [24]13128 	movc	a,@a+dptr
   2934 FF            [12]13129 	mov	r7,a
   2935 60 2F         [24]13130 	jz	00140$
                     2937 13131 	C$easyax5043.c$1988$2$397 ==.
                          13132 ;	../COMMON/easyax5043.c:1988: pn9_buffer(axradio_txbuffer, axradio_txbuffer_len, 0x1ff, -(AX5043_ENCODING & 0x01));
   2937 90 40 11      [24]13133 	mov	dptr,#_AX5043_ENCODING
   293A E0            [24]13134 	movx	a,@dptr
   293B FF            [12]13135 	mov	r7,a
   293C 53 07 01      [24]13136 	anl	ar7,#0x01
   293F C3            [12]13137 	clr	c
   2940 E4            [12]13138 	clr	a
   2941 9F            [12]13139 	subb	a,r7
   2942 FF            [12]13140 	mov	r7,a
   2943 C0 07         [24]13141 	push	ar7
   2945 74 FF         [12]13142 	mov	a,#0xFF
   2947 C0 E0         [24]13143 	push	acc
   2949 74 01         [12]13144 	mov	a,#0x01
   294B C0 E0         [24]13145 	push	acc
   294D 90r00r01      [24]13146 	mov	dptr,#_axradio_txbuffer_len
   2950 E0            [24]13147 	movx	a,@dptr
   2951 C0 E0         [24]13148 	push	acc
   2953 A3            [24]13149 	inc	dptr
   2954 E0            [24]13150 	movx	a,@dptr
   2955 C0 E0         [24]13151 	push	acc
   2957 90r00r26      [24]13152 	mov	dptr,#_axradio_txbuffer
   295A 75 F0 00      [24]13153 	mov	b,#0x00
   295D 12r00r00      [24]13154 	lcall	_pn9_buffer
   2960 E5 81         [12]13155 	mov	a,sp
   2962 24 FB         [12]13156 	add	a,#0xfb
   2964 F5 81         [12]13157 	mov	sp,a
   2966                   13158 00140$:
                     2966 13159 	C$easyax5043.c$1989$2$397 ==.
                          13160 ;	../COMMON/easyax5043.c:1989: if (axradio_mode == AXRADIO_MODE_SYNC_MASTER ||
   2966 74 20         [12]13161 	mov	a,#0x20
   2968 B5*00 02      [24]13162 	cjne	a,_axradio_mode,00262$
   296B 80 05         [24]13163 	sjmp	00141$
   296D                   13164 00262$:
                     296D 13165 	C$easyax5043.c$1990$2$397 ==.
                          13166 ;	../COMMON/easyax5043.c:1990: axradio_mode == AXRADIO_MODE_SYNC_ACK_MASTER)
   296D 74 21         [12]13167 	mov	a,#0x21
   296F B5*00 06      [24]13168 	cjne	a,_axradio_mode,00142$
   2972                   13169 00141$:
                     2972 13170 	C$easyax5043.c$1991$2$397 ==.
                          13171 ;	../COMMON/easyax5043.c:1991: return AXRADIO_ERR_NOERROR;
   2972 75 82 00      [24]13172 	mov	dpl,#0x00
   2975 02r2Ar3C      [24]13173 	ljmp	00162$
   2978                   13174 00142$:
                     2978 13175 	C$easyax5043.c$1992$2$397 ==.
                          13176 ;	../COMMON/easyax5043.c:1992: if (axradio_mode == AXRADIO_MODE_WOR_TRANSMIT ||
   2978 74 11         [12]13177 	mov	a,#0x11
   297A B5*00 02      [24]13178 	cjne	a,_axradio_mode,00265$
   297D 80 05         [24]13179 	sjmp	00144$
   297F                   13180 00265$:
                     297F 13181 	C$easyax5043.c$1993$2$397 ==.
                          13182 ;	../COMMON/easyax5043.c:1993: axradio_mode == AXRADIO_MODE_WOR_ACK_TRANSMIT)
   297F 74 13         [12]13183 	mov	a,#0x13
   2981 B5*00 14      [24]13184 	cjne	a,_axradio_mode,00145$
   2984                   13185 00144$:
                     2984 13186 	C$easyax5043.c$1994$2$397 ==.
                          13187 ;	../COMMON/easyax5043.c:1994: axradio_txbuffer_cnt = axradio_phy_preamble_wor_longlen;
   2984 90r00r00      [24]13188 	mov	dptr,#_axradio_phy_preamble_wor_longlen
   2987 E4            [12]13189 	clr	a
   2988 93            [24]13190 	movc	a,@a+dptr
   2989 FE            [12]13191 	mov	r6,a
   298A 74 01         [12]13192 	mov	a,#0x01
   298C 93            [24]13193 	movc	a,@a+dptr
   298D FF            [12]13194 	mov	r7,a
   298E 90r00r03      [24]13195 	mov	dptr,#_axradio_txbuffer_cnt
   2991 EE            [12]13196 	mov	a,r6
   2992 F0            [24]13197 	movx	@dptr,a
   2993 EF            [12]13198 	mov	a,r7
   2994 A3            [24]13199 	inc	dptr
   2995 F0            [24]13200 	movx	@dptr,a
   2996 80 12         [24]13201 	sjmp	00146$
   2998                   13202 00145$:
                     2998 13203 	C$easyax5043.c$1996$2$397 ==.
                          13204 ;	../COMMON/easyax5043.c:1996: axradio_txbuffer_cnt = axradio_phy_preamble_longlen;
   2998 90r00r00      [24]13205 	mov	dptr,#_axradio_phy_preamble_longlen
   299B E4            [12]13206 	clr	a
   299C 93            [24]13207 	movc	a,@a+dptr
   299D FE            [12]13208 	mov	r6,a
   299E 74 01         [12]13209 	mov	a,#0x01
   29A0 93            [24]13210 	movc	a,@a+dptr
   29A1 FF            [12]13211 	mov	r7,a
   29A2 90r00r03      [24]13212 	mov	dptr,#_axradio_txbuffer_cnt
   29A5 EE            [12]13213 	mov	a,r6
   29A6 F0            [24]13214 	movx	@dptr,a
   29A7 EF            [12]13215 	mov	a,r7
   29A8 A3            [24]13216 	inc	dptr
   29A9 F0            [24]13217 	movx	@dptr,a
   29AA                   13218 00146$:
                     29AA 13219 	C$easyax5043.c$1997$2$397 ==.
                          13220 ;	../COMMON/easyax5043.c:1997: if (axradio_phy_lbt_retries) {
   29AA 90r00r00      [24]13221 	mov	dptr,#_axradio_phy_lbt_retries
   29AD E4            [12]13222 	clr	a
   29AE 93            [24]13223 	movc	a,@a+dptr
   29AF FF            [12]13224 	mov	r7,a
   29B0 60 79         [24]13225 	jz	00159$
                     29B2 13226 	C$easyax5043.c$1998$3$404 ==.
                          13227 ;	../COMMON/easyax5043.c:1998: switch (axradio_mode) {
   29B2 AF*00         [24]13228 	mov	r7,_axradio_mode
   29B4 BF 10 02      [24]13229 	cjne	r7,#0x10,00269$
   29B7 80 21         [24]13230 	sjmp	00155$
   29B9                   13231 00269$:
   29B9 BF 11 02      [24]13232 	cjne	r7,#0x11,00270$
   29BC 80 1C         [24]13233 	sjmp	00155$
   29BE                   13234 00270$:
   29BE BF 12 02      [24]13235 	cjne	r7,#0x12,00271$
   29C1 80 17         [24]13236 	sjmp	00155$
   29C3                   13237 00271$:
   29C3 BF 13 02      [24]13238 	cjne	r7,#0x13,00272$
   29C6 80 12         [24]13239 	sjmp	00155$
   29C8                   13240 00272$:
   29C8 BF 18 02      [24]13241 	cjne	r7,#0x18,00273$
   29CB 80 0D         [24]13242 	sjmp	00155$
   29CD                   13243 00273$:
   29CD BF 19 02      [24]13244 	cjne	r7,#0x19,00274$
   29D0 80 08         [24]13245 	sjmp	00155$
   29D2                   13246 00274$:
   29D2 BF 1A 02      [24]13247 	cjne	r7,#0x1A,00275$
   29D5 80 03         [24]13248 	sjmp	00155$
   29D7                   13249 00275$:
   29D7 BF 1B 51      [24]13250 	cjne	r7,#0x1B,00159$
                     29DA 13251 	C$easyax5043.c$2006$4$405 ==.
                          13252 ;	../COMMON/easyax5043.c:2006: case AXRADIO_MODE_ACK_RECEIVE:
   29DA                   13253 00155$:
                     29DA 13254 	C$easyax5043.c$2007$4$405 ==.
                          13255 ;	../COMMON/easyax5043.c:2007: ax5043_off_xtal();
   29DA 12r0Cr53      [24]13256 	lcall	_ax5043_off_xtal
                     29DD 13257 	C$easyax5043.c$2008$4$405 ==.
                          13258 ;	../COMMON/easyax5043.c:2008: ax5043_init_registers_rx();
   29DD 12r00rCC      [24]13259 	lcall	_ax5043_init_registers_rx
                     29E0 13260 	C$easyax5043.c$2009$4$405 ==.
                          13261 ;	../COMMON/easyax5043.c:2009: AX5043_RSSIREFERENCE = axradio_phy_rssireference;
   29E0 90r00r00      [24]13262 	mov	dptr,#_axradio_phy_rssireference
   29E3 E4            [12]13263 	clr	a
   29E4 93            [24]13264 	movc	a,@a+dptr
   29E5 90 42 2C      [24]13265 	mov	dptr,#_AX5043_RSSIREFERENCE
   29E8 F0            [24]13266 	movx	@dptr,a
                     29E9 13267 	C$easyax5043.c$2010$4$405 ==.
                          13268 ;	../COMMON/easyax5043.c:2010: AX5043_PWRMODE = AX5043_PWRSTATE_FULL_RX;
   29E9 90 40 02      [24]13269 	mov	dptr,#_AX5043_PWRMODE
   29EC 74 09         [12]13270 	mov	a,#0x09
   29EE F0            [24]13271 	movx	@dptr,a
                     29EF 13272 	C$easyax5043.c$2011$4$405 ==.
                          13273 ;	../COMMON/easyax5043.c:2011: axradio_ack_count = axradio_phy_lbt_retries;
   29EF 90r00r00      [24]13274 	mov	dptr,#_axradio_phy_lbt_retries
   29F2 E4            [12]13275 	clr	a
   29F3 93            [24]13276 	movc	a,@a+dptr
   29F4 90r00r0A      [24]13277 	mov	dptr,#_axradio_ack_count
   29F7 F0            [24]13278 	movx	@dptr,a
                     29F8 13279 	C$easyax5043.c$2012$4$405 ==.
                          13280 ;	../COMMON/easyax5043.c:2012: axradio_syncstate = syncstate_lbt;
   29F8 90r00r00      [24]13281 	mov	dptr,#_axradio_syncstate
   29FB 74 01         [12]13282 	mov	a,#0x01
   29FD F0            [24]13283 	movx	@dptr,a
                     29FE 13284 	C$easyax5043.c$2013$4$405 ==.
                          13285 ;	../COMMON/easyax5043.c:2013: wtimer_remove(&axradio_timer);
   29FE 90r02r85      [24]13286 	mov	dptr,#_axradio_timer
   2A01 12r00r00      [24]13287 	lcall	_wtimer_remove
                     2A04 13288 	C$easyax5043.c$2014$4$405 ==.
                          13289 ;	../COMMON/easyax5043.c:2014: axradio_timer.time = axradio_phy_cs_period;
   2A04 90r00r00      [24]13290 	mov	dptr,#_axradio_phy_cs_period
   2A07 E4            [12]13291 	clr	a
   2A08 93            [24]13292 	movc	a,@a+dptr
   2A09 FE            [12]13293 	mov	r6,a
   2A0A 74 01         [12]13294 	mov	a,#0x01
   2A0C 93            [24]13295 	movc	a,@a+dptr
   2A0D FF            [12]13296 	mov	r7,a
   2A0E 7D 00         [12]13297 	mov	r5,#0x00
   2A10 7C 00         [12]13298 	mov	r4,#0x00
   2A12 90r02r89      [24]13299 	mov	dptr,#(_axradio_timer + 0x0004)
   2A15 EE            [12]13300 	mov	a,r6
   2A16 F0            [24]13301 	movx	@dptr,a
   2A17 EF            [12]13302 	mov	a,r7
   2A18 A3            [24]13303 	inc	dptr
   2A19 F0            [24]13304 	movx	@dptr,a
   2A1A ED            [12]13305 	mov	a,r5
   2A1B A3            [24]13306 	inc	dptr
   2A1C F0            [24]13307 	movx	@dptr,a
   2A1D EC            [12]13308 	mov	a,r4
   2A1E A3            [24]13309 	inc	dptr
   2A1F F0            [24]13310 	movx	@dptr,a
                     2A20 13311 	C$easyax5043.c$2015$4$405 ==.
                          13312 ;	../COMMON/easyax5043.c:2015: wtimer0_addrelative(&axradio_timer);
   2A20 90r02r85      [24]13313 	mov	dptr,#_axradio_timer
   2A23 12r00r00      [24]13314 	lcall	_wtimer0_addrelative
                     2A26 13315 	C$easyax5043.c$2016$4$405 ==.
                          13316 ;	../COMMON/easyax5043.c:2016: return AXRADIO_ERR_NOERROR;
   2A26 75 82 00      [24]13317 	mov	dpl,#0x00
                     2A29 13318 	C$easyax5043.c$2020$2$397 ==.
                          13319 ;	../COMMON/easyax5043.c:2020: }
   2A29 80 11         [24]13320 	sjmp	00162$
   2A2B                   13321 00159$:
                     2A2B 13322 	C$easyax5043.c$2022$2$397 ==.
                          13323 ;	../COMMON/easyax5043.c:2022: axradio_syncstate = syncstate_asynctx;
   2A2B 90r00r00      [24]13324 	mov	dptr,#_axradio_syncstate
   2A2E 74 02         [12]13325 	mov	a,#0x02
   2A30 F0            [24]13326 	movx	@dptr,a
                     2A31 13327 	C$easyax5043.c$2023$2$397 ==.
                          13328 ;	../COMMON/easyax5043.c:2023: ax5043_prepare_tx();
   2A31 12r0Cr24      [24]13329 	lcall	_ax5043_prepare_tx
                     2A34 13330 	C$easyax5043.c$2024$2$397 ==.
                          13331 ;	../COMMON/easyax5043.c:2024: return AXRADIO_ERR_NOERROR;
   2A34 75 82 00      [24]13332 	mov	dpl,#0x00
                     2A37 13333 	C$easyax5043.c$2026$2$397 ==.
                          13334 ;	../COMMON/easyax5043.c:2026: default:
   2A37 80 03         [24]13335 	sjmp	00162$
   2A39                   13336 00160$:
                     2A39 13337 	C$easyax5043.c$2027$2$397 ==.
                          13338 ;	../COMMON/easyax5043.c:2027: return AXRADIO_ERR_NOTSUPPORTED;
   2A39 75 82 01      [24]13339 	mov	dpl,#0x01
                     2A3C 13340 	C$easyax5043.c$2028$1$396 ==.
                          13341 ;	../COMMON/easyax5043.c:2028: }
   2A3C                   13342 00162$:
                     2A3C 13343 	C$easyax5043.c$2029$1$396 ==.
                     2A3C 13344 	XG$axradio_transmit$0$0 ==.
   2A3C 22            [24]13345 	ret
                          13346 ;------------------------------------------------------------
                          13347 ;Allocation info for local variables in function 'axradio_set_paramsets'
                          13348 ;------------------------------------------------------------
                          13349 ;val                       Allocated to registers r7 
                          13350 ;------------------------------------------------------------
                     2A3D 13351 	Feasyax5043$axradio_set_paramsets$0$0 ==.
                     2A3D 13352 	C$easyax5043.c$2031$1$396 ==.
                          13353 ;	../COMMON/easyax5043.c:2031: static __reentrantb uint8_t axradio_set_paramsets(uint8_t val) __reentrant
                          13354 ;	-----------------------------------------
                          13355 ;	 function axradio_set_paramsets
                          13356 ;	-----------------------------------------
   2A3D                   13357 _axradio_set_paramsets:
   2A3D AF 82         [24]13358 	mov	r7,dpl
                     2A3F 13359 	C$easyax5043.c$2033$1$407 ==.
                          13360 ;	../COMMON/easyax5043.c:2033: if (axradio_mode != AXRADIO_MODE_STREAM_RECEIVE &&
   2A3F 74 1C         [12]13361 	mov	a,#0x1C
   2A41 B5*00 02      [24]13362 	cjne	a,_axradio_mode,00116$
   2A44 80 13         [24]13363 	sjmp	00102$
   2A46                   13364 00116$:
                     2A46 13365 	C$easyax5043.c$2034$1$407 ==.
                          13366 ;	../COMMON/easyax5043.c:2034: axradio_mode != AXRADIO_MODE_STREAM_RECEIVE_UNENC &&
   2A46 74 1D         [12]13367 	mov	a,#0x1D
   2A48 B5*00 02      [24]13368 	cjne	a,_axradio_mode,00117$
   2A4B 80 0C         [24]13369 	sjmp	00102$
   2A4D                   13370 00117$:
                     2A4D 13371 	C$easyax5043.c$2035$1$407 ==.
                          13372 ;	../COMMON/easyax5043.c:2035: axradio_mode != AXRADIO_MODE_STREAM_RECEIVE_SCRAM)
   2A4D 74 1E         [12]13373 	mov	a,#0x1E
   2A4F B5*00 02      [24]13374 	cjne	a,_axradio_mode,00118$
   2A52 80 05         [24]13375 	sjmp	00102$
   2A54                   13376 00118$:
                     2A54 13377 	C$easyax5043.c$2036$1$407 ==.
                          13378 ;	../COMMON/easyax5043.c:2036: return AXRADIO_ERR_NOTSUPPORTED;
   2A54 75 82 01      [24]13379 	mov	dpl,#0x01
   2A57 80 08         [24]13380 	sjmp	00105$
   2A59                   13381 00102$:
                     2A59 13382 	C$easyax5043.c$2037$1$407 ==.
                          13383 ;	../COMMON/easyax5043.c:2037: AX5043_RXPARAMSETS = val;
   2A59 90 41 17      [24]13384 	mov	dptr,#_AX5043_RXPARAMSETS
   2A5C EF            [12]13385 	mov	a,r7
   2A5D F0            [24]13386 	movx	@dptr,a
                     2A5E 13387 	C$easyax5043.c$2038$1$407 ==.
                          13388 ;	../COMMON/easyax5043.c:2038: return AXRADIO_ERR_NOERROR;
   2A5E 75 82 00      [24]13389 	mov	dpl,#0x00
   2A61                   13390 00105$:
                     2A61 13391 	C$easyax5043.c$2039$1$407 ==.
                     2A61 13392 	XFeasyax5043$axradio_set_paramsets$0$0 ==.
   2A61 22            [24]13393 	ret
                          13394 ;------------------------------------------------------------
                          13395 ;Allocation info for local variables in function 'axradio_agc_freeze'
                          13396 ;------------------------------------------------------------
                     2A62 13397 	G$axradio_agc_freeze$0$0 ==.
                     2A62 13398 	C$easyax5043.c$2041$1$407 ==.
                          13399 ;	../COMMON/easyax5043.c:2041: uint8_t axradio_agc_freeze(void)
                          13400 ;	-----------------------------------------
                          13401 ;	 function axradio_agc_freeze
                          13402 ;	-----------------------------------------
   2A62                   13403 _axradio_agc_freeze:
                     2A62 13404 	C$easyax5043.c$2043$1$409 ==.
                          13405 ;	../COMMON/easyax5043.c:2043: return axradio_set_paramsets(0xff);
   2A62 75 82 FF      [24]13406 	mov	dpl,#0xFF
   2A65 12r2Ar3D      [24]13407 	lcall	_axradio_set_paramsets
                     2A68 13408 	C$easyax5043.c$2044$1$409 ==.
                     2A68 13409 	XG$axradio_agc_freeze$0$0 ==.
   2A68 22            [24]13410 	ret
                          13411 ;------------------------------------------------------------
                          13412 ;Allocation info for local variables in function 'axradio_agc_thaw'
                          13413 ;------------------------------------------------------------
                     2A69 13414 	G$axradio_agc_thaw$0$0 ==.
                     2A69 13415 	C$easyax5043.c$2046$1$409 ==.
                          13416 ;	../COMMON/easyax5043.c:2046: uint8_t axradio_agc_thaw(void)
                          13417 ;	-----------------------------------------
                          13418 ;	 function axradio_agc_thaw
                          13419 ;	-----------------------------------------
   2A69                   13420 _axradio_agc_thaw:
                     2A69 13421 	C$easyax5043.c$2048$1$411 ==.
                          13422 ;	../COMMON/easyax5043.c:2048: return axradio_set_paramsets(0x00);
   2A69 75 82 00      [24]13423 	mov	dpl,#0x00
   2A6C 12r2Ar3D      [24]13424 	lcall	_axradio_set_paramsets
                     2A6F 13425 	C$easyax5043.c$2049$1$411 ==.
                     2A6F 13426 	XG$axradio_agc_thaw$0$0 ==.
   2A6F 22            [24]13427 	ret
                          13428 	.area CSEG    (CODE)
                          13429 	.area CONST   (CODE)
                     0000 13430 Feasyax5043$_str_0$0$0 == .
   0000                   13431 __str_0:
   0000 52 58             13432 	.ascii "RX"
   0002 0A                13433 	.db 0x0A
   0003 00                13434 	.db 0x00
                          13435 	.area XINIT   (CODE)
                     0000 13436 Feasyax5043$__xinit_f30_saved$0$0 == .
   0000                   13437 __xinit__f30_saved:
   0000 3F                13438 	.db #0x3F	; 63
                     0001 13439 Feasyax5043$__xinit_f31_saved$0$0 == .
   0001                   13440 __xinit__f31_saved:
   0001 F0                13441 	.db #0xF0	; 240
                     0002 13442 Feasyax5043$__xinit_f32_saved$0$0 == .
   0002                   13443 __xinit__f32_saved:
   0002 3F                13444 	.db #0x3F	; 63
                     0003 13445 Feasyax5043$__xinit_f33_saved$0$0 == .
   0003                   13446 __xinit__f33_saved:
   0003 F0                13447 	.db #0xF0	; 240
                          13448 	.area CABS    (ABS,CODE)
