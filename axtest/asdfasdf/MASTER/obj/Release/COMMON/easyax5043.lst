                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.2.0 #8008 (Jul  6 2012) (MINGW32)
                              4 ; This file was generated Mon Dec 23 14:38:16 2013
                              5 ;--------------------------------------------------------
                              6 	.module easyax5043
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _ax5043_init_registers_rx
                             13 	.globl _ax5043_init_registers_tx
                             14 	.globl _memset
                             15 	.globl _memcpy
                             16 	.globl _wtimer_remove_callback
                             17 	.globl _wtimer_add_callback
                             18 	.globl _wtimer_remove
                             19 	.globl _wtimer1_addrelative
                             20 	.globl _wtimer0_addrelative
                             21 	.globl _wtimer0_addabsolute
                             22 	.globl _wtimer0_curtime
                             23 	.globl _wtimer_runcallbacks
                             24 	.globl _wtimer_idle
                             25 	.globl _ax5043_writefifo
                             26 	.globl _ax5043_readfifo
                             27 	.globl _ax5043_wakeup_deepsleep
                             28 	.globl _ax5043_enter_deepsleep
                             29 	.globl _ax5043_reset
                             30 	.globl _radio_read24
                             31 	.globl _radio_read16
                             32 	.globl _pn9_buffer
                             33 	.globl _pn9_advance_byte
                             34 	.globl _pn9_advance_bits
                             35 	.globl _axradio_framing_append_crc
                             36 	.globl _axradio_framing_check_crc
                             37 	.globl _ax5043_set_registers_rx
                             38 	.globl _ax5043_set_registers_tx
                             39 	.globl _ax5043_set_registers
                             40 	.globl _axradio_statuschange
                             41 	.globl _axradio_conv_timeinterval_totimer0
                             42 	.globl _checksignedlimit32
                             43 	.globl _checksignedlimit16
                             44 	.globl _signedlimit16
                             45 	.globl _signextend24
                             46 	.globl _signextend20
                             47 	.globl _PORTC_7
                             48 	.globl _PORTC_6
                             49 	.globl _PORTC_5
                             50 	.globl _PORTC_4
                             51 	.globl _PORTC_3
                             52 	.globl _PORTC_2
                             53 	.globl _PORTC_1
                             54 	.globl _PORTC_0
                             55 	.globl _PORTB_7
                             56 	.globl _PORTB_6
                             57 	.globl _PORTB_5
                             58 	.globl _PORTB_4
                             59 	.globl _PORTB_3
                             60 	.globl _PORTB_2
                             61 	.globl _PORTB_1
                             62 	.globl _PORTB_0
                             63 	.globl _PORTA_7
                             64 	.globl _PORTA_6
                             65 	.globl _PORTA_5
                             66 	.globl _PORTA_4
                             67 	.globl _PORTA_3
                             68 	.globl _PORTA_2
                             69 	.globl _PORTA_1
                             70 	.globl _PORTA_0
                             71 	.globl _PINC_7
                             72 	.globl _PINC_6
                             73 	.globl _PINC_5
                             74 	.globl _PINC_4
                             75 	.globl _PINC_3
                             76 	.globl _PINC_2
                             77 	.globl _PINC_1
                             78 	.globl _PINC_0
                             79 	.globl _PINB_7
                             80 	.globl _PINB_6
                             81 	.globl _PINB_5
                             82 	.globl _PINB_4
                             83 	.globl _PINB_3
                             84 	.globl _PINB_2
                             85 	.globl _PINB_1
                             86 	.globl _PINB_0
                             87 	.globl _PINA_7
                             88 	.globl _PINA_6
                             89 	.globl _PINA_5
                             90 	.globl _PINA_4
                             91 	.globl _PINA_3
                             92 	.globl _PINA_2
                             93 	.globl _PINA_1
                             94 	.globl _PINA_0
                             95 	.globl _CY
                             96 	.globl _AC
                             97 	.globl _F0
                             98 	.globl _RS1
                             99 	.globl _RS0
                            100 	.globl _OV
                            101 	.globl _F1
                            102 	.globl _P
                            103 	.globl _IP_7
                            104 	.globl _IP_6
                            105 	.globl _IP_5
                            106 	.globl _IP_4
                            107 	.globl _IP_3
                            108 	.globl _IP_2
                            109 	.globl _IP_1
                            110 	.globl _IP_0
                            111 	.globl _EA
                            112 	.globl _IE_7
                            113 	.globl _IE_6
                            114 	.globl _IE_5
                            115 	.globl _IE_4
                            116 	.globl _IE_3
                            117 	.globl _IE_2
                            118 	.globl _IE_1
                            119 	.globl _IE_0
                            120 	.globl _EIP_7
                            121 	.globl _EIP_6
                            122 	.globl _EIP_5
                            123 	.globl _EIP_4
                            124 	.globl _EIP_3
                            125 	.globl _EIP_2
                            126 	.globl _EIP_1
                            127 	.globl _EIP_0
                            128 	.globl _EIE_7
                            129 	.globl _EIE_6
                            130 	.globl _EIE_5
                            131 	.globl _EIE_4
                            132 	.globl _EIE_3
                            133 	.globl _EIE_2
                            134 	.globl _EIE_1
                            135 	.globl _EIE_0
                            136 	.globl _E2IP_7
                            137 	.globl _E2IP_6
                            138 	.globl _E2IP_5
                            139 	.globl _E2IP_4
                            140 	.globl _E2IP_3
                            141 	.globl _E2IP_2
                            142 	.globl _E2IP_1
                            143 	.globl _E2IP_0
                            144 	.globl _E2IE_7
                            145 	.globl _E2IE_6
                            146 	.globl _E2IE_5
                            147 	.globl _E2IE_4
                            148 	.globl _E2IE_3
                            149 	.globl _E2IE_2
                            150 	.globl _E2IE_1
                            151 	.globl _E2IE_0
                            152 	.globl _B_7
                            153 	.globl _B_6
                            154 	.globl _B_5
                            155 	.globl _B_4
                            156 	.globl _B_3
                            157 	.globl _B_2
                            158 	.globl _B_1
                            159 	.globl _B_0
                            160 	.globl _ACC_7
                            161 	.globl _ACC_6
                            162 	.globl _ACC_5
                            163 	.globl _ACC_4
                            164 	.globl _ACC_3
                            165 	.globl _ACC_2
                            166 	.globl _ACC_1
                            167 	.globl _ACC_0
                            168 	.globl _WTSTAT
                            169 	.globl _WTIRQEN
                            170 	.globl _WTEVTD
                            171 	.globl _WTEVTD1
                            172 	.globl _WTEVTD0
                            173 	.globl _WTEVTC
                            174 	.globl _WTEVTC1
                            175 	.globl _WTEVTC0
                            176 	.globl _WTEVTB
                            177 	.globl _WTEVTB1
                            178 	.globl _WTEVTB0
                            179 	.globl _WTEVTA
                            180 	.globl _WTEVTA1
                            181 	.globl _WTEVTA0
                            182 	.globl _WTCNTR1
                            183 	.globl _WTCNTB
                            184 	.globl _WTCNTB1
                            185 	.globl _WTCNTB0
                            186 	.globl _WTCNTA
                            187 	.globl _WTCNTA1
                            188 	.globl _WTCNTA0
                            189 	.globl _WTCFGB
                            190 	.globl _WTCFGA
                            191 	.globl _WDTRESET
                            192 	.globl _WDTCFG
                            193 	.globl _U1STATUS
                            194 	.globl _U1SHREG
                            195 	.globl _U1MODE
                            196 	.globl _U1CTRL
                            197 	.globl _U0STATUS
                            198 	.globl _U0SHREG
                            199 	.globl _U0MODE
                            200 	.globl _U0CTRL
                            201 	.globl _T2STATUS
                            202 	.globl _T2PERIOD
                            203 	.globl _T2PERIOD1
                            204 	.globl _T2PERIOD0
                            205 	.globl _T2MODE
                            206 	.globl _T2CNT
                            207 	.globl _T2CNT1
                            208 	.globl _T2CNT0
                            209 	.globl _T2CLKSRC
                            210 	.globl _T1STATUS
                            211 	.globl _T1PERIOD
                            212 	.globl _T1PERIOD1
                            213 	.globl _T1PERIOD0
                            214 	.globl _T1MODE
                            215 	.globl _T1CNT
                            216 	.globl _T1CNT1
                            217 	.globl _T1CNT0
                            218 	.globl _T1CLKSRC
                            219 	.globl _T0STATUS
                            220 	.globl _T0PERIOD
                            221 	.globl _T0PERIOD1
                            222 	.globl _T0PERIOD0
                            223 	.globl _T0MODE
                            224 	.globl _T0CNT
                            225 	.globl _T0CNT1
                            226 	.globl _T0CNT0
                            227 	.globl _T0CLKSRC
                            228 	.globl _SPSTATUS
                            229 	.globl _SPSHREG
                            230 	.globl _SPMODE
                            231 	.globl _SPCLKSRC
                            232 	.globl _RADIOSTAT
                            233 	.globl _RADIOSTAT1
                            234 	.globl _RADIOSTAT0
                            235 	.globl _RADIODATA
                            236 	.globl _RADIODATA3
                            237 	.globl _RADIODATA2
                            238 	.globl _RADIODATA1
                            239 	.globl _RADIODATA0
                            240 	.globl _RADIOADDR
                            241 	.globl _RADIOADDR1
                            242 	.globl _RADIOADDR0
                            243 	.globl _RADIOACC
                            244 	.globl _OC1STATUS
                            245 	.globl _OC1PIN
                            246 	.globl _OC1MODE
                            247 	.globl _OC1COMP
                            248 	.globl _OC1COMP1
                            249 	.globl _OC1COMP0
                            250 	.globl _OC0STATUS
                            251 	.globl _OC0PIN
                            252 	.globl _OC0MODE
                            253 	.globl _OC0COMP
                            254 	.globl _OC0COMP1
                            255 	.globl _OC0COMP0
                            256 	.globl _NVSTATUS
                            257 	.globl _NVKEY
                            258 	.globl _NVDATA
                            259 	.globl _NVDATA1
                            260 	.globl _NVDATA0
                            261 	.globl _NVADDR
                            262 	.globl _NVADDR1
                            263 	.globl _NVADDR0
                            264 	.globl _IC1STATUS
                            265 	.globl _IC1MODE
                            266 	.globl _IC1CAPT
                            267 	.globl _IC1CAPT1
                            268 	.globl _IC1CAPT0
                            269 	.globl _IC0STATUS
                            270 	.globl _IC0MODE
                            271 	.globl _IC0CAPT
                            272 	.globl _IC0CAPT1
                            273 	.globl _IC0CAPT0
                            274 	.globl _PORTR
                            275 	.globl _PORTC
                            276 	.globl _PORTB
                            277 	.globl _PORTA
                            278 	.globl _PINR
                            279 	.globl _PINC
                            280 	.globl _PINB
                            281 	.globl _PINA
                            282 	.globl _DIRR
                            283 	.globl _DIRC
                            284 	.globl _DIRB
                            285 	.globl _DIRA
                            286 	.globl _DBGLNKSTAT
                            287 	.globl _DBGLNKBUF
                            288 	.globl _CODECONFIG
                            289 	.globl _CLKSTAT
                            290 	.globl _CLKCON
                            291 	.globl _ANALOGCOMP
                            292 	.globl _ADCCONV
                            293 	.globl _ADCCLKSRC
                            294 	.globl _ADCCH3CONFIG
                            295 	.globl _ADCCH2CONFIG
                            296 	.globl _ADCCH1CONFIG
                            297 	.globl _ADCCH0CONFIG
                            298 	.globl __XPAGE
                            299 	.globl _XPAGE
                            300 	.globl _SP
                            301 	.globl _PSW
                            302 	.globl _PCON
                            303 	.globl _IP
                            304 	.globl _IE
                            305 	.globl _EIP
                            306 	.globl _EIE
                            307 	.globl _E2IP
                            308 	.globl _E2IE
                            309 	.globl _DPS
                            310 	.globl _DPTR1
                            311 	.globl _DPTR0
                            312 	.globl _DPL1
                            313 	.globl _DPL
                            314 	.globl _DPH1
                            315 	.globl _DPH
                            316 	.globl _B
                            317 	.globl _ACC
                            318 	.globl _f33_saved
                            319 	.globl _f32_saved
                            320 	.globl _f31_saved
                            321 	.globl _f30_saved
                            322 	.globl _axradio_timer
                            323 	.globl _axradio_cb_transmitdata
                            324 	.globl _axradio_cb_transmitend
                            325 	.globl _axradio_cb_transmitstart
                            326 	.globl _axradio_cb_channelstate
                            327 	.globl _axradio_cb_receivesfd
                            328 	.globl _axradio_cb_receive
                            329 	.globl _axradio_rxbuffer
                            330 	.globl _axradio_txbuffer
                            331 	.globl _axradio_default_remoteaddr
                            332 	.globl _axradio_localaddr
                            333 	.globl _axradio_timeanchor
                            334 	.globl _axradio_sync_periodcorr
                            335 	.globl _axradio_sync_time
                            336 	.globl _axradio_ack_seqnr
                            337 	.globl _axradio_ack_count
                            338 	.globl _axradio_curfreqoffset
                            339 	.globl _axradio_curchannel
                            340 	.globl _axradio_txbuffer_cnt
                            341 	.globl _axradio_txbuffer_len
                            342 	.globl _axradio_syncstate
                            343 	.globl _AX5043_POWCTRL1
                            344 	.globl _AX5043_REF
                            345 	.globl _AX5043_0xF44
                            346 	.globl _AX5043_0xF35
                            347 	.globl _AX5043_0xF34
                            348 	.globl _AX5043_0xF33
                            349 	.globl _AX5043_0xF32
                            350 	.globl _AX5043_0xF31
                            351 	.globl _AX5043_0xF30
                            352 	.globl _AX5043_0xF2F
                            353 	.globl _AX5043_0xF26
                            354 	.globl _AX5043_0xF23
                            355 	.globl _AX5043_0xF22
                            356 	.globl _AX5043_0xF21
                            357 	.globl _AX5043_0xF1C
                            358 	.globl _AX5043_0xF18
                            359 	.globl _AX5043_0xF11
                            360 	.globl _AX5043_0xF10
                            361 	.globl _AX5043_0xF0C
                            362 	.globl _AX5043_0xF01
                            363 	.globl _AX5043_0xF00
                            364 	.globl _AX5043_TIMEGAIN3NB
                            365 	.globl _AX5043_TIMEGAIN2NB
                            366 	.globl _AX5043_TIMEGAIN1NB
                            367 	.globl _AX5043_TIMEGAIN0NB
                            368 	.globl _AX5043_RXPARAMSETSNB
                            369 	.globl _AX5043_RXPARAMCURSETNB
                            370 	.globl _AX5043_PKTMAXLENNB
                            371 	.globl _AX5043_PKTLENOFFSETNB
                            372 	.globl _AX5043_PKTLENCFGNB
                            373 	.globl _AX5043_PKTADDRMASK3NB
                            374 	.globl _AX5043_PKTADDRMASK2NB
                            375 	.globl _AX5043_PKTADDRMASK1NB
                            376 	.globl _AX5043_PKTADDRMASK0NB
                            377 	.globl _AX5043_PKTADDRCFGNB
                            378 	.globl _AX5043_PKTADDR3NB
                            379 	.globl _AX5043_PKTADDR2NB
                            380 	.globl _AX5043_PKTADDR1NB
                            381 	.globl _AX5043_PKTADDR0NB
                            382 	.globl _AX5043_PHASEGAIN3NB
                            383 	.globl _AX5043_PHASEGAIN2NB
                            384 	.globl _AX5043_PHASEGAIN1NB
                            385 	.globl _AX5043_PHASEGAIN0NB
                            386 	.globl _AX5043_FREQUENCYLEAKNB
                            387 	.globl _AX5043_FREQUENCYGAIND3NB
                            388 	.globl _AX5043_FREQUENCYGAIND2NB
                            389 	.globl _AX5043_FREQUENCYGAIND1NB
                            390 	.globl _AX5043_FREQUENCYGAIND0NB
                            391 	.globl _AX5043_FREQUENCYGAINC3NB
                            392 	.globl _AX5043_FREQUENCYGAINC2NB
                            393 	.globl _AX5043_FREQUENCYGAINC1NB
                            394 	.globl _AX5043_FREQUENCYGAINC0NB
                            395 	.globl _AX5043_FREQUENCYGAINB3NB
                            396 	.globl _AX5043_FREQUENCYGAINB2NB
                            397 	.globl _AX5043_FREQUENCYGAINB1NB
                            398 	.globl _AX5043_FREQUENCYGAINB0NB
                            399 	.globl _AX5043_FREQUENCYGAINA3NB
                            400 	.globl _AX5043_FREQUENCYGAINA2NB
                            401 	.globl _AX5043_FREQUENCYGAINA1NB
                            402 	.globl _AX5043_FREQUENCYGAINA0NB
                            403 	.globl _AX5043_FREQDEV13NB
                            404 	.globl _AX5043_FREQDEV12NB
                            405 	.globl _AX5043_FREQDEV11NB
                            406 	.globl _AX5043_FREQDEV10NB
                            407 	.globl _AX5043_FREQDEV03NB
                            408 	.globl _AX5043_FREQDEV02NB
                            409 	.globl _AX5043_FREQDEV01NB
                            410 	.globl _AX5043_FREQDEV00NB
                            411 	.globl _AX5043_FOURFSK3NB
                            412 	.globl _AX5043_FOURFSK2NB
                            413 	.globl _AX5043_FOURFSK1NB
                            414 	.globl _AX5043_FOURFSK0NB
                            415 	.globl _AX5043_DRGAIN3NB
                            416 	.globl _AX5043_DRGAIN2NB
                            417 	.globl _AX5043_DRGAIN1NB
                            418 	.globl _AX5043_DRGAIN0NB
                            419 	.globl _AX5043_BBOFFSRES3NB
                            420 	.globl _AX5043_BBOFFSRES2NB
                            421 	.globl _AX5043_BBOFFSRES1NB
                            422 	.globl _AX5043_BBOFFSRES0NB
                            423 	.globl _AX5043_AMPLITUDEGAIN3NB
                            424 	.globl _AX5043_AMPLITUDEGAIN2NB
                            425 	.globl _AX5043_AMPLITUDEGAIN1NB
                            426 	.globl _AX5043_AMPLITUDEGAIN0NB
                            427 	.globl _AX5043_AGCTARGET3NB
                            428 	.globl _AX5043_AGCTARGET2NB
                            429 	.globl _AX5043_AGCTARGET1NB
                            430 	.globl _AX5043_AGCTARGET0NB
                            431 	.globl _AX5043_AGCMINMAX3NB
                            432 	.globl _AX5043_AGCMINMAX2NB
                            433 	.globl _AX5043_AGCMINMAX1NB
                            434 	.globl _AX5043_AGCMINMAX0NB
                            435 	.globl _AX5043_AGCGAIN3NB
                            436 	.globl _AX5043_AGCGAIN2NB
                            437 	.globl _AX5043_AGCGAIN1NB
                            438 	.globl _AX5043_AGCGAIN0NB
                            439 	.globl _AX5043_AGCAHYST3NB
                            440 	.globl _AX5043_AGCAHYST2NB
                            441 	.globl _AX5043_AGCAHYST1NB
                            442 	.globl _AX5043_AGCAHYST0NB
                            443 	.globl _AX5043_XTALSTATUSNB
                            444 	.globl _AX5043_XTALCAPNB
                            445 	.globl _AX5043_WAKEUPXOEARLYNB
                            446 	.globl _AX5043_WAKEUPTIMER1NB
                            447 	.globl _AX5043_WAKEUPTIMER0NB
                            448 	.globl _AX5043_WAKEUPFREQ1NB
                            449 	.globl _AX5043_WAKEUPFREQ0NB
                            450 	.globl _AX5043_WAKEUP1NB
                            451 	.globl _AX5043_WAKEUP0NB
                            452 	.globl _AX5043_TXRATE2NB
                            453 	.globl _AX5043_TXRATE1NB
                            454 	.globl _AX5043_TXRATE0NB
                            455 	.globl _AX5043_TXPWRCOEFFE1NB
                            456 	.globl _AX5043_TXPWRCOEFFE0NB
                            457 	.globl _AX5043_TXPWRCOEFFD1NB
                            458 	.globl _AX5043_TXPWRCOEFFD0NB
                            459 	.globl _AX5043_TXPWRCOEFFC1NB
                            460 	.globl _AX5043_TXPWRCOEFFC0NB
                            461 	.globl _AX5043_TXPWRCOEFFB1NB
                            462 	.globl _AX5043_TXPWRCOEFFB0NB
                            463 	.globl _AX5043_TXPWRCOEFFA1NB
                            464 	.globl _AX5043_TXPWRCOEFFA0NB
                            465 	.globl _AX5043_TRKRFFREQ2NB
                            466 	.globl _AX5043_TRKRFFREQ1NB
                            467 	.globl _AX5043_TRKRFFREQ0NB
                            468 	.globl _AX5043_TRKPHASE1NB
                            469 	.globl _AX5043_TRKPHASE0NB
                            470 	.globl _AX5043_TRKFSKDEMOD1NB
                            471 	.globl _AX5043_TRKFSKDEMOD0NB
                            472 	.globl _AX5043_TRKFREQ1NB
                            473 	.globl _AX5043_TRKFREQ0NB
                            474 	.globl _AX5043_TRKDATARATE2NB
                            475 	.globl _AX5043_TRKDATARATE1NB
                            476 	.globl _AX5043_TRKDATARATE0NB
                            477 	.globl _AX5043_TRKAMPLITUDE1NB
                            478 	.globl _AX5043_TRKAMPLITUDE0NB
                            479 	.globl _AX5043_TRKAFSKDEMOD1NB
                            480 	.globl _AX5043_TRKAFSKDEMOD0NB
                            481 	.globl _AX5043_TMGTXSETTLENB
                            482 	.globl _AX5043_TMGTXBOOSTNB
                            483 	.globl _AX5043_TMGRXSETTLENB
                            484 	.globl _AX5043_TMGRXRSSINB
                            485 	.globl _AX5043_TMGRXPREAMBLE3NB
                            486 	.globl _AX5043_TMGRXPREAMBLE2NB
                            487 	.globl _AX5043_TMGRXPREAMBLE1NB
                            488 	.globl _AX5043_TMGRXOFFSACQNB
                            489 	.globl _AX5043_TMGRXCOARSEAGCNB
                            490 	.globl _AX5043_TMGRXBOOSTNB
                            491 	.globl _AX5043_TMGRXAGCNB
                            492 	.globl _AX5043_TIMER2NB
                            493 	.globl _AX5043_TIMER1NB
                            494 	.globl _AX5043_TIMER0NB
                            495 	.globl _AX5043_SILICONREVISIONNB
                            496 	.globl _AX5043_SCRATCHNB
                            497 	.globl _AX5043_RXDATARATE2NB
                            498 	.globl _AX5043_RXDATARATE1NB
                            499 	.globl _AX5043_RXDATARATE0NB
                            500 	.globl _AX5043_RSSIREFERENCENB
                            501 	.globl _AX5043_RSSIABSTHRNB
                            502 	.globl _AX5043_RSSINB
                            503 	.globl _AX5043_RADIOSTATENB
                            504 	.globl _AX5043_RADIOEVENTREQ1NB
                            505 	.globl _AX5043_RADIOEVENTREQ0NB
                            506 	.globl _AX5043_RADIOEVENTMASK1NB
                            507 	.globl _AX5043_RADIOEVENTMASK0NB
                            508 	.globl _AX5043_PWRMODENB
                            509 	.globl _AX5043_PWRAMPNB
                            510 	.globl _AX5043_POWSTICKYSTATNB
                            511 	.globl _AX5043_POWSTATNB
                            512 	.globl _AX5043_POWIRQMASKNB
                            513 	.globl _AX5043_PLLVCOIRNB
                            514 	.globl _AX5043_PLLVCOINB
                            515 	.globl _AX5043_PLLVCODIVNB
                            516 	.globl _AX5043_PLLRNGCLKNB
                            517 	.globl _AX5043_PLLRANGINGBNB
                            518 	.globl _AX5043_PLLRANGINGANB
                            519 	.globl _AX5043_PLLLOOPBOOSTNB
                            520 	.globl _AX5043_PLLLOOPNB
                            521 	.globl _AX5043_PLLLOCKDETNB
                            522 	.globl _AX5043_PLLCPIBOOSTNB
                            523 	.globl _AX5043_PLLCPINB
                            524 	.globl _AX5043_PKTSTOREFLAGSNB
                            525 	.globl _AX5043_PKTMISCFLAGSNB
                            526 	.globl _AX5043_PKTCHUNKSIZENB
                            527 	.globl _AX5043_PKTACCEPTFLAGSNB
                            528 	.globl _AX5043_PINSTATENB
                            529 	.globl _AX5043_PINFUNCSYSCLKNB
                            530 	.globl _AX5043_PINFUNCPWRAMPNB
                            531 	.globl _AX5043_PINFUNCIRQNB
                            532 	.globl _AX5043_PINFUNCDCLKNB
                            533 	.globl _AX5043_PINFUNCDATANB
                            534 	.globl _AX5043_PINFUNCANTSELNB
                            535 	.globl _AX5043_MODULATIONNB
                            536 	.globl _AX5043_MODCFGFNB
                            537 	.globl _AX5043_MODCFGANB
                            538 	.globl _AX5043_MAXRFOFFSET2NB
                            539 	.globl _AX5043_MAXRFOFFSET1NB
                            540 	.globl _AX5043_MAXRFOFFSET0NB
                            541 	.globl _AX5043_MAXDROFFSET2NB
                            542 	.globl _AX5043_MAXDROFFSET1NB
                            543 	.globl _AX5043_MAXDROFFSET0NB
                            544 	.globl _AX5043_MATCH1PAT1NB
                            545 	.globl _AX5043_MATCH1PAT0NB
                            546 	.globl _AX5043_MATCH1MINNB
                            547 	.globl _AX5043_MATCH1MAXNB
                            548 	.globl _AX5043_MATCH1LENNB
                            549 	.globl _AX5043_MATCH0PAT3NB
                            550 	.globl _AX5043_MATCH0PAT2NB
                            551 	.globl _AX5043_MATCH0PAT1NB
                            552 	.globl _AX5043_MATCH0PAT0NB
                            553 	.globl _AX5043_MATCH0MINNB
                            554 	.globl _AX5043_MATCH0MAXNB
                            555 	.globl _AX5043_MATCH0LENNB
                            556 	.globl _AX5043_LPOSCSTATUSNB
                            557 	.globl _AX5043_LPOSCREF1NB
                            558 	.globl _AX5043_LPOSCREF0NB
                            559 	.globl _AX5043_LPOSCPER1NB
                            560 	.globl _AX5043_LPOSCPER0NB
                            561 	.globl _AX5043_LPOSCKFILT1NB
                            562 	.globl _AX5043_LPOSCKFILT0NB
                            563 	.globl _AX5043_LPOSCFREQ1NB
                            564 	.globl _AX5043_LPOSCFREQ0NB
                            565 	.globl _AX5043_LPOSCCONFIGNB
                            566 	.globl _AX5043_IRQREQUEST1NB
                            567 	.globl _AX5043_IRQREQUEST0NB
                            568 	.globl _AX5043_IRQMASK1NB
                            569 	.globl _AX5043_IRQMASK0NB
                            570 	.globl _AX5043_IRQINVERSION1NB
                            571 	.globl _AX5043_IRQINVERSION0NB
                            572 	.globl _AX5043_IFFREQ1NB
                            573 	.globl _AX5043_IFFREQ0NB
                            574 	.globl _AX5043_GPADCPERIODNB
                            575 	.globl _AX5043_GPADCCTRLNB
                            576 	.globl _AX5043_GPADC13VALUE1NB
                            577 	.globl _AX5043_GPADC13VALUE0NB
                            578 	.globl _AX5043_FSKDMIN1NB
                            579 	.globl _AX5043_FSKDMIN0NB
                            580 	.globl _AX5043_FSKDMAX1NB
                            581 	.globl _AX5043_FSKDMAX0NB
                            582 	.globl _AX5043_FSKDEV2NB
                            583 	.globl _AX5043_FSKDEV1NB
                            584 	.globl _AX5043_FSKDEV0NB
                            585 	.globl _AX5043_FREQB3NB
                            586 	.globl _AX5043_FREQB2NB
                            587 	.globl _AX5043_FREQB1NB
                            588 	.globl _AX5043_FREQB0NB
                            589 	.globl _AX5043_FREQA3NB
                            590 	.globl _AX5043_FREQA2NB
                            591 	.globl _AX5043_FREQA1NB
                            592 	.globl _AX5043_FREQA0NB
                            593 	.globl _AX5043_FRAMINGNB
                            594 	.globl _AX5043_FIFOTHRESH1NB
                            595 	.globl _AX5043_FIFOTHRESH0NB
                            596 	.globl _AX5043_FIFOSTATNB
                            597 	.globl _AX5043_FIFOFREE1NB
                            598 	.globl _AX5043_FIFOFREE0NB
                            599 	.globl _AX5043_FIFODATANB
                            600 	.globl _AX5043_FIFOCOUNT1NB
                            601 	.globl _AX5043_FIFOCOUNT0NB
                            602 	.globl _AX5043_FECSYNCNB
                            603 	.globl _AX5043_FECSTATUSNB
                            604 	.globl _AX5043_FECNB
                            605 	.globl _AX5043_ENCODINGNB
                            606 	.globl _AX5043_DIVERSITYNB
                            607 	.globl _AX5043_DECIMATIONNB
                            608 	.globl _AX5043_DACVALUE1NB
                            609 	.globl _AX5043_DACVALUE0NB
                            610 	.globl _AX5043_DACCONFIGNB
                            611 	.globl _AX5043_CRCINIT3NB
                            612 	.globl _AX5043_CRCINIT2NB
                            613 	.globl _AX5043_CRCINIT1NB
                            614 	.globl _AX5043_CRCINIT0NB
                            615 	.globl _AX5043_BGNDRSSITHRNB
                            616 	.globl _AX5043_BGNDRSSIGAINNB
                            617 	.globl _AX5043_BGNDRSSINB
                            618 	.globl _AX5043_BBTUNENB
                            619 	.globl _AX5043_BBOFFSCAPNB
                            620 	.globl _AX5043_AMPLFILTERNB
                            621 	.globl _AX5043_AGCCOUNTERNB
                            622 	.globl _AX5043_AFSKSPACE1NB
                            623 	.globl _AX5043_AFSKSPACE0NB
                            624 	.globl _AX5043_AFSKMARK1NB
                            625 	.globl _AX5043_AFSKMARK0NB
                            626 	.globl _AX5043_AFSKCTRLNB
                            627 	.globl _AX5043_TIMEGAIN3
                            628 	.globl _AX5043_TIMEGAIN2
                            629 	.globl _AX5043_TIMEGAIN1
                            630 	.globl _AX5043_TIMEGAIN0
                            631 	.globl _AX5043_RXPARAMSETS
                            632 	.globl _AX5043_RXPARAMCURSET
                            633 	.globl _AX5043_PKTMAXLEN
                            634 	.globl _AX5043_PKTLENOFFSET
                            635 	.globl _AX5043_PKTLENCFG
                            636 	.globl _AX5043_PKTADDRMASK3
                            637 	.globl _AX5043_PKTADDRMASK2
                            638 	.globl _AX5043_PKTADDRMASK1
                            639 	.globl _AX5043_PKTADDRMASK0
                            640 	.globl _AX5043_PKTADDRCFG
                            641 	.globl _AX5043_PKTADDR3
                            642 	.globl _AX5043_PKTADDR2
                            643 	.globl _AX5043_PKTADDR1
                            644 	.globl _AX5043_PKTADDR0
                            645 	.globl _AX5043_PHASEGAIN3
                            646 	.globl _AX5043_PHASEGAIN2
                            647 	.globl _AX5043_PHASEGAIN1
                            648 	.globl _AX5043_PHASEGAIN0
                            649 	.globl _AX5043_FREQUENCYLEAK
                            650 	.globl _AX5043_FREQUENCYGAIND3
                            651 	.globl _AX5043_FREQUENCYGAIND2
                            652 	.globl _AX5043_FREQUENCYGAIND1
                            653 	.globl _AX5043_FREQUENCYGAIND0
                            654 	.globl _AX5043_FREQUENCYGAINC3
                            655 	.globl _AX5043_FREQUENCYGAINC2
                            656 	.globl _AX5043_FREQUENCYGAINC1
                            657 	.globl _AX5043_FREQUENCYGAINC0
                            658 	.globl _AX5043_FREQUENCYGAINB3
                            659 	.globl _AX5043_FREQUENCYGAINB2
                            660 	.globl _AX5043_FREQUENCYGAINB1
                            661 	.globl _AX5043_FREQUENCYGAINB0
                            662 	.globl _AX5043_FREQUENCYGAINA3
                            663 	.globl _AX5043_FREQUENCYGAINA2
                            664 	.globl _AX5043_FREQUENCYGAINA1
                            665 	.globl _AX5043_FREQUENCYGAINA0
                            666 	.globl _AX5043_FREQDEV13
                            667 	.globl _AX5043_FREQDEV12
                            668 	.globl _AX5043_FREQDEV11
                            669 	.globl _AX5043_FREQDEV10
                            670 	.globl _AX5043_FREQDEV03
                            671 	.globl _AX5043_FREQDEV02
                            672 	.globl _AX5043_FREQDEV01
                            673 	.globl _AX5043_FREQDEV00
                            674 	.globl _AX5043_FOURFSK3
                            675 	.globl _AX5043_FOURFSK2
                            676 	.globl _AX5043_FOURFSK1
                            677 	.globl _AX5043_FOURFSK0
                            678 	.globl _AX5043_DRGAIN3
                            679 	.globl _AX5043_DRGAIN2
                            680 	.globl _AX5043_DRGAIN1
                            681 	.globl _AX5043_DRGAIN0
                            682 	.globl _AX5043_BBOFFSRES3
                            683 	.globl _AX5043_BBOFFSRES2
                            684 	.globl _AX5043_BBOFFSRES1
                            685 	.globl _AX5043_BBOFFSRES0
                            686 	.globl _AX5043_AMPLITUDEGAIN3
                            687 	.globl _AX5043_AMPLITUDEGAIN2
                            688 	.globl _AX5043_AMPLITUDEGAIN1
                            689 	.globl _AX5043_AMPLITUDEGAIN0
                            690 	.globl _AX5043_AGCTARGET3
                            691 	.globl _AX5043_AGCTARGET2
                            692 	.globl _AX5043_AGCTARGET1
                            693 	.globl _AX5043_AGCTARGET0
                            694 	.globl _AX5043_AGCMINMAX3
                            695 	.globl _AX5043_AGCMINMAX2
                            696 	.globl _AX5043_AGCMINMAX1
                            697 	.globl _AX5043_AGCMINMAX0
                            698 	.globl _AX5043_AGCGAIN3
                            699 	.globl _AX5043_AGCGAIN2
                            700 	.globl _AX5043_AGCGAIN1
                            701 	.globl _AX5043_AGCGAIN0
                            702 	.globl _AX5043_AGCAHYST3
                            703 	.globl _AX5043_AGCAHYST2
                            704 	.globl _AX5043_AGCAHYST1
                            705 	.globl _AX5043_AGCAHYST0
                            706 	.globl _AX5043_XTALSTATUS
                            707 	.globl _AX5043_XTALCAP
                            708 	.globl _AX5043_WAKEUPXOEARLY
                            709 	.globl _AX5043_WAKEUPTIMER1
                            710 	.globl _AX5043_WAKEUPTIMER0
                            711 	.globl _AX5043_WAKEUPFREQ1
                            712 	.globl _AX5043_WAKEUPFREQ0
                            713 	.globl _AX5043_WAKEUP1
                            714 	.globl _AX5043_WAKEUP0
                            715 	.globl _AX5043_TXRATE2
                            716 	.globl _AX5043_TXRATE1
                            717 	.globl _AX5043_TXRATE0
                            718 	.globl _AX5043_TXPWRCOEFFE1
                            719 	.globl _AX5043_TXPWRCOEFFE0
                            720 	.globl _AX5043_TXPWRCOEFFD1
                            721 	.globl _AX5043_TXPWRCOEFFD0
                            722 	.globl _AX5043_TXPWRCOEFFC1
                            723 	.globl _AX5043_TXPWRCOEFFC0
                            724 	.globl _AX5043_TXPWRCOEFFB1
                            725 	.globl _AX5043_TXPWRCOEFFB0
                            726 	.globl _AX5043_TXPWRCOEFFA1
                            727 	.globl _AX5043_TXPWRCOEFFA0
                            728 	.globl _AX5043_TRKRFFREQ2
                            729 	.globl _AX5043_TRKRFFREQ1
                            730 	.globl _AX5043_TRKRFFREQ0
                            731 	.globl _AX5043_TRKPHASE1
                            732 	.globl _AX5043_TRKPHASE0
                            733 	.globl _AX5043_TRKFSKDEMOD1
                            734 	.globl _AX5043_TRKFSKDEMOD0
                            735 	.globl _AX5043_TRKFREQ1
                            736 	.globl _AX5043_TRKFREQ0
                            737 	.globl _AX5043_TRKDATARATE2
                            738 	.globl _AX5043_TRKDATARATE1
                            739 	.globl _AX5043_TRKDATARATE0
                            740 	.globl _AX5043_TRKAMPLITUDE1
                            741 	.globl _AX5043_TRKAMPLITUDE0
                            742 	.globl _AX5043_TRKAFSKDEMOD1
                            743 	.globl _AX5043_TRKAFSKDEMOD0
                            744 	.globl _AX5043_TMGTXSETTLE
                            745 	.globl _AX5043_TMGTXBOOST
                            746 	.globl _AX5043_TMGRXSETTLE
                            747 	.globl _AX5043_TMGRXRSSI
                            748 	.globl _AX5043_TMGRXPREAMBLE3
                            749 	.globl _AX5043_TMGRXPREAMBLE2
                            750 	.globl _AX5043_TMGRXPREAMBLE1
                            751 	.globl _AX5043_TMGRXOFFSACQ
                            752 	.globl _AX5043_TMGRXCOARSEAGC
                            753 	.globl _AX5043_TMGRXBOOST
                            754 	.globl _AX5043_TMGRXAGC
                            755 	.globl _AX5043_TIMER2
                            756 	.globl _AX5043_TIMER1
                            757 	.globl _AX5043_TIMER0
                            758 	.globl _AX5043_SILICONREVISION
                            759 	.globl _AX5043_SCRATCH
                            760 	.globl _AX5043_RXDATARATE2
                            761 	.globl _AX5043_RXDATARATE1
                            762 	.globl _AX5043_RXDATARATE0
                            763 	.globl _AX5043_RSSIREFERENCE
                            764 	.globl _AX5043_RSSIABSTHR
                            765 	.globl _AX5043_RSSI
                            766 	.globl _AX5043_RADIOSTATE
                            767 	.globl _AX5043_RADIOEVENTREQ1
                            768 	.globl _AX5043_RADIOEVENTREQ0
                            769 	.globl _AX5043_RADIOEVENTMASK1
                            770 	.globl _AX5043_RADIOEVENTMASK0
                            771 	.globl _AX5043_PWRMODE
                            772 	.globl _AX5043_PWRAMP
                            773 	.globl _AX5043_POWSTICKYSTAT
                            774 	.globl _AX5043_POWSTAT
                            775 	.globl _AX5043_POWIRQMASK
                            776 	.globl _AX5043_PLLVCOIR
                            777 	.globl _AX5043_PLLVCOI
                            778 	.globl _AX5043_PLLVCODIV
                            779 	.globl _AX5043_PLLRNGCLK
                            780 	.globl _AX5043_PLLRANGINGB
                            781 	.globl _AX5043_PLLRANGINGA
                            782 	.globl _AX5043_PLLLOOPBOOST
                            783 	.globl _AX5043_PLLLOOP
                            784 	.globl _AX5043_PLLLOCKDET
                            785 	.globl _AX5043_PLLCPIBOOST
                            786 	.globl _AX5043_PLLCPI
                            787 	.globl _AX5043_PKTSTOREFLAGS
                            788 	.globl _AX5043_PKTMISCFLAGS
                            789 	.globl _AX5043_PKTCHUNKSIZE
                            790 	.globl _AX5043_PKTACCEPTFLAGS
                            791 	.globl _AX5043_PINSTATE
                            792 	.globl _AX5043_PINFUNCSYSCLK
                            793 	.globl _AX5043_PINFUNCPWRAMP
                            794 	.globl _AX5043_PINFUNCIRQ
                            795 	.globl _AX5043_PINFUNCDCLK
                            796 	.globl _AX5043_PINFUNCDATA
                            797 	.globl _AX5043_PINFUNCANTSEL
                            798 	.globl _AX5043_MODULATION
                            799 	.globl _AX5043_MODCFGF
                            800 	.globl _AX5043_MODCFGA
                            801 	.globl _AX5043_MAXRFOFFSET2
                            802 	.globl _AX5043_MAXRFOFFSET1
                            803 	.globl _AX5043_MAXRFOFFSET0
                            804 	.globl _AX5043_MAXDROFFSET2
                            805 	.globl _AX5043_MAXDROFFSET1
                            806 	.globl _AX5043_MAXDROFFSET0
                            807 	.globl _AX5043_MATCH1PAT1
                            808 	.globl _AX5043_MATCH1PAT0
                            809 	.globl _AX5043_MATCH1MIN
                            810 	.globl _AX5043_MATCH1MAX
                            811 	.globl _AX5043_MATCH1LEN
                            812 	.globl _AX5043_MATCH0PAT3
                            813 	.globl _AX5043_MATCH0PAT2
                            814 	.globl _AX5043_MATCH0PAT1
                            815 	.globl _AX5043_MATCH0PAT0
                            816 	.globl _AX5043_MATCH0MIN
                            817 	.globl _AX5043_MATCH0MAX
                            818 	.globl _AX5043_MATCH0LEN
                            819 	.globl _AX5043_LPOSCSTATUS
                            820 	.globl _AX5043_LPOSCREF1
                            821 	.globl _AX5043_LPOSCREF0
                            822 	.globl _AX5043_LPOSCPER1
                            823 	.globl _AX5043_LPOSCPER0
                            824 	.globl _AX5043_LPOSCKFILT1
                            825 	.globl _AX5043_LPOSCKFILT0
                            826 	.globl _AX5043_LPOSCFREQ1
                            827 	.globl _AX5043_LPOSCFREQ0
                            828 	.globl _AX5043_LPOSCCONFIG
                            829 	.globl _AX5043_IRQREQUEST1
                            830 	.globl _AX5043_IRQREQUEST0
                            831 	.globl _AX5043_IRQMASK1
                            832 	.globl _AX5043_IRQMASK0
                            833 	.globl _AX5043_IRQINVERSION1
                            834 	.globl _AX5043_IRQINVERSION0
                            835 	.globl _AX5043_IFFREQ1
                            836 	.globl _AX5043_IFFREQ0
                            837 	.globl _AX5043_GPADCPERIOD
                            838 	.globl _AX5043_GPADCCTRL
                            839 	.globl _AX5043_GPADC13VALUE1
                            840 	.globl _AX5043_GPADC13VALUE0
                            841 	.globl _AX5043_FSKDMIN1
                            842 	.globl _AX5043_FSKDMIN0
                            843 	.globl _AX5043_FSKDMAX1
                            844 	.globl _AX5043_FSKDMAX0
                            845 	.globl _AX5043_FSKDEV2
                            846 	.globl _AX5043_FSKDEV1
                            847 	.globl _AX5043_FSKDEV0
                            848 	.globl _AX5043_FREQB3
                            849 	.globl _AX5043_FREQB2
                            850 	.globl _AX5043_FREQB1
                            851 	.globl _AX5043_FREQB0
                            852 	.globl _AX5043_FREQA3
                            853 	.globl _AX5043_FREQA2
                            854 	.globl _AX5043_FREQA1
                            855 	.globl _AX5043_FREQA0
                            856 	.globl _AX5043_FRAMING
                            857 	.globl _AX5043_FIFOTHRESH1
                            858 	.globl _AX5043_FIFOTHRESH0
                            859 	.globl _AX5043_FIFOSTAT
                            860 	.globl _AX5043_FIFOFREE1
                            861 	.globl _AX5043_FIFOFREE0
                            862 	.globl _AX5043_FIFODATA
                            863 	.globl _AX5043_FIFOCOUNT1
                            864 	.globl _AX5043_FIFOCOUNT0
                            865 	.globl _AX5043_FECSYNC
                            866 	.globl _AX5043_FECSTATUS
                            867 	.globl _AX5043_FEC
                            868 	.globl _AX5043_ENCODING
                            869 	.globl _AX5043_DIVERSITY
                            870 	.globl _AX5043_DECIMATION
                            871 	.globl _AX5043_DACVALUE1
                            872 	.globl _AX5043_DACVALUE0
                            873 	.globl _AX5043_DACCONFIG
                            874 	.globl _AX5043_CRCINIT3
                            875 	.globl _AX5043_CRCINIT2
                            876 	.globl _AX5043_CRCINIT1
                            877 	.globl _AX5043_CRCINIT0
                            878 	.globl _AX5043_BGNDRSSITHR
                            879 	.globl _AX5043_BGNDRSSIGAIN
                            880 	.globl _AX5043_BGNDRSSI
                            881 	.globl _AX5043_BBTUNE
                            882 	.globl _AX5043_BBOFFSCAP
                            883 	.globl _AX5043_AMPLFILTER
                            884 	.globl _AX5043_AGCCOUNTER
                            885 	.globl _AX5043_AFSKSPACE1
                            886 	.globl _AX5043_AFSKSPACE0
                            887 	.globl _AX5043_AFSKMARK1
                            888 	.globl _AX5043_AFSKMARK0
                            889 	.globl _AX5043_AFSKCTRL
                            890 	.globl _XWTSTAT
                            891 	.globl _XWTIRQEN
                            892 	.globl _XWTEVTD
                            893 	.globl _XWTEVTD1
                            894 	.globl _XWTEVTD0
                            895 	.globl _XWTEVTC
                            896 	.globl _XWTEVTC1
                            897 	.globl _XWTEVTC0
                            898 	.globl _XWTEVTB
                            899 	.globl _XWTEVTB1
                            900 	.globl _XWTEVTB0
                            901 	.globl _XWTEVTA
                            902 	.globl _XWTEVTA1
                            903 	.globl _XWTEVTA0
                            904 	.globl _XWTCNTR1
                            905 	.globl _XWTCNTB
                            906 	.globl _XWTCNTB1
                            907 	.globl _XWTCNTB0
                            908 	.globl _XWTCNTA
                            909 	.globl _XWTCNTA1
                            910 	.globl _XWTCNTA0
                            911 	.globl _XWTCFGB
                            912 	.globl _XWTCFGA
                            913 	.globl _XWDTRESET
                            914 	.globl _XWDTCFG
                            915 	.globl _XU1STATUS
                            916 	.globl _XU1SHREG
                            917 	.globl _XU1MODE
                            918 	.globl _XU1CTRL
                            919 	.globl _XU0STATUS
                            920 	.globl _XU0SHREG
                            921 	.globl _XU0MODE
                            922 	.globl _XU0CTRL
                            923 	.globl _XT2STATUS
                            924 	.globl _XT2PERIOD
                            925 	.globl _XT2PERIOD1
                            926 	.globl _XT2PERIOD0
                            927 	.globl _XT2MODE
                            928 	.globl _XT2CNT
                            929 	.globl _XT2CNT1
                            930 	.globl _XT2CNT0
                            931 	.globl _XT2CLKSRC
                            932 	.globl _XT1STATUS
                            933 	.globl _XT1PERIOD
                            934 	.globl _XT1PERIOD1
                            935 	.globl _XT1PERIOD0
                            936 	.globl _XT1MODE
                            937 	.globl _XT1CNT
                            938 	.globl _XT1CNT1
                            939 	.globl _XT1CNT0
                            940 	.globl _XT1CLKSRC
                            941 	.globl _XT0STATUS
                            942 	.globl _XT0PERIOD
                            943 	.globl _XT0PERIOD1
                            944 	.globl _XT0PERIOD0
                            945 	.globl _XT0MODE
                            946 	.globl _XT0CNT
                            947 	.globl _XT0CNT1
                            948 	.globl _XT0CNT0
                            949 	.globl _XT0CLKSRC
                            950 	.globl _XSPSTATUS
                            951 	.globl _XSPSHREG
                            952 	.globl _XSPMODE
                            953 	.globl _XSPCLKSRC
                            954 	.globl _XRADIOSTAT
                            955 	.globl _XRADIOSTAT1
                            956 	.globl _XRADIOSTAT0
                            957 	.globl _XRADIODATA3
                            958 	.globl _XRADIODATA2
                            959 	.globl _XRADIODATA1
                            960 	.globl _XRADIODATA0
                            961 	.globl _XRADIOADDR1
                            962 	.globl _XRADIOADDR0
                            963 	.globl _XRADIOACC
                            964 	.globl _XOC1STATUS
                            965 	.globl _XOC1PIN
                            966 	.globl _XOC1MODE
                            967 	.globl _XOC1COMP
                            968 	.globl _XOC1COMP1
                            969 	.globl _XOC1COMP0
                            970 	.globl _XOC0STATUS
                            971 	.globl _XOC0PIN
                            972 	.globl _XOC0MODE
                            973 	.globl _XOC0COMP
                            974 	.globl _XOC0COMP1
                            975 	.globl _XOC0COMP0
                            976 	.globl _XNVSTATUS
                            977 	.globl _XNVKEY
                            978 	.globl _XNVDATA
                            979 	.globl _XNVDATA1
                            980 	.globl _XNVDATA0
                            981 	.globl _XNVADDR
                            982 	.globl _XNVADDR1
                            983 	.globl _XNVADDR0
                            984 	.globl _XIC1STATUS
                            985 	.globl _XIC1MODE
                            986 	.globl _XIC1CAPT
                            987 	.globl _XIC1CAPT1
                            988 	.globl _XIC1CAPT0
                            989 	.globl _XIC0STATUS
                            990 	.globl _XIC0MODE
                            991 	.globl _XIC0CAPT
                            992 	.globl _XIC0CAPT1
                            993 	.globl _XIC0CAPT0
                            994 	.globl _XPORTR
                            995 	.globl _XPORTC
                            996 	.globl _XPORTB
                            997 	.globl _XPORTA
                            998 	.globl _XPINR
                            999 	.globl _XPINC
                           1000 	.globl _XPINB
                           1001 	.globl _XPINA
                           1002 	.globl _XDIRR
                           1003 	.globl _XDIRC
                           1004 	.globl _XDIRB
                           1005 	.globl _XDIRA
                           1006 	.globl _XDBGLNKSTAT
                           1007 	.globl _XDBGLNKBUF
                           1008 	.globl _XCODECONFIG
                           1009 	.globl _XCLKSTAT
                           1010 	.globl _XCLKCON
                           1011 	.globl _XANALOGCOMP
                           1012 	.globl _XADCCONV
                           1013 	.globl _XADCCLKSRC
                           1014 	.globl _XADCCH3CONFIG
                           1015 	.globl _XADCCH2CONFIG
                           1016 	.globl _XADCCH1CONFIG
                           1017 	.globl _XADCCH0CONFIG
                           1018 	.globl _XPCON
                           1019 	.globl _XIP
                           1020 	.globl _XIE
                           1021 	.globl _XDPTR1
                           1022 	.globl _XDPTR0
                           1023 	.globl _XTALREADY
                           1024 	.globl _XTALOSC
                           1025 	.globl _XTALAMPL
                           1026 	.globl _SILICONREV
                           1027 	.globl _SCRATCH3
                           1028 	.globl _SCRATCH2
                           1029 	.globl _SCRATCH1
                           1030 	.globl _SCRATCH0
                           1031 	.globl _RADIOMUX
                           1032 	.globl _RADIOFSTATADDR
                           1033 	.globl _RADIOFSTATADDR1
                           1034 	.globl _RADIOFSTATADDR0
                           1035 	.globl _RADIOFDATAADDR
                           1036 	.globl _RADIOFDATAADDR1
                           1037 	.globl _RADIOFDATAADDR0
                           1038 	.globl _OSCRUN
                           1039 	.globl _OSCREADY
                           1040 	.globl _OSCFORCERUN
                           1041 	.globl _OSCCALIB
                           1042 	.globl _MISCCTRL
                           1043 	.globl _LPXOSCGM
                           1044 	.globl _LPOSCREF
                           1045 	.globl _LPOSCREF1
                           1046 	.globl _LPOSCREF0
                           1047 	.globl _LPOSCPER
                           1048 	.globl _LPOSCPER1
                           1049 	.globl _LPOSCPER0
                           1050 	.globl _LPOSCKFILT
                           1051 	.globl _LPOSCKFILT1
                           1052 	.globl _LPOSCKFILT0
                           1053 	.globl _LPOSCFREQ
                           1054 	.globl _LPOSCFREQ1
                           1055 	.globl _LPOSCFREQ0
                           1056 	.globl _LPOSCCONFIG
                           1057 	.globl _PINSEL
                           1058 	.globl _PINCHGC
                           1059 	.globl _PINCHGB
                           1060 	.globl _PINCHGA
                           1061 	.globl _PALTRADIO
                           1062 	.globl _PALTC
                           1063 	.globl _PALTB
                           1064 	.globl _PALTA
                           1065 	.globl _INTCHGC
                           1066 	.globl _INTCHGB
                           1067 	.globl _INTCHGA
                           1068 	.globl _EXTIRQ
                           1069 	.globl _GPIOENABLE
                           1070 	.globl _ANALOGA
                           1071 	.globl _FRCOSCREF
                           1072 	.globl _FRCOSCREF1
                           1073 	.globl _FRCOSCREF0
                           1074 	.globl _FRCOSCPER
                           1075 	.globl _FRCOSCPER1
                           1076 	.globl _FRCOSCPER0
                           1077 	.globl _FRCOSCKFILT
                           1078 	.globl _FRCOSCKFILT1
                           1079 	.globl _FRCOSCKFILT0
                           1080 	.globl _FRCOSCFREQ
                           1081 	.globl _FRCOSCFREQ1
                           1082 	.globl _FRCOSCFREQ0
                           1083 	.globl _FRCOSCCTRL
                           1084 	.globl _FRCOSCCONFIG
                           1085 	.globl _DMA1CONFIG
                           1086 	.globl _DMA1ADDR
                           1087 	.globl _DMA1ADDR1
                           1088 	.globl _DMA1ADDR0
                           1089 	.globl _DMA0CONFIG
                           1090 	.globl _DMA0ADDR
                           1091 	.globl _DMA0ADDR1
                           1092 	.globl _DMA0ADDR0
                           1093 	.globl _ADCTUNE2
                           1094 	.globl _ADCTUNE1
                           1095 	.globl _ADCTUNE0
                           1096 	.globl _ADCCH3VAL
                           1097 	.globl _ADCCH3VAL1
                           1098 	.globl _ADCCH3VAL0
                           1099 	.globl _ADCCH2VAL
                           1100 	.globl _ADCCH2VAL1
                           1101 	.globl _ADCCH2VAL0
                           1102 	.globl _ADCCH1VAL
                           1103 	.globl _ADCCH1VAL1
                           1104 	.globl _ADCCH1VAL0
                           1105 	.globl _ADCCH0VAL
                           1106 	.globl _ADCCH0VAL1
                           1107 	.globl _ADCCH0VAL0
                           1108 	.globl _axradio_transmit_PARM_3
                           1109 	.globl _axradio_transmit_PARM_2
                           1110 	.globl _axradio_trxstate
                           1111 	.globl _axradio_mode
                           1112 	.globl _axradio_conv_time_totimer0
                           1113 	.globl _axradio_isr
                           1114 	.globl _ax5043_receiver_on_continuous
                           1115 	.globl _ax5043_receiver_on_wor
                           1116 	.globl _ax5043_prepare_tx
                           1117 	.globl _ax5043_off
                           1118 	.globl _ax5043_off_xtal
                           1119 	.globl _axradio_wait_for_xtal
                           1120 	.globl _axradio_init
                           1121 	.globl _axradio_cansleep
                           1122 	.globl _axradio_set_mode
                           1123 	.globl _axradio_get_mode
                           1124 	.globl _axradio_set_channel
                           1125 	.globl _axradio_get_channel
                           1126 	.globl _axradio_get_pllrange
                           1127 	.globl _axradio_get_pllrange_tx
                           1128 	.globl _axradio_set_freqoffset
                           1129 	.globl _axradio_get_freqoffset
                           1130 	.globl _axradio_set_local_address
                           1131 	.globl _axradio_get_local_address
                           1132 	.globl _axradio_set_default_remote_address
                           1133 	.globl _axradio_get_default_remote_address
                           1134 	.globl _axradio_transmit
                           1135 	.globl _axradio_agc_freeze
                           1136 	.globl _axradio_agc_thaw
                           1137 ;--------------------------------------------------------
                           1138 ; special function registers
                           1139 ;--------------------------------------------------------
                           1140 	.area RSEG    (ABS,DATA)
   0000                    1141 	.org 0x0000
                    00E0   1142 _ACC	=	0x00e0
                    00F0   1143 _B	=	0x00f0
                    0083   1144 _DPH	=	0x0083
                    0085   1145 _DPH1	=	0x0085
                    0082   1146 _DPL	=	0x0082
                    0084   1147 _DPL1	=	0x0084
                    8382   1148 _DPTR0	=	0x8382
                    8584   1149 _DPTR1	=	0x8584
                    0086   1150 _DPS	=	0x0086
                    00A0   1151 _E2IE	=	0x00a0
                    00C0   1152 _E2IP	=	0x00c0
                    0098   1153 _EIE	=	0x0098
                    00B0   1154 _EIP	=	0x00b0
                    00A8   1155 _IE	=	0x00a8
                    00B8   1156 _IP	=	0x00b8
                    0087   1157 _PCON	=	0x0087
                    00D0   1158 _PSW	=	0x00d0
                    0081   1159 _SP	=	0x0081
                    00D9   1160 _XPAGE	=	0x00d9
                    00D9   1161 __XPAGE	=	0x00d9
                    00CA   1162 _ADCCH0CONFIG	=	0x00ca
                    00CB   1163 _ADCCH1CONFIG	=	0x00cb
                    00D2   1164 _ADCCH2CONFIG	=	0x00d2
                    00D3   1165 _ADCCH3CONFIG	=	0x00d3
                    00D1   1166 _ADCCLKSRC	=	0x00d1
                    00C9   1167 _ADCCONV	=	0x00c9
                    00E1   1168 _ANALOGCOMP	=	0x00e1
                    00C6   1169 _CLKCON	=	0x00c6
                    00C7   1170 _CLKSTAT	=	0x00c7
                    0097   1171 _CODECONFIG	=	0x0097
                    00E3   1172 _DBGLNKBUF	=	0x00e3
                    00E2   1173 _DBGLNKSTAT	=	0x00e2
                    0089   1174 _DIRA	=	0x0089
                    008A   1175 _DIRB	=	0x008a
                    008B   1176 _DIRC	=	0x008b
                    008E   1177 _DIRR	=	0x008e
                    00C8   1178 _PINA	=	0x00c8
                    00E8   1179 _PINB	=	0x00e8
                    00F8   1180 _PINC	=	0x00f8
                    008D   1181 _PINR	=	0x008d
                    0080   1182 _PORTA	=	0x0080
                    0088   1183 _PORTB	=	0x0088
                    0090   1184 _PORTC	=	0x0090
                    008C   1185 _PORTR	=	0x008c
                    00CE   1186 _IC0CAPT0	=	0x00ce
                    00CF   1187 _IC0CAPT1	=	0x00cf
                    CFCE   1188 _IC0CAPT	=	0xcfce
                    00CC   1189 _IC0MODE	=	0x00cc
                    00CD   1190 _IC0STATUS	=	0x00cd
                    00D6   1191 _IC1CAPT0	=	0x00d6
                    00D7   1192 _IC1CAPT1	=	0x00d7
                    D7D6   1193 _IC1CAPT	=	0xd7d6
                    00D4   1194 _IC1MODE	=	0x00d4
                    00D5   1195 _IC1STATUS	=	0x00d5
                    0092   1196 _NVADDR0	=	0x0092
                    0093   1197 _NVADDR1	=	0x0093
                    9392   1198 _NVADDR	=	0x9392
                    0094   1199 _NVDATA0	=	0x0094
                    0095   1200 _NVDATA1	=	0x0095
                    9594   1201 _NVDATA	=	0x9594
                    0096   1202 _NVKEY	=	0x0096
                    0091   1203 _NVSTATUS	=	0x0091
                    00BC   1204 _OC0COMP0	=	0x00bc
                    00BD   1205 _OC0COMP1	=	0x00bd
                    BDBC   1206 _OC0COMP	=	0xbdbc
                    00B9   1207 _OC0MODE	=	0x00b9
                    00BA   1208 _OC0PIN	=	0x00ba
                    00BB   1209 _OC0STATUS	=	0x00bb
                    00C4   1210 _OC1COMP0	=	0x00c4
                    00C5   1211 _OC1COMP1	=	0x00c5
                    C5C4   1212 _OC1COMP	=	0xc5c4
                    00C1   1213 _OC1MODE	=	0x00c1
                    00C2   1214 _OC1PIN	=	0x00c2
                    00C3   1215 _OC1STATUS	=	0x00c3
                    00B1   1216 _RADIOACC	=	0x00b1
                    00B3   1217 _RADIOADDR0	=	0x00b3
                    00B2   1218 _RADIOADDR1	=	0x00b2
                    B2B3   1219 _RADIOADDR	=	0xb2b3
                    00B7   1220 _RADIODATA0	=	0x00b7
                    00B6   1221 _RADIODATA1	=	0x00b6
                    00B5   1222 _RADIODATA2	=	0x00b5
                    00B4   1223 _RADIODATA3	=	0x00b4
                    B4B5B6B7   1224 _RADIODATA	=	0xb4b5b6b7
                    00BE   1225 _RADIOSTAT0	=	0x00be
                    00BF   1226 _RADIOSTAT1	=	0x00bf
                    BFBE   1227 _RADIOSTAT	=	0xbfbe
                    00DF   1228 _SPCLKSRC	=	0x00df
                    00DC   1229 _SPMODE	=	0x00dc
                    00DE   1230 _SPSHREG	=	0x00de
                    00DD   1231 _SPSTATUS	=	0x00dd
                    009A   1232 _T0CLKSRC	=	0x009a
                    009C   1233 _T0CNT0	=	0x009c
                    009D   1234 _T0CNT1	=	0x009d
                    9D9C   1235 _T0CNT	=	0x9d9c
                    0099   1236 _T0MODE	=	0x0099
                    009E   1237 _T0PERIOD0	=	0x009e
                    009F   1238 _T0PERIOD1	=	0x009f
                    9F9E   1239 _T0PERIOD	=	0x9f9e
                    009B   1240 _T0STATUS	=	0x009b
                    00A2   1241 _T1CLKSRC	=	0x00a2
                    00A4   1242 _T1CNT0	=	0x00a4
                    00A5   1243 _T1CNT1	=	0x00a5
                    A5A4   1244 _T1CNT	=	0xa5a4
                    00A1   1245 _T1MODE	=	0x00a1
                    00A6   1246 _T1PERIOD0	=	0x00a6
                    00A7   1247 _T1PERIOD1	=	0x00a7
                    A7A6   1248 _T1PERIOD	=	0xa7a6
                    00A3   1249 _T1STATUS	=	0x00a3
                    00AA   1250 _T2CLKSRC	=	0x00aa
                    00AC   1251 _T2CNT0	=	0x00ac
                    00AD   1252 _T2CNT1	=	0x00ad
                    ADAC   1253 _T2CNT	=	0xadac
                    00A9   1254 _T2MODE	=	0x00a9
                    00AE   1255 _T2PERIOD0	=	0x00ae
                    00AF   1256 _T2PERIOD1	=	0x00af
                    AFAE   1257 _T2PERIOD	=	0xafae
                    00AB   1258 _T2STATUS	=	0x00ab
                    00E4   1259 _U0CTRL	=	0x00e4
                    00E7   1260 _U0MODE	=	0x00e7
                    00E6   1261 _U0SHREG	=	0x00e6
                    00E5   1262 _U0STATUS	=	0x00e5
                    00EC   1263 _U1CTRL	=	0x00ec
                    00EF   1264 _U1MODE	=	0x00ef
                    00EE   1265 _U1SHREG	=	0x00ee
                    00ED   1266 _U1STATUS	=	0x00ed
                    00DA   1267 _WDTCFG	=	0x00da
                    00DB   1268 _WDTRESET	=	0x00db
                    00F1   1269 _WTCFGA	=	0x00f1
                    00F9   1270 _WTCFGB	=	0x00f9
                    00F2   1271 _WTCNTA0	=	0x00f2
                    00F3   1272 _WTCNTA1	=	0x00f3
                    F3F2   1273 _WTCNTA	=	0xf3f2
                    00FA   1274 _WTCNTB0	=	0x00fa
                    00FB   1275 _WTCNTB1	=	0x00fb
                    FBFA   1276 _WTCNTB	=	0xfbfa
                    00EB   1277 _WTCNTR1	=	0x00eb
                    00F4   1278 _WTEVTA0	=	0x00f4
                    00F5   1279 _WTEVTA1	=	0x00f5
                    F5F4   1280 _WTEVTA	=	0xf5f4
                    00F6   1281 _WTEVTB0	=	0x00f6
                    00F7   1282 _WTEVTB1	=	0x00f7
                    F7F6   1283 _WTEVTB	=	0xf7f6
                    00FC   1284 _WTEVTC0	=	0x00fc
                    00FD   1285 _WTEVTC1	=	0x00fd
                    FDFC   1286 _WTEVTC	=	0xfdfc
                    00FE   1287 _WTEVTD0	=	0x00fe
                    00FF   1288 _WTEVTD1	=	0x00ff
                    FFFE   1289 _WTEVTD	=	0xfffe
                    00E9   1290 _WTIRQEN	=	0x00e9
                    00EA   1291 _WTSTAT	=	0x00ea
                           1292 ;--------------------------------------------------------
                           1293 ; special function bits
                           1294 ;--------------------------------------------------------
                           1295 	.area RSEG    (ABS,DATA)
   0000                    1296 	.org 0x0000
                    00E0   1297 _ACC_0	=	0x00e0
                    00E1   1298 _ACC_1	=	0x00e1
                    00E2   1299 _ACC_2	=	0x00e2
                    00E3   1300 _ACC_3	=	0x00e3
                    00E4   1301 _ACC_4	=	0x00e4
                    00E5   1302 _ACC_5	=	0x00e5
                    00E6   1303 _ACC_6	=	0x00e6
                    00E7   1304 _ACC_7	=	0x00e7
                    00F0   1305 _B_0	=	0x00f0
                    00F1   1306 _B_1	=	0x00f1
                    00F2   1307 _B_2	=	0x00f2
                    00F3   1308 _B_3	=	0x00f3
                    00F4   1309 _B_4	=	0x00f4
                    00F5   1310 _B_5	=	0x00f5
                    00F6   1311 _B_6	=	0x00f6
                    00F7   1312 _B_7	=	0x00f7
                    00A0   1313 _E2IE_0	=	0x00a0
                    00A1   1314 _E2IE_1	=	0x00a1
                    00A2   1315 _E2IE_2	=	0x00a2
                    00A3   1316 _E2IE_3	=	0x00a3
                    00A4   1317 _E2IE_4	=	0x00a4
                    00A5   1318 _E2IE_5	=	0x00a5
                    00A6   1319 _E2IE_6	=	0x00a6
                    00A7   1320 _E2IE_7	=	0x00a7
                    00C0   1321 _E2IP_0	=	0x00c0
                    00C1   1322 _E2IP_1	=	0x00c1
                    00C2   1323 _E2IP_2	=	0x00c2
                    00C3   1324 _E2IP_3	=	0x00c3
                    00C4   1325 _E2IP_4	=	0x00c4
                    00C5   1326 _E2IP_5	=	0x00c5
                    00C6   1327 _E2IP_6	=	0x00c6
                    00C7   1328 _E2IP_7	=	0x00c7
                    0098   1329 _EIE_0	=	0x0098
                    0099   1330 _EIE_1	=	0x0099
                    009A   1331 _EIE_2	=	0x009a
                    009B   1332 _EIE_3	=	0x009b
                    009C   1333 _EIE_4	=	0x009c
                    009D   1334 _EIE_5	=	0x009d
                    009E   1335 _EIE_6	=	0x009e
                    009F   1336 _EIE_7	=	0x009f
                    00B0   1337 _EIP_0	=	0x00b0
                    00B1   1338 _EIP_1	=	0x00b1
                    00B2   1339 _EIP_2	=	0x00b2
                    00B3   1340 _EIP_3	=	0x00b3
                    00B4   1341 _EIP_4	=	0x00b4
                    00B5   1342 _EIP_5	=	0x00b5
                    00B6   1343 _EIP_6	=	0x00b6
                    00B7   1344 _EIP_7	=	0x00b7
                    00A8   1345 _IE_0	=	0x00a8
                    00A9   1346 _IE_1	=	0x00a9
                    00AA   1347 _IE_2	=	0x00aa
                    00AB   1348 _IE_3	=	0x00ab
                    00AC   1349 _IE_4	=	0x00ac
                    00AD   1350 _IE_5	=	0x00ad
                    00AE   1351 _IE_6	=	0x00ae
                    00AF   1352 _IE_7	=	0x00af
                    00AF   1353 _EA	=	0x00af
                    00B8   1354 _IP_0	=	0x00b8
                    00B9   1355 _IP_1	=	0x00b9
                    00BA   1356 _IP_2	=	0x00ba
                    00BB   1357 _IP_3	=	0x00bb
                    00BC   1358 _IP_4	=	0x00bc
                    00BD   1359 _IP_5	=	0x00bd
                    00BE   1360 _IP_6	=	0x00be
                    00BF   1361 _IP_7	=	0x00bf
                    00D0   1362 _P	=	0x00d0
                    00D1   1363 _F1	=	0x00d1
                    00D2   1364 _OV	=	0x00d2
                    00D3   1365 _RS0	=	0x00d3
                    00D4   1366 _RS1	=	0x00d4
                    00D5   1367 _F0	=	0x00d5
                    00D6   1368 _AC	=	0x00d6
                    00D7   1369 _CY	=	0x00d7
                    00C8   1370 _PINA_0	=	0x00c8
                    00C9   1371 _PINA_1	=	0x00c9
                    00CA   1372 _PINA_2	=	0x00ca
                    00CB   1373 _PINA_3	=	0x00cb
                    00CC   1374 _PINA_4	=	0x00cc
                    00CD   1375 _PINA_5	=	0x00cd
                    00CE   1376 _PINA_6	=	0x00ce
                    00CF   1377 _PINA_7	=	0x00cf
                    00E8   1378 _PINB_0	=	0x00e8
                    00E9   1379 _PINB_1	=	0x00e9
                    00EA   1380 _PINB_2	=	0x00ea
                    00EB   1381 _PINB_3	=	0x00eb
                    00EC   1382 _PINB_4	=	0x00ec
                    00ED   1383 _PINB_5	=	0x00ed
                    00EE   1384 _PINB_6	=	0x00ee
                    00EF   1385 _PINB_7	=	0x00ef
                    00F8   1386 _PINC_0	=	0x00f8
                    00F9   1387 _PINC_1	=	0x00f9
                    00FA   1388 _PINC_2	=	0x00fa
                    00FB   1389 _PINC_3	=	0x00fb
                    00FC   1390 _PINC_4	=	0x00fc
                    00FD   1391 _PINC_5	=	0x00fd
                    00FE   1392 _PINC_6	=	0x00fe
                    00FF   1393 _PINC_7	=	0x00ff
                    0080   1394 _PORTA_0	=	0x0080
                    0081   1395 _PORTA_1	=	0x0081
                    0082   1396 _PORTA_2	=	0x0082
                    0083   1397 _PORTA_3	=	0x0083
                    0084   1398 _PORTA_4	=	0x0084
                    0085   1399 _PORTA_5	=	0x0085
                    0086   1400 _PORTA_6	=	0x0086
                    0087   1401 _PORTA_7	=	0x0087
                    0088   1402 _PORTB_0	=	0x0088
                    0089   1403 _PORTB_1	=	0x0089
                    008A   1404 _PORTB_2	=	0x008a
                    008B   1405 _PORTB_3	=	0x008b
                    008C   1406 _PORTB_4	=	0x008c
                    008D   1407 _PORTB_5	=	0x008d
                    008E   1408 _PORTB_6	=	0x008e
                    008F   1409 _PORTB_7	=	0x008f
                    0090   1410 _PORTC_0	=	0x0090
                    0091   1411 _PORTC_1	=	0x0091
                    0092   1412 _PORTC_2	=	0x0092
                    0093   1413 _PORTC_3	=	0x0093
                    0094   1414 _PORTC_4	=	0x0094
                    0095   1415 _PORTC_5	=	0x0095
                    0096   1416 _PORTC_6	=	0x0096
                    0097   1417 _PORTC_7	=	0x0097
                           1418 ;--------------------------------------------------------
                           1419 ; overlayable register banks
                           1420 ;--------------------------------------------------------
                           1421 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                    1422 	.ds 8
                           1423 ;--------------------------------------------------------
                           1424 ; overlayable bit register bank
                           1425 ;--------------------------------------------------------
                           1426 	.area BIT_BANK	(REL,OVR,DATA)
   0000                    1427 bits:
   0000                    1428 	.ds 1
                    8000   1429 	b0 = bits[0]
                    8100   1430 	b1 = bits[1]
                    8200   1431 	b2 = bits[2]
                    8300   1432 	b3 = bits[3]
                    8400   1433 	b4 = bits[4]
                    8500   1434 	b5 = bits[5]
                    8600   1435 	b6 = bits[6]
                    8700   1436 	b7 = bits[7]
                           1437 ;--------------------------------------------------------
                           1438 ; internal ram data
                           1439 ;--------------------------------------------------------
                           1440 	.area DSEG    (DATA)
   0000                    1441 _axradio_mode::
   0000                    1442 	.ds 1
   0001                    1443 _axradio_trxstate::
   0001                    1444 	.ds 1
   0002                    1445 _axradio_transmit_PARM_2:
   0002                    1446 	.ds 3
   0005                    1447 _axradio_transmit_PARM_3:
   0005                    1448 	.ds 2
                           1449 ;--------------------------------------------------------
                           1450 ; overlayable items in internal ram 
                           1451 ;--------------------------------------------------------
                           1452 	.area	OSEG    (OVR,DATA)
   0000                    1453 _axradio_set_channel_rng_1_370:
   0000                    1454 	.ds 1
                           1455 ;--------------------------------------------------------
                           1456 ; indirectly addressable internal ram data
                           1457 ;--------------------------------------------------------
                           1458 	.area ISEG    (DATA)
                           1459 ;--------------------------------------------------------
                           1460 ; absolute internal ram data
                           1461 ;--------------------------------------------------------
                           1462 	.area IABS    (ABS,DATA)
                           1463 	.area IABS    (ABS,DATA)
                           1464 ;--------------------------------------------------------
                           1465 ; bit data
                           1466 ;--------------------------------------------------------
                           1467 	.area BSEG    (BIT)
                           1468 ;--------------------------------------------------------
                           1469 ; paged external ram data
                           1470 ;--------------------------------------------------------
                           1471 	.area PSEG    (PAG,XDATA)
                           1472 ;--------------------------------------------------------
                           1473 ; external ram data
                           1474 ;--------------------------------------------------------
                           1475 	.area XSEG    (XDATA)
                    7020   1476 _ADCCH0VAL0	=	0x7020
                    7021   1477 _ADCCH0VAL1	=	0x7021
                    7020   1478 _ADCCH0VAL	=	0x7020
                    7022   1479 _ADCCH1VAL0	=	0x7022
                    7023   1480 _ADCCH1VAL1	=	0x7023
                    7022   1481 _ADCCH1VAL	=	0x7022
                    7024   1482 _ADCCH2VAL0	=	0x7024
                    7025   1483 _ADCCH2VAL1	=	0x7025
                    7024   1484 _ADCCH2VAL	=	0x7024
                    7026   1485 _ADCCH3VAL0	=	0x7026
                    7027   1486 _ADCCH3VAL1	=	0x7027
                    7026   1487 _ADCCH3VAL	=	0x7026
                    7028   1488 _ADCTUNE0	=	0x7028
                    7029   1489 _ADCTUNE1	=	0x7029
                    702A   1490 _ADCTUNE2	=	0x702a
                    7010   1491 _DMA0ADDR0	=	0x7010
                    7011   1492 _DMA0ADDR1	=	0x7011
                    7010   1493 _DMA0ADDR	=	0x7010
                    7014   1494 _DMA0CONFIG	=	0x7014
                    7012   1495 _DMA1ADDR0	=	0x7012
                    7013   1496 _DMA1ADDR1	=	0x7013
                    7012   1497 _DMA1ADDR	=	0x7012
                    7015   1498 _DMA1CONFIG	=	0x7015
                    7070   1499 _FRCOSCCONFIG	=	0x7070
                    7071   1500 _FRCOSCCTRL	=	0x7071
                    7076   1501 _FRCOSCFREQ0	=	0x7076
                    7077   1502 _FRCOSCFREQ1	=	0x7077
                    7076   1503 _FRCOSCFREQ	=	0x7076
                    7072   1504 _FRCOSCKFILT0	=	0x7072
                    7073   1505 _FRCOSCKFILT1	=	0x7073
                    7072   1506 _FRCOSCKFILT	=	0x7072
                    7078   1507 _FRCOSCPER0	=	0x7078
                    7079   1508 _FRCOSCPER1	=	0x7079
                    7078   1509 _FRCOSCPER	=	0x7078
                    7074   1510 _FRCOSCREF0	=	0x7074
                    7075   1511 _FRCOSCREF1	=	0x7075
                    7074   1512 _FRCOSCREF	=	0x7074
                    7007   1513 _ANALOGA	=	0x7007
                    700C   1514 _GPIOENABLE	=	0x700c
                    7003   1515 _EXTIRQ	=	0x7003
                    7000   1516 _INTCHGA	=	0x7000
                    7001   1517 _INTCHGB	=	0x7001
                    7002   1518 _INTCHGC	=	0x7002
                    7008   1519 _PALTA	=	0x7008
                    7009   1520 _PALTB	=	0x7009
                    700A   1521 _PALTC	=	0x700a
                    7046   1522 _PALTRADIO	=	0x7046
                    7004   1523 _PINCHGA	=	0x7004
                    7005   1524 _PINCHGB	=	0x7005
                    7006   1525 _PINCHGC	=	0x7006
                    700B   1526 _PINSEL	=	0x700b
                    7060   1527 _LPOSCCONFIG	=	0x7060
                    7066   1528 _LPOSCFREQ0	=	0x7066
                    7067   1529 _LPOSCFREQ1	=	0x7067
                    7066   1530 _LPOSCFREQ	=	0x7066
                    7062   1531 _LPOSCKFILT0	=	0x7062
                    7063   1532 _LPOSCKFILT1	=	0x7063
                    7062   1533 _LPOSCKFILT	=	0x7062
                    7068   1534 _LPOSCPER0	=	0x7068
                    7069   1535 _LPOSCPER1	=	0x7069
                    7068   1536 _LPOSCPER	=	0x7068
                    7064   1537 _LPOSCREF0	=	0x7064
                    7065   1538 _LPOSCREF1	=	0x7065
                    7064   1539 _LPOSCREF	=	0x7064
                    7054   1540 _LPXOSCGM	=	0x7054
                    7F01   1541 _MISCCTRL	=	0x7f01
                    7053   1542 _OSCCALIB	=	0x7053
                    7050   1543 _OSCFORCERUN	=	0x7050
                    7052   1544 _OSCREADY	=	0x7052
                    7051   1545 _OSCRUN	=	0x7051
                    7040   1546 _RADIOFDATAADDR0	=	0x7040
                    7041   1547 _RADIOFDATAADDR1	=	0x7041
                    7040   1548 _RADIOFDATAADDR	=	0x7040
                    7042   1549 _RADIOFSTATADDR0	=	0x7042
                    7043   1550 _RADIOFSTATADDR1	=	0x7043
                    7042   1551 _RADIOFSTATADDR	=	0x7042
                    7044   1552 _RADIOMUX	=	0x7044
                    7084   1553 _SCRATCH0	=	0x7084
                    7085   1554 _SCRATCH1	=	0x7085
                    7086   1555 _SCRATCH2	=	0x7086
                    7087   1556 _SCRATCH3	=	0x7087
                    7F00   1557 _SILICONREV	=	0x7f00
                    7F19   1558 _XTALAMPL	=	0x7f19
                    7F18   1559 _XTALOSC	=	0x7f18
                    7F1A   1560 _XTALREADY	=	0x7f1a
                    3F82   1561 _XDPTR0	=	0x3f82
                    3F84   1562 _XDPTR1	=	0x3f84
                    3FA8   1563 _XIE	=	0x3fa8
                    3FB8   1564 _XIP	=	0x3fb8
                    3F87   1565 _XPCON	=	0x3f87
                    3FCA   1566 _XADCCH0CONFIG	=	0x3fca
                    3FCB   1567 _XADCCH1CONFIG	=	0x3fcb
                    3FD2   1568 _XADCCH2CONFIG	=	0x3fd2
                    3FD3   1569 _XADCCH3CONFIG	=	0x3fd3
                    3FD1   1570 _XADCCLKSRC	=	0x3fd1
                    3FC9   1571 _XADCCONV	=	0x3fc9
                    3FE1   1572 _XANALOGCOMP	=	0x3fe1
                    3FC6   1573 _XCLKCON	=	0x3fc6
                    3FC7   1574 _XCLKSTAT	=	0x3fc7
                    3F97   1575 _XCODECONFIG	=	0x3f97
                    3FE3   1576 _XDBGLNKBUF	=	0x3fe3
                    3FE2   1577 _XDBGLNKSTAT	=	0x3fe2
                    3F89   1578 _XDIRA	=	0x3f89
                    3F8A   1579 _XDIRB	=	0x3f8a
                    3F8B   1580 _XDIRC	=	0x3f8b
                    3F8E   1581 _XDIRR	=	0x3f8e
                    3FC8   1582 _XPINA	=	0x3fc8
                    3FE8   1583 _XPINB	=	0x3fe8
                    3FF8   1584 _XPINC	=	0x3ff8
                    3F8D   1585 _XPINR	=	0x3f8d
                    3F80   1586 _XPORTA	=	0x3f80
                    3F88   1587 _XPORTB	=	0x3f88
                    3F90   1588 _XPORTC	=	0x3f90
                    3F8C   1589 _XPORTR	=	0x3f8c
                    3FCE   1590 _XIC0CAPT0	=	0x3fce
                    3FCF   1591 _XIC0CAPT1	=	0x3fcf
                    3FCE   1592 _XIC0CAPT	=	0x3fce
                    3FCC   1593 _XIC0MODE	=	0x3fcc
                    3FCD   1594 _XIC0STATUS	=	0x3fcd
                    3FD6   1595 _XIC1CAPT0	=	0x3fd6
                    3FD7   1596 _XIC1CAPT1	=	0x3fd7
                    3FD6   1597 _XIC1CAPT	=	0x3fd6
                    3FD4   1598 _XIC1MODE	=	0x3fd4
                    3FD5   1599 _XIC1STATUS	=	0x3fd5
                    3F92   1600 _XNVADDR0	=	0x3f92
                    3F93   1601 _XNVADDR1	=	0x3f93
                    3F92   1602 _XNVADDR	=	0x3f92
                    3F94   1603 _XNVDATA0	=	0x3f94
                    3F95   1604 _XNVDATA1	=	0x3f95
                    3F94   1605 _XNVDATA	=	0x3f94
                    3F96   1606 _XNVKEY	=	0x3f96
                    3F91   1607 _XNVSTATUS	=	0x3f91
                    3FBC   1608 _XOC0COMP0	=	0x3fbc
                    3FBD   1609 _XOC0COMP1	=	0x3fbd
                    3FBC   1610 _XOC0COMP	=	0x3fbc
                    3FB9   1611 _XOC0MODE	=	0x3fb9
                    3FBA   1612 _XOC0PIN	=	0x3fba
                    3FBB   1613 _XOC0STATUS	=	0x3fbb
                    3FC4   1614 _XOC1COMP0	=	0x3fc4
                    3FC5   1615 _XOC1COMP1	=	0x3fc5
                    3FC4   1616 _XOC1COMP	=	0x3fc4
                    3FC1   1617 _XOC1MODE	=	0x3fc1
                    3FC2   1618 _XOC1PIN	=	0x3fc2
                    3FC3   1619 _XOC1STATUS	=	0x3fc3
                    3FB1   1620 _XRADIOACC	=	0x3fb1
                    3FB3   1621 _XRADIOADDR0	=	0x3fb3
                    3FB2   1622 _XRADIOADDR1	=	0x3fb2
                    3FB7   1623 _XRADIODATA0	=	0x3fb7
                    3FB6   1624 _XRADIODATA1	=	0x3fb6
                    3FB5   1625 _XRADIODATA2	=	0x3fb5
                    3FB4   1626 _XRADIODATA3	=	0x3fb4
                    3FBE   1627 _XRADIOSTAT0	=	0x3fbe
                    3FBF   1628 _XRADIOSTAT1	=	0x3fbf
                    3FBE   1629 _XRADIOSTAT	=	0x3fbe
                    3FDF   1630 _XSPCLKSRC	=	0x3fdf
                    3FDC   1631 _XSPMODE	=	0x3fdc
                    3FDE   1632 _XSPSHREG	=	0x3fde
                    3FDD   1633 _XSPSTATUS	=	0x3fdd
                    3F9A   1634 _XT0CLKSRC	=	0x3f9a
                    3F9C   1635 _XT0CNT0	=	0x3f9c
                    3F9D   1636 _XT0CNT1	=	0x3f9d
                    3F9C   1637 _XT0CNT	=	0x3f9c
                    3F99   1638 _XT0MODE	=	0x3f99
                    3F9E   1639 _XT0PERIOD0	=	0x3f9e
                    3F9F   1640 _XT0PERIOD1	=	0x3f9f
                    3F9E   1641 _XT0PERIOD	=	0x3f9e
                    3F9B   1642 _XT0STATUS	=	0x3f9b
                    3FA2   1643 _XT1CLKSRC	=	0x3fa2
                    3FA4   1644 _XT1CNT0	=	0x3fa4
                    3FA5   1645 _XT1CNT1	=	0x3fa5
                    3FA4   1646 _XT1CNT	=	0x3fa4
                    3FA1   1647 _XT1MODE	=	0x3fa1
                    3FA6   1648 _XT1PERIOD0	=	0x3fa6
                    3FA7   1649 _XT1PERIOD1	=	0x3fa7
                    3FA6   1650 _XT1PERIOD	=	0x3fa6
                    3FA3   1651 _XT1STATUS	=	0x3fa3
                    3FAA   1652 _XT2CLKSRC	=	0x3faa
                    3FAC   1653 _XT2CNT0	=	0x3fac
                    3FAD   1654 _XT2CNT1	=	0x3fad
                    3FAC   1655 _XT2CNT	=	0x3fac
                    3FA9   1656 _XT2MODE	=	0x3fa9
                    3FAE   1657 _XT2PERIOD0	=	0x3fae
                    3FAF   1658 _XT2PERIOD1	=	0x3faf
                    3FAE   1659 _XT2PERIOD	=	0x3fae
                    3FAB   1660 _XT2STATUS	=	0x3fab
                    3FE4   1661 _XU0CTRL	=	0x3fe4
                    3FE7   1662 _XU0MODE	=	0x3fe7
                    3FE6   1663 _XU0SHREG	=	0x3fe6
                    3FE5   1664 _XU0STATUS	=	0x3fe5
                    3FEC   1665 _XU1CTRL	=	0x3fec
                    3FEF   1666 _XU1MODE	=	0x3fef
                    3FEE   1667 _XU1SHREG	=	0x3fee
                    3FED   1668 _XU1STATUS	=	0x3fed
                    3FDA   1669 _XWDTCFG	=	0x3fda
                    3FDB   1670 _XWDTRESET	=	0x3fdb
                    3FF1   1671 _XWTCFGA	=	0x3ff1
                    3FF9   1672 _XWTCFGB	=	0x3ff9
                    3FF2   1673 _XWTCNTA0	=	0x3ff2
                    3FF3   1674 _XWTCNTA1	=	0x3ff3
                    3FF2   1675 _XWTCNTA	=	0x3ff2
                    3FFA   1676 _XWTCNTB0	=	0x3ffa
                    3FFB   1677 _XWTCNTB1	=	0x3ffb
                    3FFA   1678 _XWTCNTB	=	0x3ffa
                    3FEB   1679 _XWTCNTR1	=	0x3feb
                    3FF4   1680 _XWTEVTA0	=	0x3ff4
                    3FF5   1681 _XWTEVTA1	=	0x3ff5
                    3FF4   1682 _XWTEVTA	=	0x3ff4
                    3FF6   1683 _XWTEVTB0	=	0x3ff6
                    3FF7   1684 _XWTEVTB1	=	0x3ff7
                    3FF6   1685 _XWTEVTB	=	0x3ff6
                    3FFC   1686 _XWTEVTC0	=	0x3ffc
                    3FFD   1687 _XWTEVTC1	=	0x3ffd
                    3FFC   1688 _XWTEVTC	=	0x3ffc
                    3FFE   1689 _XWTEVTD0	=	0x3ffe
                    3FFF   1690 _XWTEVTD1	=	0x3fff
                    3FFE   1691 _XWTEVTD	=	0x3ffe
                    3FE9   1692 _XWTIRQEN	=	0x3fe9
                    3FEA   1693 _XWTSTAT	=	0x3fea
                    4114   1694 _AX5043_AFSKCTRL	=	0x4114
                    4113   1695 _AX5043_AFSKMARK0	=	0x4113
                    4112   1696 _AX5043_AFSKMARK1	=	0x4112
                    4111   1697 _AX5043_AFSKSPACE0	=	0x4111
                    4110   1698 _AX5043_AFSKSPACE1	=	0x4110
                    4043   1699 _AX5043_AGCCOUNTER	=	0x4043
                    4115   1700 _AX5043_AMPLFILTER	=	0x4115
                    4189   1701 _AX5043_BBOFFSCAP	=	0x4189
                    4188   1702 _AX5043_BBTUNE	=	0x4188
                    4041   1703 _AX5043_BGNDRSSI	=	0x4041
                    422E   1704 _AX5043_BGNDRSSIGAIN	=	0x422e
                    422F   1705 _AX5043_BGNDRSSITHR	=	0x422f
                    4017   1706 _AX5043_CRCINIT0	=	0x4017
                    4016   1707 _AX5043_CRCINIT1	=	0x4016
                    4015   1708 _AX5043_CRCINIT2	=	0x4015
                    4014   1709 _AX5043_CRCINIT3	=	0x4014
                    4332   1710 _AX5043_DACCONFIG	=	0x4332
                    4331   1711 _AX5043_DACVALUE0	=	0x4331
                    4330   1712 _AX5043_DACVALUE1	=	0x4330
                    4102   1713 _AX5043_DECIMATION	=	0x4102
                    4042   1714 _AX5043_DIVERSITY	=	0x4042
                    4011   1715 _AX5043_ENCODING	=	0x4011
                    4018   1716 _AX5043_FEC	=	0x4018
                    401A   1717 _AX5043_FECSTATUS	=	0x401a
                    4019   1718 _AX5043_FECSYNC	=	0x4019
                    402B   1719 _AX5043_FIFOCOUNT0	=	0x402b
                    402A   1720 _AX5043_FIFOCOUNT1	=	0x402a
                    4029   1721 _AX5043_FIFODATA	=	0x4029
                    402D   1722 _AX5043_FIFOFREE0	=	0x402d
                    402C   1723 _AX5043_FIFOFREE1	=	0x402c
                    4028   1724 _AX5043_FIFOSTAT	=	0x4028
                    402F   1725 _AX5043_FIFOTHRESH0	=	0x402f
                    402E   1726 _AX5043_FIFOTHRESH1	=	0x402e
                    4012   1727 _AX5043_FRAMING	=	0x4012
                    4037   1728 _AX5043_FREQA0	=	0x4037
                    4036   1729 _AX5043_FREQA1	=	0x4036
                    4035   1730 _AX5043_FREQA2	=	0x4035
                    4034   1731 _AX5043_FREQA3	=	0x4034
                    403F   1732 _AX5043_FREQB0	=	0x403f
                    403E   1733 _AX5043_FREQB1	=	0x403e
                    403D   1734 _AX5043_FREQB2	=	0x403d
                    403C   1735 _AX5043_FREQB3	=	0x403c
                    4163   1736 _AX5043_FSKDEV0	=	0x4163
                    4162   1737 _AX5043_FSKDEV1	=	0x4162
                    4161   1738 _AX5043_FSKDEV2	=	0x4161
                    410D   1739 _AX5043_FSKDMAX0	=	0x410d
                    410C   1740 _AX5043_FSKDMAX1	=	0x410c
                    410F   1741 _AX5043_FSKDMIN0	=	0x410f
                    410E   1742 _AX5043_FSKDMIN1	=	0x410e
                    4309   1743 _AX5043_GPADC13VALUE0	=	0x4309
                    4308   1744 _AX5043_GPADC13VALUE1	=	0x4308
                    4300   1745 _AX5043_GPADCCTRL	=	0x4300
                    4301   1746 _AX5043_GPADCPERIOD	=	0x4301
                    4101   1747 _AX5043_IFFREQ0	=	0x4101
                    4100   1748 _AX5043_IFFREQ1	=	0x4100
                    400B   1749 _AX5043_IRQINVERSION0	=	0x400b
                    400A   1750 _AX5043_IRQINVERSION1	=	0x400a
                    4007   1751 _AX5043_IRQMASK0	=	0x4007
                    4006   1752 _AX5043_IRQMASK1	=	0x4006
                    400D   1753 _AX5043_IRQREQUEST0	=	0x400d
                    400C   1754 _AX5043_IRQREQUEST1	=	0x400c
                    4310   1755 _AX5043_LPOSCCONFIG	=	0x4310
                    4317   1756 _AX5043_LPOSCFREQ0	=	0x4317
                    4316   1757 _AX5043_LPOSCFREQ1	=	0x4316
                    4313   1758 _AX5043_LPOSCKFILT0	=	0x4313
                    4312   1759 _AX5043_LPOSCKFILT1	=	0x4312
                    4319   1760 _AX5043_LPOSCPER0	=	0x4319
                    4318   1761 _AX5043_LPOSCPER1	=	0x4318
                    4315   1762 _AX5043_LPOSCREF0	=	0x4315
                    4314   1763 _AX5043_LPOSCREF1	=	0x4314
                    4311   1764 _AX5043_LPOSCSTATUS	=	0x4311
                    4214   1765 _AX5043_MATCH0LEN	=	0x4214
                    4216   1766 _AX5043_MATCH0MAX	=	0x4216
                    4215   1767 _AX5043_MATCH0MIN	=	0x4215
                    4213   1768 _AX5043_MATCH0PAT0	=	0x4213
                    4212   1769 _AX5043_MATCH0PAT1	=	0x4212
                    4211   1770 _AX5043_MATCH0PAT2	=	0x4211
                    4210   1771 _AX5043_MATCH0PAT3	=	0x4210
                    421C   1772 _AX5043_MATCH1LEN	=	0x421c
                    421E   1773 _AX5043_MATCH1MAX	=	0x421e
                    421D   1774 _AX5043_MATCH1MIN	=	0x421d
                    4219   1775 _AX5043_MATCH1PAT0	=	0x4219
                    4218   1776 _AX5043_MATCH1PAT1	=	0x4218
                    4108   1777 _AX5043_MAXDROFFSET0	=	0x4108
                    4107   1778 _AX5043_MAXDROFFSET1	=	0x4107
                    4106   1779 _AX5043_MAXDROFFSET2	=	0x4106
                    410B   1780 _AX5043_MAXRFOFFSET0	=	0x410b
                    410A   1781 _AX5043_MAXRFOFFSET1	=	0x410a
                    4109   1782 _AX5043_MAXRFOFFSET2	=	0x4109
                    4164   1783 _AX5043_MODCFGA	=	0x4164
                    4160   1784 _AX5043_MODCFGF	=	0x4160
                    4010   1785 _AX5043_MODULATION	=	0x4010
                    4025   1786 _AX5043_PINFUNCANTSEL	=	0x4025
                    4023   1787 _AX5043_PINFUNCDATA	=	0x4023
                    4022   1788 _AX5043_PINFUNCDCLK	=	0x4022
                    4024   1789 _AX5043_PINFUNCIRQ	=	0x4024
                    4026   1790 _AX5043_PINFUNCPWRAMP	=	0x4026
                    4021   1791 _AX5043_PINFUNCSYSCLK	=	0x4021
                    4020   1792 _AX5043_PINSTATE	=	0x4020
                    4233   1793 _AX5043_PKTACCEPTFLAGS	=	0x4233
                    4230   1794 _AX5043_PKTCHUNKSIZE	=	0x4230
                    4231   1795 _AX5043_PKTMISCFLAGS	=	0x4231
                    4232   1796 _AX5043_PKTSTOREFLAGS	=	0x4232
                    4031   1797 _AX5043_PLLCPI	=	0x4031
                    4039   1798 _AX5043_PLLCPIBOOST	=	0x4039
                    4182   1799 _AX5043_PLLLOCKDET	=	0x4182
                    4030   1800 _AX5043_PLLLOOP	=	0x4030
                    4038   1801 _AX5043_PLLLOOPBOOST	=	0x4038
                    4033   1802 _AX5043_PLLRANGINGA	=	0x4033
                    403B   1803 _AX5043_PLLRANGINGB	=	0x403b
                    4183   1804 _AX5043_PLLRNGCLK	=	0x4183
                    4032   1805 _AX5043_PLLVCODIV	=	0x4032
                    4180   1806 _AX5043_PLLVCOI	=	0x4180
                    4181   1807 _AX5043_PLLVCOIR	=	0x4181
                    4005   1808 _AX5043_POWIRQMASK	=	0x4005
                    4003   1809 _AX5043_POWSTAT	=	0x4003
                    4004   1810 _AX5043_POWSTICKYSTAT	=	0x4004
                    4027   1811 _AX5043_PWRAMP	=	0x4027
                    4002   1812 _AX5043_PWRMODE	=	0x4002
                    4009   1813 _AX5043_RADIOEVENTMASK0	=	0x4009
                    4008   1814 _AX5043_RADIOEVENTMASK1	=	0x4008
                    400F   1815 _AX5043_RADIOEVENTREQ0	=	0x400f
                    400E   1816 _AX5043_RADIOEVENTREQ1	=	0x400e
                    401C   1817 _AX5043_RADIOSTATE	=	0x401c
                    4040   1818 _AX5043_RSSI	=	0x4040
                    422D   1819 _AX5043_RSSIABSTHR	=	0x422d
                    422C   1820 _AX5043_RSSIREFERENCE	=	0x422c
                    4105   1821 _AX5043_RXDATARATE0	=	0x4105
                    4104   1822 _AX5043_RXDATARATE1	=	0x4104
                    4103   1823 _AX5043_RXDATARATE2	=	0x4103
                    4001   1824 _AX5043_SCRATCH	=	0x4001
                    4000   1825 _AX5043_SILICONREVISION	=	0x4000
                    405B   1826 _AX5043_TIMER0	=	0x405b
                    405A   1827 _AX5043_TIMER1	=	0x405a
                    4059   1828 _AX5043_TIMER2	=	0x4059
                    4227   1829 _AX5043_TMGRXAGC	=	0x4227
                    4223   1830 _AX5043_TMGRXBOOST	=	0x4223
                    4226   1831 _AX5043_TMGRXCOARSEAGC	=	0x4226
                    4225   1832 _AX5043_TMGRXOFFSACQ	=	0x4225
                    4229   1833 _AX5043_TMGRXPREAMBLE1	=	0x4229
                    422A   1834 _AX5043_TMGRXPREAMBLE2	=	0x422a
                    422B   1835 _AX5043_TMGRXPREAMBLE3	=	0x422b
                    4228   1836 _AX5043_TMGRXRSSI	=	0x4228
                    4224   1837 _AX5043_TMGRXSETTLE	=	0x4224
                    4220   1838 _AX5043_TMGTXBOOST	=	0x4220
                    4221   1839 _AX5043_TMGTXSETTLE	=	0x4221
                    4055   1840 _AX5043_TRKAFSKDEMOD0	=	0x4055
                    4054   1841 _AX5043_TRKAFSKDEMOD1	=	0x4054
                    4049   1842 _AX5043_TRKAMPLITUDE0	=	0x4049
                    4048   1843 _AX5043_TRKAMPLITUDE1	=	0x4048
                    4047   1844 _AX5043_TRKDATARATE0	=	0x4047
                    4046   1845 _AX5043_TRKDATARATE1	=	0x4046
                    4045   1846 _AX5043_TRKDATARATE2	=	0x4045
                    4051   1847 _AX5043_TRKFREQ0	=	0x4051
                    4050   1848 _AX5043_TRKFREQ1	=	0x4050
                    4053   1849 _AX5043_TRKFSKDEMOD0	=	0x4053
                    4052   1850 _AX5043_TRKFSKDEMOD1	=	0x4052
                    404B   1851 _AX5043_TRKPHASE0	=	0x404b
                    404A   1852 _AX5043_TRKPHASE1	=	0x404a
                    404F   1853 _AX5043_TRKRFFREQ0	=	0x404f
                    404E   1854 _AX5043_TRKRFFREQ1	=	0x404e
                    404D   1855 _AX5043_TRKRFFREQ2	=	0x404d
                    4169   1856 _AX5043_TXPWRCOEFFA0	=	0x4169
                    4168   1857 _AX5043_TXPWRCOEFFA1	=	0x4168
                    416B   1858 _AX5043_TXPWRCOEFFB0	=	0x416b
                    416A   1859 _AX5043_TXPWRCOEFFB1	=	0x416a
                    416D   1860 _AX5043_TXPWRCOEFFC0	=	0x416d
                    416C   1861 _AX5043_TXPWRCOEFFC1	=	0x416c
                    416F   1862 _AX5043_TXPWRCOEFFD0	=	0x416f
                    416E   1863 _AX5043_TXPWRCOEFFD1	=	0x416e
                    4171   1864 _AX5043_TXPWRCOEFFE0	=	0x4171
                    4170   1865 _AX5043_TXPWRCOEFFE1	=	0x4170
                    4167   1866 _AX5043_TXRATE0	=	0x4167
                    4166   1867 _AX5043_TXRATE1	=	0x4166
                    4165   1868 _AX5043_TXRATE2	=	0x4165
                    406B   1869 _AX5043_WAKEUP0	=	0x406b
                    406A   1870 _AX5043_WAKEUP1	=	0x406a
                    406D   1871 _AX5043_WAKEUPFREQ0	=	0x406d
                    406C   1872 _AX5043_WAKEUPFREQ1	=	0x406c
                    4069   1873 _AX5043_WAKEUPTIMER0	=	0x4069
                    4068   1874 _AX5043_WAKEUPTIMER1	=	0x4068
                    406E   1875 _AX5043_WAKEUPXOEARLY	=	0x406e
                    4184   1876 _AX5043_XTALCAP	=	0x4184
                    401D   1877 _AX5043_XTALSTATUS	=	0x401d
                    4122   1878 _AX5043_AGCAHYST0	=	0x4122
                    4132   1879 _AX5043_AGCAHYST1	=	0x4132
                    4142   1880 _AX5043_AGCAHYST2	=	0x4142
                    4152   1881 _AX5043_AGCAHYST3	=	0x4152
                    4120   1882 _AX5043_AGCGAIN0	=	0x4120
                    4130   1883 _AX5043_AGCGAIN1	=	0x4130
                    4140   1884 _AX5043_AGCGAIN2	=	0x4140
                    4150   1885 _AX5043_AGCGAIN3	=	0x4150
                    4123   1886 _AX5043_AGCMINMAX0	=	0x4123
                    4133   1887 _AX5043_AGCMINMAX1	=	0x4133
                    4143   1888 _AX5043_AGCMINMAX2	=	0x4143
                    4153   1889 _AX5043_AGCMINMAX3	=	0x4153
                    4121   1890 _AX5043_AGCTARGET0	=	0x4121
                    4131   1891 _AX5043_AGCTARGET1	=	0x4131
                    4141   1892 _AX5043_AGCTARGET2	=	0x4141
                    4151   1893 _AX5043_AGCTARGET3	=	0x4151
                    412B   1894 _AX5043_AMPLITUDEGAIN0	=	0x412b
                    413B   1895 _AX5043_AMPLITUDEGAIN1	=	0x413b
                    414B   1896 _AX5043_AMPLITUDEGAIN2	=	0x414b
                    415B   1897 _AX5043_AMPLITUDEGAIN3	=	0x415b
                    412F   1898 _AX5043_BBOFFSRES0	=	0x412f
                    413F   1899 _AX5043_BBOFFSRES1	=	0x413f
                    414F   1900 _AX5043_BBOFFSRES2	=	0x414f
                    415F   1901 _AX5043_BBOFFSRES3	=	0x415f
                    4125   1902 _AX5043_DRGAIN0	=	0x4125
                    4135   1903 _AX5043_DRGAIN1	=	0x4135
                    4145   1904 _AX5043_DRGAIN2	=	0x4145
                    4155   1905 _AX5043_DRGAIN3	=	0x4155
                    412E   1906 _AX5043_FOURFSK0	=	0x412e
                    413E   1907 _AX5043_FOURFSK1	=	0x413e
                    414E   1908 _AX5043_FOURFSK2	=	0x414e
                    415E   1909 _AX5043_FOURFSK3	=	0x415e
                    412D   1910 _AX5043_FREQDEV00	=	0x412d
                    413D   1911 _AX5043_FREQDEV01	=	0x413d
                    414D   1912 _AX5043_FREQDEV02	=	0x414d
                    415D   1913 _AX5043_FREQDEV03	=	0x415d
                    412C   1914 _AX5043_FREQDEV10	=	0x412c
                    413C   1915 _AX5043_FREQDEV11	=	0x413c
                    414C   1916 _AX5043_FREQDEV12	=	0x414c
                    415C   1917 _AX5043_FREQDEV13	=	0x415c
                    4127   1918 _AX5043_FREQUENCYGAINA0	=	0x4127
                    4137   1919 _AX5043_FREQUENCYGAINA1	=	0x4137
                    4147   1920 _AX5043_FREQUENCYGAINA2	=	0x4147
                    4157   1921 _AX5043_FREQUENCYGAINA3	=	0x4157
                    4128   1922 _AX5043_FREQUENCYGAINB0	=	0x4128
                    4138   1923 _AX5043_FREQUENCYGAINB1	=	0x4138
                    4148   1924 _AX5043_FREQUENCYGAINB2	=	0x4148
                    4158   1925 _AX5043_FREQUENCYGAINB3	=	0x4158
                    4129   1926 _AX5043_FREQUENCYGAINC0	=	0x4129
                    4139   1927 _AX5043_FREQUENCYGAINC1	=	0x4139
                    4149   1928 _AX5043_FREQUENCYGAINC2	=	0x4149
                    4159   1929 _AX5043_FREQUENCYGAINC3	=	0x4159
                    412A   1930 _AX5043_FREQUENCYGAIND0	=	0x412a
                    413A   1931 _AX5043_FREQUENCYGAIND1	=	0x413a
                    414A   1932 _AX5043_FREQUENCYGAIND2	=	0x414a
                    415A   1933 _AX5043_FREQUENCYGAIND3	=	0x415a
                    4116   1934 _AX5043_FREQUENCYLEAK	=	0x4116
                    4126   1935 _AX5043_PHASEGAIN0	=	0x4126
                    4136   1936 _AX5043_PHASEGAIN1	=	0x4136
                    4146   1937 _AX5043_PHASEGAIN2	=	0x4146
                    4156   1938 _AX5043_PHASEGAIN3	=	0x4156
                    4207   1939 _AX5043_PKTADDR0	=	0x4207
                    4206   1940 _AX5043_PKTADDR1	=	0x4206
                    4205   1941 _AX5043_PKTADDR2	=	0x4205
                    4204   1942 _AX5043_PKTADDR3	=	0x4204
                    4200   1943 _AX5043_PKTADDRCFG	=	0x4200
                    420B   1944 _AX5043_PKTADDRMASK0	=	0x420b
                    420A   1945 _AX5043_PKTADDRMASK1	=	0x420a
                    4209   1946 _AX5043_PKTADDRMASK2	=	0x4209
                    4208   1947 _AX5043_PKTADDRMASK3	=	0x4208
                    4201   1948 _AX5043_PKTLENCFG	=	0x4201
                    4202   1949 _AX5043_PKTLENOFFSET	=	0x4202
                    4203   1950 _AX5043_PKTMAXLEN	=	0x4203
                    4118   1951 _AX5043_RXPARAMCURSET	=	0x4118
                    4117   1952 _AX5043_RXPARAMSETS	=	0x4117
                    4124   1953 _AX5043_TIMEGAIN0	=	0x4124
                    4134   1954 _AX5043_TIMEGAIN1	=	0x4134
                    4144   1955 _AX5043_TIMEGAIN2	=	0x4144
                    4154   1956 _AX5043_TIMEGAIN3	=	0x4154
                    5114   1957 _AX5043_AFSKCTRLNB	=	0x5114
                    5113   1958 _AX5043_AFSKMARK0NB	=	0x5113
                    5112   1959 _AX5043_AFSKMARK1NB	=	0x5112
                    5111   1960 _AX5043_AFSKSPACE0NB	=	0x5111
                    5110   1961 _AX5043_AFSKSPACE1NB	=	0x5110
                    5043   1962 _AX5043_AGCCOUNTERNB	=	0x5043
                    5115   1963 _AX5043_AMPLFILTERNB	=	0x5115
                    5189   1964 _AX5043_BBOFFSCAPNB	=	0x5189
                    5188   1965 _AX5043_BBTUNENB	=	0x5188
                    5041   1966 _AX5043_BGNDRSSINB	=	0x5041
                    522E   1967 _AX5043_BGNDRSSIGAINNB	=	0x522e
                    522F   1968 _AX5043_BGNDRSSITHRNB	=	0x522f
                    5017   1969 _AX5043_CRCINIT0NB	=	0x5017
                    5016   1970 _AX5043_CRCINIT1NB	=	0x5016
                    5015   1971 _AX5043_CRCINIT2NB	=	0x5015
                    5014   1972 _AX5043_CRCINIT3NB	=	0x5014
                    5332   1973 _AX5043_DACCONFIGNB	=	0x5332
                    5331   1974 _AX5043_DACVALUE0NB	=	0x5331
                    5330   1975 _AX5043_DACVALUE1NB	=	0x5330
                    5102   1976 _AX5043_DECIMATIONNB	=	0x5102
                    5042   1977 _AX5043_DIVERSITYNB	=	0x5042
                    5011   1978 _AX5043_ENCODINGNB	=	0x5011
                    5018   1979 _AX5043_FECNB	=	0x5018
                    501A   1980 _AX5043_FECSTATUSNB	=	0x501a
                    5019   1981 _AX5043_FECSYNCNB	=	0x5019
                    502B   1982 _AX5043_FIFOCOUNT0NB	=	0x502b
                    502A   1983 _AX5043_FIFOCOUNT1NB	=	0x502a
                    5029   1984 _AX5043_FIFODATANB	=	0x5029
                    502D   1985 _AX5043_FIFOFREE0NB	=	0x502d
                    502C   1986 _AX5043_FIFOFREE1NB	=	0x502c
                    5028   1987 _AX5043_FIFOSTATNB	=	0x5028
                    502F   1988 _AX5043_FIFOTHRESH0NB	=	0x502f
                    502E   1989 _AX5043_FIFOTHRESH1NB	=	0x502e
                    5012   1990 _AX5043_FRAMINGNB	=	0x5012
                    5037   1991 _AX5043_FREQA0NB	=	0x5037
                    5036   1992 _AX5043_FREQA1NB	=	0x5036
                    5035   1993 _AX5043_FREQA2NB	=	0x5035
                    5034   1994 _AX5043_FREQA3NB	=	0x5034
                    503F   1995 _AX5043_FREQB0NB	=	0x503f
                    503E   1996 _AX5043_FREQB1NB	=	0x503e
                    503D   1997 _AX5043_FREQB2NB	=	0x503d
                    503C   1998 _AX5043_FREQB3NB	=	0x503c
                    5163   1999 _AX5043_FSKDEV0NB	=	0x5163
                    5162   2000 _AX5043_FSKDEV1NB	=	0x5162
                    5161   2001 _AX5043_FSKDEV2NB	=	0x5161
                    510D   2002 _AX5043_FSKDMAX0NB	=	0x510d
                    510C   2003 _AX5043_FSKDMAX1NB	=	0x510c
                    510F   2004 _AX5043_FSKDMIN0NB	=	0x510f
                    510E   2005 _AX5043_FSKDMIN1NB	=	0x510e
                    5309   2006 _AX5043_GPADC13VALUE0NB	=	0x5309
                    5308   2007 _AX5043_GPADC13VALUE1NB	=	0x5308
                    5300   2008 _AX5043_GPADCCTRLNB	=	0x5300
                    5301   2009 _AX5043_GPADCPERIODNB	=	0x5301
                    5101   2010 _AX5043_IFFREQ0NB	=	0x5101
                    5100   2011 _AX5043_IFFREQ1NB	=	0x5100
                    500B   2012 _AX5043_IRQINVERSION0NB	=	0x500b
                    500A   2013 _AX5043_IRQINVERSION1NB	=	0x500a
                    5007   2014 _AX5043_IRQMASK0NB	=	0x5007
                    5006   2015 _AX5043_IRQMASK1NB	=	0x5006
                    500D   2016 _AX5043_IRQREQUEST0NB	=	0x500d
                    500C   2017 _AX5043_IRQREQUEST1NB	=	0x500c
                    5310   2018 _AX5043_LPOSCCONFIGNB	=	0x5310
                    5317   2019 _AX5043_LPOSCFREQ0NB	=	0x5317
                    5316   2020 _AX5043_LPOSCFREQ1NB	=	0x5316
                    5313   2021 _AX5043_LPOSCKFILT0NB	=	0x5313
                    5312   2022 _AX5043_LPOSCKFILT1NB	=	0x5312
                    5319   2023 _AX5043_LPOSCPER0NB	=	0x5319
                    5318   2024 _AX5043_LPOSCPER1NB	=	0x5318
                    5315   2025 _AX5043_LPOSCREF0NB	=	0x5315
                    5314   2026 _AX5043_LPOSCREF1NB	=	0x5314
                    5311   2027 _AX5043_LPOSCSTATUSNB	=	0x5311
                    5214   2028 _AX5043_MATCH0LENNB	=	0x5214
                    5216   2029 _AX5043_MATCH0MAXNB	=	0x5216
                    5215   2030 _AX5043_MATCH0MINNB	=	0x5215
                    5213   2031 _AX5043_MATCH0PAT0NB	=	0x5213
                    5212   2032 _AX5043_MATCH0PAT1NB	=	0x5212
                    5211   2033 _AX5043_MATCH0PAT2NB	=	0x5211
                    5210   2034 _AX5043_MATCH0PAT3NB	=	0x5210
                    521C   2035 _AX5043_MATCH1LENNB	=	0x521c
                    521E   2036 _AX5043_MATCH1MAXNB	=	0x521e
                    521D   2037 _AX5043_MATCH1MINNB	=	0x521d
                    5219   2038 _AX5043_MATCH1PAT0NB	=	0x5219
                    5218   2039 _AX5043_MATCH1PAT1NB	=	0x5218
                    5108   2040 _AX5043_MAXDROFFSET0NB	=	0x5108
                    5107   2041 _AX5043_MAXDROFFSET1NB	=	0x5107
                    5106   2042 _AX5043_MAXDROFFSET2NB	=	0x5106
                    510B   2043 _AX5043_MAXRFOFFSET0NB	=	0x510b
                    510A   2044 _AX5043_MAXRFOFFSET1NB	=	0x510a
                    5109   2045 _AX5043_MAXRFOFFSET2NB	=	0x5109
                    5164   2046 _AX5043_MODCFGANB	=	0x5164
                    5160   2047 _AX5043_MODCFGFNB	=	0x5160
                    5010   2048 _AX5043_MODULATIONNB	=	0x5010
                    5025   2049 _AX5043_PINFUNCANTSELNB	=	0x5025
                    5023   2050 _AX5043_PINFUNCDATANB	=	0x5023
                    5022   2051 _AX5043_PINFUNCDCLKNB	=	0x5022
                    5024   2052 _AX5043_PINFUNCIRQNB	=	0x5024
                    5026   2053 _AX5043_PINFUNCPWRAMPNB	=	0x5026
                    5021   2054 _AX5043_PINFUNCSYSCLKNB	=	0x5021
                    5020   2055 _AX5043_PINSTATENB	=	0x5020
                    5233   2056 _AX5043_PKTACCEPTFLAGSNB	=	0x5233
                    5230   2057 _AX5043_PKTCHUNKSIZENB	=	0x5230
                    5231   2058 _AX5043_PKTMISCFLAGSNB	=	0x5231
                    5232   2059 _AX5043_PKTSTOREFLAGSNB	=	0x5232
                    5031   2060 _AX5043_PLLCPINB	=	0x5031
                    5039   2061 _AX5043_PLLCPIBOOSTNB	=	0x5039
                    5182   2062 _AX5043_PLLLOCKDETNB	=	0x5182
                    5030   2063 _AX5043_PLLLOOPNB	=	0x5030
                    5038   2064 _AX5043_PLLLOOPBOOSTNB	=	0x5038
                    5033   2065 _AX5043_PLLRANGINGANB	=	0x5033
                    503B   2066 _AX5043_PLLRANGINGBNB	=	0x503b
                    5183   2067 _AX5043_PLLRNGCLKNB	=	0x5183
                    5032   2068 _AX5043_PLLVCODIVNB	=	0x5032
                    5180   2069 _AX5043_PLLVCOINB	=	0x5180
                    5181   2070 _AX5043_PLLVCOIRNB	=	0x5181
                    5005   2071 _AX5043_POWIRQMASKNB	=	0x5005
                    5003   2072 _AX5043_POWSTATNB	=	0x5003
                    5004   2073 _AX5043_POWSTICKYSTATNB	=	0x5004
                    5027   2074 _AX5043_PWRAMPNB	=	0x5027
                    5002   2075 _AX5043_PWRMODENB	=	0x5002
                    5009   2076 _AX5043_RADIOEVENTMASK0NB	=	0x5009
                    5008   2077 _AX5043_RADIOEVENTMASK1NB	=	0x5008
                    500F   2078 _AX5043_RADIOEVENTREQ0NB	=	0x500f
                    500E   2079 _AX5043_RADIOEVENTREQ1NB	=	0x500e
                    501C   2080 _AX5043_RADIOSTATENB	=	0x501c
                    5040   2081 _AX5043_RSSINB	=	0x5040
                    522D   2082 _AX5043_RSSIABSTHRNB	=	0x522d
                    522C   2083 _AX5043_RSSIREFERENCENB	=	0x522c
                    5105   2084 _AX5043_RXDATARATE0NB	=	0x5105
                    5104   2085 _AX5043_RXDATARATE1NB	=	0x5104
                    5103   2086 _AX5043_RXDATARATE2NB	=	0x5103
                    5001   2087 _AX5043_SCRATCHNB	=	0x5001
                    5000   2088 _AX5043_SILICONREVISIONNB	=	0x5000
                    505B   2089 _AX5043_TIMER0NB	=	0x505b
                    505A   2090 _AX5043_TIMER1NB	=	0x505a
                    5059   2091 _AX5043_TIMER2NB	=	0x5059
                    5227   2092 _AX5043_TMGRXAGCNB	=	0x5227
                    5223   2093 _AX5043_TMGRXBOOSTNB	=	0x5223
                    5226   2094 _AX5043_TMGRXCOARSEAGCNB	=	0x5226
                    5225   2095 _AX5043_TMGRXOFFSACQNB	=	0x5225
                    5229   2096 _AX5043_TMGRXPREAMBLE1NB	=	0x5229
                    522A   2097 _AX5043_TMGRXPREAMBLE2NB	=	0x522a
                    522B   2098 _AX5043_TMGRXPREAMBLE3NB	=	0x522b
                    5228   2099 _AX5043_TMGRXRSSINB	=	0x5228
                    5224   2100 _AX5043_TMGRXSETTLENB	=	0x5224
                    5220   2101 _AX5043_TMGTXBOOSTNB	=	0x5220
                    5221   2102 _AX5043_TMGTXSETTLENB	=	0x5221
                    5055   2103 _AX5043_TRKAFSKDEMOD0NB	=	0x5055
                    5054   2104 _AX5043_TRKAFSKDEMOD1NB	=	0x5054
                    5049   2105 _AX5043_TRKAMPLITUDE0NB	=	0x5049
                    5048   2106 _AX5043_TRKAMPLITUDE1NB	=	0x5048
                    5047   2107 _AX5043_TRKDATARATE0NB	=	0x5047
                    5046   2108 _AX5043_TRKDATARATE1NB	=	0x5046
                    5045   2109 _AX5043_TRKDATARATE2NB	=	0x5045
                    5051   2110 _AX5043_TRKFREQ0NB	=	0x5051
                    5050   2111 _AX5043_TRKFREQ1NB	=	0x5050
                    5053   2112 _AX5043_TRKFSKDEMOD0NB	=	0x5053
                    5052   2113 _AX5043_TRKFSKDEMOD1NB	=	0x5052
                    504B   2114 _AX5043_TRKPHASE0NB	=	0x504b
                    504A   2115 _AX5043_TRKPHASE1NB	=	0x504a
                    504F   2116 _AX5043_TRKRFFREQ0NB	=	0x504f
                    504E   2117 _AX5043_TRKRFFREQ1NB	=	0x504e
                    504D   2118 _AX5043_TRKRFFREQ2NB	=	0x504d
                    5169   2119 _AX5043_TXPWRCOEFFA0NB	=	0x5169
                    5168   2120 _AX5043_TXPWRCOEFFA1NB	=	0x5168
                    516B   2121 _AX5043_TXPWRCOEFFB0NB	=	0x516b
                    516A   2122 _AX5043_TXPWRCOEFFB1NB	=	0x516a
                    516D   2123 _AX5043_TXPWRCOEFFC0NB	=	0x516d
                    516C   2124 _AX5043_TXPWRCOEFFC1NB	=	0x516c
                    516F   2125 _AX5043_TXPWRCOEFFD0NB	=	0x516f
                    516E   2126 _AX5043_TXPWRCOEFFD1NB	=	0x516e
                    5171   2127 _AX5043_TXPWRCOEFFE0NB	=	0x5171
                    5170   2128 _AX5043_TXPWRCOEFFE1NB	=	0x5170
                    5167   2129 _AX5043_TXRATE0NB	=	0x5167
                    5166   2130 _AX5043_TXRATE1NB	=	0x5166
                    5165   2131 _AX5043_TXRATE2NB	=	0x5165
                    506B   2132 _AX5043_WAKEUP0NB	=	0x506b
                    506A   2133 _AX5043_WAKEUP1NB	=	0x506a
                    506D   2134 _AX5043_WAKEUPFREQ0NB	=	0x506d
                    506C   2135 _AX5043_WAKEUPFREQ1NB	=	0x506c
                    5069   2136 _AX5043_WAKEUPTIMER0NB	=	0x5069
                    5068   2137 _AX5043_WAKEUPTIMER1NB	=	0x5068
                    506E   2138 _AX5043_WAKEUPXOEARLYNB	=	0x506e
                    5184   2139 _AX5043_XTALCAPNB	=	0x5184
                    501D   2140 _AX5043_XTALSTATUSNB	=	0x501d
                    5122   2141 _AX5043_AGCAHYST0NB	=	0x5122
                    5132   2142 _AX5043_AGCAHYST1NB	=	0x5132
                    5142   2143 _AX5043_AGCAHYST2NB	=	0x5142
                    5152   2144 _AX5043_AGCAHYST3NB	=	0x5152
                    5120   2145 _AX5043_AGCGAIN0NB	=	0x5120
                    5130   2146 _AX5043_AGCGAIN1NB	=	0x5130
                    5140   2147 _AX5043_AGCGAIN2NB	=	0x5140
                    5150   2148 _AX5043_AGCGAIN3NB	=	0x5150
                    5123   2149 _AX5043_AGCMINMAX0NB	=	0x5123
                    5133   2150 _AX5043_AGCMINMAX1NB	=	0x5133
                    5143   2151 _AX5043_AGCMINMAX2NB	=	0x5143
                    5153   2152 _AX5043_AGCMINMAX3NB	=	0x5153
                    5121   2153 _AX5043_AGCTARGET0NB	=	0x5121
                    5131   2154 _AX5043_AGCTARGET1NB	=	0x5131
                    5141   2155 _AX5043_AGCTARGET2NB	=	0x5141
                    5151   2156 _AX5043_AGCTARGET3NB	=	0x5151
                    512B   2157 _AX5043_AMPLITUDEGAIN0NB	=	0x512b
                    513B   2158 _AX5043_AMPLITUDEGAIN1NB	=	0x513b
                    514B   2159 _AX5043_AMPLITUDEGAIN2NB	=	0x514b
                    515B   2160 _AX5043_AMPLITUDEGAIN3NB	=	0x515b
                    512F   2161 _AX5043_BBOFFSRES0NB	=	0x512f
                    513F   2162 _AX5043_BBOFFSRES1NB	=	0x513f
                    514F   2163 _AX5043_BBOFFSRES2NB	=	0x514f
                    515F   2164 _AX5043_BBOFFSRES3NB	=	0x515f
                    5125   2165 _AX5043_DRGAIN0NB	=	0x5125
                    5135   2166 _AX5043_DRGAIN1NB	=	0x5135
                    5145   2167 _AX5043_DRGAIN2NB	=	0x5145
                    5155   2168 _AX5043_DRGAIN3NB	=	0x5155
                    512E   2169 _AX5043_FOURFSK0NB	=	0x512e
                    513E   2170 _AX5043_FOURFSK1NB	=	0x513e
                    514E   2171 _AX5043_FOURFSK2NB	=	0x514e
                    515E   2172 _AX5043_FOURFSK3NB	=	0x515e
                    512D   2173 _AX5043_FREQDEV00NB	=	0x512d
                    513D   2174 _AX5043_FREQDEV01NB	=	0x513d
                    514D   2175 _AX5043_FREQDEV02NB	=	0x514d
                    515D   2176 _AX5043_FREQDEV03NB	=	0x515d
                    512C   2177 _AX5043_FREQDEV10NB	=	0x512c
                    513C   2178 _AX5043_FREQDEV11NB	=	0x513c
                    514C   2179 _AX5043_FREQDEV12NB	=	0x514c
                    515C   2180 _AX5043_FREQDEV13NB	=	0x515c
                    5127   2181 _AX5043_FREQUENCYGAINA0NB	=	0x5127
                    5137   2182 _AX5043_FREQUENCYGAINA1NB	=	0x5137
                    5147   2183 _AX5043_FREQUENCYGAINA2NB	=	0x5147
                    5157   2184 _AX5043_FREQUENCYGAINA3NB	=	0x5157
                    5128   2185 _AX5043_FREQUENCYGAINB0NB	=	0x5128
                    5138   2186 _AX5043_FREQUENCYGAINB1NB	=	0x5138
                    5148   2187 _AX5043_FREQUENCYGAINB2NB	=	0x5148
                    5158   2188 _AX5043_FREQUENCYGAINB3NB	=	0x5158
                    5129   2189 _AX5043_FREQUENCYGAINC0NB	=	0x5129
                    5139   2190 _AX5043_FREQUENCYGAINC1NB	=	0x5139
                    5149   2191 _AX5043_FREQUENCYGAINC2NB	=	0x5149
                    5159   2192 _AX5043_FREQUENCYGAINC3NB	=	0x5159
                    512A   2193 _AX5043_FREQUENCYGAIND0NB	=	0x512a
                    513A   2194 _AX5043_FREQUENCYGAIND1NB	=	0x513a
                    514A   2195 _AX5043_FREQUENCYGAIND2NB	=	0x514a
                    515A   2196 _AX5043_FREQUENCYGAIND3NB	=	0x515a
                    5116   2197 _AX5043_FREQUENCYLEAKNB	=	0x5116
                    5126   2198 _AX5043_PHASEGAIN0NB	=	0x5126
                    5136   2199 _AX5043_PHASEGAIN1NB	=	0x5136
                    5146   2200 _AX5043_PHASEGAIN2NB	=	0x5146
                    5156   2201 _AX5043_PHASEGAIN3NB	=	0x5156
                    5207   2202 _AX5043_PKTADDR0NB	=	0x5207
                    5206   2203 _AX5043_PKTADDR1NB	=	0x5206
                    5205   2204 _AX5043_PKTADDR2NB	=	0x5205
                    5204   2205 _AX5043_PKTADDR3NB	=	0x5204
                    5200   2206 _AX5043_PKTADDRCFGNB	=	0x5200
                    520B   2207 _AX5043_PKTADDRMASK0NB	=	0x520b
                    520A   2208 _AX5043_PKTADDRMASK1NB	=	0x520a
                    5209   2209 _AX5043_PKTADDRMASK2NB	=	0x5209
                    5208   2210 _AX5043_PKTADDRMASK3NB	=	0x5208
                    5201   2211 _AX5043_PKTLENCFGNB	=	0x5201
                    5202   2212 _AX5043_PKTLENOFFSETNB	=	0x5202
                    5203   2213 _AX5043_PKTMAXLENNB	=	0x5203
                    5118   2214 _AX5043_RXPARAMCURSETNB	=	0x5118
                    5117   2215 _AX5043_RXPARAMSETSNB	=	0x5117
                    5124   2216 _AX5043_TIMEGAIN0NB	=	0x5124
                    5134   2217 _AX5043_TIMEGAIN1NB	=	0x5134
                    5144   2218 _AX5043_TIMEGAIN2NB	=	0x5144
                    5154   2219 _AX5043_TIMEGAIN3NB	=	0x5154
                    4F00   2220 _AX5043_0xF00	=	0x4f00
                    4F01   2221 _AX5043_0xF01	=	0x4f01
                    4F0C   2222 _AX5043_0xF0C	=	0x4f0c
                    4F10   2223 _AX5043_0xF10	=	0x4f10
                    4F11   2224 _AX5043_0xF11	=	0x4f11
                    4F18   2225 _AX5043_0xF18	=	0x4f18
                    4F1C   2226 _AX5043_0xF1C	=	0x4f1c
                    4F21   2227 _AX5043_0xF21	=	0x4f21
                    4F22   2228 _AX5043_0xF22	=	0x4f22
                    4F23   2229 _AX5043_0xF23	=	0x4f23
                    4F26   2230 _AX5043_0xF26	=	0x4f26
                    4F2F   2231 _AX5043_0xF2F	=	0x4f2f
                    4F30   2232 _AX5043_0xF30	=	0x4f30
                    4F31   2233 _AX5043_0xF31	=	0x4f31
                    4F32   2234 _AX5043_0xF32	=	0x4f32
                    4F33   2235 _AX5043_0xF33	=	0x4f33
                    4F34   2236 _AX5043_0xF34	=	0x4f34
                    4F35   2237 _AX5043_0xF35	=	0x4f35
                    4F44   2238 _AX5043_0xF44	=	0x4f44
                    4F0D   2239 _AX5043_REF	=	0x4f0d
                    4F08   2240 _AX5043_POWCTRL1	=	0x4f08
   0000                    2241 _axradio_syncstate::
   0000                    2242 	.ds 1
   0001                    2243 _axradio_txbuffer_len::
   0001                    2244 	.ds 2
   0003                    2245 _axradio_txbuffer_cnt::
   0003                    2246 	.ds 2
   0005                    2247 _axradio_curchannel::
   0005                    2248 	.ds 1
   0006                    2249 _axradio_curfreqoffset::
   0006                    2250 	.ds 4
   000A                    2251 _axradio_ack_count::
   000A                    2252 	.ds 1
   000B                    2253 _axradio_ack_seqnr::
   000B                    2254 	.ds 1
   000C                    2255 _axradio_sync_time::
   000C                    2256 	.ds 4
   0010                    2257 _axradio_sync_periodcorr::
   0010                    2258 	.ds 2
   0012                    2259 _axradio_timeanchor::
   0012                    2260 	.ds 8
   001A                    2261 _axradio_localaddr::
   001A                    2262 	.ds 8
   0022                    2263 _axradio_default_remoteaddr::
   0022                    2264 	.ds 4
   0026                    2265 _axradio_txbuffer::
   0026                    2266 	.ds 260
   012A                    2267 _axradio_rxbuffer::
   012A                    2268 	.ds 260
   022E                    2269 _axradio_cb_receive::
   022E                    2270 	.ds 34
   0250                    2271 _axradio_cb_receivesfd::
   0250                    2272 	.ds 10
   025A                    2273 _axradio_cb_channelstate::
   025A                    2274 	.ds 13
   0267                    2275 _axradio_cb_transmitstart::
   0267                    2276 	.ds 10
   0271                    2277 _axradio_cb_transmitend::
   0271                    2278 	.ds 10
   027B                    2279 _axradio_cb_transmitdata::
   027B                    2280 	.ds 10
   0285                    2281 _axradio_timer::
   0285                    2282 	.ds 8
                           2283 ;--------------------------------------------------------
                           2284 ; absolute external ram data
                           2285 ;--------------------------------------------------------
                           2286 	.area XABS    (ABS,XDATA)
                           2287 ;--------------------------------------------------------
                           2288 ; external initialized ram data
                           2289 ;--------------------------------------------------------
                           2290 	.area XISEG   (XDATA)
   0000                    2291 _f30_saved::
   0000                    2292 	.ds 1
   0001                    2293 _f31_saved::
   0001                    2294 	.ds 1
   0002                    2295 _f32_saved::
   0002                    2296 	.ds 1
   0003                    2297 _f33_saved::
   0003                    2298 	.ds 1
                           2299 	.area HOME    (CODE)
                           2300 	.area GSINIT0 (CODE)
                           2301 	.area GSINIT1 (CODE)
                           2302 	.area GSINIT2 (CODE)
                           2303 	.area GSINIT3 (CODE)
                           2304 	.area GSINIT4 (CODE)
                           2305 	.area GSINIT5 (CODE)
                           2306 	.area GSINIT  (CODE)
                           2307 	.area GSFINAL (CODE)
                           2308 	.area CSEG    (CODE)
                           2309 ;--------------------------------------------------------
                           2310 ; global & static initialisations
                           2311 ;--------------------------------------------------------
                           2312 	.area HOME    (CODE)
                           2313 	.area GSINIT  (CODE)
                           2314 	.area GSFINAL (CODE)
                           2315 	.area GSINIT  (CODE)
                           2316 ;	..\COMMON\easyax5043.c:55: volatile uint8_t __data axradio_mode = AXRADIO_MODE_UNINIT;
   0000 75*00 00           2317 	mov	_axradio_mode,#0x00
                           2318 ;	..\COMMON\easyax5043.c:56: volatile axradio_trxstate_t __data axradio_trxstate = trxstate_off;
   0003 75*01 00           2319 	mov	_axradio_trxstate,#0x00
                           2320 ;--------------------------------------------------------
                           2321 ; Home
                           2322 ;--------------------------------------------------------
                           2323 	.area HOME    (CODE)
                           2324 	.area HOME    (CODE)
                           2325 ;--------------------------------------------------------
                           2326 ; code
                           2327 ;--------------------------------------------------------
                           2328 	.area CSEG    (CODE)
                           2329 ;------------------------------------------------------------
                           2330 ;Allocation info for local variables in function 'update_timeanchor'
                           2331 ;------------------------------------------------------------
                           2332 ;iesave                    Allocated to registers r7 
                           2333 ;------------------------------------------------------------
                           2334 ;	..\COMMON\easyax5043.c:234: static __reentrantb void update_timeanchor(void) __reentrant
                           2335 ;	-----------------------------------------
                           2336 ;	 function update_timeanchor
                           2337 ;	-----------------------------------------
   0000                    2338 _update_timeanchor:
                    0007   2339 	ar7 = 0x07
                    0006   2340 	ar6 = 0x06
                    0005   2341 	ar5 = 0x05
                    0004   2342 	ar4 = 0x04
                    0003   2343 	ar3 = 0x03
                    0002   2344 	ar2 = 0x02
                    0001   2345 	ar1 = 0x01
                    0000   2346 	ar0 = 0x00
                           2347 ;	..\COMMON\easyax5043.c:236: uint8_t iesave = IE & 0x80;
   0000 74 80              2348 	mov	a,#0x80
   0002 55 A8              2349 	anl	a,_IE
   0004 FF                 2350 	mov	r7,a
                           2351 ;	..\COMMON\easyax5043.c:237: EA = 0;
   0005 C2 AF              2352 	clr	_EA
                           2353 ;	..\COMMON\easyax5043.c:238: axradio_timeanchor.timer0 = wtimer0_curtime();
   0007 C0 07              2354 	push	ar7
   0009 12s00r00           2355 	lcall	_wtimer0_curtime
   000C AB 82              2356 	mov	r3,dpl
   000E AC 83              2357 	mov	r4,dph
   0010 AD F0              2358 	mov	r5,b
   0012 FE                 2359 	mov	r6,a
   0013 D0 07              2360 	pop	ar7
   0015 90s00r12           2361 	mov	dptr,#_axradio_timeanchor
   0018 EB                 2362 	mov	a,r3
   0019 F0                 2363 	movx	@dptr,a
   001A A3                 2364 	inc	dptr
   001B EC                 2365 	mov	a,r4
   001C F0                 2366 	movx	@dptr,a
   001D A3                 2367 	inc	dptr
   001E ED                 2368 	mov	a,r5
   001F F0                 2369 	movx	@dptr,a
   0020 A3                 2370 	inc	dptr
   0021 EE                 2371 	mov	a,r6
   0022 F0                 2372 	movx	@dptr,a
                           2373 ;	..\COMMON\easyax5043.c:239: axradio_timeanchor.radiotimer = radio_read24((uint16_t)&AX5043_TIMER2);
   0023 90 40 59           2374 	mov	dptr,#_AX5043_TIMER2
   0026 12s00r00           2375 	lcall	_radio_read24
   0029 AB 82              2376 	mov	r3,dpl
   002B AC 83              2377 	mov	r4,dph
   002D AD F0              2378 	mov	r5,b
   002F FE                 2379 	mov	r6,a
   0030 90s00r16           2380 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   0033 EB                 2381 	mov	a,r3
   0034 F0                 2382 	movx	@dptr,a
   0035 A3                 2383 	inc	dptr
   0036 EC                 2384 	mov	a,r4
   0037 F0                 2385 	movx	@dptr,a
   0038 A3                 2386 	inc	dptr
   0039 ED                 2387 	mov	a,r5
   003A F0                 2388 	movx	@dptr,a
   003B A3                 2389 	inc	dptr
   003C EE                 2390 	mov	a,r6
   003D F0                 2391 	movx	@dptr,a
                           2392 ;	..\COMMON\easyax5043.c:240: IE |= iesave;
   003E EF                 2393 	mov	a,r7
   003F 42 A8              2394 	orl	_IE,a
   0041 22                 2395 	ret
                           2396 ;------------------------------------------------------------
                           2397 ;Allocation info for local variables in function 'axradio_conv_time_totimer0'
                           2398 ;------------------------------------------------------------
                           2399 ;dt                        Allocated to registers r4 r5 r6 r7 
                           2400 ;------------------------------------------------------------
                           2401 ;	..\COMMON\easyax5043.c:243: __reentrantb uint32_t axradio_conv_time_totimer0(uint32_t dt) __reentrant
                           2402 ;	-----------------------------------------
                           2403 ;	 function axradio_conv_time_totimer0
                           2404 ;	-----------------------------------------
   0042                    2405 _axradio_conv_time_totimer0:
   0042 AC 82              2406 	mov	r4,dpl
   0044 AD 83              2407 	mov	r5,dph
   0046 AE F0              2408 	mov	r6,b
   0048 FF                 2409 	mov	r7,a
                           2410 ;	..\COMMON\easyax5043.c:245: dt -= axradio_timeanchor.radiotimer;
   0049 90s00r16           2411 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   004C E0                 2412 	movx	a,@dptr
   004D F8                 2413 	mov	r0,a
   004E A3                 2414 	inc	dptr
   004F E0                 2415 	movx	a,@dptr
   0050 F9                 2416 	mov	r1,a
   0051 A3                 2417 	inc	dptr
   0052 E0                 2418 	movx	a,@dptr
   0053 FA                 2419 	mov	r2,a
   0054 A3                 2420 	inc	dptr
   0055 E0                 2421 	movx	a,@dptr
   0056 FB                 2422 	mov	r3,a
   0057 EC                 2423 	mov	a,r4
   0058 C3                 2424 	clr	c
   0059 98                 2425 	subb	a,r0
   005A FC                 2426 	mov	r4,a
   005B ED                 2427 	mov	a,r5
   005C 99                 2428 	subb	a,r1
   005D FD                 2429 	mov	r5,a
   005E EE                 2430 	mov	a,r6
   005F 9A                 2431 	subb	a,r2
   0060 FE                 2432 	mov	r6,a
   0061 EF                 2433 	mov	a,r7
   0062 9B                 2434 	subb	a,r3
                           2435 ;	..\COMMON\easyax5043.c:246: dt = axradio_conv_timeinterval_totimer0(signextend24(dt));
   0063 8C 82              2436 	mov	dpl,r4
   0065 8D 83              2437 	mov	dph,r5
   0067 8E F0              2438 	mov	b,r6
   0069 12s00r00           2439 	lcall	_signextend24
   006C 12s00r00           2440 	lcall	_axradio_conv_timeinterval_totimer0
   006F AC 82              2441 	mov	r4,dpl
   0071 AD 83              2442 	mov	r5,dph
   0073 AE F0              2443 	mov	r6,b
   0075 FF                 2444 	mov	r7,a
                           2445 ;	..\COMMON\easyax5043.c:247: dt += axradio_timeanchor.timer0;
   0076 90s00r12           2446 	mov	dptr,#_axradio_timeanchor
   0079 E0                 2447 	movx	a,@dptr
   007A F8                 2448 	mov	r0,a
   007B A3                 2449 	inc	dptr
   007C E0                 2450 	movx	a,@dptr
   007D F9                 2451 	mov	r1,a
   007E A3                 2452 	inc	dptr
   007F E0                 2453 	movx	a,@dptr
   0080 FA                 2454 	mov	r2,a
   0081 A3                 2455 	inc	dptr
   0082 E0                 2456 	movx	a,@dptr
   0083 FB                 2457 	mov	r3,a
   0084 E8                 2458 	mov	a,r0
   0085 2C                 2459 	add	a,r4
   0086 FC                 2460 	mov	r4,a
   0087 E9                 2461 	mov	a,r1
   0088 3D                 2462 	addc	a,r5
   0089 FD                 2463 	mov	r5,a
   008A EA                 2464 	mov	a,r2
   008B 3E                 2465 	addc	a,r6
   008C FE                 2466 	mov	r6,a
   008D EB                 2467 	mov	a,r3
   008E 3F                 2468 	addc	a,r7
                           2469 ;	..\COMMON\easyax5043.c:248: return dt;
   008F 8C 82              2470 	mov	dpl,r4
   0091 8D 83              2471 	mov	dph,r5
   0093 8E F0              2472 	mov	b,r6
   0095 22                 2473 	ret
                           2474 ;------------------------------------------------------------
                           2475 ;Allocation info for local variables in function 'ax5043_init_registers_tx'
                           2476 ;------------------------------------------------------------
                           2477 ;rng                       Allocated to registers r7 
                           2478 ;------------------------------------------------------------
                           2479 ;	..\COMMON\easyax5043.c:251: __reentrantb uint8_t ax5043_init_registers_tx(void) __reentrant
                           2480 ;	-----------------------------------------
                           2481 ;	 function ax5043_init_registers_tx
                           2482 ;	-----------------------------------------
   0096                    2483 _ax5043_init_registers_tx:
                           2484 ;	..\COMMON\easyax5043.c:254: ax5043_set_registers_tx();
   0096 12s00r00           2485 	lcall	_ax5043_set_registers_tx
                           2486 ;	..\COMMON\easyax5043.c:255: rng = axradio_phy_chanpllrng_tx[axradio_curchannel];
   0099 90s00r05           2487 	mov	dptr,#_axradio_curchannel
   009C E0                 2488 	movx	a,@dptr
   009D 24r00              2489 	add	a,#_axradio_phy_chanpllrng_tx
   009F F5 82              2490 	mov	dpl,a
   00A1 E4                 2491 	clr	a
   00A2 34s00              2492 	addc	a,#(_axradio_phy_chanpllrng_tx >> 8)
   00A4 F5 83              2493 	mov	dph,a
   00A6 E0                 2494 	movx	a,@dptr
                           2495 ;	..\COMMON\easyax5043.c:256: if (rng & 0x20)
   00A7 FF                 2496 	mov	r7,a
   00A8 30 E5 04           2497 	jnb	acc.5,00102$
                           2498 ;	..\COMMON\easyax5043.c:257: return AXRADIO_ERR_RANGING;
   00AB 75 82 06           2499 	mov	dpl,#0x06
   00AE 22                 2500 	ret
   00AF                    2501 00102$:
                           2502 ;	..\COMMON\easyax5043.c:258: if (AX5043_PLLLOOP & 0x80) {
   00AF 90 40 30           2503 	mov	dptr,#_AX5043_PLLLOOP
   00B2 E0                 2504 	movx	a,@dptr
   00B3 FE                 2505 	mov	r6,a
   00B4 30 E7 09           2506 	jnb	acc.7,00104$
                           2507 ;	..\COMMON\easyax5043.c:259: AX5043_PLLRANGINGB = rng & 0x0F;
   00B7 90 40 3B           2508 	mov	dptr,#_AX5043_PLLRANGINGB
   00BA 74 0F              2509 	mov	a,#0x0F
   00BC 5F                 2510 	anl	a,r7
   00BD F0                 2511 	movx	@dptr,a
   00BE 80 07              2512 	sjmp	00105$
   00C0                    2513 00104$:
                           2514 ;	..\COMMON\easyax5043.c:261: AX5043_PLLRANGINGA = rng & 0x0F;
   00C0 90 40 33           2515 	mov	dptr,#_AX5043_PLLRANGINGA
   00C3 74 0F              2516 	mov	a,#0x0F
   00C5 5F                 2517 	anl	a,r7
   00C6 F0                 2518 	movx	@dptr,a
   00C7                    2519 00105$:
                           2520 ;	..\COMMON\easyax5043.c:263: return AXRADIO_ERR_NOERROR;
   00C7 75 82 00           2521 	mov	dpl,#0x00
   00CA 22                 2522 	ret
                           2523 ;------------------------------------------------------------
                           2524 ;Allocation info for local variables in function 'ax5043_init_registers_rx'
                           2525 ;------------------------------------------------------------
                           2526 ;rng                       Allocated to registers r7 
                           2527 ;------------------------------------------------------------
                           2528 ;	..\COMMON\easyax5043.c:266: __reentrantb uint8_t ax5043_init_registers_rx(void) __reentrant
                           2529 ;	-----------------------------------------
                           2530 ;	 function ax5043_init_registers_rx
                           2531 ;	-----------------------------------------
   00CB                    2532 _ax5043_init_registers_rx:
                           2533 ;	..\COMMON\easyax5043.c:269: ax5043_set_registers_rx();
   00CB 12s00r00           2534 	lcall	_ax5043_set_registers_rx
                           2535 ;	..\COMMON\easyax5043.c:270: rng = axradio_phy_chanpllrng_rx[axradio_curchannel];
   00CE 90s00r05           2536 	mov	dptr,#_axradio_curchannel
   00D1 E0                 2537 	movx	a,@dptr
   00D2 24r00              2538 	add	a,#_axradio_phy_chanpllrng_rx
   00D4 F5 82              2539 	mov	dpl,a
   00D6 E4                 2540 	clr	a
   00D7 34s00              2541 	addc	a,#(_axradio_phy_chanpllrng_rx >> 8)
   00D9 F5 83              2542 	mov	dph,a
   00DB E0                 2543 	movx	a,@dptr
                           2544 ;	..\COMMON\easyax5043.c:271: if (rng & 0x20)
   00DC FF                 2545 	mov	r7,a
   00DD 30 E5 04           2546 	jnb	acc.5,00102$
                           2547 ;	..\COMMON\easyax5043.c:272: return AXRADIO_ERR_RANGING;
   00E0 75 82 06           2548 	mov	dpl,#0x06
   00E3 22                 2549 	ret
   00E4                    2550 00102$:
                           2551 ;	..\COMMON\easyax5043.c:273: if (AX5043_PLLLOOP & 0x80) {
   00E4 90 40 30           2552 	mov	dptr,#_AX5043_PLLLOOP
   00E7 E0                 2553 	movx	a,@dptr
   00E8 FE                 2554 	mov	r6,a
   00E9 30 E7 09           2555 	jnb	acc.7,00104$
                           2556 ;	..\COMMON\easyax5043.c:274: AX5043_PLLRANGINGB = rng & 0x0F;
   00EC 90 40 3B           2557 	mov	dptr,#_AX5043_PLLRANGINGB
   00EF 74 0F              2558 	mov	a,#0x0F
   00F1 5F                 2559 	anl	a,r7
   00F2 F0                 2560 	movx	@dptr,a
   00F3 80 07              2561 	sjmp	00105$
   00F5                    2562 00104$:
                           2563 ;	..\COMMON\easyax5043.c:276: AX5043_PLLRANGINGA = rng & 0x0F;
   00F5 90 40 33           2564 	mov	dptr,#_AX5043_PLLRANGINGA
   00F8 74 0F              2565 	mov	a,#0x0F
   00FA 5F                 2566 	anl	a,r7
   00FB F0                 2567 	movx	@dptr,a
   00FC                    2568 00105$:
                           2569 ;	..\COMMON\easyax5043.c:278: return AXRADIO_ERR_NOERROR;
   00FC 75 82 00           2570 	mov	dpl,#0x00
   00FF 22                 2571 	ret
                           2572 ;------------------------------------------------------------
                           2573 ;Allocation info for local variables in function 'receive_isr'
                           2574 ;------------------------------------------------------------
                           2575 ;fifo_cmd                  Allocated to registers r6 
                           2576 ;flags                     Allocated to registers 
                           2577 ;i                         Allocated to registers r6 
                           2578 ;len                       Allocated to registers r7 
                           2579 ;r                         Allocated to registers r6 
                           2580 ;r                         Allocated to registers r6 
                           2581 ;r                         Allocated to registers r6 
                           2582 ;------------------------------------------------------------
                           2583 ;	..\COMMON\easyax5043.c:281: static __reentrantb void receive_isr(void) __reentrant
                           2584 ;	-----------------------------------------
                           2585 ;	 function receive_isr
                           2586 ;	-----------------------------------------
   0100                    2587 _receive_isr:
                           2588 ;	..\COMMON\easyax5043.c:285: uint8_t len = AX5043_RADIOEVENTREQ0; // clear request so interrupt does not fire again. sync_rx enables interrupt on radio state changed in order to wake up on SDF detected
   0100 90 40 0F           2589 	mov	dptr,#_AX5043_RADIOEVENTREQ0
   0103 E0                 2590 	movx	a,@dptr
                           2591 ;	..\COMMON\easyax5043.c:287: if ((len & 0x04) && AX5043_RADIOSTATE == 0x0F) {
   0104 FF                 2592 	mov	r7,a
   0105 30 E2 40           2593 	jnb	acc.2,00162$
   0108 90 40 1C           2594 	mov	dptr,#_AX5043_RADIOSTATE
   010B E0                 2595 	movx	a,@dptr
   010C FE                 2596 	mov	r6,a
   010D BE 0F 38           2597 	cjne	r6,#0x0F,00162$
                           2598 ;	..\COMMON\easyax5043.c:289: update_timeanchor();
   0110 12s00r00           2599 	lcall	_update_timeanchor
                           2600 ;	..\COMMON\easyax5043.c:290: if(axradio_framing_enable_sfdcallback)
   0113 90s00r00           2601 	mov	dptr,#_axradio_framing_enable_sfdcallback
   0116 E4                 2602 	clr	a
   0117 93                 2603 	movc	a,@a+dptr
   0118 FE                 2604 	mov	r6,a
   0119 60 2D              2605 	jz	00162$
                           2606 ;	..\COMMON\easyax5043.c:292: wtimer_remove_callback(&axradio_cb_receivesfd.cb);
   011B 90s02r50           2607 	mov	dptr,#_axradio_cb_receivesfd
   011E 12s00r00           2608 	lcall	_wtimer_remove_callback
                           2609 ;	..\COMMON\easyax5043.c:293: axradio_cb_receivesfd.st.error = AXRADIO_ERR_NOERROR;
   0121 90s02r55           2610 	mov	dptr,#(_axradio_cb_receivesfd + 0x0005)
   0124 E4                 2611 	clr	a
   0125 F0                 2612 	movx	@dptr,a
                           2613 ;	..\COMMON\easyax5043.c:294: axradio_cb_receivesfd.st.time.t = axradio_timeanchor.radiotimer;
   0126 90s00r16           2614 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   0129 E0                 2615 	movx	a,@dptr
   012A FB                 2616 	mov	r3,a
   012B A3                 2617 	inc	dptr
   012C E0                 2618 	movx	a,@dptr
   012D FC                 2619 	mov	r4,a
   012E A3                 2620 	inc	dptr
   012F E0                 2621 	movx	a,@dptr
   0130 FD                 2622 	mov	r5,a
   0131 A3                 2623 	inc	dptr
   0132 E0                 2624 	movx	a,@dptr
   0133 FE                 2625 	mov	r6,a
   0134 90s02r56           2626 	mov	dptr,#(_axradio_cb_receivesfd + 0x0006)
   0137 EB                 2627 	mov	a,r3
   0138 F0                 2628 	movx	@dptr,a
   0139 A3                 2629 	inc	dptr
   013A EC                 2630 	mov	a,r4
   013B F0                 2631 	movx	@dptr,a
   013C A3                 2632 	inc	dptr
   013D ED                 2633 	mov	a,r5
   013E F0                 2634 	movx	@dptr,a
   013F A3                 2635 	inc	dptr
   0140 EE                 2636 	mov	a,r6
   0141 F0                 2637 	movx	@dptr,a
                           2638 ;	..\COMMON\easyax5043.c:295: wtimer_add_callback(&axradio_cb_receivesfd.cb);
   0142 90s02r50           2639 	mov	dptr,#_axradio_cb_receivesfd
   0145 12s00r00           2640 	lcall	_wtimer_add_callback
                           2641 ;	..\COMMON\easyax5043.c:307: while (AX5043_IRQREQUEST0 & 0x01) {    // while fifo not empty
   0148                    2642 00162$:
   0148                    2643 00147$:
   0148 90 40 0D           2644 	mov	dptr,#_AX5043_IRQREQUEST0
   014B E0                 2645 	movx	a,@dptr
   014C FE                 2646 	mov	r6,a
   014D 20 E0 01           2647 	jb	acc.0,00207$
   0150 22                 2648 	ret
   0151                    2649 00207$:
                           2650 ;	..\COMMON\easyax5043.c:308: fifo_cmd = AX5043_FIFODATA; // read command
   0151 90 40 29           2651 	mov	dptr,#_AX5043_FIFODATA
   0154 E0                 2652 	movx	a,@dptr
   0155 FE                 2653 	mov	r6,a
                           2654 ;	..\COMMON\easyax5043.c:309: len = (fifo_cmd & 0xE0) >> 5; // top 3 bits encode payload len
   0156 74 E0              2655 	mov	a,#0xE0
   0158 5E                 2656 	anl	a,r6
   0159 FD                 2657 	mov	r5,a
   015A C4                 2658 	swap	a
   015B 03                 2659 	rr	a
   015C 54 07              2660 	anl	a,#0x07
   015E FF                 2661 	mov	r7,a
                           2662 ;	..\COMMON\easyax5043.c:310: if (len == 7)
   015F BF 07 06           2663 	cjne	r7,#0x07,00107$
                           2664 ;	..\COMMON\easyax5043.c:311: len = AX5043_FIFODATA; // 7 means variable length, -> get length byte
   0162 90 40 29           2665 	mov	dptr,#_AX5043_FIFODATA
   0165 E0                 2666 	movx	a,@dptr
   0166 FD                 2667 	mov	r5,a
   0167 FF                 2668 	mov	r7,a
   0168                    2669 00107$:
                           2670 ;	..\COMMON\easyax5043.c:312: fifo_cmd &= 0x1F;
   0168 53 06 1F           2671 	anl	ar6,#0x1F
                           2672 ;	..\COMMON\easyax5043.c:313: switch (fifo_cmd) {
   016B BE 01 02           2673 	cjne	r6,#0x01,00210$
   016E 80 1B              2674 	sjmp	00108$
   0170                    2675 00210$:
   0170 BE 10 03           2676 	cjne	r6,#0x10,00211$
   0173 02s03r30           2677 	ljmp	00133$
   0176                    2678 00211$:
   0176 BE 11 03           2679 	cjne	r6,#0x11,00212$
   0179 02s03r03           2680 	ljmp	00130$
   017C                    2681 00212$:
   017C BE 13 03           2682 	cjne	r6,#0x13,00213$
   017F 02s02rC6           2683 	ljmp	00127$
   0182                    2684 00213$:
   0182 BE 15 03           2685 	cjne	r6,#0x15,00214$
   0185 02s03r59           2686 	ljmp	00136$
   0188                    2687 00214$:
   0188 02s03rCF           2688 	ljmp	00140$
                           2689 ;	..\COMMON\easyax5043.c:314: case AX5043_FIFOCMD_DATA:
   018B                    2690 00108$:
                           2691 ;	..\COMMON\easyax5043.c:315: if (!len)
   018B EF                 2692 	mov	a,r7
   018C 60 BA              2693 	jz	00147$
                           2694 ;	..\COMMON\easyax5043.c:323: flags = AX5043_FIFODATA;
   018E 90 40 29           2695 	mov	dptr,#_AX5043_FIFODATA
   0191 E0                 2696 	movx	a,@dptr
                           2697 ;	..\COMMON\easyax5043.c:324: --len;
   0192 1F                 2698 	dec	r7
                           2699 ;	..\COMMON\easyax5043.c:325: ax5043_readfifo(axradio_rxbuffer, len);
   0193 C0 07              2700 	push	ar7
   0195 C0 07              2701 	push	ar7
   0197 90s01r2A           2702 	mov	dptr,#_axradio_rxbuffer
   019A 75 F0 00           2703 	mov	b,#0x00
   019D 12s00r00           2704 	lcall	_ax5043_readfifo
   01A0 15 81              2705 	dec	sp
   01A2 D0 07              2706 	pop	ar7
                           2707 ;	..\COMMON\easyax5043.c:326: if(axradio_mode == AXRADIO_MODE_WOR_RECEIVE || axradio_mode == AXRADIO_MODE_WOR_ACK_RECEIVE)
   01A4 74 19              2708 	mov	a,#0x19
   01A6 B5*00 02           2709 	cjne	a,_axradio_mode,00216$
   01A9 80 05              2710 	sjmp	00111$
   01AB                    2711 00216$:
   01AB 74 1B              2712 	mov	a,#0x1B
   01AD B5*00 21           2713 	cjne	a,_axradio_mode,00112$
   01B0                    2714 00111$:
                           2715 ;	..\COMMON\easyax5043.c:328: f30_saved = AX5043_0xF30;
   01B0 90 4F 30           2716 	mov	dptr,#_AX5043_0xF30
   01B3 E0                 2717 	movx	a,@dptr
   01B4 90s00r00           2718 	mov	dptr,#_f30_saved
   01B7 F0                 2719 	movx	@dptr,a
                           2720 ;	..\COMMON\easyax5043.c:329: f31_saved = AX5043_0xF31;
   01B8 90 4F 31           2721 	mov	dptr,#_AX5043_0xF31
   01BB E0                 2722 	movx	a,@dptr
   01BC 90s00r01           2723 	mov	dptr,#_f31_saved
   01BF F0                 2724 	movx	@dptr,a
                           2725 ;	..\COMMON\easyax5043.c:330: f32_saved = AX5043_0xF32;
   01C0 90 4F 32           2726 	mov	dptr,#_AX5043_0xF32
   01C3 E0                 2727 	movx	a,@dptr
   01C4 90s00r02           2728 	mov	dptr,#_f32_saved
   01C7 F0                 2729 	movx	@dptr,a
                           2730 ;	..\COMMON\easyax5043.c:331: f33_saved = AX5043_0xF33;
   01C8 90 4F 33           2731 	mov	dptr,#_AX5043_0xF33
   01CB E0                 2732 	movx	a,@dptr
   01CC FE                 2733 	mov	r6,a
   01CD 90s00r03           2734 	mov	dptr,#_f33_saved
   01D0 F0                 2735 	movx	@dptr,a
   01D1                    2736 00112$:
                           2737 ;	..\COMMON\easyax5043.c:333: if (axradio_mode == AXRADIO_MODE_WOR_RECEIVE ||
   01D1 74 19              2738 	mov	a,#0x19
   01D3 B5*00 02           2739 	cjne	a,_axradio_mode,00219$
   01D6 80 05              2740 	sjmp	00114$
   01D8                    2741 00219$:
                           2742 ;	..\COMMON\easyax5043.c:334: axradio_mode == AXRADIO_MODE_SYNC_SLAVE)
   01D8 74 22              2743 	mov	a,#0x22
   01DA B5*00 05           2744 	cjne	a,_axradio_mode,00115$
   01DD                    2745 00114$:
                           2746 ;	..\COMMON\easyax5043.c:335: AX5043_PWRMODE = AX5043_PWRSTATE_POWERDOWN;
   01DD 90 40 02           2747 	mov	dptr,#_AX5043_PWRMODE
   01E0 E4                 2748 	clr	a
   01E1 F0                 2749 	movx	@dptr,a
   01E2                    2750 00115$:
                           2751 ;	..\COMMON\easyax5043.c:336: AX5043_IRQMASK0 &= (uint8_t)~0x01; // disable FIFO not empty irq
   01E2 90 40 07           2752 	mov	dptr,#_AX5043_IRQMASK0
   01E5 E0                 2753 	movx	a,@dptr
   01E6 54 FE              2754 	anl	a,#0xFE
   01E8 F0                 2755 	movx	@dptr,a
                           2756 ;	..\COMMON\easyax5043.c:337: wtimer_remove_callback(&axradio_cb_receive.cb);
   01E9 90s02r2E           2757 	mov	dptr,#_axradio_cb_receive
   01EC C0 07              2758 	push	ar7
   01EE 12s00r00           2759 	lcall	_wtimer_remove_callback
   01F1 D0 07              2760 	pop	ar7
                           2761 ;	..\COMMON\easyax5043.c:338: axradio_cb_receive.st.error = AXRADIO_ERR_NOERROR;
   01F3 90s02r33           2762 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   01F6 E4                 2763 	clr	a
   01F7 F0                 2764 	movx	@dptr,a
                           2765 ;	..\COMMON\easyax5043.c:339: axradio_cb_receive.st.rx.mac.raw = axradio_rxbuffer;
   01F8 90s02r4A           2766 	mov	dptr,#(_axradio_cb_receive + 0x001c)
   01FB 74r2A              2767 	mov	a,#_axradio_rxbuffer
   01FD F0                 2768 	movx	@dptr,a
   01FE A3                 2769 	inc	dptr
   01FF 74s01              2770 	mov	a,#(_axradio_rxbuffer >> 8)
   0201 F0                 2771 	movx	@dptr,a
                           2772 ;	..\COMMON\easyax5043.c:340: if (axradio_mode == AXRADIO_MODE_STREAM_RECEIVE ||
   0202 74 1C              2773 	mov	a,#0x1C
   0204 B5*00 02           2774 	cjne	a,_axradio_mode,00222$
   0207 80 0C              2775 	sjmp	00117$
   0209                    2776 00222$:
                           2777 ;	..\COMMON\easyax5043.c:341: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_UNENC ||
   0209 74 1D              2778 	mov	a,#0x1D
   020B B5*00 02           2779 	cjne	a,_axradio_mode,00223$
   020E 80 05              2780 	sjmp	00117$
   0210                    2781 00223$:
                           2782 ;	..\COMMON\easyax5043.c:342: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_SCRAM) {
   0210 74 1E              2783 	mov	a,#0x1E
   0212 B5*00 5F           2784 	cjne	a,_axradio_mode,00118$
   0215                    2785 00117$:
                           2786 ;	..\COMMON\easyax5043.c:343: axradio_cb_receive.st.rx.pktdata = axradio_rxbuffer;
   0215 90s02r4C           2787 	mov	dptr,#(_axradio_cb_receive + 0x001e)
   0218 74r2A              2788 	mov	a,#_axradio_rxbuffer
   021A F0                 2789 	movx	@dptr,a
   021B A3                 2790 	inc	dptr
   021C 74s01              2791 	mov	a,#(_axradio_rxbuffer >> 8)
   021E F0                 2792 	movx	@dptr,a
                           2793 ;	..\COMMON\easyax5043.c:344: axradio_cb_receive.st.rx.pktlen = len;
   021F 8F 05              2794 	mov	ar5,r7
   0221 7E 00              2795 	mov	r6,#0x00
   0223 90s02r4E           2796 	mov	dptr,#(_axradio_cb_receive + 0x0020)
   0226 ED                 2797 	mov	a,r5
   0227 F0                 2798 	movx	@dptr,a
   0228 A3                 2799 	inc	dptr
   0229 EE                 2800 	mov	a,r6
   022A F0                 2801 	movx	@dptr,a
                           2802 ;	..\COMMON\easyax5043.c:346: int8_t r = AX5043_RSSI;
   022B 90 40 40           2803 	mov	dptr,#_AX5043_RSSI
   022E E0                 2804 	movx	a,@dptr
                           2805 ;	..\COMMON\easyax5043.c:347: axradio_cb_receive.st.rx.phy.rssi = r - (int16_t)axradio_phy_rssioffset;
   022F FE                 2806 	mov	r6,a
   0230 33                 2807 	rlc	a
   0231 95 E0              2808 	subb	a,acc
   0233 FD                 2809 	mov	r5,a
   0234 90s00r00           2810 	mov	dptr,#_axradio_phy_rssioffset
   0237 E4                 2811 	clr	a
   0238 93                 2812 	movc	a,@a+dptr
   0239 FC                 2813 	mov	r4,a
   023A 33                 2814 	rlc	a
   023B 95 E0              2815 	subb	a,acc
   023D FB                 2816 	mov	r3,a
   023E EE                 2817 	mov	a,r6
   023F C3                 2818 	clr	c
   0240 9C                 2819 	subb	a,r4
   0241 FE                 2820 	mov	r6,a
   0242 ED                 2821 	mov	a,r5
   0243 9B                 2822 	subb	a,r3
   0244 FD                 2823 	mov	r5,a
   0245 90s02r38           2824 	mov	dptr,#(_axradio_cb_receive + 0x000a)
   0248 EE                 2825 	mov	a,r6
   0249 F0                 2826 	movx	@dptr,a
   024A A3                 2827 	inc	dptr
   024B ED                 2828 	mov	a,r5
   024C F0                 2829 	movx	@dptr,a
                           2830 ;	..\COMMON\easyax5043.c:349: axradio_cb_receive.st.rx.phy.offset.o = signextend20(radio_read24((uint16_t)&AX5043_TRKRFFREQ2));
   024D 90 40 4D           2831 	mov	dptr,#_AX5043_TRKRFFREQ2
   0250 12s00r00           2832 	lcall	_radio_read24
   0253 12s00r00           2833 	lcall	_signextend20
   0256 AB 82              2834 	mov	r3,dpl
   0258 AC 83              2835 	mov	r4,dph
   025A AD F0              2836 	mov	r5,b
   025C FE                 2837 	mov	r6,a
   025D 90s02r3A           2838 	mov	dptr,#(_axradio_cb_receive + 0x000c)
   0260 EB                 2839 	mov	a,r3
   0261 F0                 2840 	movx	@dptr,a
   0262 A3                 2841 	inc	dptr
   0263 EC                 2842 	mov	a,r4
   0264 F0                 2843 	movx	@dptr,a
   0265 A3                 2844 	inc	dptr
   0266 ED                 2845 	mov	a,r5
   0267 F0                 2846 	movx	@dptr,a
   0268 A3                 2847 	inc	dptr
   0269 EE                 2848 	mov	a,r6
   026A F0                 2849 	movx	@dptr,a
                           2850 ;	..\COMMON\easyax5043.c:350: wtimer_add_callback(&axradio_cb_receive.cb);
   026B 90s02r2E           2851 	mov	dptr,#_axradio_cb_receive
   026E 12s00r00           2852 	lcall	_wtimer_add_callback
                           2853 ;	..\COMMON\easyax5043.c:351: break;
   0271 02s01r48           2854 	ljmp	00147$
   0274                    2855 00118$:
                           2856 ;	..\COMMON\easyax5043.c:353: axradio_cb_receive.st.rx.pktdata = &axradio_rxbuffer[axradio_framing_maclen];
   0274 90s00r00           2857 	mov	dptr,#_axradio_framing_maclen
   0277 E4                 2858 	clr	a
   0278 93                 2859 	movc	a,@a+dptr
   0279 FE                 2860 	mov	r6,a
   027A 24r2A              2861 	add	a,#_axradio_rxbuffer
   027C FC                 2862 	mov	r4,a
   027D E4                 2863 	clr	a
   027E 34s01              2864 	addc	a,#(_axradio_rxbuffer >> 8)
   0280 FD                 2865 	mov	r5,a
   0281 90s02r4C           2866 	mov	dptr,#(_axradio_cb_receive + 0x001e)
   0284 EC                 2867 	mov	a,r4
   0285 F0                 2868 	movx	@dptr,a
   0286 A3                 2869 	inc	dptr
   0287 ED                 2870 	mov	a,r5
   0288 F0                 2871 	movx	@dptr,a
                           2872 ;	..\COMMON\easyax5043.c:354: if (len < axradio_framing_maclen) {
   0289 C3                 2873 	clr	c
   028A EF                 2874 	mov	a,r7
   028B 9E                 2875 	subb	a,r6
   028C 50 0A              2876 	jnc	00125$
                           2877 ;	..\COMMON\easyax5043.c:356: axradio_cb_receive.st.rx.pktlen = 0;
   028E 90s02r4E           2878 	mov	dptr,#(_axradio_cb_receive + 0x0020)
   0291 E4                 2879 	clr	a
   0292 F0                 2880 	movx	@dptr,a
   0293 A3                 2881 	inc	dptr
   0294 F0                 2882 	movx	@dptr,a
   0295 02s01r48           2883 	ljmp	00147$
   0298                    2884 00125$:
                           2885 ;	..\COMMON\easyax5043.c:358: len -= axradio_framing_maclen;
   0298 EF                 2886 	mov	a,r7
   0299 C3                 2887 	clr	c
   029A 9E                 2888 	subb	a,r6
                           2889 ;	..\COMMON\easyax5043.c:359: axradio_cb_receive.st.rx.pktlen = len;
   029B FD                 2890 	mov	r5,a
   029C 7E 00              2891 	mov	r6,#0x00
   029E 90s02r4E           2892 	mov	dptr,#(_axradio_cb_receive + 0x0020)
   02A1 ED                 2893 	mov	a,r5
   02A2 F0                 2894 	movx	@dptr,a
   02A3 A3                 2895 	inc	dptr
   02A4 EE                 2896 	mov	a,r6
   02A5 F0                 2897 	movx	@dptr,a
                           2898 ;	..\COMMON\easyax5043.c:360: wtimer_add_callback(&axradio_cb_receive.cb);
   02A6 90s02r2E           2899 	mov	dptr,#_axradio_cb_receive
   02A9 12s00r00           2900 	lcall	_wtimer_add_callback
                           2901 ;	..\COMMON\easyax5043.c:361: if (axradio_mode == AXRADIO_MODE_SYNC_SLAVE ||
   02AC 74 22              2902 	mov	a,#0x22
   02AE B5*00 02           2903 	cjne	a,_axradio_mode,00227$
   02B1 80 0A              2904 	sjmp	00121$
   02B3                    2905 00227$:
                           2906 ;	..\COMMON\easyax5043.c:362: axradio_mode == AXRADIO_MODE_SYNC_ACK_SLAVE)
   02B3 74 23              2907 	mov	a,#0x23
   02B5 B5*00 02           2908 	cjne	a,_axradio_mode,00228$
   02B8 80 03              2909 	sjmp	00229$
   02BA                    2910 00228$:
   02BA 02s01r48           2911 	ljmp	00147$
   02BD                    2912 00229$:
   02BD                    2913 00121$:
                           2914 ;	..\COMMON\easyax5043.c:363: wtimer_remove(&axradio_timer);
   02BD 90s02r85           2915 	mov	dptr,#_axradio_timer
   02C0 12s00r00           2916 	lcall	_wtimer_remove
                           2917 ;	..\COMMON\easyax5043.c:365: break;
   02C3 02s01r48           2918 	ljmp	00147$
                           2919 ;	..\COMMON\easyax5043.c:367: case AX5043_FIFOCMD_RFFREQOFFS:
   02C6                    2920 00127$:
                           2921 ;	..\COMMON\easyax5043.c:368: if (len != 3)
   02C6 BF 03 02           2922 	cjne	r7,#0x03,00230$
   02C9 80 03              2923 	sjmp	00231$
   02CB                    2924 00230$:
   02CB 02s03rCF           2925 	ljmp	00140$
   02CE                    2926 00231$:
                           2927 ;	..\COMMON\easyax5043.c:370: i = AX5043_FIFODATA;
   02CE 90 40 29           2928 	mov	dptr,#_AX5043_FIFODATA
   02D1 E0                 2929 	movx	a,@dptr
   02D2 FE                 2930 	mov	r6,a
                           2931 ;	..\COMMON\easyax5043.c:371: i &= 0x0F;
   02D3 53 06 0F           2932 	anl	ar6,#0x0F
                           2933 ;	..\COMMON\easyax5043.c:372: i |= 1 + (uint8_t)~(i & 0x08);
   02D6 74 08              2934 	mov	a,#0x08
   02D8 5E                 2935 	anl	a,r6
   02D9 F4                 2936 	cpl	a
   02DA FD                 2937 	mov	r5,a
   02DB 0D                 2938 	inc	r5
   02DC ED                 2939 	mov	a,r5
   02DD 42 06              2940 	orl	ar6,a
                           2941 ;	..\COMMON\easyax5043.c:373: axradio_cb_receive.st.rx.phy.offset.b.b3 = ((int8_t)i) >> 8;
   02DF 8E 05              2942 	mov	ar5,r6
   02E1 ED                 2943 	mov	a,r5
   02E2 33                 2944 	rlc	a
   02E3 95 E0              2945 	subb	a,acc
   02E5 FD                 2946 	mov	r5,a
   02E6 90s02r3D           2947 	mov	dptr,#(_axradio_cb_receive + 0x000f)
   02E9 F0                 2948 	movx	@dptr,a
                           2949 ;	..\COMMON\easyax5043.c:374: axradio_cb_receive.st.rx.phy.offset.b.b2 = i;
   02EA 90s02r3C           2950 	mov	dptr,#(_axradio_cb_receive + 0x000e)
   02ED EE                 2951 	mov	a,r6
   02EE F0                 2952 	movx	@dptr,a
                           2953 ;	..\COMMON\easyax5043.c:375: axradio_cb_receive.st.rx.phy.offset.b.b1 = AX5043_FIFODATA;
   02EF 90 40 29           2954 	mov	dptr,#_AX5043_FIFODATA
   02F2 E0                 2955 	movx	a,@dptr
   02F3 90s02r3B           2956 	mov	dptr,#(_axradio_cb_receive + 0x000d)
   02F6 F0                 2957 	movx	@dptr,a
                           2958 ;	..\COMMON\easyax5043.c:376: axradio_cb_receive.st.rx.phy.offset.b.b0 = AX5043_FIFODATA;
   02F7 90 40 29           2959 	mov	dptr,#_AX5043_FIFODATA
   02FA E0                 2960 	movx	a,@dptr
   02FB FE                 2961 	mov	r6,a
   02FC 90s02r3A           2962 	mov	dptr,#(_axradio_cb_receive + 0x000c)
   02FF F0                 2963 	movx	@dptr,a
                           2964 ;	..\COMMON\easyax5043.c:377: break;
   0300 02s01r48           2965 	ljmp	00147$
                           2966 ;	..\COMMON\easyax5043.c:379: case AX5043_FIFOCMD_RSSI:
   0303                    2967 00130$:
                           2968 ;	..\COMMON\easyax5043.c:380: if (len != 1)
   0303 BF 01 02           2969 	cjne	r7,#0x01,00232$
   0306 80 03              2970 	sjmp	00233$
   0308                    2971 00232$:
   0308 02s03rCF           2972 	ljmp	00140$
   030B                    2973 00233$:
                           2974 ;	..\COMMON\easyax5043.c:383: int8_t r = AX5043_FIFODATA;
   030B 90 40 29           2975 	mov	dptr,#_AX5043_FIFODATA
   030E E0                 2976 	movx	a,@dptr
                           2977 ;	..\COMMON\easyax5043.c:384: axradio_cb_receive.st.rx.phy.rssi = r - (int16_t)axradio_phy_rssioffset;
   030F FE                 2978 	mov	r6,a
   0310 33                 2979 	rlc	a
   0311 95 E0              2980 	subb	a,acc
   0313 FD                 2981 	mov	r5,a
   0314 90s00r00           2982 	mov	dptr,#_axradio_phy_rssioffset
   0317 E4                 2983 	clr	a
   0318 93                 2984 	movc	a,@a+dptr
   0319 FC                 2985 	mov	r4,a
   031A 33                 2986 	rlc	a
   031B 95 E0              2987 	subb	a,acc
   031D FB                 2988 	mov	r3,a
   031E EE                 2989 	mov	a,r6
   031F C3                 2990 	clr	c
   0320 9C                 2991 	subb	a,r4
   0321 FE                 2992 	mov	r6,a
   0322 ED                 2993 	mov	a,r5
   0323 9B                 2994 	subb	a,r3
   0324 FD                 2995 	mov	r5,a
   0325 90s02r38           2996 	mov	dptr,#(_axradio_cb_receive + 0x000a)
   0328 EE                 2997 	mov	a,r6
   0329 F0                 2998 	movx	@dptr,a
   032A A3                 2999 	inc	dptr
   032B ED                 3000 	mov	a,r5
   032C F0                 3001 	movx	@dptr,a
                           3002 ;	..\COMMON\easyax5043.c:386: break;
   032D 02s01r48           3003 	ljmp	00147$
                           3004 ;	..\COMMON\easyax5043.c:388: case AX5043_FIFOCMD_TIMER:
   0330                    3005 00133$:
                           3006 ;	..\COMMON\easyax5043.c:389: if (len != 3)
   0330 BF 03 02           3007 	cjne	r7,#0x03,00234$
   0333 80 03              3008 	sjmp	00235$
   0335                    3009 00234$:
   0335 02s03rCF           3010 	ljmp	00140$
   0338                    3011 00235$:
                           3012 ;	..\COMMON\easyax5043.c:393: axradio_cb_receive.st.time.b.b3 = 0;
   0338 90s02r37           3013 	mov	dptr,#(_axradio_cb_receive + 0x0009)
   033B E4                 3014 	clr	a
   033C F0                 3015 	movx	@dptr,a
                           3016 ;	..\COMMON\easyax5043.c:394: axradio_cb_receive.st.time.b.b2 = AX5043_FIFODATA;
   033D 90 40 29           3017 	mov	dptr,#_AX5043_FIFODATA
   0340 E0                 3018 	movx	a,@dptr
   0341 90s02r36           3019 	mov	dptr,#(_axradio_cb_receive + 0x0008)
   0344 F0                 3020 	movx	@dptr,a
                           3021 ;	..\COMMON\easyax5043.c:395: axradio_cb_receive.st.time.b.b1 = AX5043_FIFODATA;
   0345 90 40 29           3022 	mov	dptr,#_AX5043_FIFODATA
   0348 E0                 3023 	movx	a,@dptr
   0349 90s02r35           3024 	mov	dptr,#(_axradio_cb_receive + 0x0007)
   034C F0                 3025 	movx	@dptr,a
                           3026 ;	..\COMMON\easyax5043.c:396: axradio_cb_receive.st.time.b.b0 = AX5043_FIFODATA;
   034D 90 40 29           3027 	mov	dptr,#_AX5043_FIFODATA
   0350 E0                 3028 	movx	a,@dptr
   0351 FE                 3029 	mov	r6,a
   0352 90s02r34           3030 	mov	dptr,#(_axradio_cb_receive + 0x0006)
   0355 F0                 3031 	movx	@dptr,a
                           3032 ;	..\COMMON\easyax5043.c:397: break;
   0356 02s01r48           3033 	ljmp	00147$
                           3034 ;	..\COMMON\easyax5043.c:399: case AX5043_FIFOCMD_ANTRSSI:
   0359                    3035 00136$:
                           3036 ;	..\COMMON\easyax5043.c:400: if (!len)
   0359 EF                 3037 	mov	a,r7
   035A 70 03              3038 	jnz	00236$
   035C 02s01r48           3039 	ljmp	00147$
   035F                    3040 00236$:
                           3041 ;	..\COMMON\easyax5043.c:402: update_timeanchor();
   035F C0 07              3042 	push	ar7
   0361 12s00r00           3043 	lcall	_update_timeanchor
                           3044 ;	..\COMMON\easyax5043.c:403: wtimer_remove_callback(&axradio_cb_channelstate.cb);
   0364 90s02r5A           3045 	mov	dptr,#_axradio_cb_channelstate
   0367 12s00r00           3046 	lcall	_wtimer_remove_callback
                           3047 ;	..\COMMON\easyax5043.c:404: axradio_cb_channelstate.st.error = AXRADIO_ERR_NOERROR;
   036A 90s02r5F           3048 	mov	dptr,#(_axradio_cb_channelstate + 0x0005)
   036D E4                 3049 	clr	a
   036E F0                 3050 	movx	@dptr,a
                           3051 ;	..\COMMON\easyax5043.c:406: int8_t r = AX5043_FIFODATA;
   036F 90 40 29           3052 	mov	dptr,#_AX5043_FIFODATA
   0372 E0                 3053 	movx	a,@dptr
                           3054 ;	..\COMMON\easyax5043.c:407: axradio_cb_channelstate.st.cs.rssi = r - (int16_t)axradio_phy_rssioffset;
   0373 FE                 3055 	mov	r6,a
   0374 FC                 3056 	mov	r4,a
   0375 33                 3057 	rlc	a
   0376 95 E0              3058 	subb	a,acc
   0378 FD                 3059 	mov	r5,a
   0379 90s00r00           3060 	mov	dptr,#_axradio_phy_rssioffset
   037C E4                 3061 	clr	a
   037D 93                 3062 	movc	a,@a+dptr
   037E FB                 3063 	mov	r3,a
   037F 33                 3064 	rlc	a
   0380 95 E0              3065 	subb	a,acc
   0382 FA                 3066 	mov	r2,a
   0383 EC                 3067 	mov	a,r4
   0384 C3                 3068 	clr	c
   0385 9B                 3069 	subb	a,r3
   0386 FC                 3070 	mov	r4,a
   0387 ED                 3071 	mov	a,r5
   0388 9A                 3072 	subb	a,r2
   0389 FD                 3073 	mov	r5,a
   038A 90s02r64           3074 	mov	dptr,#(_axradio_cb_channelstate + 0x000a)
   038D EC                 3075 	mov	a,r4
   038E F0                 3076 	movx	@dptr,a
   038F A3                 3077 	inc	dptr
   0390 ED                 3078 	mov	a,r5
   0391 F0                 3079 	movx	@dptr,a
                           3080 ;	..\COMMON\easyax5043.c:408: axradio_cb_channelstate.st.cs.busy = r >= axradio_phy_channelbusy;
   0392 90s00r00           3081 	mov	dptr,#_axradio_phy_channelbusy
   0395 E4                 3082 	clr	a
   0396 93                 3083 	movc	a,@a+dptr
   0397 FD                 3084 	mov	r5,a
   0398 C3                 3085 	clr	c
   0399 EE                 3086 	mov	a,r6
   039A 64 80              3087 	xrl	a,#0x80
   039C 8D F0              3088 	mov	b,r5
   039E 63 F0 80           3089 	xrl	b,#0x80
   03A1 95 F0              3090 	subb	a,b
   03A3 B3                 3091 	cpl	c
   03A4 E4                 3092 	clr	a
   03A5 33                 3093 	rlc	a
   03A6 90s02r66           3094 	mov	dptr,#(_axradio_cb_channelstate + 0x000c)
   03A9 F0                 3095 	movx	@dptr,a
                           3096 ;	..\COMMON\easyax5043.c:410: axradio_cb_channelstate.st.time.t = axradio_timeanchor.radiotimer;
   03AA 90s00r16           3097 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   03AD E0                 3098 	movx	a,@dptr
   03AE FB                 3099 	mov	r3,a
   03AF A3                 3100 	inc	dptr
   03B0 E0                 3101 	movx	a,@dptr
   03B1 FC                 3102 	mov	r4,a
   03B2 A3                 3103 	inc	dptr
   03B3 E0                 3104 	movx	a,@dptr
   03B4 FD                 3105 	mov	r5,a
   03B5 A3                 3106 	inc	dptr
   03B6 E0                 3107 	movx	a,@dptr
   03B7 FE                 3108 	mov	r6,a
   03B8 90s02r60           3109 	mov	dptr,#(_axradio_cb_channelstate + 0x0006)
   03BB EB                 3110 	mov	a,r3
   03BC F0                 3111 	movx	@dptr,a
   03BD A3                 3112 	inc	dptr
   03BE EC                 3113 	mov	a,r4
   03BF F0                 3114 	movx	@dptr,a
   03C0 A3                 3115 	inc	dptr
   03C1 ED                 3116 	mov	a,r5
   03C2 F0                 3117 	movx	@dptr,a
   03C3 A3                 3118 	inc	dptr
   03C4 EE                 3119 	mov	a,r6
   03C5 F0                 3120 	movx	@dptr,a
                           3121 ;	..\COMMON\easyax5043.c:411: wtimer_add_callback(&axradio_cb_channelstate.cb);
   03C6 90s02r5A           3122 	mov	dptr,#_axradio_cb_channelstate
   03C9 12s00r00           3123 	lcall	_wtimer_add_callback
   03CC D0 07              3124 	pop	ar7
                           3125 ;	..\COMMON\easyax5043.c:412: --len;
   03CE 1F                 3126 	dec	r7
                           3127 ;	..\COMMON\easyax5043.c:417: dropchunk:
   03CF                    3128 00140$:
                           3129 ;	..\COMMON\easyax5043.c:418: if (!len)
   03CF EF                 3130 	mov	a,r7
   03D0 70 03              3131 	jnz	00238$
   03D2 02s01r48           3132 	ljmp	00147$
   03D5                    3133 00238$:
                           3134 ;	..\COMMON\easyax5043.c:421: do {
   03D5                    3135 00143$:
                           3136 ;	..\COMMON\easyax5043.c:422: AX5043_FIFODATA;        // purge FIFO
   03D5 90 40 29           3137 	mov	dptr,#_AX5043_FIFODATA
   03D8 E0                 3138 	movx	a,@dptr
                           3139 ;	..\COMMON\easyax5043.c:424: while (--i);
   03D9 DF FA              3140 	djnz	r7,00143$
                           3141 ;	..\COMMON\easyax5043.c:426: } // end switch(fifo_cmd)
   03DB 02s01r48           3142 	ljmp	00147$
                           3143 ;------------------------------------------------------------
                           3144 ;Allocation info for local variables in function 'transmit_isr'
                           3145 ;------------------------------------------------------------
                           3146 ;cnt                       Allocated to registers r7 
                           3147 ;byte                      Allocated to registers r7 
                           3148 ;len_byte                  Allocated to registers r4 
                           3149 ;i                         Allocated to registers r3 
                           3150 ;byte                      Allocated to registers r6 
                           3151 ;flags                     Allocated to registers r6 
                           3152 ;len                       Allocated to registers r4 r5 
                           3153 ;------------------------------------------------------------
                           3154 ;	..\COMMON\easyax5043.c:430: static __reentrantb void transmit_isr(void) __reentrant
                           3155 ;	-----------------------------------------
                           3156 ;	 function transmit_isr
                           3157 ;	-----------------------------------------
   03DE                    3158 _transmit_isr:
                           3159 ;	..\COMMON\easyax5043.c:568: pktend:
   03DE                    3160 00157$:
                           3161 ;	..\COMMON\easyax5043.c:433: uint8_t cnt = AX5043_FIFOFREE0;
   03DE 90 40 2D           3162 	mov	dptr,#_AX5043_FIFOFREE0
   03E1 E0                 3163 	movx	a,@dptr
   03E2 FF                 3164 	mov	r7,a
                           3165 ;	..\COMMON\easyax5043.c:434: if (AX5043_FIFOFREE1)
   03E3 90 40 2C           3166 	mov	dptr,#_AX5043_FIFOFREE1
   03E6 E0                 3167 	movx	a,@dptr
   03E7 FE                 3168 	mov	r6,a
   03E8 60 02              3169 	jz	00102$
                           3170 ;	..\COMMON\easyax5043.c:435: cnt = 0xff;
   03EA 7F FF              3171 	mov	r7,#0xFF
   03EC                    3172 00102$:
                           3173 ;	..\COMMON\easyax5043.c:436: switch (axradio_trxstate) {
   03EC AE*01              3174 	mov	r6,_axradio_trxstate
   03EE BE 0A 02           3175 	cjne	r6,#0x0A,00219$
   03F1 80 0F              3176 	sjmp	00103$
   03F3                    3177 00219$:
   03F3 BE 0B 03           3178 	cjne	r6,#0x0B,00220$
   03F6 02s04r97           3179 	ljmp	00115$
   03F9                    3180 00220$:
   03F9 BE 0C 03           3181 	cjne	r6,#0x0C,00221$
   03FC 02s06r6D           3182 	ljmp	00137$
   03FF                    3183 00221$:
   03FF 02s07r03           3184 	ljmp	00148$
                           3185 ;	..\COMMON\easyax5043.c:437: case trxstate_tx_longpreamble:
   0402                    3186 00103$:
                           3187 ;	..\COMMON\easyax5043.c:438: if (!axradio_txbuffer_cnt) {
   0402 90s00r03           3188 	mov	dptr,#_axradio_txbuffer_cnt
   0405 E0                 3189 	movx	a,@dptr
   0406 FD                 3190 	mov	r5,a
   0407 A3                 3191 	inc	dptr
   0408 E0                 3192 	movx	a,@dptr
   0409 FE                 3193 	mov	r6,a
   040A 4D                 3194 	orl	a,r5
   040B 70 37              3195 	jnz	00109$
                           3196 ;	..\COMMON\easyax5043.c:439: axradio_trxstate = trxstate_tx_shortpreamble;
   040D 75*01 0B           3197 	mov	_axradio_trxstate,#0x0B
                           3198 ;	..\COMMON\easyax5043.c:440: if( axradio_mode == AXRADIO_MODE_WOR_TRANSMIT || axradio_mode == AXRADIO_MODE_WOR_ACK_TRANSMIT )
   0410 74 11              3199 	mov	a,#0x11
   0412 B5*00 02           3200 	cjne	a,_axradio_mode,00223$
   0415 80 05              3201 	sjmp	00104$
   0417                    3202 00223$:
   0417 74 13              3203 	mov	a,#0x13
   0419 B5*00 14           3204 	cjne	a,_axradio_mode,00105$
   041C                    3205 00104$:
                           3206 ;	..\COMMON\easyax5043.c:441: axradio_txbuffer_cnt = axradio_phy_preamble_wor_len;
   041C 90s00r00           3207 	mov	dptr,#_axradio_phy_preamble_wor_len
   041F E4                 3208 	clr	a
   0420 93                 3209 	movc	a,@a+dptr
   0421 FB                 3210 	mov	r3,a
   0422 74 01              3211 	mov	a,#0x01
   0424 93                 3212 	movc	a,@a+dptr
   0425 FC                 3213 	mov	r4,a
   0426 90s00r03           3214 	mov	dptr,#_axradio_txbuffer_cnt
   0429 EB                 3215 	mov	a,r3
   042A F0                 3216 	movx	@dptr,a
   042B A3                 3217 	inc	dptr
   042C EC                 3218 	mov	a,r4
   042D F0                 3219 	movx	@dptr,a
   042E 80 67              3220 	sjmp	00115$
   0430                    3221 00105$:
                           3222 ;	..\COMMON\easyax5043.c:443: axradio_txbuffer_cnt = axradio_phy_preamble_len;
   0430 90s00r00           3223 	mov	dptr,#_axradio_phy_preamble_len
   0433 E4                 3224 	clr	a
   0434 93                 3225 	movc	a,@a+dptr
   0435 FB                 3226 	mov	r3,a
   0436 74 01              3227 	mov	a,#0x01
   0438 93                 3228 	movc	a,@a+dptr
   0439 FC                 3229 	mov	r4,a
   043A 90s00r03           3230 	mov	dptr,#_axradio_txbuffer_cnt
   043D EB                 3231 	mov	a,r3
   043E F0                 3232 	movx	@dptr,a
   043F A3                 3233 	inc	dptr
   0440 EC                 3234 	mov	a,r4
   0441 F0                 3235 	movx	@dptr,a
                           3236 ;	..\COMMON\easyax5043.c:444: goto shortpreamble;
   0442 80 53              3237 	sjmp	00115$
   0444                    3238 00109$:
                           3239 ;	..\COMMON\easyax5043.c:446: if (cnt < 4)
   0444 BF 04 00           3240 	cjne	r7,#0x04,00226$
   0447                    3241 00226$:
   0447 50 03              3242 	jnc	00227$
   0449 02s07r13           3243 	ljmp	00151$
   044C                    3244 00227$:
                           3245 ;	..\COMMON\easyax5043.c:448: cnt = 7;
   044C 7F 07              3246 	mov	r7,#0x07
                           3247 ;	..\COMMON\easyax5043.c:449: if (axradio_txbuffer_cnt < 7)
   044E C3                 3248 	clr	c
   044F ED                 3249 	mov	a,r5
   0450 94 07              3250 	subb	a,#0x07
   0452 EE                 3251 	mov	a,r6
   0453 94 00              3252 	subb	a,#0x00
   0455 50 02              3253 	jnc	00113$
                           3254 ;	..\COMMON\easyax5043.c:450: cnt = axradio_txbuffer_cnt;
   0457 8D 07              3255 	mov	ar7,r5
   0459                    3256 00113$:
                           3257 ;	..\COMMON\easyax5043.c:451: axradio_txbuffer_cnt -= cnt;
   0459 8F 05              3258 	mov	ar5,r7
   045B 7E 00              3259 	mov	r6,#0x00
   045D 90s00r03           3260 	mov	dptr,#_axradio_txbuffer_cnt
   0460 E0                 3261 	movx	a,@dptr
   0461 FB                 3262 	mov	r3,a
   0462 A3                 3263 	inc	dptr
   0463 E0                 3264 	movx	a,@dptr
   0464 FC                 3265 	mov	r4,a
   0465 90s00r03           3266 	mov	dptr,#_axradio_txbuffer_cnt
   0468 EB                 3267 	mov	a,r3
   0469 C3                 3268 	clr	c
   046A 9D                 3269 	subb	a,r5
   046B F0                 3270 	movx	@dptr,a
   046C EC                 3271 	mov	a,r4
   046D 9E                 3272 	subb	a,r6
   046E A3                 3273 	inc	dptr
   046F F0                 3274 	movx	@dptr,a
                           3275 ;	..\COMMON\easyax5043.c:452: cnt <<= 5;
   0470 EF                 3276 	mov	a,r7
   0471 C4                 3277 	swap	a
   0472 23                 3278 	rl	a
   0473 54 E0              3279 	anl	a,#0xE0
   0475 FF                 3280 	mov	r7,a
                           3281 ;	..\COMMON\easyax5043.c:453: AX5043_FIFODATA = AX5043_FIFOCMD_REPEATDATA | (3 << 5);
   0476 90 40 29           3282 	mov	dptr,#_AX5043_FIFODATA
   0479 74 62              3283 	mov	a,#0x62
   047B F0                 3284 	movx	@dptr,a
                           3285 ;	..\COMMON\easyax5043.c:454: AX5043_FIFODATA = axradio_phy_preamble_flags;
   047C 90s00r00           3286 	mov	dptr,#_axradio_phy_preamble_flags
   047F E4                 3287 	clr	a
   0480 93                 3288 	movc	a,@a+dptr
   0481 90 40 29           3289 	mov	dptr,#_AX5043_FIFODATA
   0484 F0                 3290 	movx	@dptr,a
                           3291 ;	..\COMMON\easyax5043.c:455: AX5043_FIFODATA = cnt;
   0485 90 40 29           3292 	mov	dptr,#_AX5043_FIFODATA
   0488 EF                 3293 	mov	a,r7
   0489 F0                 3294 	movx	@dptr,a
                           3295 ;	..\COMMON\easyax5043.c:456: AX5043_FIFODATA = axradio_phy_preamble_byte;
   048A 90s00r00           3296 	mov	dptr,#_axradio_phy_preamble_byte
   048D E4                 3297 	clr	a
   048E 93                 3298 	movc	a,@a+dptr
   048F FE                 3299 	mov	r6,a
   0490 90 40 29           3300 	mov	dptr,#_AX5043_FIFODATA
   0493 F0                 3301 	movx	@dptr,a
                           3302 ;	..\COMMON\easyax5043.c:457: break;
   0494 02s03rDE           3303 	ljmp	00157$
                           3304 ;	..\COMMON\easyax5043.c:460: shortpreamble:
   0497                    3305 00115$:
                           3306 ;	..\COMMON\easyax5043.c:461: if (!axradio_txbuffer_cnt) {
   0497 90s00r03           3307 	mov	dptr,#_axradio_txbuffer_cnt
   049A E0                 3308 	movx	a,@dptr
   049B FD                 3309 	mov	r5,a
   049C A3                 3310 	inc	dptr
   049D E0                 3311 	movx	a,@dptr
   049E FE                 3312 	mov	r6,a
   049F 4D                 3313 	orl	a,r5
   04A0 60 03              3314 	jz	00229$
   04A2 02s05r7D           3315 	ljmp	00127$
   04A5                    3316 00229$:
                           3317 ;	..\COMMON\easyax5043.c:462: if (cnt < 15)
   04A5 BF 0F 00           3318 	cjne	r7,#0x0F,00230$
   04A8                    3319 00230$:
   04A8 50 03              3320 	jnc	00231$
   04AA 02s07r13           3321 	ljmp	00151$
   04AD                    3322 00231$:
                           3323 ;	..\COMMON\easyax5043.c:464: if (axradio_phy_preamble_appendbits) {
   04AD 90s00r00           3324 	mov	dptr,#_axradio_phy_preamble_appendbits
   04B0 E4                 3325 	clr	a
   04B1 93                 3326 	movc	a,@a+dptr
   04B2 FC                 3327 	mov	r4,a
   04B3 60 6F              3328 	jz	00122$
                           3329 ;	..\COMMON\easyax5043.c:466: AX5043_FIFODATA = AX5043_FIFOCMD_DATA | (2 << 5);
                           3330 ;	..\COMMON\easyax5043.c:467: AX5043_FIFODATA = 0x1C;
   04B5 90 40 29           3331 	mov	dptr,#_AX5043_FIFODATA
   04B8 74 41              3332 	mov	a,#0x41
   04BA F0                 3333 	movx	@dptr,a
   04BB 74 1C              3334 	mov	a,#0x1C
   04BD F0                 3335 	movx	@dptr,a
                           3336 ;	..\COMMON\easyax5043.c:468: byte = axradio_phy_preamble_appendpattern;
   04BE 90s00r00           3337 	mov	dptr,#_axradio_phy_preamble_appendpattern
   04C1 E4                 3338 	clr	a
   04C2 93                 3339 	movc	a,@a+dptr
   04C3 FB                 3340 	mov	r3,a
   04C4 FF                 3341 	mov	r7,a
                           3342 ;	..\COMMON\easyax5043.c:469: if (AX5043_PKTADDRCFG & 0x80) {
   04C5 90 42 00           3343 	mov	dptr,#_AX5043_PKTADDRCFG
   04C8 E0                 3344 	movx	a,@dptr
   04C9 FA                 3345 	mov	r2,a
   04CA 30 E7 26           3346 	jnb	acc.7,00119$
                           3347 ;	..\COMMON\easyax5043.c:471: byte &= 0xFF << (8-axradio_phy_preamble_appendbits);
   04CD 74 08              3348 	mov	a,#0x08
   04CF C3                 3349 	clr	c
   04D0 9C                 3350 	subb	a,r4
   04D1 F5 F0              3351 	mov	b,a
   04D3 05 F0              3352 	inc	b
   04D5 74 FF              3353 	mov	a,#0xFF
   04D7 80 02              3354 	sjmp	00236$
   04D9                    3355 00234$:
   04D9 25 E0              3356 	add	a,acc
   04DB                    3357 00236$:
   04DB D5 F0 FB           3358 	djnz	b,00234$
   04DE FA                 3359 	mov	r2,a
   04DF 52 07              3360 	anl	ar7,a
                           3361 ;	..\COMMON\easyax5043.c:472: byte |= 0x80 >> axradio_phy_preamble_appendbits;
   04E1 8C F0              3362 	mov	b,r4
   04E3 05 F0              3363 	inc	b
   04E5 74 80              3364 	mov	a,#0x80
   04E7 80 02              3365 	sjmp	00238$
   04E9                    3366 00237$:
   04E9 C3                 3367 	clr	c
   04EA 13                 3368 	rrc	a
   04EB                    3369 00238$:
   04EB D5 F0 FB           3370 	djnz	b,00237$
   04EE FA                 3371 	mov	r2,a
   04EF 42 07              3372 	orl	ar7,a
   04F1 80 2C              3373 	sjmp	00120$
   04F3                    3374 00119$:
                           3375 ;	..\COMMON\easyax5043.c:475: byte &= 0xFF >> (8-axradio_phy_preamble_appendbits);
   04F3 8C 02              3376 	mov	ar2,r4
   04F5 7B 00              3377 	mov	r3,#0x00
   04F7 74 08              3378 	mov	a,#0x08
   04F9 C3                 3379 	clr	c
   04FA 9A                 3380 	subb	a,r2
   04FB FA                 3381 	mov	r2,a
   04FC E4                 3382 	clr	a
   04FD 9B                 3383 	subb	a,r3
   04FE FB                 3384 	mov	r3,a
   04FF 8A F0              3385 	mov	b,r2
   0501 05 F0              3386 	inc	b
   0503 74 FF              3387 	mov	a,#0xFF
   0505 80 02              3388 	sjmp	00240$
   0507                    3389 00239$:
   0507 C3                 3390 	clr	c
   0508 13                 3391 	rrc	a
   0509                    3392 00240$:
   0509 D5 F0 FB           3393 	djnz	b,00239$
   050C FA                 3394 	mov	r2,a
   050D 52 07              3395 	anl	ar7,a
                           3396 ;	..\COMMON\easyax5043.c:476: byte |= 0x01 << axradio_phy_preamble_appendbits;
   050F 8C F0              3397 	mov	b,r4
   0511 05 F0              3398 	inc	b
   0513 74 01              3399 	mov	a,#0x01
   0515 80 02              3400 	sjmp	00243$
   0517                    3401 00241$:
   0517 25 E0              3402 	add	a,acc
   0519                    3403 00243$:
   0519 D5 F0 FB           3404 	djnz	b,00241$
   051C FC                 3405 	mov	r4,a
   051D 42 07              3406 	orl	ar7,a
   051F                    3407 00120$:
                           3408 ;	..\COMMON\easyax5043.c:478: AX5043_FIFODATA = byte;
   051F 90 40 29           3409 	mov	dptr,#_AX5043_FIFODATA
   0522 EF                 3410 	mov	a,r7
   0523 F0                 3411 	movx	@dptr,a
   0524                    3412 00122$:
                           3413 ;	..\COMMON\easyax5043.c:484: if ((AX5043_FRAMING & 0x0E) == 0x06 && axradio_framing_synclen) {
   0524 90 40 12           3414 	mov	dptr,#_AX5043_FRAMING
   0527 E0                 3415 	movx	a,@dptr
   0528 FC                 3416 	mov	r4,a
   0529 53 04 0E           3417 	anl	ar4,#0x0E
   052C BC 06 48           3418 	cjne	r4,#0x06,00124$
   052F 90s00r00           3419 	mov	dptr,#_axradio_framing_synclen
   0532 E4                 3420 	clr	a
   0533 93                 3421 	movc	a,@a+dptr
   0534 FC                 3422 	mov	r4,a
   0535 60 40              3423 	jz	00124$
                           3424 ;	..\COMMON\easyax5043.c:486: uint8_t len_byte = axradio_framing_synclen;
                           3425 ;	..\COMMON\easyax5043.c:487: uint8_t i = (len_byte & 0x07) ? 0x04 : 0;
   0537 EC                 3426 	mov	a,r4
   0538 54 07              3427 	anl	a,#0x07
   053A 60 04              3428 	jz	00161$
   053C 7B 04              3429 	mov	r3,#0x04
   053E 80 02              3430 	sjmp	00162$
   0540                    3431 00161$:
   0540 7B 00              3432 	mov	r3,#0x00
   0542                    3433 00162$:
                           3434 ;	..\COMMON\easyax5043.c:489: len_byte += 7;
   0542 74 07              3435 	mov	a,#0x07
   0544 2C                 3436 	add	a,r4
                           3437 ;	..\COMMON\easyax5043.c:490: len_byte >>= 3;
   0545 C4                 3438 	swap	a
   0546 23                 3439 	rl	a
   0547 54 1F              3440 	anl	a,#0x1F
                           3441 ;	..\COMMON\easyax5043.c:491: AX5043_FIFODATA = AX5043_FIFOCMD_DATA | ((len_byte + 1) << 5);
   0549 FC                 3442 	mov	r4,a
   054A 04                 3443 	inc	a
   054B C4                 3444 	swap	a
   054C 23                 3445 	rl	a
   054D 54 E0              3446 	anl	a,#0xE0
   054F FA                 3447 	mov	r2,a
   0550 90 40 29           3448 	mov	dptr,#_AX5043_FIFODATA
   0553 74 01              3449 	mov	a,#0x01
   0555 4A                 3450 	orl	a,r2
   0556 F0                 3451 	movx	@dptr,a
                           3452 ;	..\COMMON\easyax5043.c:492: AX5043_FIFODATA = axradio_framing_syncflags | i;
   0557 90s00r00           3453 	mov	dptr,#_axradio_framing_syncflags
   055A E4                 3454 	clr	a
   055B 93                 3455 	movc	a,@a+dptr
   055C FA                 3456 	mov	r2,a
   055D 90 40 29           3457 	mov	dptr,#_AX5043_FIFODATA
   0560 EB                 3458 	mov	a,r3
   0561 4A                 3459 	orl	a,r2
   0562 F0                 3460 	movx	@dptr,a
                           3461 ;	..\COMMON\easyax5043.c:493: for (i = 0; i < len_byte; ++i) {
   0563 7B 00              3462 	mov	r3,#0x00
   0565                    3463 00152$:
   0565 C3                 3464 	clr	c
   0566 EB                 3465 	mov	a,r3
   0567 9C                 3466 	subb	a,r4
   0568 50 0D              3467 	jnc	00124$
                           3468 ;	..\COMMON\easyax5043.c:495: AX5043_FIFODATA = axradio_framing_syncword[i];
   056A EB                 3469 	mov	a,r3
   056B 90s00r00           3470 	mov	dptr,#_axradio_framing_syncword
   056E 93                 3471 	movc	a,@a+dptr
   056F FA                 3472 	mov	r2,a
   0570 90 40 29           3473 	mov	dptr,#_AX5043_FIFODATA
   0573 F0                 3474 	movx	@dptr,a
                           3475 ;	..\COMMON\easyax5043.c:493: for (i = 0; i < len_byte; ++i) {
   0574 0B                 3476 	inc	r3
   0575 80 EE              3477 	sjmp	00152$
   0577                    3478 00124$:
                           3479 ;	..\COMMON\easyax5043.c:502: axradio_trxstate = trxstate_tx_packet;
   0577 75*01 0C           3480 	mov	_axradio_trxstate,#0x0C
                           3481 ;	..\COMMON\easyax5043.c:503: break;
   057A 02s03rDE           3482 	ljmp	00157$
   057D                    3483 00127$:
                           3484 ;	..\COMMON\easyax5043.c:505: if (cnt < 4)
   057D BF 04 00           3485 	cjne	r7,#0x04,00249$
   0580                    3486 00249$:
   0580 50 03              3487 	jnc	00250$
   0582 02s07r13           3488 	ljmp	00151$
   0585                    3489 00250$:
                           3490 ;	..\COMMON\easyax5043.c:507: cnt = 255;
   0585 7F FF              3491 	mov	r7,#0xFF
                           3492 ;	..\COMMON\easyax5043.c:508: if (axradio_txbuffer_cnt < 255*8)
   0587 C3                 3493 	clr	c
   0588 ED                 3494 	mov	a,r5
   0589 94 F8              3495 	subb	a,#0xF8
   058B EE                 3496 	mov	a,r6
   058C 94 07              3497 	subb	a,#0x07
   058E 50 12              3498 	jnc	00131$
                           3499 ;	..\COMMON\easyax5043.c:509: cnt = axradio_txbuffer_cnt >> 3;
   0590 EE                 3500 	mov	a,r6
   0591 C4                 3501 	swap	a
   0592 23                 3502 	rl	a
   0593 CD                 3503 	xch	a,r5
   0594 C4                 3504 	swap	a
   0595 23                 3505 	rl	a
   0596 54 1F              3506 	anl	a,#0x1F
   0598 6D                 3507 	xrl	a,r5
   0599 CD                 3508 	xch	a,r5
   059A 54 1F              3509 	anl	a,#0x1F
   059C CD                 3510 	xch	a,r5
   059D 6D                 3511 	xrl	a,r5
   059E CD                 3512 	xch	a,r5
   059F FE                 3513 	mov	r6,a
   05A0 8D 07              3514 	mov	ar7,r5
   05A2                    3515 00131$:
                           3516 ;	..\COMMON\easyax5043.c:510: if (cnt) {
   05A2 EF                 3517 	mov	a,r7
   05A3 60 46              3518 	jz	00133$
                           3519 ;	..\COMMON\easyax5043.c:511: axradio_txbuffer_cnt -= ((uint16_t)cnt) << 3;
   05A5 8F 05              3520 	mov	ar5,r7
   05A7 E4                 3521 	clr	a
   05A8 C4                 3522 	swap	a
   05A9 03                 3523 	rr	a
   05AA 54 F8              3524 	anl	a,#0xF8
   05AC CD                 3525 	xch	a,r5
   05AD C4                 3526 	swap	a
   05AE 03                 3527 	rr	a
   05AF CD                 3528 	xch	a,r5
   05B0 6D                 3529 	xrl	a,r5
   05B1 CD                 3530 	xch	a,r5
   05B2 54 F8              3531 	anl	a,#0xF8
   05B4 CD                 3532 	xch	a,r5
   05B5 6D                 3533 	xrl	a,r5
   05B6 FE                 3534 	mov	r6,a
   05B7 90s00r03           3535 	mov	dptr,#_axradio_txbuffer_cnt
   05BA E0                 3536 	movx	a,@dptr
   05BB FB                 3537 	mov	r3,a
   05BC A3                 3538 	inc	dptr
   05BD E0                 3539 	movx	a,@dptr
   05BE FC                 3540 	mov	r4,a
   05BF 90s00r03           3541 	mov	dptr,#_axradio_txbuffer_cnt
   05C2 EB                 3542 	mov	a,r3
   05C3 C3                 3543 	clr	c
   05C4 9D                 3544 	subb	a,r5
   05C5 F0                 3545 	movx	@dptr,a
   05C6 EC                 3546 	mov	a,r4
   05C7 9E                 3547 	subb	a,r6
   05C8 A3                 3548 	inc	dptr
   05C9 F0                 3549 	movx	@dptr,a
                           3550 ;	..\COMMON\easyax5043.c:512: AX5043_FIFODATA = AX5043_FIFOCMD_REPEATDATA | (3 << 5);
   05CA 90 40 29           3551 	mov	dptr,#_AX5043_FIFODATA
   05CD 74 62              3552 	mov	a,#0x62
   05CF F0                 3553 	movx	@dptr,a
                           3554 ;	..\COMMON\easyax5043.c:513: AX5043_FIFODATA = axradio_phy_preamble_flags;
   05D0 90s00r00           3555 	mov	dptr,#_axradio_phy_preamble_flags
   05D3 E4                 3556 	clr	a
   05D4 93                 3557 	movc	a,@a+dptr
   05D5 90 40 29           3558 	mov	dptr,#_AX5043_FIFODATA
   05D8 F0                 3559 	movx	@dptr,a
                           3560 ;	..\COMMON\easyax5043.c:514: AX5043_FIFODATA = cnt;
   05D9 90 40 29           3561 	mov	dptr,#_AX5043_FIFODATA
   05DC EF                 3562 	mov	a,r7
   05DD F0                 3563 	movx	@dptr,a
                           3564 ;	..\COMMON\easyax5043.c:515: AX5043_FIFODATA = axradio_phy_preamble_byte;
   05DE 90s00r00           3565 	mov	dptr,#_axradio_phy_preamble_byte
   05E1 E4                 3566 	clr	a
   05E2 93                 3567 	movc	a,@a+dptr
   05E3 FE                 3568 	mov	r6,a
   05E4 90 40 29           3569 	mov	dptr,#_AX5043_FIFODATA
   05E7 F0                 3570 	movx	@dptr,a
                           3571 ;	..\COMMON\easyax5043.c:516: break;
   05E8 02s03rDE           3572 	ljmp	00157$
   05EB                    3573 00133$:
                           3574 ;	..\COMMON\easyax5043.c:519: uint8_t byte = axradio_phy_preamble_byte;
   05EB 90s00r00           3575 	mov	dptr,#_axradio_phy_preamble_byte
   05EE E4                 3576 	clr	a
   05EF 93                 3577 	movc	a,@a+dptr
   05F0 FE                 3578 	mov	r6,a
                           3579 ;	..\COMMON\easyax5043.c:520: cnt = axradio_txbuffer_cnt;
   05F1 90s00r03           3580 	mov	dptr,#_axradio_txbuffer_cnt
   05F4 E0                 3581 	movx	a,@dptr
   05F5 FC                 3582 	mov	r4,a
   05F6 A3                 3583 	inc	dptr
   05F7 E0                 3584 	movx	a,@dptr
   05F8 8C 07              3585 	mov	ar7,r4
                           3586 ;	..\COMMON\easyax5043.c:521: axradio_txbuffer_cnt = 0;
   05FA 90s00r03           3587 	mov	dptr,#_axradio_txbuffer_cnt
   05FD E4                 3588 	clr	a
   05FE F0                 3589 	movx	@dptr,a
   05FF A3                 3590 	inc	dptr
   0600 F0                 3591 	movx	@dptr,a
                           3592 ;	..\COMMON\easyax5043.c:522: AX5043_FIFODATA = AX5043_FIFOCMD_DATA | (2 << 5);
                           3593 ;	..\COMMON\easyax5043.c:523: AX5043_FIFODATA = 0x1C;
   0601 90 40 29           3594 	mov	dptr,#_AX5043_FIFODATA
   0604 74 41              3595 	mov	a,#0x41
   0606 F0                 3596 	movx	@dptr,a
   0607 74 1C              3597 	mov	a,#0x1C
   0609 F0                 3598 	movx	@dptr,a
                           3599 ;	..\COMMON\easyax5043.c:524: if (AX5043_PKTADDRCFG & 0x80) {
   060A 90 42 00           3600 	mov	dptr,#_AX5043_PKTADDRCFG
   060D E0                 3601 	movx	a,@dptr
   060E FD                 3602 	mov	r5,a
   060F 30 E7 27           3603 	jnb	acc.7,00135$
                           3604 ;	..\COMMON\easyax5043.c:526: byte &= 0xFF << (8-cnt);
   0612 74 08              3605 	mov	a,#0x08
   0614 C3                 3606 	clr	c
   0615 9F                 3607 	subb	a,r7
   0616 FD                 3608 	mov	r5,a
   0617 8D F0              3609 	mov	b,r5
   0619 05 F0              3610 	inc	b
   061B 74 FF              3611 	mov	a,#0xFF
   061D 80 02              3612 	sjmp	00256$
   061F                    3613 00254$:
   061F 25 E0              3614 	add	a,acc
   0621                    3615 00256$:
   0621 D5 F0 FB           3616 	djnz	b,00254$
   0624 FD                 3617 	mov	r5,a
   0625 52 06              3618 	anl	ar6,a
                           3619 ;	..\COMMON\easyax5043.c:527: byte |= 0x80 >> cnt;
   0627 8F F0              3620 	mov	b,r7
   0629 05 F0              3621 	inc	b
   062B 74 80              3622 	mov	a,#0x80
   062D 80 02              3623 	sjmp	00258$
   062F                    3624 00257$:
   062F C3                 3625 	clr	c
   0630 13                 3626 	rrc	a
   0631                    3627 00258$:
   0631 D5 F0 FB           3628 	djnz	b,00257$
   0634 FD                 3629 	mov	r5,a
   0635 42 06              3630 	orl	ar6,a
   0637 80 2C              3631 	sjmp	00136$
   0639                    3632 00135$:
                           3633 ;	..\COMMON\easyax5043.c:530: byte &= 0xFF >> (8-cnt);
   0639 8F 04              3634 	mov	ar4,r7
   063B 7D 00              3635 	mov	r5,#0x00
   063D 74 08              3636 	mov	a,#0x08
   063F C3                 3637 	clr	c
   0640 9C                 3638 	subb	a,r4
   0641 FC                 3639 	mov	r4,a
   0642 E4                 3640 	clr	a
   0643 9D                 3641 	subb	a,r5
   0644 FD                 3642 	mov	r5,a
   0645 8C F0              3643 	mov	b,r4
   0647 05 F0              3644 	inc	b
   0649 74 FF              3645 	mov	a,#0xFF
   064B 80 02              3646 	sjmp	00260$
   064D                    3647 00259$:
   064D C3                 3648 	clr	c
   064E 13                 3649 	rrc	a
   064F                    3650 00260$:
   064F D5 F0 FB           3651 	djnz	b,00259$
   0652 FC                 3652 	mov	r4,a
   0653 52 06              3653 	anl	ar6,a
                           3654 ;	..\COMMON\easyax5043.c:531: byte |= 0x01 << cnt;
   0655 8F F0              3655 	mov	b,r7
   0657 05 F0              3656 	inc	b
   0659 74 01              3657 	mov	a,#0x01
   065B 80 02              3658 	sjmp	00263$
   065D                    3659 00261$:
   065D 25 E0              3660 	add	a,acc
   065F                    3661 00263$:
   065F D5 F0 FB           3662 	djnz	b,00261$
   0662 FD                 3663 	mov	r5,a
   0663 42 06              3664 	orl	ar6,a
   0665                    3665 00136$:
                           3666 ;	..\COMMON\easyax5043.c:533: AX5043_FIFODATA = byte;
   0665 90 40 29           3667 	mov	dptr,#_AX5043_FIFODATA
   0668 EE                 3668 	mov	a,r6
   0669 F0                 3669 	movx	@dptr,a
                           3670 ;	..\COMMON\easyax5043.c:535: break;
   066A 02s03rDE           3671 	ljmp	00157$
                           3672 ;	..\COMMON\easyax5043.c:537: case trxstate_tx_packet:
   066D                    3673 00137$:
                           3674 ;	..\COMMON\easyax5043.c:538: if (cnt < 11)
   066D BF 0B 00           3675 	cjne	r7,#0x0B,00264$
   0670                    3676 00264$:
   0670 50 03              3677 	jnc	00265$
   0672 02s07r13           3678 	ljmp	00151$
   0675                    3679 00265$:
                           3680 ;	..\COMMON\easyax5043.c:541: uint8_t flags = 0;
   0675 7E 00              3681 	mov	r6,#0x00
                           3682 ;	..\COMMON\easyax5043.c:542: if (!axradio_txbuffer_cnt)
   0677 90s00r03           3683 	mov	dptr,#_axradio_txbuffer_cnt
   067A E0                 3684 	movx	a,@dptr
   067B FC                 3685 	mov	r4,a
   067C A3                 3686 	inc	dptr
   067D E0                 3687 	movx	a,@dptr
   067E FD                 3688 	mov	r5,a
   067F 4C                 3689 	orl	a,r4
   0680 70 02              3690 	jnz	00141$
                           3691 ;	..\COMMON\easyax5043.c:543: flags |= 0x01; // flag byte: pkt_start
   0682 7E 01              3692 	mov	r6,#0x01
   0684                    3693 00141$:
                           3694 ;	..\COMMON\easyax5043.c:545: uint16_t len = axradio_txbuffer_len - axradio_txbuffer_cnt;
   0684 90s00r03           3695 	mov	dptr,#_axradio_txbuffer_cnt
   0687 E0                 3696 	movx	a,@dptr
   0688 FC                 3697 	mov	r4,a
   0689 A3                 3698 	inc	dptr
   068A E0                 3699 	movx	a,@dptr
   068B FD                 3700 	mov	r5,a
   068C 90s00r01           3701 	mov	dptr,#_axradio_txbuffer_len
   068F E0                 3702 	movx	a,@dptr
   0690 FA                 3703 	mov	r2,a
   0691 A3                 3704 	inc	dptr
   0692 E0                 3705 	movx	a,@dptr
   0693 FB                 3706 	mov	r3,a
   0694 EA                 3707 	mov	a,r2
   0695 C3                 3708 	clr	c
   0696 9C                 3709 	subb	a,r4
   0697 FC                 3710 	mov	r4,a
   0698 EB                 3711 	mov	a,r3
   0699 9D                 3712 	subb	a,r5
   069A FD                 3713 	mov	r5,a
                           3714 ;	..\COMMON\easyax5043.c:546: cnt -= 3;
   069B 1F                 3715 	dec	r7
   069C 1F                 3716 	dec	r7
   069D 1F                 3717 	dec	r7
                           3718 ;	..\COMMON\easyax5043.c:547: if (cnt >= len) {
   069E 8F 02              3719 	mov	ar2,r7
   06A0 7B 00              3720 	mov	r3,#0x00
   06A2 C3                 3721 	clr	c
   06A3 EA                 3722 	mov	a,r2
   06A4 9C                 3723 	subb	a,r4
   06A5 EB                 3724 	mov	a,r3
   06A6 9D                 3725 	subb	a,r5
   06A7 40 05              3726 	jc	00143$
                           3727 ;	..\COMMON\easyax5043.c:548: cnt = len;
   06A9 8C 07              3728 	mov	ar7,r4
                           3729 ;	..\COMMON\easyax5043.c:549: flags |= 0x02; // flag byte: pkt_end
   06AB 43 06 02           3730 	orl	ar6,#0x02
   06AE                    3731 00143$:
                           3732 ;	..\COMMON\easyax5043.c:552: if (!cnt)
   06AE EF                 3733 	mov	a,r7
   06AF 60 53              3734 	jz	00150$
                           3735 ;	..\COMMON\easyax5043.c:554: AX5043_FIFODATA = AX5043_FIFOCMD_DATA | (7 << 5);
                           3736 ;	..\COMMON\easyax5043.c:555: AX5043_FIFODATA = cnt + 1; // write FIFO chunk length byte (length includes the flag byte, thus the +1)
   06B1 90 40 29           3737 	mov	dptr,#_AX5043_FIFODATA
   06B4 74 E1              3738 	mov	a,#0xE1
   06B6 F0                 3739 	movx	@dptr,a
   06B7 EF                 3740 	mov	a,r7
   06B8 04                 3741 	inc	a
   06B9 F0                 3742 	movx	@dptr,a
                           3743 ;	..\COMMON\easyax5043.c:556: AX5043_FIFODATA = flags;
   06BA 90 40 29           3744 	mov	dptr,#_AX5043_FIFODATA
   06BD EE                 3745 	mov	a,r6
   06BE F0                 3746 	movx	@dptr,a
                           3747 ;	..\COMMON\easyax5043.c:557: ax5043_writefifo(&axradio_txbuffer[axradio_txbuffer_cnt], cnt);
   06BF 90s00r03           3748 	mov	dptr,#_axradio_txbuffer_cnt
   06C2 E0                 3749 	movx	a,@dptr
   06C3 FC                 3750 	mov	r4,a
   06C4 A3                 3751 	inc	dptr
   06C5 E0                 3752 	movx	a,@dptr
   06C6 FD                 3753 	mov	r5,a
   06C7 EC                 3754 	mov	a,r4
   06C8 24r26              3755 	add	a,#_axradio_txbuffer
   06CA FC                 3756 	mov	r4,a
   06CB ED                 3757 	mov	a,r5
   06CC 34s00              3758 	addc	a,#(_axradio_txbuffer >> 8)
   06CE FD                 3759 	mov	r5,a
   06CF 7B 00              3760 	mov	r3,#0x00
   06D1 C0 07              3761 	push	ar7
   06D3 C0 06              3762 	push	ar6
   06D5 C0 07              3763 	push	ar7
   06D7 8C 82              3764 	mov	dpl,r4
   06D9 8D 83              3765 	mov	dph,r5
   06DB 8B F0              3766 	mov	b,r3
   06DD 12s00r00           3767 	lcall	_ax5043_writefifo
   06E0 15 81              3768 	dec	sp
   06E2 D0 06              3769 	pop	ar6
   06E4 D0 07              3770 	pop	ar7
                           3771 ;	..\COMMON\easyax5043.c:558: axradio_txbuffer_cnt += cnt;
   06E6 7D 00              3772 	mov	r5,#0x00
   06E8 90s00r03           3773 	mov	dptr,#_axradio_txbuffer_cnt
   06EB E0                 3774 	movx	a,@dptr
   06EC FB                 3775 	mov	r3,a
   06ED A3                 3776 	inc	dptr
   06EE E0                 3777 	movx	a,@dptr
   06EF FC                 3778 	mov	r4,a
   06F0 90s00r03           3779 	mov	dptr,#_axradio_txbuffer_cnt
   06F3 EF                 3780 	mov	a,r7
   06F4 2B                 3781 	add	a,r3
   06F5 F0                 3782 	movx	@dptr,a
   06F6 ED                 3783 	mov	a,r5
   06F7 3C                 3784 	addc	a,r4
   06F8 A3                 3785 	inc	dptr
   06F9 F0                 3786 	movx	@dptr,a
                           3787 ;	..\COMMON\easyax5043.c:559: if (flags & 0x02)
   06FA EE                 3788 	mov	a,r6
   06FB 20 E1 03           3789 	jb	acc.1,00269$
   06FE 02s03rDE           3790 	ljmp	00157$
   0701                    3791 00269$:
                           3792 ;	..\COMMON\easyax5043.c:560: goto pktend;
                           3793 ;	..\COMMON\easyax5043.c:564: default:
   0701 80 01              3794 	sjmp	00150$
   0703                    3795 00148$:
                           3796 ;	..\COMMON\easyax5043.c:565: return;
                           3797 ;	..\COMMON\easyax5043.c:568: pktend:
   0703 22                 3798 	ret
   0704                    3799 00150$:
                           3800 ;	..\COMMON\easyax5043.c:569: axradio_trxstate = trxstate_tx_waitdone;
   0704 75*01 0D           3801 	mov	_axradio_trxstate,#0x0D
                           3802 ;	..\COMMON\easyax5043.c:570: AX5043_RADIOEVENTMASK0 = 0x01; // enable REVRDONE event
   0707 90 40 09           3803 	mov	dptr,#_AX5043_RADIOEVENTMASK0
   070A 74 01              3804 	mov	a,#0x01
   070C F0                 3805 	movx	@dptr,a
                           3806 ;	..\COMMON\easyax5043.c:571: AX5043_IRQMASK0 = 0x40; // enable radio controller irq
   070D 90 40 07           3807 	mov	dptr,#_AX5043_IRQMASK0
   0710 74 40              3808 	mov	a,#0x40
   0712 F0                 3809 	movx	@dptr,a
                           3810 ;	..\COMMON\easyax5043.c:572: fifocommit:
   0713                    3811 00151$:
                           3812 ;	..\COMMON\easyax5043.c:573: AX5043_FIFOSTAT = 4; // commit
   0713 90 40 28           3813 	mov	dptr,#_AX5043_FIFOSTAT
   0716 74 04              3814 	mov	a,#0x04
   0718 F0                 3815 	movx	@dptr,a
   0719 22                 3816 	ret
                           3817 ;------------------------------------------------------------
                           3818 ;Allocation info for local variables in function 'axradio_isr'
                           3819 ;------------------------------------------------------------
                           3820 ;evt                       Allocated to registers r7 
                           3821 ;------------------------------------------------------------
                           3822 ;	..\COMMON\easyax5043.c:577: void axradio_isr(void) __interrupt INT_RADIO
                           3823 ;	-----------------------------------------
                           3824 ;	 function axradio_isr
                           3825 ;	-----------------------------------------
   071A                    3826 _axradio_isr:
   071A C0*00              3827 	push	bits
   071C C0 E0              3828 	push	acc
   071E C0 F0              3829 	push	b
   0720 C0 82              3830 	push	dpl
   0722 C0 83              3831 	push	dph
   0724 C0 07              3832 	push	(0+7)
   0726 C0 06              3833 	push	(0+6)
   0728 C0 05              3834 	push	(0+5)
   072A C0 04              3835 	push	(0+4)
   072C C0 03              3836 	push	(0+3)
   072E C0 02              3837 	push	(0+2)
   0730 C0 01              3838 	push	(0+1)
   0732 C0 00              3839 	push	(0+0)
   0734 C0 D0              3840 	push	psw
   0736 75 D0 00           3841 	mov	psw,#0x00
                           3842 ;	..\COMMON\easyax5043.c:587: switch (axradio_trxstate) {
   0739 E5*01              3843 	mov	a,_axradio_trxstate
   073B FF                 3844 	mov	r7,a
   073C 24 EF              3845 	add	a,#0xff - 0x10
   073E 50 03              3846 	jnc	00222$
   0740 02s07r75           3847 	ljmp	00101$
   0743                    3848 00222$:
   0743 EF                 3849 	mov	a,r7
   0744 F5 F0              3850 	mov	b,a
   0746 24 0A              3851 	add	a,#(00223$-3-.)
   0748 83                 3852 	movc	a,@a+pc
   0749 C0 E0              3853 	push	acc
   074B E5 F0              3854 	mov	a,b
   074D 24 14              3855 	add	a,#(00224$-3-.)
   074F 83                 3856 	movc	a,@a+pc
   0750 C0 E0              3857 	push	acc
   0752 22                 3858 	ret
   0753                    3859 00223$:
   0753r75                 3860 	.db	00101$
   0754rD1                 3861 	.db	00162$
   0755r97                 3862 	.db	00158$
   0756r81                 3863 	.db	00102$
   0757r75                 3864 	.db	00101$
   0758r8C                 3865 	.db	00103$
   0759r75                 3866 	.db	00101$
   075Ar97                 3867 	.db	00104$
   075Br75                 3868 	.db	00101$
   075CrA2                 3869 	.db	00105$
   075Dr33                 3870 	.db	00114$
   075Er33                 3871 	.db	00115$
   075Fr33                 3872 	.db	00116$
   0760r39                 3873 	.db	00117$
   0761r6E                 3874 	.db	00144$
   0762rB3                 3875 	.db	00145$
   0763rDA                 3876 	.db	00148$
   0764                    3877 00224$:
   0764s07                 3878 	.db	00101$>>8
   0765s0A                 3879 	.db	00162$>>8
   0766s0A                 3880 	.db	00158$>>8
   0767s07                 3881 	.db	00102$>>8
   0768s07                 3882 	.db	00101$>>8
   0769s07                 3883 	.db	00103$>>8
   076As07                 3884 	.db	00101$>>8
   076Bs07                 3885 	.db	00104$>>8
   076Cs07                 3886 	.db	00101$>>8
   076Ds07                 3887 	.db	00105$>>8
   076Es08                 3888 	.db	00114$>>8
   076Fs08                 3889 	.db	00115$>>8
   0770s08                 3890 	.db	00116$>>8
   0771s08                 3891 	.db	00117$>>8
   0772s09                 3892 	.db	00144$>>8
   0773s09                 3893 	.db	00145$>>8
   0774s09                 3894 	.db	00148$>>8
                           3895 ;	..\COMMON\easyax5043.c:588: default:
   0775                    3896 00101$:
                           3897 ;	..\COMMON\easyax5043.c:589: AX5043_IRQMASK1 = 0x00;
   0775 90 40 06           3898 	mov	dptr,#_AX5043_IRQMASK1
                           3899 ;	..\COMMON\easyax5043.c:590: AX5043_IRQMASK0 = 0x00;
   0778 E4                 3900 	clr	a
   0779 F0                 3901 	movx	@dptr,a
   077A 90 40 07           3902 	mov	dptr,#_AX5043_IRQMASK0
   077D F0                 3903 	movx	@dptr,a
                           3904 ;	..\COMMON\easyax5043.c:591: break;
   077E 02s0ArD4           3905 	ljmp	00164$
                           3906 ;	..\COMMON\easyax5043.c:593: case trxstate_wait_xtal:
   0781                    3907 00102$:
                           3908 ;	..\COMMON\easyax5043.c:594: AX5043_IRQMASK1 = 0x00; // otherwise crystal ready will fire all over again
   0781 90 40 06           3909 	mov	dptr,#_AX5043_IRQMASK1
   0784 E4                 3910 	clr	a
   0785 F0                 3911 	movx	@dptr,a
                           3912 ;	..\COMMON\easyax5043.c:595: axradio_trxstate = trxstate_xtal_ready;
   0786 75*01 04           3913 	mov	_axradio_trxstate,#0x04
                           3914 ;	..\COMMON\easyax5043.c:596: break;
   0789 02s0ArD4           3915 	ljmp	00164$
                           3916 ;	..\COMMON\easyax5043.c:598: case trxstate_pll_ranging:
   078C                    3917 00103$:
                           3918 ;	..\COMMON\easyax5043.c:599: AX5043_IRQMASK1 = 0x00; // otherwise autoranging done will fire all over again
   078C 90 40 06           3919 	mov	dptr,#_AX5043_IRQMASK1
   078F E4                 3920 	clr	a
   0790 F0                 3921 	movx	@dptr,a
                           3922 ;	..\COMMON\easyax5043.c:600: axradio_trxstate = trxstate_pll_ranging_done;
   0791 75*01 06           3923 	mov	_axradio_trxstate,#0x06
                           3924 ;	..\COMMON\easyax5043.c:601: break;
   0794 02s0ArD4           3925 	ljmp	00164$
                           3926 ;	..\COMMON\easyax5043.c:603: case trxstate_pll_settling:
   0797                    3927 00104$:
                           3928 ;	..\COMMON\easyax5043.c:604: AX5043_RADIOEVENTMASK0 = 0x00;
   0797 90 40 09           3929 	mov	dptr,#_AX5043_RADIOEVENTMASK0
   079A E4                 3930 	clr	a
   079B F0                 3931 	movx	@dptr,a
                           3932 ;	..\COMMON\easyax5043.c:605: axradio_trxstate = trxstate_pll_settled;
   079C 75*01 08           3933 	mov	_axradio_trxstate,#0x08
                           3934 ;	..\COMMON\easyax5043.c:606: break;
   079F 02s0ArD4           3935 	ljmp	00164$
                           3936 ;	..\COMMON\easyax5043.c:608: case trxstate_tx_xtalwait:
   07A2                    3937 00105$:
                           3938 ;	..\COMMON\easyax5043.c:609: AX5043_RADIOEVENTREQ0; // make sure REVRDONE bit is cleared, so it is a reliable indicator that the packet is out
   07A2 90 40 0F           3939 	mov	dptr,#_AX5043_RADIOEVENTREQ0
   07A5 E0                 3940 	movx	a,@dptr
                           3941 ;	..\COMMON\easyax5043.c:610: AX5043_FIFOSTAT = 3; // clear FIFO data & flags (prevent transmitting anything left over in the FIFO, this has no effect if the FIFO is not powerered, in this case it is reset any way)
   07A6 90 40 28           3942 	mov	dptr,#_AX5043_FIFOSTAT
   07A9 74 03              3943 	mov	a,#0x03
   07AB F0                 3944 	movx	@dptr,a
                           3945 ;	..\COMMON\easyax5043.c:611: AX5043_IRQMASK1 = 0x00;
   07AC 90 40 06           3946 	mov	dptr,#_AX5043_IRQMASK1
   07AF E4                 3947 	clr	a
   07B0 F0                 3948 	movx	@dptr,a
                           3949 ;	..\COMMON\easyax5043.c:612: AX5043_IRQMASK0 = 0x08; // enable fifo free threshold
   07B1 90 40 07           3950 	mov	dptr,#_AX5043_IRQMASK0
   07B4 74 08              3951 	mov	a,#0x08
   07B6 F0                 3952 	movx	@dptr,a
                           3953 ;	..\COMMON\easyax5043.c:613: axradio_trxstate = trxstate_tx_longpreamble;
   07B7 75*01 0A           3954 	mov	_axradio_trxstate,#0x0A
                           3955 ;	..\COMMON\easyax5043.c:615: if ((AX5043_MODULATION & 0x0F) == 9) { // 4-FSK
   07BA 90 40 10           3956 	mov	dptr,#_AX5043_MODULATION
   07BD E0                 3957 	movx	a,@dptr
   07BE FF                 3958 	mov	r7,a
   07BF 53 07 0F           3959 	anl	ar7,#0x0F
   07C2 BF 09 0F           3960 	cjne	r7,#0x09,00107$
                           3961 ;	..\COMMON\easyax5043.c:616: AX5043_FIFODATA = AX5043_FIFOCMD_DATA | (7 << 5);
                           3962 ;	..\COMMON\easyax5043.c:617: AX5043_FIFODATA = 2;  // length (including flags)
                           3963 ;	..\COMMON\easyax5043.c:618: AX5043_FIFODATA = 0x01;  // flag PKTSTART -> dibit sync
                           3964 ;	..\COMMON\easyax5043.c:619: AX5043_FIFODATA = 0x11; // dummy byte for forcing dibit sync
   07C5 90 40 29           3965 	mov	dptr,#_AX5043_FIFODATA
   07C8 74 E1              3966 	mov	a,#0xE1
   07CA F0                 3967 	movx	@dptr,a
   07CB 74 02              3968 	mov	a,#0x02
   07CD F0                 3969 	movx	@dptr,a
   07CE 74 01              3970 	mov	a,#0x01
   07D0 F0                 3971 	movx	@dptr,a
   07D1 74 11              3972 	mov	a,#0x11
   07D3 F0                 3973 	movx	@dptr,a
   07D4                    3974 00107$:
                           3975 ;	..\COMMON\easyax5043.c:626: transmit_isr();
   07D4 12s03rDE           3976 	lcall	_transmit_isr
                           3977 ;	..\COMMON\easyax5043.c:627: AX5043_PWRMODE = AX5043_PWRSTATE_FULL_TX;
   07D7 90 40 02           3978 	mov	dptr,#_AX5043_PWRMODE
   07DA 74 0D              3979 	mov	a,#0x0D
   07DC F0                 3980 	movx	@dptr,a
                           3981 ;	..\COMMON\easyax5043.c:628: update_timeanchor();
   07DD 12s00r00           3982 	lcall	_update_timeanchor
                           3983 ;	..\COMMON\easyax5043.c:629: wtimer_remove_callback(&axradio_cb_transmitstart.cb);
   07E0 90s02r67           3984 	mov	dptr,#_axradio_cb_transmitstart
   07E3 12s00r00           3985 	lcall	_wtimer_remove_callback
                           3986 ;	..\COMMON\easyax5043.c:630: switch (axradio_mode) {
   07E6 AF*00              3987 	mov	r7,_axradio_mode
   07E8 BF 12 02           3988 	cjne	r7,#0x12,00227$
   07EB 80 03              3989 	sjmp	00109$
   07ED                    3990 00227$:
   07ED BF 13 19           3991 	cjne	r7,#0x13,00112$
                           3992 ;	..\COMMON\easyax5043.c:632: case AXRADIO_MODE_WOR_ACK_TRANSMIT:
   07F0                    3993 00109$:
                           3994 ;	..\COMMON\easyax5043.c:633: if (axradio_ack_count != axradio_framing_ack_retransmissions) {
   07F0 90s00r0A           3995 	mov	dptr,#_axradio_ack_count
   07F3 E0                 3996 	movx	a,@dptr
   07F4 FF                 3997 	mov	r7,a
   07F5 90s00r00           3998 	mov	dptr,#_axradio_framing_ack_retransmissions
   07F8 E4                 3999 	clr	a
   07F9 93                 4000 	movc	a,@a+dptr
   07FA FE                 4001 	mov	r6,a
   07FB EF                 4002 	mov	a,r7
   07FC B5 06 02           4003 	cjne	a,ar6,00230$
   07FF 80 08              4004 	sjmp	00112$
   0801                    4005 00230$:
                           4006 ;	..\COMMON\easyax5043.c:634: axradio_cb_transmitstart.st.error = AXRADIO_ERR_RETRANSMISSION;
   0801 90s02r6C           4007 	mov	dptr,#(_axradio_cb_transmitstart + 0x0005)
   0804 74 08              4008 	mov	a,#0x08
   0806 F0                 4009 	movx	@dptr,a
                           4010 ;	..\COMMON\easyax5043.c:635: break;
                           4011 ;	..\COMMON\easyax5043.c:638: default:
   0807 80 05              4012 	sjmp	00113$
   0809                    4013 00112$:
                           4014 ;	..\COMMON\easyax5043.c:639: axradio_cb_transmitstart.st.error = AXRADIO_ERR_NOERROR;
   0809 90s02r6C           4015 	mov	dptr,#(_axradio_cb_transmitstart + 0x0005)
   080C E4                 4016 	clr	a
   080D F0                 4017 	movx	@dptr,a
                           4018 ;	..\COMMON\easyax5043.c:641: }
   080E                    4019 00113$:
                           4020 ;	..\COMMON\easyax5043.c:642: axradio_cb_transmitstart.st.time.t = axradio_timeanchor.radiotimer;
   080E 90s00r16           4021 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   0811 E0                 4022 	movx	a,@dptr
   0812 FC                 4023 	mov	r4,a
   0813 A3                 4024 	inc	dptr
   0814 E0                 4025 	movx	a,@dptr
   0815 FD                 4026 	mov	r5,a
   0816 A3                 4027 	inc	dptr
   0817 E0                 4028 	movx	a,@dptr
   0818 FE                 4029 	mov	r6,a
   0819 A3                 4030 	inc	dptr
   081A E0                 4031 	movx	a,@dptr
   081B FF                 4032 	mov	r7,a
   081C 90s02r6D           4033 	mov	dptr,#(_axradio_cb_transmitstart + 0x0006)
   081F EC                 4034 	mov	a,r4
   0820 F0                 4035 	movx	@dptr,a
   0821 A3                 4036 	inc	dptr
   0822 ED                 4037 	mov	a,r5
   0823 F0                 4038 	movx	@dptr,a
   0824 A3                 4039 	inc	dptr
   0825 EE                 4040 	mov	a,r6
   0826 F0                 4041 	movx	@dptr,a
   0827 A3                 4042 	inc	dptr
   0828 EF                 4043 	mov	a,r7
   0829 F0                 4044 	movx	@dptr,a
                           4045 ;	..\COMMON\easyax5043.c:643: wtimer_add_callback(&axradio_cb_transmitstart.cb);
   082A 90s02r67           4046 	mov	dptr,#_axradio_cb_transmitstart
   082D 12s00r00           4047 	lcall	_wtimer_add_callback
                           4048 ;	..\COMMON\easyax5043.c:644: break;
   0830 02s0ArD4           4049 	ljmp	00164$
                           4050 ;	..\COMMON\easyax5043.c:646: case trxstate_tx_longpreamble:
   0833                    4051 00114$:
                           4052 ;	..\COMMON\easyax5043.c:647: case trxstate_tx_shortpreamble:
   0833                    4053 00115$:
                           4054 ;	..\COMMON\easyax5043.c:648: case trxstate_tx_packet:
   0833                    4055 00116$:
                           4056 ;	..\COMMON\easyax5043.c:649: transmit_isr();
   0833 12s03rDE           4057 	lcall	_transmit_isr
                           4058 ;	..\COMMON\easyax5043.c:650: break;
   0836 02s0ArD4           4059 	ljmp	00164$
                           4060 ;	..\COMMON\easyax5043.c:652: case trxstate_tx_waitdone:
   0839                    4061 00117$:
                           4062 ;	..\COMMON\easyax5043.c:653: AX5043_RADIOEVENTREQ0;
   0839 90 40 0F           4063 	mov	dptr,#_AX5043_RADIOEVENTREQ0
   083C E0                 4064 	movx	a,@dptr
                           4065 ;	..\COMMON\easyax5043.c:654: if (AX5043_RADIOSTATE != 0)
   083D 90 40 1C           4066 	mov	dptr,#_AX5043_RADIOSTATE
   0840 E0                 4067 	movx	a,@dptr
   0841 FF                 4068 	mov	r7,a
   0842 60 03              4069 	jz	00231$
   0844 02s0ArD4           4070 	ljmp	00164$
   0847                    4071 00231$:
                           4072 ;	..\COMMON\easyax5043.c:656: AX5043_RADIOEVENTMASK0 = 0x00;
   0847 90 40 09           4073 	mov	dptr,#_AX5043_RADIOEVENTMASK0
   084A E4                 4074 	clr	a
   084B F0                 4075 	movx	@dptr,a
                           4076 ;	..\COMMON\easyax5043.c:657: switch (axradio_mode) {
   084C AF*00              4077 	mov	r7,_axradio_mode
   084E BF 12 02           4078 	cjne	r7,#0x12,00232$
   0851 80 6A              4079 	sjmp	00131$
   0853                    4080 00232$:
   0853 BF 13 02           4081 	cjne	r7,#0x13,00233$
   0856 80 65              4082 	sjmp	00131$
   0858                    4083 00233$:
   0858 BF 18 02           4084 	cjne	r7,#0x18,00234$
   085B 80 1D              4085 	sjmp	00120$
   085D                    4086 00234$:
   085D BF 19 02           4087 	cjne	r7,#0x19,00235$
   0860 80 36              4088 	sjmp	00125$
   0862                    4089 00235$:
   0862 BF 1A 02           4090 	cjne	r7,#0x1A,00236$
   0865 80 1C              4091 	sjmp	00121$
   0867                    4092 00236$:
   0867 BF 1B 02           4093 	cjne	r7,#0x1B,00237$
   086A 80 3C              4094 	sjmp	00128$
   086C                    4095 00237$:
   086C BF 20 03           4096 	cjne	r7,#0x20,00238$
   086F 02s08rF1           4097 	ljmp	00132$
   0872                    4098 00238$:
   0872 BF 21 02           4099 	cjne	r7,#0x21,00239$
   0875 80 39              4100 	sjmp	00129$
   0877                    4101 00239$:
   0877 02s08rFE           4102 	ljmp	00133$
                           4103 ;	..\COMMON\easyax5043.c:658: case AXRADIO_MODE_ASYNC_RECEIVE:
   087A                    4104 00120$:
                           4105 ;	..\COMMON\easyax5043.c:659: ax5043_init_registers_rx();
   087A 12s00rCB           4106 	lcall	_ax5043_init_registers_rx
                           4107 ;	..\COMMON\easyax5043.c:660: ax5043_receiver_on_continuous();
   087D 12s0ArF1           4108 	lcall	_ax5043_receiver_on_continuous
                           4109 ;	..\COMMON\easyax5043.c:661: break;
   0880 02s09r01           4110 	ljmp	00134$
                           4111 ;	..\COMMON\easyax5043.c:663: case AXRADIO_MODE_ACK_RECEIVE:
   0883                    4112 00121$:
                           4113 ;	..\COMMON\easyax5043.c:664: if (axradio_cb_receive.st.error == AXRADIO_ERR_PACKETDONE) {
   0883 90s02r33           4114 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   0886 E0                 4115 	movx	a,@dptr
   0887 FF                 4116 	mov	r7,a
   0888 BF F0 08           4117 	cjne	r7,#0xF0,00124$
                           4118 ;	..\COMMON\easyax5043.c:665: ax5043_init_registers_rx();
   088B 12s00rCB           4119 	lcall	_ax5043_init_registers_rx
                           4120 ;	..\COMMON\easyax5043.c:666: ax5043_receiver_on_continuous();
   088E 12s0ArF1           4121 	lcall	_ax5043_receiver_on_continuous
                           4122 ;	..\COMMON\easyax5043.c:667: break;
                           4123 ;	..\COMMON\easyax5043.c:669: offxtal:
   0891 80 6E              4124 	sjmp	00134$
   0893                    4125 00124$:
                           4126 ;	..\COMMON\easyax5043.c:670: ax5043_off_xtal();
   0893 12s0Cr3F           4127 	lcall	_ax5043_off_xtal
                           4128 ;	..\COMMON\easyax5043.c:671: break;
                           4129 ;	..\COMMON\easyax5043.c:673: case AXRADIO_MODE_WOR_RECEIVE:
   0896 80 69              4130 	sjmp	00134$
   0898                    4131 00125$:
                           4132 ;	..\COMMON\easyax5043.c:674: if (axradio_cb_receive.st.error == AXRADIO_ERR_PACKETDONE) {
   0898 90s02r33           4133 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   089B E0                 4134 	movx	a,@dptr
   089C FF                 4135 	mov	r7,a
   089D BF F0 F3           4136 	cjne	r7,#0xF0,00124$
                           4137 ;	..\COMMON\easyax5043.c:675: ax5043_init_registers_rx();
   08A0 12s00rCB           4138 	lcall	_ax5043_init_registers_rx
                           4139 ;	..\COMMON\easyax5043.c:676: ax5043_receiver_on_wor();
   08A3 12s0Br8B           4140 	lcall	_ax5043_receiver_on_wor
                           4141 ;	..\COMMON\easyax5043.c:677: break;
                           4142 ;	..\COMMON\easyax5043.c:681: case AXRADIO_MODE_WOR_ACK_RECEIVE:
   08A6 80 59              4143 	sjmp	00134$
   08A8                    4144 00128$:
                           4145 ;	..\COMMON\easyax5043.c:682: ax5043_init_registers_rx();
   08A8 12s00rCB           4146 	lcall	_ax5043_init_registers_rx
                           4147 ;	..\COMMON\easyax5043.c:683: ax5043_receiver_on_wor();
   08AB 12s0Br8B           4148 	lcall	_ax5043_receiver_on_wor
                           4149 ;	..\COMMON\easyax5043.c:684: break;
                           4150 ;	..\COMMON\easyax5043.c:686: case AXRADIO_MODE_SYNC_ACK_MASTER:
   08AE 80 51              4151 	sjmp	00134$
   08B0                    4152 00129$:
                           4153 ;	..\COMMON\easyax5043.c:687: axradio_txbuffer_len = axradio_framing_minpayloadlen;
   08B0 90s00r00           4154 	mov	dptr,#_axradio_framing_minpayloadlen
   08B3 E4                 4155 	clr	a
   08B4 93                 4156 	movc	a,@a+dptr
   08B5 FF                 4157 	mov	r7,a
   08B6 90s00r01           4158 	mov	dptr,#_axradio_txbuffer_len
   08B9 F0                 4159 	movx	@dptr,a
   08BA A3                 4160 	inc	dptr
   08BB E4                 4161 	clr	a
   08BC F0                 4162 	movx	@dptr,a
                           4163 ;	..\COMMON\easyax5043.c:691: case AXRADIO_MODE_WOR_ACK_TRANSMIT:
   08BD                    4164 00131$:
                           4165 ;	..\COMMON\easyax5043.c:692: ax5043_init_registers_rx();
   08BD 12s00rCB           4166 	lcall	_ax5043_init_registers_rx
                           4167 ;	..\COMMON\easyax5043.c:693: ax5043_receiver_on_continuous();
   08C0 12s0ArF1           4168 	lcall	_ax5043_receiver_on_continuous
                           4169 ;	..\COMMON\easyax5043.c:694: wtimer_remove(&axradio_timer);
   08C3 90s02r85           4170 	mov	dptr,#_axradio_timer
   08C6 12s00r00           4171 	lcall	_wtimer_remove
                           4172 ;	..\COMMON\easyax5043.c:695: axradio_timer.time = axradio_framing_ack_timeout;
   08C9 90s00r00           4173 	mov	dptr,#_axradio_framing_ack_timeout
   08CC E4                 4174 	clr	a
   08CD 93                 4175 	movc	a,@a+dptr
   08CE FC                 4176 	mov	r4,a
   08CF 74 01              4177 	mov	a,#0x01
   08D1 93                 4178 	movc	a,@a+dptr
   08D2 FD                 4179 	mov	r5,a
   08D3 74 02              4180 	mov	a,#0x02
   08D5 93                 4181 	movc	a,@a+dptr
   08D6 FE                 4182 	mov	r6,a
   08D7 74 03              4183 	mov	a,#0x03
   08D9 93                 4184 	movc	a,@a+dptr
   08DA FF                 4185 	mov	r7,a
   08DB 90s02r89           4186 	mov	dptr,#(_axradio_timer + 0x0004)
   08DE EC                 4187 	mov	a,r4
   08DF F0                 4188 	movx	@dptr,a
   08E0 A3                 4189 	inc	dptr
   08E1 ED                 4190 	mov	a,r5
   08E2 F0                 4191 	movx	@dptr,a
   08E3 A3                 4192 	inc	dptr
   08E4 EE                 4193 	mov	a,r6
   08E5 F0                 4194 	movx	@dptr,a
   08E6 A3                 4195 	inc	dptr
   08E7 EF                 4196 	mov	a,r7
   08E8 F0                 4197 	movx	@dptr,a
                           4198 ;	..\COMMON\easyax5043.c:696: wtimer0_addrelative(&axradio_timer);
   08E9 90s02r85           4199 	mov	dptr,#_axradio_timer
   08EC 12s00r00           4200 	lcall	_wtimer0_addrelative
                           4201 ;	..\COMMON\easyax5043.c:697: break;
                           4202 ;	..\COMMON\easyax5043.c:699: case AXRADIO_MODE_SYNC_MASTER:
   08EF 80 10              4203 	sjmp	00134$
   08F1                    4204 00132$:
                           4205 ;	..\COMMON\easyax5043.c:700: axradio_txbuffer_len = axradio_framing_minpayloadlen;
   08F1 90s00r00           4206 	mov	dptr,#_axradio_framing_minpayloadlen
   08F4 E4                 4207 	clr	a
   08F5 93                 4208 	movc	a,@a+dptr
   08F6 FF                 4209 	mov	r7,a
   08F7 90s00r01           4210 	mov	dptr,#_axradio_txbuffer_len
   08FA F0                 4211 	movx	@dptr,a
   08FB A3                 4212 	inc	dptr
   08FC E4                 4213 	clr	a
   08FD F0                 4214 	movx	@dptr,a
                           4215 ;	..\COMMON\easyax5043.c:703: default:
   08FE                    4216 00133$:
                           4217 ;	..\COMMON\easyax5043.c:704: ax5043_off();
   08FE 12s0Cr36           4218 	lcall	_ax5043_off
                           4219 ;	..\COMMON\easyax5043.c:706: }
   0901                    4220 00134$:
                           4221 ;	..\COMMON\easyax5043.c:707: if (axradio_mode != AXRADIO_MODE_SYNC_MASTER &&
   0901 74 20              4222 	mov	a,#0x20
   0903 B5*00 02           4223 	cjne	a,_axradio_mode,00244$
   0906 80 1A              4224 	sjmp	00136$
   0908                    4225 00244$:
                           4226 ;	..\COMMON\easyax5043.c:708: axradio_mode != AXRADIO_MODE_SYNC_ACK_MASTER &&
   0908 74 21              4227 	mov	a,#0x21
   090A B5*00 02           4228 	cjne	a,_axradio_mode,00245$
   090D 80 13              4229 	sjmp	00136$
   090F                    4230 00245$:
                           4231 ;	..\COMMON\easyax5043.c:709: axradio_mode != AXRADIO_MODE_SYNC_SLAVE &&
   090F 74 22              4232 	mov	a,#0x22
   0911 B5*00 02           4233 	cjne	a,_axradio_mode,00246$
   0914 80 0C              4234 	sjmp	00136$
   0916                    4235 00246$:
                           4236 ;	..\COMMON\easyax5043.c:710: axradio_mode != AXRADIO_MODE_SYNC_ACK_SLAVE)
   0916 74 23              4237 	mov	a,#0x23
   0918 B5*00 02           4238 	cjne	a,_axradio_mode,00247$
   091B 80 05              4239 	sjmp	00136$
   091D                    4240 00247$:
                           4241 ;	..\COMMON\easyax5043.c:711: axradio_syncstate = syncstate_off;
   091D 90s00r00           4242 	mov	dptr,#_axradio_syncstate
   0920 E4                 4243 	clr	a
   0921 F0                 4244 	movx	@dptr,a
   0922                    4245 00136$:
                           4246 ;	..\COMMON\easyax5043.c:712: update_timeanchor();
   0922 12s00r00           4247 	lcall	_update_timeanchor
                           4248 ;	..\COMMON\easyax5043.c:713: wtimer_remove_callback(&axradio_cb_transmitend.cb);
   0925 90s02r71           4249 	mov	dptr,#_axradio_cb_transmitend
   0928 12s00r00           4250 	lcall	_wtimer_remove_callback
                           4251 ;	..\COMMON\easyax5043.c:714: axradio_cb_transmitend.st.error = AXRADIO_ERR_NOERROR;
   092B 90s02r76           4252 	mov	dptr,#(_axradio_cb_transmitend + 0x0005)
   092E E4                 4253 	clr	a
   092F F0                 4254 	movx	@dptr,a
                           4255 ;	..\COMMON\easyax5043.c:715: if (axradio_mode == AXRADIO_MODE_ACK_TRANSMIT ||
   0930 74 12              4256 	mov	a,#0x12
   0932 B5*00 02           4257 	cjne	a,_axradio_mode,00248$
   0935 80 0C              4258 	sjmp	00140$
   0937                    4259 00248$:
                           4260 ;	..\COMMON\easyax5043.c:716: axradio_mode == AXRADIO_MODE_WOR_ACK_TRANSMIT ||
   0937 74 13              4261 	mov	a,#0x13
   0939 B5*00 02           4262 	cjne	a,_axradio_mode,00249$
   093C 80 05              4263 	sjmp	00140$
   093E                    4264 00249$:
                           4265 ;	..\COMMON\easyax5043.c:717: axradio_mode == AXRADIO_MODE_SYNC_ACK_MASTER)
   093E 74 21              4266 	mov	a,#0x21
   0940 B5*00 06           4267 	cjne	a,_axradio_mode,00141$
   0943                    4268 00140$:
                           4269 ;	..\COMMON\easyax5043.c:718: axradio_cb_transmitend.st.error = AXRADIO_ERR_BUSY;
   0943 90s02r76           4270 	mov	dptr,#(_axradio_cb_transmitend + 0x0005)
   0946 74 02              4271 	mov	a,#0x02
   0948 F0                 4272 	movx	@dptr,a
   0949                    4273 00141$:
                           4274 ;	..\COMMON\easyax5043.c:719: axradio_cb_transmitend.st.time.t = axradio_timeanchor.radiotimer;
   0949 90s00r16           4275 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   094C E0                 4276 	movx	a,@dptr
   094D FC                 4277 	mov	r4,a
   094E A3                 4278 	inc	dptr
   094F E0                 4279 	movx	a,@dptr
   0950 FD                 4280 	mov	r5,a
   0951 A3                 4281 	inc	dptr
   0952 E0                 4282 	movx	a,@dptr
   0953 FE                 4283 	mov	r6,a
   0954 A3                 4284 	inc	dptr
   0955 E0                 4285 	movx	a,@dptr
   0956 FF                 4286 	mov	r7,a
   0957 90s02r77           4287 	mov	dptr,#(_axradio_cb_transmitend + 0x0006)
   095A EC                 4288 	mov	a,r4
   095B F0                 4289 	movx	@dptr,a
   095C A3                 4290 	inc	dptr
   095D ED                 4291 	mov	a,r5
   095E F0                 4292 	movx	@dptr,a
   095F A3                 4293 	inc	dptr
   0960 EE                 4294 	mov	a,r6
   0961 F0                 4295 	movx	@dptr,a
   0962 A3                 4296 	inc	dptr
   0963 EF                 4297 	mov	a,r7
   0964 F0                 4298 	movx	@dptr,a
                           4299 ;	..\COMMON\easyax5043.c:720: wtimer_add_callback(&axradio_cb_transmitend.cb);
   0965 90s02r71           4300 	mov	dptr,#_axradio_cb_transmitend
   0968 12s00r00           4301 	lcall	_wtimer_add_callback
                           4302 ;	..\COMMON\easyax5043.c:721: break;
   096B 02s0ArD4           4303 	ljmp	00164$
                           4304 ;	..\COMMON\easyax5043.c:724: case trxstate_txcw_xtalwait:
   096E                    4305 00144$:
                           4306 ;	..\COMMON\easyax5043.c:725: AX5043_IRQMASK1 = 0x00;
   096E 90 40 06           4307 	mov	dptr,#_AX5043_IRQMASK1
                           4308 ;	..\COMMON\easyax5043.c:726: AX5043_IRQMASK0 = 0x00;
   0971 E4                 4309 	clr	a
   0972 F0                 4310 	movx	@dptr,a
   0973 90 40 07           4311 	mov	dptr,#_AX5043_IRQMASK0
   0976 F0                 4312 	movx	@dptr,a
                           4313 ;	..\COMMON\easyax5043.c:727: AX5043_PWRMODE = AX5043_PWRSTATE_FULL_TX;
   0977 90 40 02           4314 	mov	dptr,#_AX5043_PWRMODE
   097A 74 0D              4315 	mov	a,#0x0D
   097C F0                 4316 	movx	@dptr,a
                           4317 ;	..\COMMON\easyax5043.c:728: axradio_trxstate = trxstate_off;
   097D 75*01 00           4318 	mov	_axradio_trxstate,#0x00
                           4319 ;	..\COMMON\easyax5043.c:729: update_timeanchor();
   0980 12s00r00           4320 	lcall	_update_timeanchor
                           4321 ;	..\COMMON\easyax5043.c:730: wtimer_remove_callback(&axradio_cb_transmitstart.cb);
   0983 90s02r67           4322 	mov	dptr,#_axradio_cb_transmitstart
   0986 12s00r00           4323 	lcall	_wtimer_remove_callback
                           4324 ;	..\COMMON\easyax5043.c:731: axradio_cb_transmitstart.st.error = AXRADIO_ERR_NOERROR;
   0989 90s02r6C           4325 	mov	dptr,#(_axradio_cb_transmitstart + 0x0005)
   098C E4                 4326 	clr	a
   098D F0                 4327 	movx	@dptr,a
                           4328 ;	..\COMMON\easyax5043.c:732: axradio_cb_transmitstart.st.time.t = axradio_timeanchor.radiotimer;
   098E 90s00r16           4329 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   0991 E0                 4330 	movx	a,@dptr
   0992 FC                 4331 	mov	r4,a
   0993 A3                 4332 	inc	dptr
   0994 E0                 4333 	movx	a,@dptr
   0995 FD                 4334 	mov	r5,a
   0996 A3                 4335 	inc	dptr
   0997 E0                 4336 	movx	a,@dptr
   0998 FE                 4337 	mov	r6,a
   0999 A3                 4338 	inc	dptr
   099A E0                 4339 	movx	a,@dptr
   099B FF                 4340 	mov	r7,a
   099C 90s02r6D           4341 	mov	dptr,#(_axradio_cb_transmitstart + 0x0006)
   099F EC                 4342 	mov	a,r4
   09A0 F0                 4343 	movx	@dptr,a
   09A1 A3                 4344 	inc	dptr
   09A2 ED                 4345 	mov	a,r5
   09A3 F0                 4346 	movx	@dptr,a
   09A4 A3                 4347 	inc	dptr
   09A5 EE                 4348 	mov	a,r6
   09A6 F0                 4349 	movx	@dptr,a
   09A7 A3                 4350 	inc	dptr
   09A8 EF                 4351 	mov	a,r7
   09A9 F0                 4352 	movx	@dptr,a
                           4353 ;	..\COMMON\easyax5043.c:733: wtimer_add_callback(&axradio_cb_transmitstart.cb);
   09AA 90s02r67           4354 	mov	dptr,#_axradio_cb_transmitstart
   09AD 12s00r00           4355 	lcall	_wtimer_add_callback
                           4356 ;	..\COMMON\easyax5043.c:734: break;
   09B0 02s0ArD4           4357 	ljmp	00164$
                           4358 ;	..\COMMON\easyax5043.c:736: case trxstate_txstream_xtalwait:
   09B3                    4359 00145$:
                           4360 ;	..\COMMON\easyax5043.c:737: if (AX5043_IRQREQUEST1 & 0x01) {
   09B3 90 40 0C           4361 	mov	dptr,#_AX5043_IRQREQUEST1
   09B6 E0                 4362 	movx	a,@dptr
   09B7 FF                 4363 	mov	r7,a
   09B8 20 E0 03           4364 	jb	acc.0,00252$
   09BB 02s0Ar50           4365 	ljmp	00155$
   09BE                    4366 00252$:
                           4367 ;	..\COMMON\easyax5043.c:738: AX5043_RADIOEVENTMASK0 = 0x03; // enable PLL settled and done event
   09BE 90 40 09           4368 	mov	dptr,#_AX5043_RADIOEVENTMASK0
   09C1 74 03              4369 	mov	a,#0x03
   09C3 F0                 4370 	movx	@dptr,a
                           4371 ;	..\COMMON\easyax5043.c:739: AX5043_IRQMASK1 = 0x00;
   09C4 90 40 06           4372 	mov	dptr,#_AX5043_IRQMASK1
   09C7 E4                 4373 	clr	a
   09C8 F0                 4374 	movx	@dptr,a
                           4375 ;	..\COMMON\easyax5043.c:740: AX5043_IRQMASK0 = 0x40; // enable radio controller irq
   09C9 90 40 07           4376 	mov	dptr,#_AX5043_IRQMASK0
   09CC 74 40              4377 	mov	a,#0x40
   09CE F0                 4378 	movx	@dptr,a
                           4379 ;	..\COMMON\easyax5043.c:741: AX5043_PWRMODE = AX5043_PWRSTATE_FULL_TX;
   09CF 90 40 02           4380 	mov	dptr,#_AX5043_PWRMODE
   09D2 74 0D              4381 	mov	a,#0x0D
   09D4 F0                 4382 	movx	@dptr,a
                           4383 ;	..\COMMON\easyax5043.c:742: axradio_trxstate = trxstate_txstream;
   09D5 75*01 10           4384 	mov	_axradio_trxstate,#0x10
                           4385 ;	..\COMMON\easyax5043.c:744: goto txstreamdatacb;
                           4386 ;	..\COMMON\easyax5043.c:746: case trxstate_txstream:
   09D8 80 76              4387 	sjmp	00155$
   09DA                    4388 00148$:
                           4389 ;	..\COMMON\easyax5043.c:748: uint8_t __autodata evt = AX5043_RADIOEVENTREQ0;
   09DA 90 40 0F           4390 	mov	dptr,#_AX5043_RADIOEVENTREQ0
   09DD E0                 4391 	movx	a,@dptr
                           4392 ;	..\COMMON\easyax5043.c:749: if (evt & 0x03)
   09DE FF                 4393 	mov	r7,a
   09DF 54 03              4394 	anl	a,#0x03
   09E1 60 07              4395 	jz	00150$
                           4396 ;	..\COMMON\easyax5043.c:750: update_timeanchor();
   09E3 C0 07              4397 	push	ar7
   09E5 12s00r00           4398 	lcall	_update_timeanchor
   09E8 D0 07              4399 	pop	ar7
   09EA                    4400 00150$:
                           4401 ;	..\COMMON\easyax5043.c:751: if (evt & 0x01) {
   09EA EF                 4402 	mov	a,r7
   09EB 30 E0 31           4403 	jnb	acc.0,00152$
                           4404 ;	..\COMMON\easyax5043.c:752: wtimer_remove_callback(&axradio_cb_transmitend.cb);
   09EE 90s02r71           4405 	mov	dptr,#_axradio_cb_transmitend
   09F1 C0 07              4406 	push	ar7
   09F3 12s00r00           4407 	lcall	_wtimer_remove_callback
                           4408 ;	..\COMMON\easyax5043.c:753: axradio_cb_transmitend.st.error = AXRADIO_ERR_NOERROR;
   09F6 90s02r76           4409 	mov	dptr,#(_axradio_cb_transmitend + 0x0005)
   09F9 E4                 4410 	clr	a
   09FA F0                 4411 	movx	@dptr,a
                           4412 ;	..\COMMON\easyax5043.c:754: axradio_cb_transmitend.st.time.t = axradio_timeanchor.radiotimer;
   09FB 90s00r16           4413 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   09FE E0                 4414 	movx	a,@dptr
   09FF FB                 4415 	mov	r3,a
   0A00 A3                 4416 	inc	dptr
   0A01 E0                 4417 	movx	a,@dptr
   0A02 FC                 4418 	mov	r4,a
   0A03 A3                 4419 	inc	dptr
   0A04 E0                 4420 	movx	a,@dptr
   0A05 FD                 4421 	mov	r5,a
   0A06 A3                 4422 	inc	dptr
   0A07 E0                 4423 	movx	a,@dptr
   0A08 FE                 4424 	mov	r6,a
   0A09 90s02r77           4425 	mov	dptr,#(_axradio_cb_transmitend + 0x0006)
   0A0C EB                 4426 	mov	a,r3
   0A0D F0                 4427 	movx	@dptr,a
   0A0E A3                 4428 	inc	dptr
   0A0F EC                 4429 	mov	a,r4
   0A10 F0                 4430 	movx	@dptr,a
   0A11 A3                 4431 	inc	dptr
   0A12 ED                 4432 	mov	a,r5
   0A13 F0                 4433 	movx	@dptr,a
   0A14 A3                 4434 	inc	dptr
   0A15 EE                 4435 	mov	a,r6
   0A16 F0                 4436 	movx	@dptr,a
                           4437 ;	..\COMMON\easyax5043.c:755: wtimer_add_callback(&axradio_cb_transmitend.cb);
   0A17 90s02r71           4438 	mov	dptr,#_axradio_cb_transmitend
   0A1A 12s00r00           4439 	lcall	_wtimer_add_callback
   0A1D D0 07              4440 	pop	ar7
   0A1F                    4441 00152$:
                           4442 ;	..\COMMON\easyax5043.c:757: if (evt & 0x02) {
   0A1F EF                 4443 	mov	a,r7
   0A20 30 E1 2D           4444 	jnb	acc.1,00155$
                           4445 ;	..\COMMON\easyax5043.c:758: wtimer_remove_callback(&axradio_cb_transmitstart.cb);
   0A23 90s02r67           4446 	mov	dptr,#_axradio_cb_transmitstart
   0A26 12s00r00           4447 	lcall	_wtimer_remove_callback
                           4448 ;	..\COMMON\easyax5043.c:759: axradio_cb_transmitstart.st.error = AXRADIO_ERR_NOERROR;
   0A29 90s02r6C           4449 	mov	dptr,#(_axradio_cb_transmitstart + 0x0005)
   0A2C E4                 4450 	clr	a
   0A2D F0                 4451 	movx	@dptr,a
                           4452 ;	..\COMMON\easyax5043.c:760: axradio_cb_transmitstart.st.time.t = axradio_timeanchor.radiotimer;
   0A2E 90s00r16           4453 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   0A31 E0                 4454 	movx	a,@dptr
   0A32 FC                 4455 	mov	r4,a
   0A33 A3                 4456 	inc	dptr
   0A34 E0                 4457 	movx	a,@dptr
   0A35 FD                 4458 	mov	r5,a
   0A36 A3                 4459 	inc	dptr
   0A37 E0                 4460 	movx	a,@dptr
   0A38 FE                 4461 	mov	r6,a
   0A39 A3                 4462 	inc	dptr
   0A3A E0                 4463 	movx	a,@dptr
   0A3B FF                 4464 	mov	r7,a
   0A3C 90s02r6D           4465 	mov	dptr,#(_axradio_cb_transmitstart + 0x0006)
   0A3F EC                 4466 	mov	a,r4
   0A40 F0                 4467 	movx	@dptr,a
   0A41 A3                 4468 	inc	dptr
   0A42 ED                 4469 	mov	a,r5
   0A43 F0                 4470 	movx	@dptr,a
   0A44 A3                 4471 	inc	dptr
   0A45 EE                 4472 	mov	a,r6
   0A46 F0                 4473 	movx	@dptr,a
   0A47 A3                 4474 	inc	dptr
   0A48 EF                 4475 	mov	a,r7
   0A49 F0                 4476 	movx	@dptr,a
                           4477 ;	..\COMMON\easyax5043.c:761: wtimer_add_callback(&axradio_cb_transmitstart.cb);
   0A4A 90s02r67           4478 	mov	dptr,#_axradio_cb_transmitstart
   0A4D 12s00r00           4479 	lcall	_wtimer_add_callback
                           4480 ;	..\COMMON\easyax5043.c:764: txstreamdatacb:
   0A50                    4481 00155$:
                           4482 ;	..\COMMON\easyax5043.c:765: if (AX5043_IRQREQUEST0 & AX5043_IRQMASK0 & 0x08) {
   0A50 90 40 0D           4483 	mov	dptr,#_AX5043_IRQREQUEST0
   0A53 E0                 4484 	movx	a,@dptr
   0A54 FF                 4485 	mov	r7,a
   0A55 90 40 07           4486 	mov	dptr,#_AX5043_IRQMASK0
   0A58 E0                 4487 	movx	a,@dptr
   0A59 FE                 4488 	mov	r6,a
   0A5A 5F                 4489 	anl	a,r7
   0A5B 30 E3 76           4490 	jnb	acc.3,00164$
                           4491 ;	..\COMMON\easyax5043.c:766: AX5043_IRQMASK0 &= (uint8_t)~0x08;
   0A5E 90 40 07           4492 	mov	dptr,#_AX5043_IRQMASK0
   0A61 E0                 4493 	movx	a,@dptr
   0A62 54 F7              4494 	anl	a,#0xF7
   0A64 F0                 4495 	movx	@dptr,a
                           4496 ;	..\COMMON\easyax5043.c:767: update_timeanchor();
   0A65 12s00r00           4497 	lcall	_update_timeanchor
                           4498 ;	..\COMMON\easyax5043.c:768: wtimer_remove_callback(&axradio_cb_transmitdata.cb);
   0A68 90s02r7B           4499 	mov	dptr,#_axradio_cb_transmitdata
   0A6B 12s00r00           4500 	lcall	_wtimer_remove_callback
                           4501 ;	..\COMMON\easyax5043.c:769: axradio_cb_transmitdata.st.error = AXRADIO_ERR_NOERROR;
   0A6E 90s02r80           4502 	mov	dptr,#(_axradio_cb_transmitdata + 0x0005)
   0A71 E4                 4503 	clr	a
   0A72 F0                 4504 	movx	@dptr,a
                           4505 ;	..\COMMON\easyax5043.c:770: axradio_cb_transmitdata.st.time.t = axradio_timeanchor.radiotimer;
   0A73 90s00r16           4506 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   0A76 E0                 4507 	movx	a,@dptr
   0A77 FC                 4508 	mov	r4,a
   0A78 A3                 4509 	inc	dptr
   0A79 E0                 4510 	movx	a,@dptr
   0A7A FD                 4511 	mov	r5,a
   0A7B A3                 4512 	inc	dptr
   0A7C E0                 4513 	movx	a,@dptr
   0A7D FE                 4514 	mov	r6,a
   0A7E A3                 4515 	inc	dptr
   0A7F E0                 4516 	movx	a,@dptr
   0A80 FF                 4517 	mov	r7,a
   0A81 90s02r81           4518 	mov	dptr,#(_axradio_cb_transmitdata + 0x0006)
   0A84 EC                 4519 	mov	a,r4
   0A85 F0                 4520 	movx	@dptr,a
   0A86 A3                 4521 	inc	dptr
   0A87 ED                 4522 	mov	a,r5
   0A88 F0                 4523 	movx	@dptr,a
   0A89 A3                 4524 	inc	dptr
   0A8A EE                 4525 	mov	a,r6
   0A8B F0                 4526 	movx	@dptr,a
   0A8C A3                 4527 	inc	dptr
   0A8D EF                 4528 	mov	a,r7
   0A8E F0                 4529 	movx	@dptr,a
                           4530 ;	..\COMMON\easyax5043.c:771: wtimer_add_callback(&axradio_cb_transmitdata.cb);
   0A8F 90s02r7B           4531 	mov	dptr,#_axradio_cb_transmitdata
   0A92 12s00r00           4532 	lcall	_wtimer_add_callback
                           4533 ;	..\COMMON\easyax5043.c:773: break;
                           4534 ;	..\COMMON\easyax5043.c:775: case trxstate_rxwor:
   0A95 80 3D              4535 	sjmp	00164$
   0A97                    4536 00158$:
                           4537 ;	..\COMMON\easyax5043.c:776: if( AX5043_IRQREQUEST1 & 0x01 ) // XTAL ready
   0A97 90 40 0C           4538 	mov	dptr,#_AX5043_IRQREQUEST1
   0A9A E0                 4539 	movx	a,@dptr
   0A9B FF                 4540 	mov	r7,a
   0A9C 30 E0 0A           4541 	jnb	acc.0,00160$
                           4542 ;	..\COMMON\easyax5043.c:778: AX5043_IRQINVERSION1 |= 0x01; // invert the xtal ready irq so it does not fire continuously
   0A9F 90 40 0A           4543 	mov	dptr,#_AX5043_IRQINVERSION1
   0AA2 E0                 4544 	movx	a,@dptr
   0AA3 FF                 4545 	mov	r7,a
   0AA4 44 01              4546 	orl	a,#0x01
   0AA6 F0                 4547 	movx	@dptr,a
   0AA7 80 28              4548 	sjmp	00162$
   0AA9                    4549 00160$:
                           4550 ;	..\COMMON\easyax5043.c:782: AX5043_IRQINVERSION1 &= ~0x01; // drop xtal ready irq inversion --> armed again for next wake-up
   0AA9 90 40 0A           4551 	mov	dptr,#_AX5043_IRQINVERSION1
   0AAC E0                 4552 	movx	a,@dptr
   0AAD 54 FE              4553 	anl	a,#0xFE
   0AAF F0                 4554 	movx	@dptr,a
                           4555 ;	..\COMMON\easyax5043.c:783: AX5043_0xF30 = f30_saved;
   0AB0 90s00r00           4556 	mov	dptr,#_f30_saved
   0AB3 E0                 4557 	movx	a,@dptr
   0AB4 90 4F 30           4558 	mov	dptr,#_AX5043_0xF30
   0AB7 F0                 4559 	movx	@dptr,a
                           4560 ;	..\COMMON\easyax5043.c:784: AX5043_0xF31 = f31_saved;
   0AB8 90s00r01           4561 	mov	dptr,#_f31_saved
   0ABB E0                 4562 	movx	a,@dptr
   0ABC 90 4F 31           4563 	mov	dptr,#_AX5043_0xF31
   0ABF F0                 4564 	movx	@dptr,a
                           4565 ;	..\COMMON\easyax5043.c:785: AX5043_0xF32 = f32_saved;
   0AC0 90s00r02           4566 	mov	dptr,#_f32_saved
   0AC3 E0                 4567 	movx	a,@dptr
   0AC4 90 4F 32           4568 	mov	dptr,#_AX5043_0xF32
   0AC7 F0                 4569 	movx	@dptr,a
                           4570 ;	..\COMMON\easyax5043.c:786: AX5043_0xF33 = f33_saved;
   0AC8 90s00r03           4571 	mov	dptr,#_f33_saved
   0ACB E0                 4572 	movx	a,@dptr
   0ACC FF                 4573 	mov	r7,a
   0ACD 90 4F 33           4574 	mov	dptr,#_AX5043_0xF33
   0AD0 F0                 4575 	movx	@dptr,a
                           4576 ;	..\COMMON\easyax5043.c:790: case trxstate_rx:
   0AD1                    4577 00162$:
                           4578 ;	..\COMMON\easyax5043.c:791: receive_isr();
   0AD1 12s01r00           4579 	lcall	_receive_isr
                           4580 ;	..\COMMON\easyax5043.c:794: } // end switch(axradio_trxstate)
   0AD4                    4581 00164$:
   0AD4 D0 D0              4582 	pop	psw
   0AD6 D0 00              4583 	pop	(0+0)
   0AD8 D0 01              4584 	pop	(0+1)
   0ADA D0 02              4585 	pop	(0+2)
   0ADC D0 03              4586 	pop	(0+3)
   0ADE D0 04              4587 	pop	(0+4)
   0AE0 D0 05              4588 	pop	(0+5)
   0AE2 D0 06              4589 	pop	(0+6)
   0AE4 D0 07              4590 	pop	(0+7)
   0AE6 D0 83              4591 	pop	dph
   0AE8 D0 82              4592 	pop	dpl
   0AEA D0 F0              4593 	pop	b
   0AEC D0 E0              4594 	pop	acc
   0AEE D0*00              4595 	pop	bits
   0AF0 32                 4596 	reti
                           4597 ;------------------------------------------------------------
                           4598 ;Allocation info for local variables in function 'ax5043_receiver_on_continuous'
                           4599 ;------------------------------------------------------------
                           4600 ;rschanged_int             Allocated to registers r7 
                           4601 ;------------------------------------------------------------
                           4602 ;	..\COMMON\easyax5043.c:798: __reentrantb void ax5043_receiver_on_continuous(void) __reentrant
                           4603 ;	-----------------------------------------
                           4604 ;	 function ax5043_receiver_on_continuous
                           4605 ;	-----------------------------------------
   0AF1                    4606 _ax5043_receiver_on_continuous:
                           4607 ;	..\COMMON\easyax5043.c:800: uint8_t rschanged_int = (axradio_framing_enable_sfdcallback | (axradio_mode == AXRADIO_MODE_SYNC_ACK_SLAVE) | (axradio_mode == AXRADIO_MODE_SYNC_SLAVE) );
   0AF1 74 23              4608 	mov	a,#0x23
   0AF3 B5*00 04           4609 	cjne	a,_axradio_mode,00127$
   0AF6 74 01              4610 	mov	a,#0x01
   0AF8 80 01              4611 	sjmp	00128$
   0AFA                    4612 00127$:
   0AFA E4                 4613 	clr	a
   0AFB                    4614 00128$:
   0AFB FF                 4615 	mov	r7,a
   0AFC 90s00r00           4616 	mov	dptr,#_axradio_framing_enable_sfdcallback
   0AFF E4                 4617 	clr	a
   0B00 93                 4618 	movc	a,@a+dptr
   0B01 FE                 4619 	mov	r6,a
   0B02 42 07              4620 	orl	ar7,a
   0B04 74 22              4621 	mov	a,#0x22
   0B06 B5*00 04           4622 	cjne	a,_axradio_mode,00129$
   0B09 74 01              4623 	mov	a,#0x01
   0B0B 80 01              4624 	sjmp	00130$
   0B0D                    4625 00129$:
   0B0D E4                 4626 	clr	a
   0B0E                    4627 00130$:
   0B0E FE                 4628 	mov	r6,a
   0B0F 42 07              4629 	orl	ar7,a
                           4630 ;	..\COMMON\easyax5043.c:801: if(rschanged_int)
   0B11 EF                 4631 	mov	a,r7
   0B12 60 06              4632 	jz	00102$
                           4633 ;	..\COMMON\easyax5043.c:802: AX5043_RADIOEVENTMASK0 = 0x04;
   0B14 90 40 09           4634 	mov	dptr,#_AX5043_RADIOEVENTMASK0
   0B17 74 04              4635 	mov	a,#0x04
   0B19 F0                 4636 	movx	@dptr,a
   0B1A                    4637 00102$:
                           4638 ;	..\COMMON\easyax5043.c:803: AX5043_RSSIREFERENCE = axradio_phy_rssireference;
   0B1A 90s00r00           4639 	mov	dptr,#_axradio_phy_rssireference
   0B1D E4                 4640 	clr	a
   0B1E 93                 4641 	movc	a,@a+dptr
   0B1F FE                 4642 	mov	r6,a
   0B20 90 42 2C           4643 	mov	dptr,#_AX5043_RSSIREFERENCE
   0B23 F0                 4644 	movx	@dptr,a
                           4645 ;	..\COMMON\easyax5043.c:804: if (axradio_mode == AXRADIO_MODE_ASYNC_RECEIVE ||
   0B24 74 18              4646 	mov	a,#0x18
   0B26 B5*00 02           4647 	cjne	a,_axradio_mode,00132$
   0B29 80 1A              4648 	sjmp	00103$
   0B2B                    4649 00132$:
                           4650 ;	..\COMMON\easyax5043.c:805: axradio_mode == AXRADIO_MODE_ACK_RECEIVE ||
   0B2B 74 1A              4651 	mov	a,#0x1A
   0B2D B5*00 02           4652 	cjne	a,_axradio_mode,00133$
   0B30 80 13              4653 	sjmp	00103$
   0B32                    4654 00133$:
                           4655 ;	..\COMMON\easyax5043.c:806: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE ||
   0B32 74 1C              4656 	mov	a,#0x1C
   0B34 B5*00 02           4657 	cjne	a,_axradio_mode,00134$
   0B37 80 0C              4658 	sjmp	00103$
   0B39                    4659 00134$:
                           4660 ;	..\COMMON\easyax5043.c:807: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_UNENC ||
   0B39 74 1D              4661 	mov	a,#0x1D
   0B3B B5*00 02           4662 	cjne	a,_axradio_mode,00135$
   0B3E 80 05              4663 	sjmp	00103$
   0B40                    4664 00135$:
                           4665 ;	..\COMMON\easyax5043.c:808: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_SCRAM) {
   0B40 74 1E              4666 	mov	a,#0x1E
   0B42 B5*00 13           4667 	cjne	a,_axradio_mode,00104$
   0B45                    4668 00103$:
                           4669 ;	..\COMMON\easyax5043.c:809: AX5043_TMGRXPREAMBLE1 = axradio_phy_tmgrxpreamble1_cont;
   0B45 90s00r00           4670 	mov	dptr,#_axradio_phy_tmgrxpreamble1_cont
   0B48 E4                 4671 	clr	a
   0B49 93                 4672 	movc	a,@a+dptr
   0B4A 90 42 29           4673 	mov	dptr,#_AX5043_TMGRXPREAMBLE1
   0B4D F0                 4674 	movx	@dptr,a
                           4675 ;	..\COMMON\easyax5043.c:810: AX5043_PKTSTOREFLAGS |= 0x40;
   0B4E 90 42 32           4676 	mov	dptr,#_AX5043_PKTSTOREFLAGS
   0B51 E0                 4677 	movx	a,@dptr
   0B52 FE                 4678 	mov	r6,a
   0B53 44 40              4679 	orl	a,#0x40
   0B55 F0                 4680 	movx	@dptr,a
   0B56 80 0D              4681 	sjmp	00105$
   0B58                    4682 00104$:
                           4683 ;	..\COMMON\easyax5043.c:812: AX5043_TMGRXPREAMBLE1 = 0x00;
   0B58 90 42 29           4684 	mov	dptr,#_AX5043_TMGRXPREAMBLE1
   0B5B E4                 4685 	clr	a
   0B5C F0                 4686 	movx	@dptr,a
                           4687 ;	..\COMMON\easyax5043.c:813: AX5043_PKTSTOREFLAGS &= (uint8_t)~0x40;
   0B5D 90 42 32           4688 	mov	dptr,#_AX5043_PKTSTOREFLAGS
   0B60 E0                 4689 	movx	a,@dptr
   0B61 FE                 4690 	mov	r6,a
   0B62 54 BF              4691 	anl	a,#0xBF
   0B64 F0                 4692 	movx	@dptr,a
   0B65                    4693 00105$:
                           4694 ;	..\COMMON\easyax5043.c:815: AX5043_FIFOSTAT = 3; // clear FIFO data & flags
   0B65 90 40 28           4695 	mov	dptr,#_AX5043_FIFOSTAT
   0B68 74 03              4696 	mov	a,#0x03
   0B6A F0                 4697 	movx	@dptr,a
                           4698 ;	..\COMMON\easyax5043.c:816: AX5043_PWRMODE = AX5043_PWRSTATE_FULL_RX;
   0B6B 90 40 02           4699 	mov	dptr,#_AX5043_PWRMODE
   0B6E 74 09              4700 	mov	a,#0x09
   0B70 F0                 4701 	movx	@dptr,a
                           4702 ;	..\COMMON\easyax5043.c:817: axradio_trxstate = trxstate_rx;
   0B71 75*01 01           4703 	mov	_axradio_trxstate,#0x01
                           4704 ;	..\COMMON\easyax5043.c:818: if(rschanged_int)
   0B74 EF                 4705 	mov	a,r7
   0B75 60 08              4706 	jz	00111$
                           4707 ;	..\COMMON\easyax5043.c:819: AX5043_IRQMASK0 = 0x41; //  enable FIFO not empty / radio controller irq
   0B77 90 40 07           4708 	mov	dptr,#_AX5043_IRQMASK0
   0B7A 74 41              4709 	mov	a,#0x41
   0B7C F0                 4710 	movx	@dptr,a
   0B7D 80 06              4711 	sjmp	00112$
   0B7F                    4712 00111$:
                           4713 ;	..\COMMON\easyax5043.c:821: AX5043_IRQMASK0 = 0x01; //  enable FIFO not empty
   0B7F 90 40 07           4714 	mov	dptr,#_AX5043_IRQMASK0
   0B82 74 01              4715 	mov	a,#0x01
   0B84 F0                 4716 	movx	@dptr,a
   0B85                    4717 00112$:
                           4718 ;	..\COMMON\easyax5043.c:822: AX5043_IRQMASK1 = 0x00;
   0B85 90 40 06           4719 	mov	dptr,#_AX5043_IRQMASK1
   0B88 E4                 4720 	clr	a
   0B89 F0                 4721 	movx	@dptr,a
   0B8A 22                 4722 	ret
                           4723 ;------------------------------------------------------------
                           4724 ;Allocation info for local variables in function 'ax5043_receiver_on_wor'
                           4725 ;------------------------------------------------------------
                           4726 ;wp                        Allocated to registers r6 r7 
                           4727 ;------------------------------------------------------------
                           4728 ;	..\COMMON\easyax5043.c:825: __reentrantb void ax5043_receiver_on_wor(void) __reentrant
                           4729 ;	-----------------------------------------
                           4730 ;	 function ax5043_receiver_on_wor
                           4731 ;	-----------------------------------------
   0B8B                    4732 _ax5043_receiver_on_wor:
                           4733 ;	..\COMMON\easyax5043.c:827: AX5043_BGNDRSSIGAIN = 0x02;
   0B8B 90 42 2E           4734 	mov	dptr,#_AX5043_BGNDRSSIGAIN
   0B8E 74 02              4735 	mov	a,#0x02
   0B90 F0                 4736 	movx	@dptr,a
                           4737 ;	..\COMMON\easyax5043.c:828: if(axradio_framing_enable_sfdcallback)
   0B91 90s00r00           4738 	mov	dptr,#_axradio_framing_enable_sfdcallback
   0B94 E4                 4739 	clr	a
   0B95 93                 4740 	movc	a,@a+dptr
   0B96 FF                 4741 	mov	r7,a
   0B97 60 06              4742 	jz	00102$
                           4743 ;	..\COMMON\easyax5043.c:829: AX5043_RADIOEVENTMASK0 = 0x04;
   0B99 90 40 09           4744 	mov	dptr,#_AX5043_RADIOEVENTMASK0
   0B9C 74 04              4745 	mov	a,#0x04
   0B9E F0                 4746 	movx	@dptr,a
   0B9F                    4747 00102$:
                           4748 ;	..\COMMON\easyax5043.c:830: AX5043_FIFOSTAT = 3; // clear FIFO data & flags
   0B9F 90 40 28           4749 	mov	dptr,#_AX5043_FIFOSTAT
   0BA2 74 03              4750 	mov	a,#0x03
   0BA4 F0                 4751 	movx	@dptr,a
                           4752 ;	..\COMMON\easyax5043.c:831: AX5043_LPOSCCONFIG = 0x01; // start LPOSC, slow mode
   0BA5 90 43 10           4753 	mov	dptr,#_AX5043_LPOSCCONFIG
   0BA8 74 01              4754 	mov	a,#0x01
   0BAA F0                 4755 	movx	@dptr,a
                           4756 ;	..\COMMON\easyax5043.c:832: AX5043_TMGRXPREAMBLE1 = axradio_phy_tmgrxpreamble1_wor;
   0BAB 90s00r00           4757 	mov	dptr,#_axradio_phy_tmgrxpreamble1_wor
   0BAE E4                 4758 	clr	a
   0BAF 93                 4759 	movc	a,@a+dptr
   0BB0 90 42 29           4760 	mov	dptr,#_AX5043_TMGRXPREAMBLE1
   0BB3 F0                 4761 	movx	@dptr,a
                           4762 ;	..\COMMON\easyax5043.c:833: AX5043_RSSIREFERENCE = axradio_phy_rssireference;
   0BB4 90s00r00           4763 	mov	dptr,#_axradio_phy_rssireference
   0BB7 E4                 4764 	clr	a
   0BB8 93                 4765 	movc	a,@a+dptr
   0BB9 FE                 4766 	mov	r6,a
   0BBA 90 42 2C           4767 	mov	dptr,#_AX5043_RSSIREFERENCE
   0BBD F0                 4768 	movx	@dptr,a
                           4769 ;	..\COMMON\easyax5043.c:834: AX5043_PWRMODE = AX5043_PWRSTATE_WOR_RX;
   0BBE 90 40 02           4770 	mov	dptr,#_AX5043_PWRMODE
   0BC1 74 0B              4771 	mov	a,#0x0B
   0BC3 F0                 4772 	movx	@dptr,a
                           4773 ;	..\COMMON\easyax5043.c:835: axradio_trxstate = trxstate_rxwor;
   0BC4 75*01 02           4774 	mov	_axradio_trxstate,#0x02
                           4775 ;	..\COMMON\easyax5043.c:836: if(axradio_framing_enable_sfdcallback)
   0BC7 EF                 4776 	mov	a,r7
   0BC8 60 08              4777 	jz	00104$
                           4778 ;	..\COMMON\easyax5043.c:837: AX5043_IRQMASK0 = 0x41; //  enable FIFO not empty / radio controller irq
   0BCA 90 40 07           4779 	mov	dptr,#_AX5043_IRQMASK0
   0BCD 74 41              4780 	mov	a,#0x41
   0BCF F0                 4781 	movx	@dptr,a
   0BD0 80 06              4782 	sjmp	00105$
   0BD2                    4783 00104$:
                           4784 ;	..\COMMON\easyax5043.c:839: AX5043_IRQMASK0 = 0x01; //  enable FIFO not empty
   0BD2 90 40 07           4785 	mov	dptr,#_AX5043_IRQMASK0
   0BD5 74 01              4786 	mov	a,#0x01
   0BD7 F0                 4787 	movx	@dptr,a
   0BD8                    4788 00105$:
                           4789 ;	..\COMMON\easyax5043.c:840: AX5043_IRQMASK1 = 0x01; // xtal ready
   0BD8 90 40 06           4790 	mov	dptr,#_AX5043_IRQMASK1
   0BDB 74 01              4791 	mov	a,#0x01
   0BDD F0                 4792 	movx	@dptr,a
                           4793 ;	..\COMMON\easyax5043.c:842: uint16_t wp = axradio_wor_period;
   0BDE 90s00r00           4794 	mov	dptr,#_axradio_wor_period
   0BE1 E4                 4795 	clr	a
   0BE2 93                 4796 	movc	a,@a+dptr
   0BE3 FE                 4797 	mov	r6,a
   0BE4 74 01              4798 	mov	a,#0x01
   0BE6 93                 4799 	movc	a,@a+dptr
                           4800 ;	..\COMMON\easyax5043.c:843: AX5043_WAKEUPFREQ1 = (wp >> 8) & 0xFF;
   0BE7 FF                 4801 	mov	r7,a
   0BE8 FD                 4802 	mov	r5,a
   0BE9 90 40 6C           4803 	mov	dptr,#_AX5043_WAKEUPFREQ1
   0BEC ED                 4804 	mov	a,r5
   0BED F0                 4805 	movx	@dptr,a
                           4806 ;	..\COMMON\easyax5043.c:844: AX5043_WAKEUPFREQ0 = (wp >> 0) & 0xFF;  // actually wakeup period measured in LP OSC cycles
   0BEE 8E 05              4807 	mov	ar5,r6
   0BF0 90 40 6D           4808 	mov	dptr,#_AX5043_WAKEUPFREQ0
   0BF3 ED                 4809 	mov	a,r5
   0BF4 F0                 4810 	movx	@dptr,a
                           4811 ;	..\COMMON\easyax5043.c:845: wp += radio_read16((uint16_t)&AX5043_WAKEUPTIMER1);
   0BF5 90 40 68           4812 	mov	dptr,#_AX5043_WAKEUPTIMER1
   0BF8 12s00r00           4813 	lcall	_radio_read16
   0BFB AC 82              4814 	mov	r4,dpl
   0BFD AD 83              4815 	mov	r5,dph
   0BFF EC                 4816 	mov	a,r4
   0C00 2E                 4817 	add	a,r6
   0C01 FE                 4818 	mov	r6,a
   0C02 ED                 4819 	mov	a,r5
   0C03 3F                 4820 	addc	a,r7
                           4821 ;	..\COMMON\easyax5043.c:846: AX5043_WAKEUP1 = (wp >> 8) & 0xFF;
   0C04 FD                 4822 	mov	r5,a
   0C05 90 40 6A           4823 	mov	dptr,#_AX5043_WAKEUP1
   0C08 ED                 4824 	mov	a,r5
   0C09 F0                 4825 	movx	@dptr,a
                           4826 ;	..\COMMON\easyax5043.c:847: AX5043_WAKEUP0 = (wp >> 0) & 0xFF;
   0C0A 90 40 6B           4827 	mov	dptr,#_AX5043_WAKEUP0
   0C0D EE                 4828 	mov	a,r6
   0C0E F0                 4829 	movx	@dptr,a
   0C0F 22                 4830 	ret
                           4831 ;------------------------------------------------------------
                           4832 ;Allocation info for local variables in function 'ax5043_prepare_tx'
                           4833 ;------------------------------------------------------------
                           4834 ;	..\COMMON\easyax5043.c:850: __reentrantb void ax5043_prepare_tx(void) __reentrant
                           4835 ;	-----------------------------------------
                           4836 ;	 function ax5043_prepare_tx
                           4837 ;	-----------------------------------------
   0C10                    4838 _ax5043_prepare_tx:
                           4839 ;	..\COMMON\easyax5043.c:852: AX5043_PWRMODE = AX5043_PWRSTATE_XTAL_ON;
                           4840 ;	..\COMMON\easyax5043.c:853: AX5043_PWRMODE = AX5043_PWRSTATE_FIFO_ON;
   0C10 90 40 02           4841 	mov	dptr,#_AX5043_PWRMODE
   0C13 74 05              4842 	mov	a,#0x05
   0C15 F0                 4843 	movx	@dptr,a
   0C16 74 07              4844 	mov	a,#0x07
   0C18 F0                 4845 	movx	@dptr,a
                           4846 ;	..\COMMON\easyax5043.c:854: ax5043_init_registers_tx();
   0C19 12s00r96           4847 	lcall	_ax5043_init_registers_tx
                           4848 ;	..\COMMON\easyax5043.c:855: AX5043_FIFOTHRESH1 = 0;
   0C1C 90 40 2E           4849 	mov	dptr,#_AX5043_FIFOTHRESH1
   0C1F E4                 4850 	clr	a
   0C20 F0                 4851 	movx	@dptr,a
                           4852 ;	..\COMMON\easyax5043.c:856: AX5043_FIFOTHRESH0 = 0x80;
   0C21 90 40 2F           4853 	mov	dptr,#_AX5043_FIFOTHRESH0
   0C24 74 80              4854 	mov	a,#0x80
   0C26 F0                 4855 	movx	@dptr,a
                           4856 ;	..\COMMON\easyax5043.c:857: axradio_trxstate = trxstate_tx_xtalwait;
   0C27 75*01 09           4857 	mov	_axradio_trxstate,#0x09
                           4858 ;	..\COMMON\easyax5043.c:858: AX5043_IRQMASK0 = 0x00;
   0C2A 90 40 07           4859 	mov	dptr,#_AX5043_IRQMASK0
   0C2D E4                 4860 	clr	a
   0C2E F0                 4861 	movx	@dptr,a
                           4862 ;	..\COMMON\easyax5043.c:859: AX5043_IRQMASK1 = 0x01; // enable xtal ready interrupt
   0C2F 90 40 06           4863 	mov	dptr,#_AX5043_IRQMASK1
   0C32 74 01              4864 	mov	a,#0x01
   0C34 F0                 4865 	movx	@dptr,a
   0C35 22                 4866 	ret
                           4867 ;------------------------------------------------------------
                           4868 ;Allocation info for local variables in function 'ax5043_off'
                           4869 ;------------------------------------------------------------
                           4870 ;	..\COMMON\easyax5043.c:862: __reentrantb void ax5043_off(void) __reentrant
                           4871 ;	-----------------------------------------
                           4872 ;	 function ax5043_off
                           4873 ;	-----------------------------------------
   0C36                    4874 _ax5043_off:
                           4875 ;	..\COMMON\easyax5043.c:864: ax5043_off_xtal();
   0C36 12s0Cr3F           4876 	lcall	_ax5043_off_xtal
                           4877 ;	..\COMMON\easyax5043.c:865: AX5043_PWRMODE = AX5043_PWRSTATE_POWERDOWN;
   0C39 90 40 02           4878 	mov	dptr,#_AX5043_PWRMODE
   0C3C E4                 4879 	clr	a
   0C3D F0                 4880 	movx	@dptr,a
   0C3E 22                 4881 	ret
                           4882 ;------------------------------------------------------------
                           4883 ;Allocation info for local variables in function 'ax5043_off_xtal'
                           4884 ;------------------------------------------------------------
                           4885 ;	..\COMMON\easyax5043.c:868: __reentrantb void ax5043_off_xtal(void) __reentrant
                           4886 ;	-----------------------------------------
                           4887 ;	 function ax5043_off_xtal
                           4888 ;	-----------------------------------------
   0C3F                    4889 _ax5043_off_xtal:
                           4890 ;	..\COMMON\easyax5043.c:870: AX5043_IRQMASK0 = 0x00; // IRQ off
   0C3F 90 40 07           4891 	mov	dptr,#_AX5043_IRQMASK0
                           4892 ;	..\COMMON\easyax5043.c:871: AX5043_IRQMASK1 = 0x00;
   0C42 E4                 4893 	clr	a
   0C43 F0                 4894 	movx	@dptr,a
   0C44 90 40 06           4895 	mov	dptr,#_AX5043_IRQMASK1
   0C47 F0                 4896 	movx	@dptr,a
                           4897 ;	..\COMMON\easyax5043.c:872: AX5043_PWRMODE = AX5043_PWRSTATE_XTAL_ON;
   0C48 90 40 02           4898 	mov	dptr,#_AX5043_PWRMODE
   0C4B 74 05              4899 	mov	a,#0x05
   0C4D F0                 4900 	movx	@dptr,a
                           4901 ;	..\COMMON\easyax5043.c:873: AX5043_LPOSCCONFIG = 0x00; // LPOSC off
   0C4E 90 43 10           4902 	mov	dptr,#_AX5043_LPOSCCONFIG
   0C51 E4                 4903 	clr	a
   0C52 F0                 4904 	movx	@dptr,a
                           4905 ;	..\COMMON\easyax5043.c:874: axradio_trxstate = trxstate_off;
   0C53 75*01 00           4906 	mov	_axradio_trxstate,#0x00
   0C56 22                 4907 	ret
                           4908 ;------------------------------------------------------------
                           4909 ;Allocation info for local variables in function 'axradio_wait_for_xtal'
                           4910 ;------------------------------------------------------------
                           4911 ;iesave                    Allocated to registers r7 
                           4912 ;------------------------------------------------------------
                           4913 ;	..\COMMON\easyax5043.c:877: void axradio_wait_for_xtal(void)
                           4914 ;	-----------------------------------------
                           4915 ;	 function axradio_wait_for_xtal
                           4916 ;	-----------------------------------------
   0C57                    4917 _axradio_wait_for_xtal:
                           4918 ;	..\COMMON\easyax5043.c:879: uint8_t __autodata iesave = IE & 0x80;
   0C57 74 80              4919 	mov	a,#0x80
   0C59 55 A8              4920 	anl	a,_IE
   0C5B FF                 4921 	mov	r7,a
                           4922 ;	..\COMMON\easyax5043.c:880: EA = 0;
   0C5C C2 AF              4923 	clr	_EA
                           4924 ;	..\COMMON\easyax5043.c:881: axradio_trxstate = trxstate_wait_xtal;
   0C5E 75*01 03           4925 	mov	_axradio_trxstate,#0x03
                           4926 ;	..\COMMON\easyax5043.c:882: AX5043_IRQMASK1 |= 0x01; // enable xtal ready interrupt
   0C61 90 40 06           4927 	mov	dptr,#_AX5043_IRQMASK1
   0C64 E0                 4928 	movx	a,@dptr
   0C65 FE                 4929 	mov	r6,a
   0C66 44 01              4930 	orl	a,#0x01
   0C68 F0                 4931 	movx	@dptr,a
   0C69                    4932 00104$:
                           4933 ;	..\COMMON\easyax5043.c:884: EA = 0;
   0C69 C2 AF              4934 	clr	_EA
                           4935 ;	..\COMMON\easyax5043.c:885: if (axradio_trxstate == trxstate_xtal_ready)
   0C6B 74 04              4936 	mov	a,#0x04
   0C6D B5*01 02           4937 	cjne	a,_axradio_trxstate,00112$
   0C70 80 11              4938 	sjmp	00105$
   0C72                    4939 00112$:
                           4940 ;	..\COMMON\easyax5043.c:887: wtimer_idle(WTFLAG_CANSTANDBY);
   0C72 75 82 02           4941 	mov	dpl,#0x02
   0C75 C0 07              4942 	push	ar7
   0C77 12s00r00           4943 	lcall	_wtimer_idle
                           4944 ;	..\COMMON\easyax5043.c:888: EA = 1;
   0C7A D2 AF              4945 	setb	_EA
                           4946 ;	..\COMMON\easyax5043.c:889: wtimer_runcallbacks();
   0C7C 12s00r00           4947 	lcall	_wtimer_runcallbacks
   0C7F D0 07              4948 	pop	ar7
   0C81 80 E6              4949 	sjmp	00104$
   0C83                    4950 00105$:
                           4951 ;	..\COMMON\easyax5043.c:891: IE |= iesave;
   0C83 EF                 4952 	mov	a,r7
   0C84 42 A8              4953 	orl	_IE,a
   0C86 22                 4954 	ret
                           4955 ;------------------------------------------------------------
                           4956 ;Allocation info for local variables in function 'axradio_setaddrregs'
                           4957 ;------------------------------------------------------------
                           4958 ;pn                        Allocated to registers r6 r7 
                           4959 ;inv                       Allocated to registers r5 
                           4960 ;------------------------------------------------------------
                           4961 ;	..\COMMON\easyax5043.c:894: static void axradio_setaddrregs(void)
                           4962 ;	-----------------------------------------
                           4963 ;	 function axradio_setaddrregs
                           4964 ;	-----------------------------------------
   0C87                    4965 _axradio_setaddrregs:
                           4966 ;	..\COMMON\easyax5043.c:896: AX5043_PKTADDR0 = axradio_localaddr.addr[0];
   0C87 90s00r1A           4967 	mov	dptr,#_axradio_localaddr
   0C8A E0                 4968 	movx	a,@dptr
   0C8B 90 42 07           4969 	mov	dptr,#_AX5043_PKTADDR0
   0C8E F0                 4970 	movx	@dptr,a
                           4971 ;	..\COMMON\easyax5043.c:897: AX5043_PKTADDR1 = axradio_localaddr.addr[1];
   0C8F 90s00r1B           4972 	mov	dptr,#(_axradio_localaddr + 0x0001)
   0C92 E0                 4973 	movx	a,@dptr
   0C93 90 42 06           4974 	mov	dptr,#_AX5043_PKTADDR1
   0C96 F0                 4975 	movx	@dptr,a
                           4976 ;	..\COMMON\easyax5043.c:898: AX5043_PKTADDR2 = axradio_localaddr.addr[2];
   0C97 90s00r1C           4977 	mov	dptr,#(_axradio_localaddr + 0x0002)
   0C9A E0                 4978 	movx	a,@dptr
   0C9B 90 42 05           4979 	mov	dptr,#_AX5043_PKTADDR2
   0C9E F0                 4980 	movx	@dptr,a
                           4981 ;	..\COMMON\easyax5043.c:899: AX5043_PKTADDR3 = axradio_localaddr.addr[3];
   0C9F 90s00r1D           4982 	mov	dptr,#(_axradio_localaddr + 0x0003)
   0CA2 E0                 4983 	movx	a,@dptr
   0CA3 90 42 04           4984 	mov	dptr,#_AX5043_PKTADDR3
   0CA6 F0                 4985 	movx	@dptr,a
                           4986 ;	..\COMMON\easyax5043.c:901: AX5043_PKTADDRMASK0 = axradio_localaddr.mask[0];
   0CA7 90s00r1E           4987 	mov	dptr,#(_axradio_localaddr + 0x0004)
   0CAA E0                 4988 	movx	a,@dptr
   0CAB 90 42 0B           4989 	mov	dptr,#_AX5043_PKTADDRMASK0
   0CAE F0                 4990 	movx	@dptr,a
                           4991 ;	..\COMMON\easyax5043.c:902: AX5043_PKTADDRMASK1 = axradio_localaddr.mask[1];
   0CAF 90s00r1F           4992 	mov	dptr,#(_axradio_localaddr + 0x0005)
   0CB2 E0                 4993 	movx	a,@dptr
   0CB3 90 42 0A           4994 	mov	dptr,#_AX5043_PKTADDRMASK1
   0CB6 F0                 4995 	movx	@dptr,a
                           4996 ;	..\COMMON\easyax5043.c:903: AX5043_PKTADDRMASK2 = axradio_localaddr.mask[2];
   0CB7 90s00r20           4997 	mov	dptr,#(_axradio_localaddr + 0x0006)
   0CBA E0                 4998 	movx	a,@dptr
   0CBB 90 42 09           4999 	mov	dptr,#_AX5043_PKTADDRMASK2
   0CBE F0                 5000 	movx	@dptr,a
                           5001 ;	..\COMMON\easyax5043.c:904: AX5043_PKTADDRMASK3 = axradio_localaddr.mask[3];
   0CBF 90s00r21           5002 	mov	dptr,#(_axradio_localaddr + 0x0007)
   0CC2 E0                 5003 	movx	a,@dptr
   0CC3 90 42 08           5004 	mov	dptr,#_AX5043_PKTADDRMASK3
   0CC6 F0                 5005 	movx	@dptr,a
                           5006 ;	..\COMMON\easyax5043.c:906: if (axradio_phy_pn9 && axradio_framing_addrlen) {
   0CC7 90s00r00           5007 	mov	dptr,#_axradio_phy_pn9
   0CCA E4                 5008 	clr	a
   0CCB 93                 5009 	movc	a,@a+dptr
   0CCC FF                 5010 	mov	r7,a
   0CCD 70 01              5011 	jnz	00114$
   0CCF 22                 5012 	ret
   0CD0                    5013 00114$:
   0CD0 90s00r00           5014 	mov	dptr,#_axradio_framing_addrlen
   0CD3 E4                 5015 	clr	a
   0CD4 93                 5016 	movc	a,@a+dptr
   0CD5 FF                 5017 	mov	r7,a
   0CD6 70 01              5018 	jnz	00115$
   0CD8 22                 5019 	ret
   0CD9                    5020 00115$:
                           5021 ;	..\COMMON\easyax5043.c:907: uint16_t __autodata pn = 0x1ff;
   0CD9 7E FF              5022 	mov	r6,#0xFF
   0CDB 7F 01              5023 	mov	r7,#0x01
                           5024 ;	..\COMMON\easyax5043.c:908: uint8_t __autodata inv = -(AX5043_ENCODING & 0x01);
   0CDD 90 40 11           5025 	mov	dptr,#_AX5043_ENCODING
   0CE0 E0                 5026 	movx	a,@dptr
   0CE1 FD                 5027 	mov	r5,a
   0CE2 53 05 01           5028 	anl	ar5,#0x01
   0CE5 C3                 5029 	clr	c
   0CE6 E4                 5030 	clr	a
   0CE7 9D                 5031 	subb	a,r5
   0CE8 FD                 5032 	mov	r5,a
                           5033 ;	..\COMMON\easyax5043.c:909: if (axradio_framing_destaddrpos != 0xff)
   0CE9 90s00r00           5034 	mov	dptr,#_axradio_framing_destaddrpos
   0CEC E4                 5035 	clr	a
   0CED 93                 5036 	movc	a,@a+dptr
   0CEE FC                 5037 	mov	r4,a
   0CEF BC FF 02           5038 	cjne	r4,#0xFF,00116$
   0CF2 80 25              5039 	sjmp	00102$
   0CF4                    5040 00116$:
                           5041 ;	..\COMMON\easyax5043.c:910: pn = pn9_advance_bits(pn, axradio_framing_destaddrpos << 3);
   0CF4 E4                 5042 	clr	a
   0CF5 03                 5043 	rr	a
   0CF6 54 F8              5044 	anl	a,#0xF8
   0CF8 CC                 5045 	xch	a,r4
   0CF9 C4                 5046 	swap	a
   0CFA 03                 5047 	rr	a
   0CFB CC                 5048 	xch	a,r4
   0CFC 6C                 5049 	xrl	a,r4
   0CFD CC                 5050 	xch	a,r4
   0CFE 54 F8              5051 	anl	a,#0xF8
   0D00 CC                 5052 	xch	a,r4
   0D01 6C                 5053 	xrl	a,r4
   0D02 FB                 5054 	mov	r3,a
   0D03 C0 05              5055 	push	ar5
   0D05 C0 04              5056 	push	ar4
   0D07 C0 03              5057 	push	ar3
   0D09 90 01 FF           5058 	mov	dptr,#0x01FF
   0D0C 12s00r00           5059 	lcall	_pn9_advance_bits
   0D0F AE 82              5060 	mov	r6,dpl
   0D11 AF 83              5061 	mov	r7,dph
   0D13 15 81              5062 	dec	sp
   0D15 15 81              5063 	dec	sp
   0D17 D0 05              5064 	pop	ar5
   0D19                    5065 00102$:
                           5066 ;	..\COMMON\easyax5043.c:911: AX5043_PKTADDR0 ^= pn ^ inv;
   0D19 7C 00              5067 	mov	r4,#0x00
   0D1B ED                 5068 	mov	a,r5
   0D1C 6E                 5069 	xrl	a,r6
   0D1D FA                 5070 	mov	r2,a
   0D1E EC                 5071 	mov	a,r4
   0D1F 6F                 5072 	xrl	a,r7
   0D20 FB                 5073 	mov	r3,a
   0D21 90 42 07           5074 	mov	dptr,#_AX5043_PKTADDR0
   0D24 E0                 5075 	movx	a,@dptr
   0D25 79 00              5076 	mov	r1,#0x00
   0D27 62 02              5077 	xrl	ar2,a
   0D29 E9                 5078 	mov	a,r1
   0D2A 62 03              5079 	xrl	ar3,a
   0D2C 90 42 07           5080 	mov	dptr,#_AX5043_PKTADDR0
   0D2F EA                 5081 	mov	a,r2
   0D30 F0                 5082 	movx	@dptr,a
                           5083 ;	..\COMMON\easyax5043.c:912: pn = pn9_advance_byte(pn);
   0D31 8E 82              5084 	mov	dpl,r6
   0D33 8F 83              5085 	mov	dph,r7
   0D35 C0 05              5086 	push	ar5
   0D37 C0 04              5087 	push	ar4
   0D39 12s00r00           5088 	lcall	_pn9_advance_byte
   0D3C AE 82              5089 	mov	r6,dpl
   0D3E AF 83              5090 	mov	r7,dph
   0D40 D0 04              5091 	pop	ar4
   0D42 D0 05              5092 	pop	ar5
                           5093 ;	..\COMMON\easyax5043.c:913: AX5043_PKTADDR1 ^= pn ^ inv;
   0D44 ED                 5094 	mov	a,r5
   0D45 6E                 5095 	xrl	a,r6
   0D46 FA                 5096 	mov	r2,a
   0D47 EC                 5097 	mov	a,r4
   0D48 6F                 5098 	xrl	a,r7
   0D49 FB                 5099 	mov	r3,a
   0D4A 90 42 06           5100 	mov	dptr,#_AX5043_PKTADDR1
   0D4D E0                 5101 	movx	a,@dptr
   0D4E 79 00              5102 	mov	r1,#0x00
   0D50 62 02              5103 	xrl	ar2,a
   0D52 E9                 5104 	mov	a,r1
   0D53 62 03              5105 	xrl	ar3,a
   0D55 90 42 06           5106 	mov	dptr,#_AX5043_PKTADDR1
   0D58 EA                 5107 	mov	a,r2
   0D59 F0                 5108 	movx	@dptr,a
                           5109 ;	..\COMMON\easyax5043.c:914: pn = pn9_advance_byte(pn);
   0D5A 8E 82              5110 	mov	dpl,r6
   0D5C 8F 83              5111 	mov	dph,r7
   0D5E C0 05              5112 	push	ar5
   0D60 C0 04              5113 	push	ar4
   0D62 12s00r00           5114 	lcall	_pn9_advance_byte
   0D65 AE 82              5115 	mov	r6,dpl
   0D67 AF 83              5116 	mov	r7,dph
   0D69 D0 04              5117 	pop	ar4
   0D6B D0 05              5118 	pop	ar5
                           5119 ;	..\COMMON\easyax5043.c:915: AX5043_PKTADDR2 ^= pn ^ inv;
   0D6D ED                 5120 	mov	a,r5
   0D6E 6E                 5121 	xrl	a,r6
   0D6F FA                 5122 	mov	r2,a
   0D70 EC                 5123 	mov	a,r4
   0D71 6F                 5124 	xrl	a,r7
   0D72 FB                 5125 	mov	r3,a
   0D73 90 42 05           5126 	mov	dptr,#_AX5043_PKTADDR2
   0D76 E0                 5127 	movx	a,@dptr
   0D77 79 00              5128 	mov	r1,#0x00
   0D79 62 02              5129 	xrl	ar2,a
   0D7B E9                 5130 	mov	a,r1
   0D7C 62 03              5131 	xrl	ar3,a
   0D7E 90 42 05           5132 	mov	dptr,#_AX5043_PKTADDR2
   0D81 EA                 5133 	mov	a,r2
   0D82 F0                 5134 	movx	@dptr,a
                           5135 ;	..\COMMON\easyax5043.c:916: pn = pn9_advance_byte(pn);
   0D83 8E 82              5136 	mov	dpl,r6
   0D85 8F 83              5137 	mov	dph,r7
   0D87 C0 05              5138 	push	ar5
   0D89 C0 04              5139 	push	ar4
   0D8B 12s00r00           5140 	lcall	_pn9_advance_byte
   0D8E AE 82              5141 	mov	r6,dpl
   0D90 AF 83              5142 	mov	r7,dph
   0D92 D0 04              5143 	pop	ar4
   0D94 D0 05              5144 	pop	ar5
                           5145 ;	..\COMMON\easyax5043.c:917: AX5043_PKTADDR3 ^= pn ^ inv;
   0D96 ED                 5146 	mov	a,r5
   0D97 62 06              5147 	xrl	ar6,a
   0D99 EC                 5148 	mov	a,r4
   0D9A 62 07              5149 	xrl	ar7,a
   0D9C 90 42 04           5150 	mov	dptr,#_AX5043_PKTADDR3
   0D9F E0                 5151 	movx	a,@dptr
   0DA0 7C 00              5152 	mov	r4,#0x00
   0DA2 62 06              5153 	xrl	ar6,a
   0DA4 EC                 5154 	mov	a,r4
   0DA5 62 07              5155 	xrl	ar7,a
   0DA7 90 42 04           5156 	mov	dptr,#_AX5043_PKTADDR3
   0DAA EE                 5157 	mov	a,r6
   0DAB F0                 5158 	movx	@dptr,a
   0DAC 22                 5159 	ret
                           5160 ;------------------------------------------------------------
                           5161 ;Allocation info for local variables in function 'ax5043_init_registers'
                           5162 ;------------------------------------------------------------
                           5163 ;	..\COMMON\easyax5043.c:921: static void ax5043_init_registers(void)
                           5164 ;	-----------------------------------------
                           5165 ;	 function ax5043_init_registers
                           5166 ;	-----------------------------------------
   0DAD                    5167 _ax5043_init_registers:
                           5168 ;	..\COMMON\easyax5043.c:923: ax5043_set_registers();
   0DAD 12s00r00           5169 	lcall	_ax5043_set_registers
                           5170 ;	..\COMMON\easyax5043.c:928: AX5043_PKTLENOFFSET += axradio_framing_swcrclen; // add len offs for software CRC16 (used for both, fixed and variable length packets
   0DB0 90s00r00           5171 	mov	dptr,#_axradio_framing_swcrclen
   0DB3 E4                 5172 	clr	a
   0DB4 93                 5173 	movc	a,@a+dptr
   0DB5 FF                 5174 	mov	r7,a
   0DB6 90 42 02           5175 	mov	dptr,#_AX5043_PKTLENOFFSET
   0DB9 E0                 5176 	movx	a,@dptr
   0DBA FE                 5177 	mov	r6,a
   0DBB 90 42 02           5178 	mov	dptr,#_AX5043_PKTLENOFFSET
   0DBE EF                 5179 	mov	a,r7
   0DBF 2E                 5180 	add	a,r6
   0DC0 F0                 5181 	movx	@dptr,a
                           5182 ;	..\COMMON\easyax5043.c:929: AX5043_PINFUNCIRQ = 0x03; // use as IRQ pin
   0DC1 90 40 24           5183 	mov	dptr,#_AX5043_PINFUNCIRQ
   0DC4 74 03              5184 	mov	a,#0x03
   0DC6 F0                 5185 	movx	@dptr,a
                           5186 ;	..\COMMON\easyax5043.c:930: AX5043_PKTSTOREFLAGS = 0x15; // store RF offset, RSSI and delimiter timing
   0DC7 90 42 32           5187 	mov	dptr,#_AX5043_PKTSTOREFLAGS
   0DCA 74 15              5188 	mov	a,#0x15
   0DCC F0                 5189 	movx	@dptr,a
                           5190 ;	..\COMMON\easyax5043.c:931: axradio_setaddrregs();
   0DCD 02s0Cr87           5191 	ljmp	_axradio_setaddrregs
                           5192 ;------------------------------------------------------------
                           5193 ;Allocation info for local variables in function 'axradio_sync_addtime'
                           5194 ;------------------------------------------------------------
                           5195 ;dt                        Allocated to registers r4 r5 r6 r7 
                           5196 ;------------------------------------------------------------
                           5197 ;	..\COMMON\easyax5043.c:938: static __reentrantb void axradio_sync_addtime(uint32_t dt) __reentrant
                           5198 ;	-----------------------------------------
                           5199 ;	 function axradio_sync_addtime
                           5200 ;	-----------------------------------------
   0DD0                    5201 _axradio_sync_addtime:
   0DD0 AC 82              5202 	mov	r4,dpl
   0DD2 AD 83              5203 	mov	r5,dph
   0DD4 AE F0              5204 	mov	r6,b
   0DD6 FF                 5205 	mov	r7,a
                           5206 ;	..\COMMON\easyax5043.c:940: axradio_sync_time += dt;
   0DD7 90s00r0C           5207 	mov	dptr,#_axradio_sync_time
   0DDA E0                 5208 	movx	a,@dptr
   0DDB F8                 5209 	mov	r0,a
   0DDC A3                 5210 	inc	dptr
   0DDD E0                 5211 	movx	a,@dptr
   0DDE F9                 5212 	mov	r1,a
   0DDF A3                 5213 	inc	dptr
   0DE0 E0                 5214 	movx	a,@dptr
   0DE1 FA                 5215 	mov	r2,a
   0DE2 A3                 5216 	inc	dptr
   0DE3 E0                 5217 	movx	a,@dptr
   0DE4 FB                 5218 	mov	r3,a
   0DE5 90s00r0C           5219 	mov	dptr,#_axradio_sync_time
   0DE8 EC                 5220 	mov	a,r4
   0DE9 28                 5221 	add	a,r0
   0DEA F0                 5222 	movx	@dptr,a
   0DEB ED                 5223 	mov	a,r5
   0DEC 39                 5224 	addc	a,r1
   0DED A3                 5225 	inc	dptr
   0DEE F0                 5226 	movx	@dptr,a
   0DEF EE                 5227 	mov	a,r6
   0DF0 3A                 5228 	addc	a,r2
   0DF1 A3                 5229 	inc	dptr
   0DF2 F0                 5230 	movx	@dptr,a
   0DF3 EF                 5231 	mov	a,r7
   0DF4 3B                 5232 	addc	a,r3
   0DF5 A3                 5233 	inc	dptr
   0DF6 F0                 5234 	movx	@dptr,a
   0DF7 22                 5235 	ret
                           5236 ;------------------------------------------------------------
                           5237 ;Allocation info for local variables in function 'axradio_sync_subtime'
                           5238 ;------------------------------------------------------------
                           5239 ;dt                        Allocated to registers r4 r5 r6 r7 
                           5240 ;------------------------------------------------------------
                           5241 ;	..\COMMON\easyax5043.c:943: static __reentrantb void axradio_sync_subtime(uint32_t dt) __reentrant
                           5242 ;	-----------------------------------------
                           5243 ;	 function axradio_sync_subtime
                           5244 ;	-----------------------------------------
   0DF8                    5245 _axradio_sync_subtime:
   0DF8 AC 82              5246 	mov	r4,dpl
   0DFA AD 83              5247 	mov	r5,dph
   0DFC AE F0              5248 	mov	r6,b
   0DFE FF                 5249 	mov	r7,a
                           5250 ;	..\COMMON\easyax5043.c:945: axradio_sync_time -= dt;
   0DFF 90s00r0C           5251 	mov	dptr,#_axradio_sync_time
   0E02 E0                 5252 	movx	a,@dptr
   0E03 F8                 5253 	mov	r0,a
   0E04 A3                 5254 	inc	dptr
   0E05 E0                 5255 	movx	a,@dptr
   0E06 F9                 5256 	mov	r1,a
   0E07 A3                 5257 	inc	dptr
   0E08 E0                 5258 	movx	a,@dptr
   0E09 FA                 5259 	mov	r2,a
   0E0A A3                 5260 	inc	dptr
   0E0B E0                 5261 	movx	a,@dptr
   0E0C FB                 5262 	mov	r3,a
   0E0D 90s00r0C           5263 	mov	dptr,#_axradio_sync_time
   0E10 E8                 5264 	mov	a,r0
   0E11 C3                 5265 	clr	c
   0E12 9C                 5266 	subb	a,r4
   0E13 F0                 5267 	movx	@dptr,a
   0E14 E9                 5268 	mov	a,r1
   0E15 9D                 5269 	subb	a,r5
   0E16 A3                 5270 	inc	dptr
   0E17 F0                 5271 	movx	@dptr,a
   0E18 EA                 5272 	mov	a,r2
   0E19 9E                 5273 	subb	a,r6
   0E1A A3                 5274 	inc	dptr
   0E1B F0                 5275 	movx	@dptr,a
   0E1C EB                 5276 	mov	a,r3
   0E1D 9F                 5277 	subb	a,r7
   0E1E A3                 5278 	inc	dptr
   0E1F F0                 5279 	movx	@dptr,a
   0E20 22                 5280 	ret
                           5281 ;------------------------------------------------------------
                           5282 ;Allocation info for local variables in function 'axradio_sync_settimeradv'
                           5283 ;------------------------------------------------------------
                           5284 ;dt                        Allocated to registers r4 r5 r6 r7 
                           5285 ;------------------------------------------------------------
                           5286 ;	..\COMMON\easyax5043.c:948: static __reentrantb void axradio_sync_settimeradv(uint32_t dt) __reentrant
                           5287 ;	-----------------------------------------
                           5288 ;	 function axradio_sync_settimeradv
                           5289 ;	-----------------------------------------
   0E21                    5290 _axradio_sync_settimeradv:
   0E21 AC 82              5291 	mov	r4,dpl
   0E23 AD 83              5292 	mov	r5,dph
   0E25 AE F0              5293 	mov	r6,b
   0E27 FF                 5294 	mov	r7,a
                           5295 ;	..\COMMON\easyax5043.c:950: axradio_timer.time = axradio_sync_time;
   0E28 90s00r0C           5296 	mov	dptr,#_axradio_sync_time
   0E2B E0                 5297 	movx	a,@dptr
   0E2C F8                 5298 	mov	r0,a
   0E2D A3                 5299 	inc	dptr
   0E2E E0                 5300 	movx	a,@dptr
   0E2F F9                 5301 	mov	r1,a
   0E30 A3                 5302 	inc	dptr
   0E31 E0                 5303 	movx	a,@dptr
   0E32 FA                 5304 	mov	r2,a
   0E33 A3                 5305 	inc	dptr
   0E34 E0                 5306 	movx	a,@dptr
   0E35 FB                 5307 	mov	r3,a
   0E36 90s02r89           5308 	mov	dptr,#(_axradio_timer + 0x0004)
   0E39 E8                 5309 	mov	a,r0
   0E3A F0                 5310 	movx	@dptr,a
   0E3B A3                 5311 	inc	dptr
   0E3C E9                 5312 	mov	a,r1
   0E3D F0                 5313 	movx	@dptr,a
   0E3E A3                 5314 	inc	dptr
   0E3F EA                 5315 	mov	a,r2
   0E40 F0                 5316 	movx	@dptr,a
   0E41 A3                 5317 	inc	dptr
   0E42 EB                 5318 	mov	a,r3
   0E43 F0                 5319 	movx	@dptr,a
                           5320 ;	..\COMMON\easyax5043.c:951: axradio_timer.time -= dt;
   0E44 E8                 5321 	mov	a,r0
   0E45 C3                 5322 	clr	c
   0E46 9C                 5323 	subb	a,r4
   0E47 FC                 5324 	mov	r4,a
   0E48 E9                 5325 	mov	a,r1
   0E49 9D                 5326 	subb	a,r5
   0E4A FD                 5327 	mov	r5,a
   0E4B EA                 5328 	mov	a,r2
   0E4C 9E                 5329 	subb	a,r6
   0E4D FE                 5330 	mov	r6,a
   0E4E EB                 5331 	mov	a,r3
   0E4F 9F                 5332 	subb	a,r7
   0E50 FF                 5333 	mov	r7,a
   0E51 90s02r89           5334 	mov	dptr,#(_axradio_timer + 0x0004)
   0E54 EC                 5335 	mov	a,r4
   0E55 F0                 5336 	movx	@dptr,a
   0E56 A3                 5337 	inc	dptr
   0E57 ED                 5338 	mov	a,r5
   0E58 F0                 5339 	movx	@dptr,a
   0E59 A3                 5340 	inc	dptr
   0E5A EE                 5341 	mov	a,r6
   0E5B F0                 5342 	movx	@dptr,a
   0E5C A3                 5343 	inc	dptr
   0E5D EF                 5344 	mov	a,r7
   0E5E F0                 5345 	movx	@dptr,a
   0E5F 22                 5346 	ret
                           5347 ;------------------------------------------------------------
                           5348 ;Allocation info for local variables in function 'axradio_sync_adjustperiodcorr'
                           5349 ;------------------------------------------------------------
                           5350 ;dt                        Allocated to registers r4 r5 r6 r7 
                           5351 ;------------------------------------------------------------
                           5352 ;	..\COMMON\easyax5043.c:954: static void axradio_sync_adjustperiodcorr(void)
                           5353 ;	-----------------------------------------
                           5354 ;	 function axradio_sync_adjustperiodcorr
                           5355 ;	-----------------------------------------
   0E60                    5356 _axradio_sync_adjustperiodcorr:
                           5357 ;	..\COMMON\easyax5043.c:956: int32_t __autodata dt = axradio_conv_time_totimer0(axradio_cb_receive.st.time.t) - axradio_sync_time;
   0E60 90s02r34           5358 	mov	dptr,#(_axradio_cb_receive + 0x0006)
   0E63 E0                 5359 	movx	a,@dptr
   0E64 FC                 5360 	mov	r4,a
   0E65 A3                 5361 	inc	dptr
   0E66 E0                 5362 	movx	a,@dptr
   0E67 FD                 5363 	mov	r5,a
   0E68 A3                 5364 	inc	dptr
   0E69 E0                 5365 	movx	a,@dptr
   0E6A FE                 5366 	mov	r6,a
   0E6B A3                 5367 	inc	dptr
   0E6C E0                 5368 	movx	a,@dptr
   0E6D 8C 82              5369 	mov	dpl,r4
   0E6F 8D 83              5370 	mov	dph,r5
   0E71 8E F0              5371 	mov	b,r6
   0E73 12s00r42           5372 	lcall	_axradio_conv_time_totimer0
   0E76 AC 82              5373 	mov	r4,dpl
   0E78 AD 83              5374 	mov	r5,dph
   0E7A AE F0              5375 	mov	r6,b
   0E7C FF                 5376 	mov	r7,a
   0E7D 90s00r0C           5377 	mov	dptr,#_axradio_sync_time
   0E80 E0                 5378 	movx	a,@dptr
   0E81 F8                 5379 	mov	r0,a
   0E82 A3                 5380 	inc	dptr
   0E83 E0                 5381 	movx	a,@dptr
   0E84 F9                 5382 	mov	r1,a
   0E85 A3                 5383 	inc	dptr
   0E86 E0                 5384 	movx	a,@dptr
   0E87 FA                 5385 	mov	r2,a
   0E88 A3                 5386 	inc	dptr
   0E89 E0                 5387 	movx	a,@dptr
   0E8A FB                 5388 	mov	r3,a
   0E8B EC                 5389 	mov	a,r4
   0E8C C3                 5390 	clr	c
   0E8D 98                 5391 	subb	a,r0
   0E8E FC                 5392 	mov	r4,a
   0E8F ED                 5393 	mov	a,r5
   0E90 99                 5394 	subb	a,r1
   0E91 FD                 5395 	mov	r5,a
   0E92 EE                 5396 	mov	a,r6
   0E93 9A                 5397 	subb	a,r2
   0E94 FE                 5398 	mov	r6,a
   0E95 EF                 5399 	mov	a,r7
   0E96 9B                 5400 	subb	a,r3
   0E97 FF                 5401 	mov	r7,a
                           5402 ;	..\COMMON\easyax5043.c:957: axradio_cb_receive.st.rx.phy.timeoffset = dt;
   0E98 8C 02              5403 	mov	ar2,r4
   0E9A 8D 03              5404 	mov	ar3,r5
   0E9C 90s02r3E           5405 	mov	dptr,#(_axradio_cb_receive + 0x0010)
   0E9F EA                 5406 	mov	a,r2
   0EA0 F0                 5407 	movx	@dptr,a
   0EA1 A3                 5408 	inc	dptr
   0EA2 EB                 5409 	mov	a,r3
   0EA3 F0                 5410 	movx	@dptr,a
                           5411 ;	..\COMMON\easyax5043.c:958: if (!checksignedlimit16(axradio_sync_periodcorr, axradio_sync_slave_maxperiod)) {
   0EA4 90s00r10           5412 	mov	dptr,#_axradio_sync_periodcorr
   0EA7 E0                 5413 	movx	a,@dptr
   0EA8 FA                 5414 	mov	r2,a
   0EA9 A3                 5415 	inc	dptr
   0EAA E0                 5416 	movx	a,@dptr
   0EAB FB                 5417 	mov	r3,a
   0EAC 90s00r00           5418 	mov	dptr,#_axradio_sync_slave_maxperiod
   0EAF E4                 5419 	clr	a
   0EB0 93                 5420 	movc	a,@a+dptr
   0EB1 C0 E0              5421 	push	acc
   0EB3 74 01              5422 	mov	a,#0x01
   0EB5 93                 5423 	movc	a,@a+dptr
   0EB6 C0 E0              5424 	push	acc
   0EB8 8A 82              5425 	mov	dpl,r2
   0EBA 8B 83              5426 	mov	dph,r3
   0EBC 12s00r00           5427 	lcall	_checksignedlimit16
   0EBF AB 82              5428 	mov	r3,dpl
   0EC1 15 81              5429 	dec	sp
   0EC3 15 81              5430 	dec	sp
   0EC5 EB                 5431 	mov	a,r3
   0EC6 70 4B              5432 	jnz	00102$
                           5433 ;	..\COMMON\easyax5043.c:959: axradio_sync_addtime(dt);
   0EC8 8C 82              5434 	mov	dpl,r4
   0ECA 8D 83              5435 	mov	dph,r5
   0ECC 8E F0              5436 	mov	b,r6
   0ECE EF                 5437 	mov	a,r7
   0ECF C0 07              5438 	push	ar7
   0ED1 C0 06              5439 	push	ar6
   0ED3 C0 05              5440 	push	ar5
   0ED5 C0 04              5441 	push	ar4
   0ED7 12s0DrD0           5442 	lcall	_axradio_sync_addtime
   0EDA D0 04              5443 	pop	ar4
   0EDC D0 05              5444 	pop	ar5
   0EDE D0 06              5445 	pop	ar6
   0EE0 D0 07              5446 	pop	ar7
                           5447 ;	..\COMMON\easyax5043.c:960: dt <<= SYNC_K1;
   0EE2 EF                 5448 	mov	a,r7
   0EE3 C4                 5449 	swap	a
   0EE4 23                 5450 	rl	a
   0EE5 54 E0              5451 	anl	a,#0xE0
   0EE7 CE                 5452 	xch	a,r6
   0EE8 C4                 5453 	swap	a
   0EE9 23                 5454 	rl	a
   0EEA CE                 5455 	xch	a,r6
   0EEB 6E                 5456 	xrl	a,r6
   0EEC CE                 5457 	xch	a,r6
   0EED 54 E0              5458 	anl	a,#0xE0
   0EEF CE                 5459 	xch	a,r6
   0EF0 6E                 5460 	xrl	a,r6
   0EF1 FF                 5461 	mov	r7,a
   0EF2 ED                 5462 	mov	a,r5
   0EF3 C4                 5463 	swap	a
   0EF4 23                 5464 	rl	a
   0EF5 54 1F              5465 	anl	a,#0x1F
   0EF7 4E                 5466 	orl	a,r6
   0EF8 FE                 5467 	mov	r6,a
   0EF9 ED                 5468 	mov	a,r5
   0EFA C4                 5469 	swap	a
   0EFB 23                 5470 	rl	a
   0EFC 54 E0              5471 	anl	a,#0xE0
   0EFE CC                 5472 	xch	a,r4
   0EFF C4                 5473 	swap	a
   0F00 23                 5474 	rl	a
   0F01 CC                 5475 	xch	a,r4
   0F02 6C                 5476 	xrl	a,r4
   0F03 CC                 5477 	xch	a,r4
   0F04 54 E0              5478 	anl	a,#0xE0
   0F06 CC                 5479 	xch	a,r4
   0F07 6C                 5480 	xrl	a,r4
   0F08 FD                 5481 	mov	r5,a
                           5482 ;	..\COMMON\easyax5043.c:961: axradio_sync_periodcorr = dt;
   0F09 90s00r10           5483 	mov	dptr,#_axradio_sync_periodcorr
   0F0C EC                 5484 	mov	a,r4
   0F0D F0                 5485 	movx	@dptr,a
   0F0E A3                 5486 	inc	dptr
   0F0F ED                 5487 	mov	a,r5
   0F10 F0                 5488 	movx	@dptr,a
   0F11 80 48              5489 	sjmp	00103$
   0F13                    5490 00102$:
                           5491 ;	..\COMMON\easyax5043.c:963: axradio_sync_periodcorr += dt;
   0F13 90s00r10           5492 	mov	dptr,#_axradio_sync_periodcorr
   0F16 E0                 5493 	movx	a,@dptr
   0F17 FA                 5494 	mov	r2,a
   0F18 A3                 5495 	inc	dptr
   0F19 E0                 5496 	movx	a,@dptr
   0F1A FB                 5497 	mov	r3,a
   0F1B 8A 00              5498 	mov	ar0,r2
   0F1D EB                 5499 	mov	a,r3
   0F1E F9                 5500 	mov	r1,a
   0F1F 33                 5501 	rlc	a
   0F20 95 E0              5502 	subb	a,acc
   0F22 FA                 5503 	mov	r2,a
   0F23 FB                 5504 	mov	r3,a
   0F24 EC                 5505 	mov	a,r4
   0F25 28                 5506 	add	a,r0
   0F26 F8                 5507 	mov	r0,a
   0F27 ED                 5508 	mov	a,r5
   0F28 39                 5509 	addc	a,r1
   0F29 F9                 5510 	mov	r1,a
   0F2A EE                 5511 	mov	a,r6
   0F2B 3A                 5512 	addc	a,r2
   0F2C EF                 5513 	mov	a,r7
   0F2D 3B                 5514 	addc	a,r3
   0F2E 90s00r10           5515 	mov	dptr,#_axradio_sync_periodcorr
   0F31 E8                 5516 	mov	a,r0
   0F32 F0                 5517 	movx	@dptr,a
   0F33 A3                 5518 	inc	dptr
   0F34 E9                 5519 	mov	a,r1
   0F35 F0                 5520 	movx	@dptr,a
                           5521 ;	..\COMMON\easyax5043.c:964: dt >>= SYNC_K0;
   0F36 EF                 5522 	mov	a,r7
   0F37 A2 E7              5523 	mov	c,acc.7
   0F39 13                 5524 	rrc	a
   0F3A FF                 5525 	mov	r7,a
   0F3B EE                 5526 	mov	a,r6
   0F3C 13                 5527 	rrc	a
   0F3D FE                 5528 	mov	r6,a
   0F3E ED                 5529 	mov	a,r5
   0F3F 13                 5530 	rrc	a
   0F40 FD                 5531 	mov	r5,a
   0F41 EC                 5532 	mov	a,r4
   0F42 13                 5533 	rrc	a
   0F43 FC                 5534 	mov	r4,a
   0F44 EF                 5535 	mov	a,r7
   0F45 A2 E7              5536 	mov	c,acc.7
   0F47 13                 5537 	rrc	a
   0F48 FF                 5538 	mov	r7,a
   0F49 EE                 5539 	mov	a,r6
   0F4A 13                 5540 	rrc	a
   0F4B FE                 5541 	mov	r6,a
   0F4C ED                 5542 	mov	a,r5
   0F4D 13                 5543 	rrc	a
   0F4E FD                 5544 	mov	r5,a
   0F4F EC                 5545 	mov	a,r4
   0F50 13                 5546 	rrc	a
                           5547 ;	..\COMMON\easyax5043.c:965: axradio_sync_addtime(dt);
   0F51 F5 82              5548 	mov	dpl,a
   0F53 8D 83              5549 	mov	dph,r5
   0F55 8E F0              5550 	mov	b,r6
   0F57 EF                 5551 	mov	a,r7
   0F58 12s0DrD0           5552 	lcall	_axradio_sync_addtime
   0F5B                    5553 00103$:
                           5554 ;	..\COMMON\easyax5043.c:967: axradio_sync_periodcorr = signedlimit16(axradio_sync_periodcorr, axradio_sync_slave_maxperiod);
   0F5B 90s00r10           5555 	mov	dptr,#_axradio_sync_periodcorr
   0F5E E0                 5556 	movx	a,@dptr
   0F5F FE                 5557 	mov	r6,a
   0F60 A3                 5558 	inc	dptr
   0F61 E0                 5559 	movx	a,@dptr
   0F62 FF                 5560 	mov	r7,a
   0F63 90s00r00           5561 	mov	dptr,#_axradio_sync_slave_maxperiod
   0F66 E4                 5562 	clr	a
   0F67 93                 5563 	movc	a,@a+dptr
   0F68 C0 E0              5564 	push	acc
   0F6A 74 01              5565 	mov	a,#0x01
   0F6C 93                 5566 	movc	a,@a+dptr
   0F6D C0 E0              5567 	push	acc
   0F6F 8E 82              5568 	mov	dpl,r6
   0F71 8F 83              5569 	mov	dph,r7
   0F73 12s00r00           5570 	lcall	_signedlimit16
   0F76 AE 82              5571 	mov	r6,dpl
   0F78 AF 83              5572 	mov	r7,dph
   0F7A 15 81              5573 	dec	sp
   0F7C 15 81              5574 	dec	sp
   0F7E 90s00r10           5575 	mov	dptr,#_axradio_sync_periodcorr
   0F81 EE                 5576 	mov	a,r6
   0F82 F0                 5577 	movx	@dptr,a
   0F83 A3                 5578 	inc	dptr
   0F84 EF                 5579 	mov	a,r7
   0F85 F0                 5580 	movx	@dptr,a
   0F86 22                 5581 	ret
                           5582 ;------------------------------------------------------------
                           5583 ;Allocation info for local variables in function 'axradio_sync_slave_nextperiod'
                           5584 ;------------------------------------------------------------
                           5585 ;c                         Allocated to registers r6 r7 
                           5586 ;------------------------------------------------------------
                           5587 ;	..\COMMON\easyax5043.c:970: static void axradio_sync_slave_nextperiod()
                           5588 ;	-----------------------------------------
                           5589 ;	 function axradio_sync_slave_nextperiod
                           5590 ;	-----------------------------------------
   0F87                    5591 _axradio_sync_slave_nextperiod:
                           5592 ;	..\COMMON\easyax5043.c:972: axradio_sync_addtime(axradio_sync_period);
   0F87 90s00r00           5593 	mov	dptr,#_axradio_sync_period
   0F8A E4                 5594 	clr	a
   0F8B 93                 5595 	movc	a,@a+dptr
   0F8C FC                 5596 	mov	r4,a
   0F8D 74 01              5597 	mov	a,#0x01
   0F8F 93                 5598 	movc	a,@a+dptr
   0F90 FD                 5599 	mov	r5,a
   0F91 74 02              5600 	mov	a,#0x02
   0F93 93                 5601 	movc	a,@a+dptr
   0F94 FE                 5602 	mov	r6,a
   0F95 74 03              5603 	mov	a,#0x03
   0F97 93                 5604 	movc	a,@a+dptr
   0F98 8C 82              5605 	mov	dpl,r4
   0F9A 8D 83              5606 	mov	dph,r5
   0F9C 8E F0              5607 	mov	b,r6
   0F9E 12s0DrD0           5608 	lcall	_axradio_sync_addtime
                           5609 ;	..\COMMON\easyax5043.c:973: if (!checksignedlimit16(axradio_sync_periodcorr, axradio_sync_slave_maxperiod))
   0FA1 90s00r10           5610 	mov	dptr,#_axradio_sync_periodcorr
   0FA4 E0                 5611 	movx	a,@dptr
   0FA5 FE                 5612 	mov	r6,a
   0FA6 A3                 5613 	inc	dptr
   0FA7 E0                 5614 	movx	a,@dptr
   0FA8 FF                 5615 	mov	r7,a
   0FA9 90s00r00           5616 	mov	dptr,#_axradio_sync_slave_maxperiod
   0FAC E4                 5617 	clr	a
   0FAD 93                 5618 	movc	a,@a+dptr
   0FAE C0 E0              5619 	push	acc
   0FB0 74 01              5620 	mov	a,#0x01
   0FB2 93                 5621 	movc	a,@a+dptr
   0FB3 C0 E0              5622 	push	acc
   0FB5 8E 82              5623 	mov	dpl,r6
   0FB7 8F 83              5624 	mov	dph,r7
   0FB9 12s00r00           5625 	lcall	_checksignedlimit16
   0FBC AF 82              5626 	mov	r7,dpl
   0FBE 15 81              5627 	dec	sp
   0FC0 15 81              5628 	dec	sp
   0FC2 EF                 5629 	mov	a,r7
   0FC3 70 01              5630 	jnz	00102$
                           5631 ;	..\COMMON\easyax5043.c:974: return;
   0FC5 22                 5632 	ret
   0FC6                    5633 00102$:
                           5634 ;	..\COMMON\easyax5043.c:976: int16_t __autodata c = axradio_sync_periodcorr;
   0FC6 90s00r10           5635 	mov	dptr,#_axradio_sync_periodcorr
   0FC9 E0                 5636 	movx	a,@dptr
   0FCA FE                 5637 	mov	r6,a
   0FCB A3                 5638 	inc	dptr
   0FCC E0                 5639 	movx	a,@dptr
                           5640 ;	..\COMMON\easyax5043.c:977: axradio_sync_addtime(c >> SYNC_K1);
   0FCD FF                 5641 	mov	r7,a
   0FCE C4                 5642 	swap	a
   0FCF 03                 5643 	rr	a
   0FD0 CE                 5644 	xch	a,r6
   0FD1 C4                 5645 	swap	a
   0FD2 03                 5646 	rr	a
   0FD3 54 07              5647 	anl	a,#0x07
   0FD5 6E                 5648 	xrl	a,r6
   0FD6 CE                 5649 	xch	a,r6
   0FD7 54 07              5650 	anl	a,#0x07
   0FD9 CE                 5651 	xch	a,r6
   0FDA 6E                 5652 	xrl	a,r6
   0FDB CE                 5653 	xch	a,r6
   0FDC 30 E2 02           5654 	jnb	acc.2,00108$
   0FDF 44 F8              5655 	orl	a,#0xF8
   0FE1                    5656 00108$:
   0FE1 FF                 5657 	mov	r7,a
   0FE2 33                 5658 	rlc	a
   0FE3 95 E0              5659 	subb	a,acc
   0FE5 FD                 5660 	mov	r5,a
   0FE6 8E 82              5661 	mov	dpl,r6
   0FE8 8F 83              5662 	mov	dph,r7
   0FEA 8D F0              5663 	mov	b,r5
   0FEC 02s0DrD0           5664 	ljmp	_axradio_sync_addtime
                           5665 ;------------------------------------------------------------
                           5666 ;Allocation info for local variables in function 'axradio_timer_callback'
                           5667 ;------------------------------------------------------------
                           5668 ;desc                      Allocated to registers 
                           5669 ;r                         Allocated to registers r7 
                           5670 ;idx                       Allocated to registers r7 
                           5671 ;idx                       Allocated to registers r7 
                           5672 ;------------------------------------------------------------
                           5673 ;	..\COMMON\easyax5043.c:983: static void axradio_timer_callback(struct wtimer_desc __xdata *desc)
                           5674 ;	-----------------------------------------
                           5675 ;	 function axradio_timer_callback
                           5676 ;	-----------------------------------------
   0FEF                    5677 _axradio_timer_callback:
                           5678 ;	..\COMMON\easyax5043.c:986: switch (axradio_mode) {
   0FEF AF*00              5679 	mov	r7,_axradio_mode
   0FF1 BF 10 00           5680 	cjne	r7,#0x10,00231$
   0FF4                    5681 00231$:
   0FF4 50 01              5682 	jnc	00232$
   0FF6 22                 5683 	ret
   0FF7                    5684 00232$:
   0FF7 EF                 5685 	mov	a,r7
   0FF8 24 DC              5686 	add	a,#0xff - 0x23
   0FFA 50 01              5687 	jnc	00233$
   0FFC 22                 5688 	ret
   0FFD                    5689 00233$:
   0FFD EF                 5690 	mov	a,r7
   0FFE 24 F0              5691 	add	a,#0xF0
   1000 FF                 5692 	mov	r7,a
   1001 24 09              5693 	add	a,#(00234$-3-.)
   1003 83                 5694 	movc	a,@a+pc
   1004 C0 E0              5695 	push	acc
   1006 EF                 5696 	mov	a,r7
   1007 24 17              5697 	add	a,#(00235$-3-.)
   1009 83                 5698 	movc	a,@a+pc
   100A C0 E0              5699 	push	acc
   100C 22                 5700 	ret
   100D                    5701 00234$:
   100DrD3                 5702 	.db	00110$
   100ErD3                 5703 	.db	00111$
   100Fr69                 5704 	.db	00121$
   1010r69                 5705 	.db	00122$
   1011rED                 5706 	.db	00171$
   1012rED                 5707 	.db	00171$
   1013rED                 5708 	.db	00171$
   1014rED                 5709 	.db	00171$
   1015r35                 5710 	.db	00104$
   1016r35                 5711 	.db	00105$
   1017rCA                 5712 	.db	00127$
   1018rCA                 5713 	.db	00128$
   1019r35                 5714 	.db	00101$
   101Ar35                 5715 	.db	00102$
   101Br35                 5716 	.db	00103$
   101CrED                 5717 	.db	00171$
   101Dr60                 5718 	.db	00137$
   101Er60                 5719 	.db	00138$
   101FrFE                 5720 	.db	00150$
   1020rFE                 5721 	.db	00151$
   1021                    5722 00235$:
   1021s10                 5723 	.db	00110$>>8
   1022s10                 5724 	.db	00111$>>8
   1023s11                 5725 	.db	00121$>>8
   1024s11                 5726 	.db	00122$>>8
   1025s17                 5727 	.db	00171$>>8
   1026s17                 5728 	.db	00171$>>8
   1027s17                 5729 	.db	00171$>>8
   1028s17                 5730 	.db	00171$>>8
   1029s10                 5731 	.db	00104$>>8
   102As10                 5732 	.db	00105$>>8
   102Bs11                 5733 	.db	00127$>>8
   102Cs11                 5734 	.db	00128$>>8
   102Ds10                 5735 	.db	00101$>>8
   102Es10                 5736 	.db	00102$>>8
   102Fs10                 5737 	.db	00103$>>8
   1030s17                 5738 	.db	00171$>>8
   1031s12                 5739 	.db	00137$>>8
   1032s12                 5740 	.db	00138$>>8
   1033s13                 5741 	.db	00150$>>8
   1034s13                 5742 	.db	00151$>>8
                           5743 ;	..\COMMON\easyax5043.c:987: case AXRADIO_MODE_STREAM_RECEIVE:
   1035                    5744 00101$:
                           5745 ;	..\COMMON\easyax5043.c:988: case AXRADIO_MODE_STREAM_RECEIVE_UNENC:
   1035                    5746 00102$:
                           5747 ;	..\COMMON\easyax5043.c:989: case AXRADIO_MODE_STREAM_RECEIVE_SCRAM:
   1035                    5748 00103$:
                           5749 ;	..\COMMON\easyax5043.c:990: case AXRADIO_MODE_ASYNC_RECEIVE:
   1035                    5750 00104$:
                           5751 ;	..\COMMON\easyax5043.c:991: case AXRADIO_MODE_WOR_RECEIVE:
   1035                    5752 00105$:
                           5753 ;	..\COMMON\easyax5043.c:992: if (axradio_syncstate == syncstate_asynctx)
   1035 90s00r00           5754 	mov	dptr,#_axradio_syncstate
   1038 E0                 5755 	movx	a,@dptr
   1039 FF                 5756 	mov	r7,a
   103A BF 02 03           5757 	cjne	r7,#0x02,00236$
   103D 02s10rD3           5758 	ljmp	00112$
   1040                    5759 00236$:
                           5760 ;	..\COMMON\easyax5043.c:994: wtimer_remove(&axradio_timer);
   1040 90s02r85           5761 	mov	dptr,#_axradio_timer
   1043 12s00r00           5762 	lcall	_wtimer_remove
                           5763 ;	..\COMMON\easyax5043.c:995: rearmcstimer:
   1046                    5764 00108$:
                           5765 ;	..\COMMON\easyax5043.c:996: axradio_timer.time = axradio_phy_cs_period;
   1046 90s00r00           5766 	mov	dptr,#_axradio_phy_cs_period
   1049 E4                 5767 	clr	a
   104A 93                 5768 	movc	a,@a+dptr
   104B FE                 5769 	mov	r6,a
   104C 74 01              5770 	mov	a,#0x01
   104E 93                 5771 	movc	a,@a+dptr
   104F FF                 5772 	mov	r7,a
   1050 7D 00              5773 	mov	r5,#0x00
   1052 7C 00              5774 	mov	r4,#0x00
   1054 90s02r89           5775 	mov	dptr,#(_axradio_timer + 0x0004)
   1057 EE                 5776 	mov	a,r6
   1058 F0                 5777 	movx	@dptr,a
   1059 A3                 5778 	inc	dptr
   105A EF                 5779 	mov	a,r7
   105B F0                 5780 	movx	@dptr,a
   105C A3                 5781 	inc	dptr
   105D ED                 5782 	mov	a,r5
   105E F0                 5783 	movx	@dptr,a
   105F A3                 5784 	inc	dptr
   1060 EC                 5785 	mov	a,r4
   1061 F0                 5786 	movx	@dptr,a
                           5787 ;	..\COMMON\easyax5043.c:997: wtimer0_addrelative(&axradio_timer);
   1062 90s02r85           5788 	mov	dptr,#_axradio_timer
   1065 12s00r00           5789 	lcall	_wtimer0_addrelative
                           5790 ;	..\COMMON\easyax5043.c:998: chanstatecb:
   1068                    5791 00109$:
                           5792 ;	..\COMMON\easyax5043.c:999: update_timeanchor();
   1068 12s00r00           5793 	lcall	_update_timeanchor
                           5794 ;	..\COMMON\easyax5043.c:1000: wtimer_remove_callback(&axradio_cb_channelstate.cb);
   106B 90s02r5A           5795 	mov	dptr,#_axradio_cb_channelstate
   106E 12s00r00           5796 	lcall	_wtimer_remove_callback
                           5797 ;	..\COMMON\easyax5043.c:1001: axradio_cb_channelstate.st.error = AXRADIO_ERR_NOERROR;
   1071 90s02r5F           5798 	mov	dptr,#(_axradio_cb_channelstate + 0x0005)
   1074 E4                 5799 	clr	a
   1075 F0                 5800 	movx	@dptr,a
                           5801 ;	..\COMMON\easyax5043.c:1003: int8_t __autodata r = AX5043_RSSI;
   1076 90 40 40           5802 	mov	dptr,#_AX5043_RSSI
   1079 E0                 5803 	movx	a,@dptr
                           5804 ;	..\COMMON\easyax5043.c:1004: axradio_cb_channelstate.st.cs.rssi = r - (int16_t)axradio_phy_rssioffset;
   107A FF                 5805 	mov	r7,a
   107B FD                 5806 	mov	r5,a
   107C 33                 5807 	rlc	a
   107D 95 E0              5808 	subb	a,acc
   107F FE                 5809 	mov	r6,a
   1080 90s00r00           5810 	mov	dptr,#_axradio_phy_rssioffset
   1083 E4                 5811 	clr	a
   1084 93                 5812 	movc	a,@a+dptr
   1085 FC                 5813 	mov	r4,a
   1086 33                 5814 	rlc	a
   1087 95 E0              5815 	subb	a,acc
   1089 FB                 5816 	mov	r3,a
   108A ED                 5817 	mov	a,r5
   108B C3                 5818 	clr	c
   108C 9C                 5819 	subb	a,r4
   108D FD                 5820 	mov	r5,a
   108E EE                 5821 	mov	a,r6
   108F 9B                 5822 	subb	a,r3
   1090 FE                 5823 	mov	r6,a
   1091 90s02r64           5824 	mov	dptr,#(_axradio_cb_channelstate + 0x000a)
   1094 ED                 5825 	mov	a,r5
   1095 F0                 5826 	movx	@dptr,a
   1096 A3                 5827 	inc	dptr
   1097 EE                 5828 	mov	a,r6
   1098 F0                 5829 	movx	@dptr,a
                           5830 ;	..\COMMON\easyax5043.c:1005: axradio_cb_channelstate.st.cs.busy = r >= axradio_phy_channelbusy;
   1099 90s00r00           5831 	mov	dptr,#_axradio_phy_channelbusy
   109C E4                 5832 	clr	a
   109D 93                 5833 	movc	a,@a+dptr
   109E FE                 5834 	mov	r6,a
   109F C3                 5835 	clr	c
   10A0 EF                 5836 	mov	a,r7
   10A1 64 80              5837 	xrl	a,#0x80
   10A3 8E F0              5838 	mov	b,r6
   10A5 63 F0 80           5839 	xrl	b,#0x80
   10A8 95 F0              5840 	subb	a,b
   10AA B3                 5841 	cpl	c
   10AB E4                 5842 	clr	a
   10AC 33                 5843 	rlc	a
   10AD 90s02r66           5844 	mov	dptr,#(_axradio_cb_channelstate + 0x000c)
   10B0 F0                 5845 	movx	@dptr,a
                           5846 ;	..\COMMON\easyax5043.c:1007: axradio_cb_channelstate.st.time.t = axradio_timeanchor.radiotimer;
   10B1 90s00r16           5847 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   10B4 E0                 5848 	movx	a,@dptr
   10B5 FC                 5849 	mov	r4,a
   10B6 A3                 5850 	inc	dptr
   10B7 E0                 5851 	movx	a,@dptr
   10B8 FD                 5852 	mov	r5,a
   10B9 A3                 5853 	inc	dptr
   10BA E0                 5854 	movx	a,@dptr
   10BB FE                 5855 	mov	r6,a
   10BC A3                 5856 	inc	dptr
   10BD E0                 5857 	movx	a,@dptr
   10BE FF                 5858 	mov	r7,a
   10BF 90s02r60           5859 	mov	dptr,#(_axradio_cb_channelstate + 0x0006)
   10C2 EC                 5860 	mov	a,r4
   10C3 F0                 5861 	movx	@dptr,a
   10C4 A3                 5862 	inc	dptr
   10C5 ED                 5863 	mov	a,r5
   10C6 F0                 5864 	movx	@dptr,a
   10C7 A3                 5865 	inc	dptr
   10C8 EE                 5866 	mov	a,r6
   10C9 F0                 5867 	movx	@dptr,a
   10CA A3                 5868 	inc	dptr
   10CB EF                 5869 	mov	a,r7
   10CC F0                 5870 	movx	@dptr,a
                           5871 ;	..\COMMON\easyax5043.c:1008: wtimer_add_callback(&axradio_cb_channelstate.cb);
   10CD 90s02r5A           5872 	mov	dptr,#_axradio_cb_channelstate
                           5873 ;	..\COMMON\easyax5043.c:1009: break;
   10D0 02s00r00           5874 	ljmp	_wtimer_add_callback
                           5875 ;	..\COMMON\easyax5043.c:1011: case AXRADIO_MODE_ASYNC_TRANSMIT:
   10D3                    5876 00110$:
                           5877 ;	..\COMMON\easyax5043.c:1012: case AXRADIO_MODE_WOR_TRANSMIT:
   10D3                    5878 00111$:
                           5879 ;	..\COMMON\easyax5043.c:1013: transmitcs:
   10D3                    5880 00112$:
                           5881 ;	..\COMMON\easyax5043.c:1014: if (axradio_ack_count)
   10D3 90s00r0A           5882 	mov	dptr,#_axradio_ack_count
   10D6 E0                 5883 	movx	a,@dptr
   10D7 FF                 5884 	mov	r7,a
   10D8 60 06              5885 	jz	00114$
                           5886 ;	..\COMMON\easyax5043.c:1015: --axradio_ack_count;
   10DA EF                 5887 	mov	a,r7
   10DB 14                 5888 	dec	a
   10DC 90s00r0A           5889 	mov	dptr,#_axradio_ack_count
   10DF F0                 5890 	movx	@dptr,a
   10E0                    5891 00114$:
                           5892 ;	..\COMMON\easyax5043.c:1016: wtimer_remove(&axradio_timer);
   10E0 90s02r85           5893 	mov	dptr,#_axradio_timer
   10E3 12s00r00           5894 	lcall	_wtimer_remove
                           5895 ;	..\COMMON\easyax5043.c:1017: if ((int8_t)AX5043_RSSI < axradio_phy_channelbusy ||
   10E6 90 40 40           5896 	mov	dptr,#_AX5043_RSSI
   10E9 E0                 5897 	movx	a,@dptr
   10EA FF                 5898 	mov	r7,a
   10EB 90s00r00           5899 	mov	dptr,#_axradio_phy_channelbusy
   10EE E4                 5900 	clr	a
   10EF 93                 5901 	movc	a,@a+dptr
   10F0 FE                 5902 	mov	r6,a
   10F1 C3                 5903 	clr	c
   10F2 EF                 5904 	mov	a,r7
   10F3 64 80              5905 	xrl	a,#0x80
   10F5 8E F0              5906 	mov	b,r6
   10F7 63 F0 80           5907 	xrl	b,#0x80
   10FA 95 F0              5908 	subb	a,b
   10FC 40 0F              5909 	jc	00115$
                           5910 ;	..\COMMON\easyax5043.c:1018: (!axradio_ack_count && axradio_phy_lbt_forcetx)) {
   10FE 90s00r0A           5911 	mov	dptr,#_axradio_ack_count
   1101 E0                 5912 	movx	a,@dptr
   1102 FF                 5913 	mov	r7,a
   1103 70 25              5914 	jnz	00116$
   1105 90s00r00           5915 	mov	dptr,#_axradio_phy_lbt_forcetx
   1108 E4                 5916 	clr	a
   1109 93                 5917 	movc	a,@a+dptr
   110A FE                 5918 	mov	r6,a
   110B 60 1D              5919 	jz	00116$
   110D                    5920 00115$:
                           5921 ;	..\COMMON\easyax5043.c:1019: axradio_syncstate = syncstate_off;
   110D 90s00r00           5922 	mov	dptr,#_axradio_syncstate
   1110 E4                 5923 	clr	a
   1111 F0                 5924 	movx	@dptr,a
                           5925 ;	..\COMMON\easyax5043.c:1020: axradio_txbuffer_cnt = axradio_phy_preamble_longlen;
   1112 90s00r00           5926 	mov	dptr,#_axradio_phy_preamble_longlen
   1115 E4                 5927 	clr	a
   1116 93                 5928 	movc	a,@a+dptr
   1117 FD                 5929 	mov	r5,a
   1118 74 01              5930 	mov	a,#0x01
   111A 93                 5931 	movc	a,@a+dptr
   111B FE                 5932 	mov	r6,a
   111C 90s00r03           5933 	mov	dptr,#_axradio_txbuffer_cnt
   111F ED                 5934 	mov	a,r5
   1120 F0                 5935 	movx	@dptr,a
   1121 A3                 5936 	inc	dptr
   1122 EE                 5937 	mov	a,r6
   1123 F0                 5938 	movx	@dptr,a
                           5939 ;	..\COMMON\easyax5043.c:1021: ax5043_prepare_tx();
   1124 12s0Cr10           5940 	lcall	_ax5043_prepare_tx
                           5941 ;	..\COMMON\easyax5043.c:1022: goto chanstatecb;
   1127 02s10r68           5942 	ljmp	00109$
   112A                    5943 00116$:
                           5944 ;	..\COMMON\easyax5043.c:1024: if (axradio_ack_count)
   112A EF                 5945 	mov	a,r7
   112B 60 03              5946 	jz	00242$
   112D 02s10r46           5947 	ljmp	00108$
   1130                    5948 00242$:
                           5949 ;	..\COMMON\easyax5043.c:1026: update_timeanchor();
   1130 12s00r00           5950 	lcall	_update_timeanchor
                           5951 ;	..\COMMON\easyax5043.c:1027: axradio_syncstate = syncstate_off;
   1133 90s00r00           5952 	mov	dptr,#_axradio_syncstate
   1136 E4                 5953 	clr	a
   1137 F0                 5954 	movx	@dptr,a
                           5955 ;	..\COMMON\easyax5043.c:1028: ax5043_off();
   1138 12s0Cr36           5956 	lcall	_ax5043_off
                           5957 ;	..\COMMON\easyax5043.c:1029: wtimer_remove_callback(&axradio_cb_transmitstart.cb);
   113B 90s02r67           5958 	mov	dptr,#_axradio_cb_transmitstart
   113E 12s00r00           5959 	lcall	_wtimer_remove_callback
                           5960 ;	..\COMMON\easyax5043.c:1030: axradio_cb_transmitstart.st.error = AXRADIO_ERR_TIMEOUT;
   1141 90s02r6C           5961 	mov	dptr,#(_axradio_cb_transmitstart + 0x0005)
   1144 74 03              5962 	mov	a,#0x03
   1146 F0                 5963 	movx	@dptr,a
                           5964 ;	..\COMMON\easyax5043.c:1031: axradio_cb_transmitstart.st.time.t = axradio_timeanchor.radiotimer;
   1147 90s00r16           5965 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   114A E0                 5966 	movx	a,@dptr
   114B FC                 5967 	mov	r4,a
   114C A3                 5968 	inc	dptr
   114D E0                 5969 	movx	a,@dptr
   114E FD                 5970 	mov	r5,a
   114F A3                 5971 	inc	dptr
   1150 E0                 5972 	movx	a,@dptr
   1151 FE                 5973 	mov	r6,a
   1152 A3                 5974 	inc	dptr
   1153 E0                 5975 	movx	a,@dptr
   1154 FF                 5976 	mov	r7,a
   1155 90s02r6D           5977 	mov	dptr,#(_axradio_cb_transmitstart + 0x0006)
   1158 EC                 5978 	mov	a,r4
   1159 F0                 5979 	movx	@dptr,a
   115A A3                 5980 	inc	dptr
   115B ED                 5981 	mov	a,r5
   115C F0                 5982 	movx	@dptr,a
   115D A3                 5983 	inc	dptr
   115E EE                 5984 	mov	a,r6
   115F F0                 5985 	movx	@dptr,a
   1160 A3                 5986 	inc	dptr
   1161 EF                 5987 	mov	a,r7
   1162 F0                 5988 	movx	@dptr,a
                           5989 ;	..\COMMON\easyax5043.c:1032: wtimer_add_callback(&axradio_cb_transmitstart.cb);
   1163 90s02r67           5990 	mov	dptr,#_axradio_cb_transmitstart
                           5991 ;	..\COMMON\easyax5043.c:1033: break;
   1166 02s00r00           5992 	ljmp	_wtimer_add_callback
                           5993 ;	..\COMMON\easyax5043.c:1035: case AXRADIO_MODE_ACK_TRANSMIT:
   1169                    5994 00121$:
                           5995 ;	..\COMMON\easyax5043.c:1036: case AXRADIO_MODE_WOR_ACK_TRANSMIT:
   1169                    5996 00122$:
                           5997 ;	..\COMMON\easyax5043.c:1037: if (axradio_syncstate == syncstate_lbt)
   1169 90s00r00           5998 	mov	dptr,#_axradio_syncstate
   116C E0                 5999 	movx	a,@dptr
   116D FF                 6000 	mov	r7,a
   116E BF 01 03           6001 	cjne	r7,#0x01,00243$
   1171 02s10rD3           6002 	ljmp	00112$
   1174                    6003 00243$:
                           6004 ;	..\COMMON\easyax5043.c:1039: ax5043_off();
   1174 12s0Cr36           6005 	lcall	_ax5043_off
                           6006 ;	..\COMMON\easyax5043.c:1040: if (!axradio_ack_count) {
   1177 90s00r0A           6007 	mov	dptr,#_axradio_ack_count
   117A E0                 6008 	movx	a,@dptr
   117B FF                 6009 	mov	r7,a
   117C 70 31              6010 	jnz	00126$
                           6011 ;	..\COMMON\easyax5043.c:1041: update_timeanchor();
   117E 12s00r00           6012 	lcall	_update_timeanchor
                           6013 ;	..\COMMON\easyax5043.c:1042: wtimer_remove_callback(&axradio_cb_transmitend.cb);
   1181 90s02r71           6014 	mov	dptr,#_axradio_cb_transmitend
   1184 12s00r00           6015 	lcall	_wtimer_remove_callback
                           6016 ;	..\COMMON\easyax5043.c:1043: axradio_cb_transmitend.st.error = AXRADIO_ERR_TIMEOUT;
   1187 90s02r76           6017 	mov	dptr,#(_axradio_cb_transmitend + 0x0005)
   118A 74 03              6018 	mov	a,#0x03
   118C F0                 6019 	movx	@dptr,a
                           6020 ;	..\COMMON\easyax5043.c:1044: axradio_cb_transmitend.st.time.t = axradio_timeanchor.radiotimer;
   118D 90s00r16           6021 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   1190 E0                 6022 	movx	a,@dptr
   1191 FB                 6023 	mov	r3,a
   1192 A3                 6024 	inc	dptr
   1193 E0                 6025 	movx	a,@dptr
   1194 FC                 6026 	mov	r4,a
   1195 A3                 6027 	inc	dptr
   1196 E0                 6028 	movx	a,@dptr
   1197 FD                 6029 	mov	r5,a
   1198 A3                 6030 	inc	dptr
   1199 E0                 6031 	movx	a,@dptr
   119A FE                 6032 	mov	r6,a
   119B 90s02r77           6033 	mov	dptr,#(_axradio_cb_transmitend + 0x0006)
   119E EB                 6034 	mov	a,r3
   119F F0                 6035 	movx	@dptr,a
   11A0 A3                 6036 	inc	dptr
   11A1 EC                 6037 	mov	a,r4
   11A2 F0                 6038 	movx	@dptr,a
   11A3 A3                 6039 	inc	dptr
   11A4 ED                 6040 	mov	a,r5
   11A5 F0                 6041 	movx	@dptr,a
   11A6 A3                 6042 	inc	dptr
   11A7 EE                 6043 	mov	a,r6
   11A8 F0                 6044 	movx	@dptr,a
                           6045 ;	..\COMMON\easyax5043.c:1045: wtimer_add_callback(&axradio_cb_transmitend.cb);
   11A9 90s02r71           6046 	mov	dptr,#_axradio_cb_transmitend
                           6047 ;	..\COMMON\easyax5043.c:1046: break;
   11AC 02s00r00           6048 	ljmp	_wtimer_add_callback
   11AF                    6049 00126$:
                           6050 ;	..\COMMON\easyax5043.c:1048: --axradio_ack_count;
   11AF EF                 6051 	mov	a,r7
   11B0 14                 6052 	dec	a
   11B1 90s00r0A           6053 	mov	dptr,#_axradio_ack_count
   11B4 F0                 6054 	movx	@dptr,a
                           6055 ;	..\COMMON\easyax5043.c:1049: axradio_txbuffer_cnt = axradio_phy_preamble_longlen;
   11B5 90s00r00           6056 	mov	dptr,#_axradio_phy_preamble_longlen
   11B8 E4                 6057 	clr	a
   11B9 93                 6058 	movc	a,@a+dptr
   11BA FE                 6059 	mov	r6,a
   11BB 74 01              6060 	mov	a,#0x01
   11BD 93                 6061 	movc	a,@a+dptr
   11BE FF                 6062 	mov	r7,a
   11BF 90s00r03           6063 	mov	dptr,#_axradio_txbuffer_cnt
   11C2 EE                 6064 	mov	a,r6
   11C3 F0                 6065 	movx	@dptr,a
   11C4 A3                 6066 	inc	dptr
   11C5 EF                 6067 	mov	a,r7
   11C6 F0                 6068 	movx	@dptr,a
                           6069 ;	..\COMMON\easyax5043.c:1050: ax5043_prepare_tx();
                           6070 ;	..\COMMON\easyax5043.c:1051: break;
   11C7 02s0Cr10           6071 	ljmp	_ax5043_prepare_tx
                           6072 ;	..\COMMON\easyax5043.c:1053: case AXRADIO_MODE_ACK_RECEIVE:
   11CA                    6073 00127$:
                           6074 ;	..\COMMON\easyax5043.c:1054: case AXRADIO_MODE_WOR_ACK_RECEIVE:
   11CA                    6075 00128$:
                           6076 ;	..\COMMON\easyax5043.c:1055: if (axradio_syncstate == syncstate_lbt)
   11CA 90s00r00           6077 	mov	dptr,#_axradio_syncstate
   11CD E0                 6078 	movx	a,@dptr
   11CE FF                 6079 	mov	r7,a
   11CF BF 01 03           6080 	cjne	r7,#0x01,00245$
   11D2 02s10rD3           6081 	ljmp	00112$
   11D5                    6082 00245$:
                           6083 ;	..\COMMON\easyax5043.c:1057: transmitack:
   11D5                    6084 00131$:
                           6085 ;	..\COMMON\easyax5043.c:1058: AX5043_FIFOSTAT = 3;
   11D5 90 40 28           6086 	mov	dptr,#_AX5043_FIFOSTAT
   11D8 74 03              6087 	mov	a,#0x03
   11DA F0                 6088 	movx	@dptr,a
                           6089 ;	..\COMMON\easyax5043.c:1059: AX5043_PWRMODE = AX5043_PWRSTATE_FULL_TX;
   11DB 90 40 02           6090 	mov	dptr,#_AX5043_PWRMODE
   11DE 74 0D              6091 	mov	a,#0x0D
   11E0 F0                 6092 	movx	@dptr,a
                           6093 ;	..\COMMON\easyax5043.c:1060: while (!(AX5043_POWSTAT & 0x08)); // wait for modem vdd so writing the FIFO is safe
   11E1                    6094 00132$:
   11E1 90 40 03           6095 	mov	dptr,#_AX5043_POWSTAT
   11E4 E0                 6096 	movx	a,@dptr
   11E5 FF                 6097 	mov	r7,a
   11E6 30 E3 F8           6098 	jnb	acc.3,00132$
                           6099 ;	..\COMMON\easyax5043.c:1061: ax5043_init_registers_tx();
   11E9 12s00r96           6100 	lcall	_ax5043_init_registers_tx
                           6101 ;	..\COMMON\easyax5043.c:1062: AX5043_RADIOEVENTREQ0; // make sure REVRDONE bit is cleared, so it is a reliable indicator that the packet is out
   11EC 90 40 0F           6102 	mov	dptr,#_AX5043_RADIOEVENTREQ0
   11EF E0                 6103 	movx	a,@dptr
                           6104 ;	..\COMMON\easyax5043.c:1063: AX5043_FIFOTHRESH1 = 0;
   11F0 90 40 2E           6105 	mov	dptr,#_AX5043_FIFOTHRESH1
   11F3 E4                 6106 	clr	a
   11F4 F0                 6107 	movx	@dptr,a
                           6108 ;	..\COMMON\easyax5043.c:1064: AX5043_FIFOTHRESH0 = 0x80;
   11F5 90 40 2F           6109 	mov	dptr,#_AX5043_FIFOTHRESH0
   11F8 74 80              6110 	mov	a,#0x80
   11FA F0                 6111 	movx	@dptr,a
                           6112 ;	..\COMMON\easyax5043.c:1065: axradio_trxstate = trxstate_tx_longpreamble;
   11FB 75*01 0A           6113 	mov	_axradio_trxstate,#0x0A
                           6114 ;	..\COMMON\easyax5043.c:1066: axradio_txbuffer_cnt = axradio_phy_preamble_longlen;
   11FE 90s00r00           6115 	mov	dptr,#_axradio_phy_preamble_longlen
   1201 E4                 6116 	clr	a
   1202 93                 6117 	movc	a,@a+dptr
   1203 FE                 6118 	mov	r6,a
   1204 74 01              6119 	mov	a,#0x01
   1206 93                 6120 	movc	a,@a+dptr
   1207 FF                 6121 	mov	r7,a
   1208 90s00r03           6122 	mov	dptr,#_axradio_txbuffer_cnt
   120B EE                 6123 	mov	a,r6
   120C F0                 6124 	movx	@dptr,a
   120D A3                 6125 	inc	dptr
   120E EF                 6126 	mov	a,r7
   120F F0                 6127 	movx	@dptr,a
                           6128 ;	..\COMMON\easyax5043.c:1068: if ((AX5043_MODULATION & 0x0F) == 9) { // 4-FSK
   1210 90 40 10           6129 	mov	dptr,#_AX5043_MODULATION
   1213 E0                 6130 	movx	a,@dptr
   1214 FF                 6131 	mov	r7,a
   1215 53 07 0F           6132 	anl	ar7,#0x0F
   1218 BF 09 0F           6133 	cjne	r7,#0x09,00136$
                           6134 ;	..\COMMON\easyax5043.c:1069: AX5043_FIFODATA = AX5043_FIFOCMD_DATA | (7 << 5);
                           6135 ;	..\COMMON\easyax5043.c:1070: AX5043_FIFODATA = 2;  // length (including flags)
                           6136 ;	..\COMMON\easyax5043.c:1071: AX5043_FIFODATA = 0x01;  // flag PKTSTART -> dibit sync
                           6137 ;	..\COMMON\easyax5043.c:1072: AX5043_FIFODATA = 0x11; // dummy byte for forcing dibit sync
   121B 90 40 29           6138 	mov	dptr,#_AX5043_FIFODATA
   121E 74 E1              6139 	mov	a,#0xE1
   1220 F0                 6140 	movx	@dptr,a
   1221 74 02              6141 	mov	a,#0x02
   1223 F0                 6142 	movx	@dptr,a
   1224 74 01              6143 	mov	a,#0x01
   1226 F0                 6144 	movx	@dptr,a
   1227 74 11              6145 	mov	a,#0x11
   1229 F0                 6146 	movx	@dptr,a
   122A                    6147 00136$:
                           6148 ;	..\COMMON\easyax5043.c:1079: AX5043_IRQMASK0 = 0x08; // enable fifo free threshold
   122A 90 40 07           6149 	mov	dptr,#_AX5043_IRQMASK0
   122D 74 08              6150 	mov	a,#0x08
   122F F0                 6151 	movx	@dptr,a
                           6152 ;	..\COMMON\easyax5043.c:1080: update_timeanchor();
   1230 12s00r00           6153 	lcall	_update_timeanchor
                           6154 ;	..\COMMON\easyax5043.c:1081: wtimer_remove_callback(&axradio_cb_transmitstart.cb);
   1233 90s02r67           6155 	mov	dptr,#_axradio_cb_transmitstart
   1236 12s00r00           6156 	lcall	_wtimer_remove_callback
                           6157 ;	..\COMMON\easyax5043.c:1082: axradio_cb_transmitstart.st.error = AXRADIO_ERR_NOERROR;
   1239 90s02r6C           6158 	mov	dptr,#(_axradio_cb_transmitstart + 0x0005)
   123C E4                 6159 	clr	a
   123D F0                 6160 	movx	@dptr,a
                           6161 ;	..\COMMON\easyax5043.c:1083: axradio_cb_transmitstart.st.time.t = axradio_timeanchor.radiotimer;
   123E 90s00r16           6162 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   1241 E0                 6163 	movx	a,@dptr
   1242 FC                 6164 	mov	r4,a
   1243 A3                 6165 	inc	dptr
   1244 E0                 6166 	movx	a,@dptr
   1245 FD                 6167 	mov	r5,a
   1246 A3                 6168 	inc	dptr
   1247 E0                 6169 	movx	a,@dptr
   1248 FE                 6170 	mov	r6,a
   1249 A3                 6171 	inc	dptr
   124A E0                 6172 	movx	a,@dptr
   124B FF                 6173 	mov	r7,a
   124C 90s02r6D           6174 	mov	dptr,#(_axradio_cb_transmitstart + 0x0006)
   124F EC                 6175 	mov	a,r4
   1250 F0                 6176 	movx	@dptr,a
   1251 A3                 6177 	inc	dptr
   1252 ED                 6178 	mov	a,r5
   1253 F0                 6179 	movx	@dptr,a
   1254 A3                 6180 	inc	dptr
   1255 EE                 6181 	mov	a,r6
   1256 F0                 6182 	movx	@dptr,a
   1257 A3                 6183 	inc	dptr
   1258 EF                 6184 	mov	a,r7
   1259 F0                 6185 	movx	@dptr,a
                           6186 ;	..\COMMON\easyax5043.c:1084: wtimer_add_callback(&axradio_cb_transmitstart.cb);
   125A 90s02r67           6187 	mov	dptr,#_axradio_cb_transmitstart
                           6188 ;	..\COMMON\easyax5043.c:1085: break;
   125D 02s00r00           6189 	ljmp	_wtimer_add_callback
                           6190 ;	..\COMMON\easyax5043.c:1087: case AXRADIO_MODE_SYNC_MASTER:
   1260                    6191 00137$:
                           6192 ;	..\COMMON\easyax5043.c:1088: case AXRADIO_MODE_SYNC_ACK_MASTER:
   1260                    6193 00138$:
                           6194 ;	..\COMMON\easyax5043.c:1089: switch (axradio_syncstate) {
   1260 90s00r00           6195 	mov	dptr,#_axradio_syncstate
   1263 E0                 6196 	movx	a,@dptr
   1264 FF                 6197 	mov	r7,a
   1265 BF 04 02           6198 	cjne	r7,#0x04,00249$
   1268 80 59              6199 	sjmp	00140$
   126A                    6200 00249$:
   126A BF 05 03           6201 	cjne	r7,#0x05,00250$
   126D 02s13r9E           6202 	ljmp	00148$
   1270                    6203 00250$:
                           6204 ;	..\COMMON\easyax5043.c:1091: AX5043_PWRMODE = AX5043_PWRSTATE_XTAL_ON;
   1270 90 40 02           6205 	mov	dptr,#_AX5043_PWRMODE
   1273 74 05              6206 	mov	a,#0x05
   1275 F0                 6207 	movx	@dptr,a
                           6208 ;	..\COMMON\easyax5043.c:1092: ax5043_init_registers_tx();
   1276 12s00r96           6209 	lcall	_ax5043_init_registers_tx
                           6210 ;	..\COMMON\easyax5043.c:1093: axradio_syncstate = syncstate_master_xostartup;
   1279 90s00r00           6211 	mov	dptr,#_axradio_syncstate
   127C 74 04              6212 	mov	a,#0x04
   127E F0                 6213 	movx	@dptr,a
                           6214 ;	..\COMMON\easyax5043.c:1094: wtimer_remove_callback(&axradio_cb_transmitdata.cb);
   127F 90s02r7B           6215 	mov	dptr,#_axradio_cb_transmitdata
   1282 12s00r00           6216 	lcall	_wtimer_remove_callback
                           6217 ;	..\COMMON\easyax5043.c:1095: axradio_cb_transmitdata.st.error = AXRADIO_ERR_NOERROR;
   1285 90s02r80           6218 	mov	dptr,#(_axradio_cb_transmitdata + 0x0005)
                           6219 ;	..\COMMON\easyax5043.c:1096: axradio_cb_transmitdata.st.time.t = 0;
   1288 E4                 6220 	clr	a
   1289 F0                 6221 	movx	@dptr,a
   128A 90s02r81           6222 	mov	dptr,#(_axradio_cb_transmitdata + 0x0006)
   128D F0                 6223 	movx	@dptr,a
   128E A3                 6224 	inc	dptr
   128F E4                 6225 	clr	a
   1290 F0                 6226 	movx	@dptr,a
   1291 A3                 6227 	inc	dptr
   1292 F0                 6228 	movx	@dptr,a
   1293 A3                 6229 	inc	dptr
   1294 F0                 6230 	movx	@dptr,a
                           6231 ;	..\COMMON\easyax5043.c:1097: wtimer_add_callback(&axradio_cb_transmitdata.cb);
   1295 90s02r7B           6232 	mov	dptr,#_axradio_cb_transmitdata
   1298 12s00r00           6233 	lcall	_wtimer_add_callback
                           6234 ;	..\COMMON\easyax5043.c:1098: wtimer_remove(&axradio_timer);
   129B 90s02r85           6235 	mov	dptr,#_axradio_timer
   129E 12s00r00           6236 	lcall	_wtimer_remove
                           6237 ;	..\COMMON\easyax5043.c:1099: axradio_timer.time = axradio_sync_time;
   12A1 90s00r0C           6238 	mov	dptr,#_axradio_sync_time
   12A4 E0                 6239 	movx	a,@dptr
   12A5 FC                 6240 	mov	r4,a
   12A6 A3                 6241 	inc	dptr
   12A7 E0                 6242 	movx	a,@dptr
   12A8 FD                 6243 	mov	r5,a
   12A9 A3                 6244 	inc	dptr
   12AA E0                 6245 	movx	a,@dptr
   12AB FE                 6246 	mov	r6,a
   12AC A3                 6247 	inc	dptr
   12AD E0                 6248 	movx	a,@dptr
   12AE FF                 6249 	mov	r7,a
   12AF 90s02r89           6250 	mov	dptr,#(_axradio_timer + 0x0004)
   12B2 EC                 6251 	mov	a,r4
   12B3 F0                 6252 	movx	@dptr,a
   12B4 A3                 6253 	inc	dptr
   12B5 ED                 6254 	mov	a,r5
   12B6 F0                 6255 	movx	@dptr,a
   12B7 A3                 6256 	inc	dptr
   12B8 EE                 6257 	mov	a,r6
   12B9 F0                 6258 	movx	@dptr,a
   12BA A3                 6259 	inc	dptr
   12BB EF                 6260 	mov	a,r7
   12BC F0                 6261 	movx	@dptr,a
                           6262 ;	..\COMMON\easyax5043.c:1100: wtimer0_addabsolute(&axradio_timer);
   12BD 90s02r85           6263 	mov	dptr,#_axradio_timer
                           6264 ;	..\COMMON\easyax5043.c:1101: break;
   12C0 02s00r00           6265 	ljmp	_wtimer0_addabsolute
                           6266 ;	..\COMMON\easyax5043.c:1103: case syncstate_master_xostartup:
   12C3                    6267 00140$:
                           6268 ;	..\COMMON\easyax5043.c:1104: AX5043_FIFOSTAT = 3;
   12C3 90 40 28           6269 	mov	dptr,#_AX5043_FIFOSTAT
   12C6 74 03              6270 	mov	a,#0x03
   12C8 F0                 6271 	movx	@dptr,a
                           6272 ;	..\COMMON\easyax5043.c:1105: AX5043_PWRMODE = AX5043_PWRSTATE_FULL_TX;
   12C9 90 40 02           6273 	mov	dptr,#_AX5043_PWRMODE
   12CC 74 0D              6274 	mov	a,#0x0D
   12CE F0                 6275 	movx	@dptr,a
                           6276 ;	..\COMMON\easyax5043.c:1106: while (!(AX5043_POWSTAT & 0x08)); // wait for modem vdd so writing the FIFO is safe
   12CF                    6277 00141$:
   12CF 90 40 03           6278 	mov	dptr,#_AX5043_POWSTAT
   12D2 E0                 6279 	movx	a,@dptr
   12D3 FF                 6280 	mov	r7,a
   12D4 30 E3 F8           6281 	jnb	acc.3,00141$
                           6282 ;	..\COMMON\easyax5043.c:1107: AX5043_RADIOEVENTREQ0; // make sure REVRDONE bit is cleared, so it is a reliable indicator that the packet is out
   12D7 90 40 0F           6283 	mov	dptr,#_AX5043_RADIOEVENTREQ0
   12DA E0                 6284 	movx	a,@dptr
                           6285 ;	..\COMMON\easyax5043.c:1108: AX5043_FIFOTHRESH1 = 0;
   12DB 90 40 2E           6286 	mov	dptr,#_AX5043_FIFOTHRESH1
   12DE E4                 6287 	clr	a
   12DF F0                 6288 	movx	@dptr,a
                           6289 ;	..\COMMON\easyax5043.c:1109: AX5043_FIFOTHRESH0 = 0x80;
   12E0 90 40 2F           6290 	mov	dptr,#_AX5043_FIFOTHRESH0
   12E3 74 80              6291 	mov	a,#0x80
   12E5 F0                 6292 	movx	@dptr,a
                           6293 ;	..\COMMON\easyax5043.c:1110: axradio_trxstate = trxstate_tx_longpreamble;
   12E6 75*01 0A           6294 	mov	_axradio_trxstate,#0x0A
                           6295 ;	..\COMMON\easyax5043.c:1111: axradio_txbuffer_cnt = axradio_phy_preamble_longlen;
   12E9 90s00r00           6296 	mov	dptr,#_axradio_phy_preamble_longlen
   12EC E4                 6297 	clr	a
   12ED 93                 6298 	movc	a,@a+dptr
   12EE FE                 6299 	mov	r6,a
   12EF 74 01              6300 	mov	a,#0x01
   12F1 93                 6301 	movc	a,@a+dptr
   12F2 FF                 6302 	mov	r7,a
   12F3 90s00r03           6303 	mov	dptr,#_axradio_txbuffer_cnt
   12F6 EE                 6304 	mov	a,r6
   12F7 F0                 6305 	movx	@dptr,a
   12F8 A3                 6306 	inc	dptr
   12F9 EF                 6307 	mov	a,r7
   12FA F0                 6308 	movx	@dptr,a
                           6309 ;	..\COMMON\easyax5043.c:1113: if ((AX5043_MODULATION & 0x0F) == 9) { // 4-FSK
   12FB 90 40 10           6310 	mov	dptr,#_AX5043_MODULATION
   12FE E0                 6311 	movx	a,@dptr
   12FF FF                 6312 	mov	r7,a
   1300 53 07 0F           6313 	anl	ar7,#0x0F
   1303 BF 09 0F           6314 	cjne	r7,#0x09,00145$
                           6315 ;	..\COMMON\easyax5043.c:1114: AX5043_FIFODATA = AX5043_FIFOCMD_DATA | (7 << 5);
                           6316 ;	..\COMMON\easyax5043.c:1115: AX5043_FIFODATA = 2;  // length (including flags)
                           6317 ;	..\COMMON\easyax5043.c:1116: AX5043_FIFODATA = 0x01;  // flag PKTSTART -> dibit sync
                           6318 ;	..\COMMON\easyax5043.c:1117: AX5043_FIFODATA = 0x11; // dummy byte for forcing dibit sync
   1306 90 40 29           6319 	mov	dptr,#_AX5043_FIFODATA
   1309 74 E1              6320 	mov	a,#0xE1
   130B F0                 6321 	movx	@dptr,a
   130C 74 02              6322 	mov	a,#0x02
   130E F0                 6323 	movx	@dptr,a
   130F 74 01              6324 	mov	a,#0x01
   1311 F0                 6325 	movx	@dptr,a
   1312 74 11              6326 	mov	a,#0x11
   1314 F0                 6327 	movx	@dptr,a
   1315                    6328 00145$:
                           6329 ;	..\COMMON\easyax5043.c:1124: wtimer_remove(&axradio_timer);
   1315 90s02r85           6330 	mov	dptr,#_axradio_timer
   1318 12s00r00           6331 	lcall	_wtimer_remove
                           6332 ;	..\COMMON\easyax5043.c:1125: update_timeanchor();
   131B 12s00r00           6333 	lcall	_update_timeanchor
                           6334 ;	..\COMMON\easyax5043.c:1126: AX5043_IRQMASK0 = 0x08; // enable fifo free threshold
   131E 90 40 07           6335 	mov	dptr,#_AX5043_IRQMASK0
   1321 74 08              6336 	mov	a,#0x08
   1323 F0                 6337 	movx	@dptr,a
                           6338 ;	..\COMMON\easyax5043.c:1127: axradio_sync_addtime(axradio_sync_period);
   1324 90s00r00           6339 	mov	dptr,#_axradio_sync_period
   1327 E4                 6340 	clr	a
   1328 93                 6341 	movc	a,@a+dptr
   1329 FC                 6342 	mov	r4,a
   132A 74 01              6343 	mov	a,#0x01
   132C 93                 6344 	movc	a,@a+dptr
   132D FD                 6345 	mov	r5,a
   132E 74 02              6346 	mov	a,#0x02
   1330 93                 6347 	movc	a,@a+dptr
   1331 FE                 6348 	mov	r6,a
   1332 74 03              6349 	mov	a,#0x03
   1334 93                 6350 	movc	a,@a+dptr
   1335 8C 82              6351 	mov	dpl,r4
   1337 8D 83              6352 	mov	dph,r5
   1339 8E F0              6353 	mov	b,r6
   133B 12s0DrD0           6354 	lcall	_axradio_sync_addtime
                           6355 ;	..\COMMON\easyax5043.c:1128: axradio_syncstate = syncstate_master_waitack;
   133E 90s00r00           6356 	mov	dptr,#_axradio_syncstate
   1341 74 05              6357 	mov	a,#0x05
   1343 F0                 6358 	movx	@dptr,a
                           6359 ;	..\COMMON\easyax5043.c:1129: if (axradio_mode != AXRADIO_MODE_SYNC_ACK_MASTER) {
   1344 74 21              6360 	mov	a,#0x21
   1346 B5*00 02           6361 	cjne	a,_axradio_mode,00254$
   1349 80 26              6362 	sjmp	00147$
   134B                    6363 00254$:
                           6364 ;	..\COMMON\easyax5043.c:1130: axradio_syncstate = syncstate_master_normal;
   134B 90s00r00           6365 	mov	dptr,#_axradio_syncstate
   134E 74 03              6366 	mov	a,#0x03
   1350 F0                 6367 	movx	@dptr,a
                           6368 ;	..\COMMON\easyax5043.c:1131: axradio_sync_settimeradv(axradio_sync_xoscstartup);
   1351 90s00r00           6369 	mov	dptr,#_axradio_sync_xoscstartup
   1354 E4                 6370 	clr	a
   1355 93                 6371 	movc	a,@a+dptr
   1356 FC                 6372 	mov	r4,a
   1357 74 01              6373 	mov	a,#0x01
   1359 93                 6374 	movc	a,@a+dptr
   135A FD                 6375 	mov	r5,a
   135B 74 02              6376 	mov	a,#0x02
   135D 93                 6377 	movc	a,@a+dptr
   135E FE                 6378 	mov	r6,a
   135F 74 03              6379 	mov	a,#0x03
   1361 93                 6380 	movc	a,@a+dptr
   1362 8C 82              6381 	mov	dpl,r4
   1364 8D 83              6382 	mov	dph,r5
   1366 8E F0              6383 	mov	b,r6
   1368 12s0Er21           6384 	lcall	_axradio_sync_settimeradv
                           6385 ;	..\COMMON\easyax5043.c:1132: wtimer0_addabsolute(&axradio_timer);
   136B 90s02r85           6386 	mov	dptr,#_axradio_timer
   136E 12s00r00           6387 	lcall	_wtimer0_addabsolute
   1371                    6388 00147$:
                           6389 ;	..\COMMON\easyax5043.c:1134: wtimer_remove_callback(&axradio_cb_transmitstart.cb);
   1371 90s02r67           6390 	mov	dptr,#_axradio_cb_transmitstart
   1374 12s00r00           6391 	lcall	_wtimer_remove_callback
                           6392 ;	..\COMMON\easyax5043.c:1135: axradio_cb_transmitstart.st.error = AXRADIO_ERR_NOERROR;
   1377 90s02r6C           6393 	mov	dptr,#(_axradio_cb_transmitstart + 0x0005)
   137A E4                 6394 	clr	a
   137B F0                 6395 	movx	@dptr,a
                           6396 ;	..\COMMON\easyax5043.c:1136: axradio_cb_transmitstart.st.time.t = axradio_timeanchor.radiotimer;
   137C 90s00r16           6397 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   137F E0                 6398 	movx	a,@dptr
   1380 FC                 6399 	mov	r4,a
   1381 A3                 6400 	inc	dptr
   1382 E0                 6401 	movx	a,@dptr
   1383 FD                 6402 	mov	r5,a
   1384 A3                 6403 	inc	dptr
   1385 E0                 6404 	movx	a,@dptr
   1386 FE                 6405 	mov	r6,a
   1387 A3                 6406 	inc	dptr
   1388 E0                 6407 	movx	a,@dptr
   1389 FF                 6408 	mov	r7,a
   138A 90s02r6D           6409 	mov	dptr,#(_axradio_cb_transmitstart + 0x0006)
   138D EC                 6410 	mov	a,r4
   138E F0                 6411 	movx	@dptr,a
   138F A3                 6412 	inc	dptr
   1390 ED                 6413 	mov	a,r5
   1391 F0                 6414 	movx	@dptr,a
   1392 A3                 6415 	inc	dptr
   1393 EE                 6416 	mov	a,r6
   1394 F0                 6417 	movx	@dptr,a
   1395 A3                 6418 	inc	dptr
   1396 EF                 6419 	mov	a,r7
   1397 F0                 6420 	movx	@dptr,a
                           6421 ;	..\COMMON\easyax5043.c:1137: wtimer_add_callback(&axradio_cb_transmitstart.cb);
   1398 90s02r67           6422 	mov	dptr,#_axradio_cb_transmitstart
                           6423 ;	..\COMMON\easyax5043.c:1138: break;
   139B 02s00r00           6424 	ljmp	_wtimer_add_callback
                           6425 ;	..\COMMON\easyax5043.c:1140: case syncstate_master_waitack:
   139E                    6426 00148$:
                           6427 ;	..\COMMON\easyax5043.c:1141: ax5043_off();
   139E 12s0Cr36           6428 	lcall	_ax5043_off
                           6429 ;	..\COMMON\easyax5043.c:1142: axradio_syncstate = syncstate_master_normal;
   13A1 90s00r00           6430 	mov	dptr,#_axradio_syncstate
   13A4 74 03              6431 	mov	a,#0x03
   13A6 F0                 6432 	movx	@dptr,a
                           6433 ;	..\COMMON\easyax5043.c:1143: wtimer_remove(&axradio_timer);
   13A7 90s02r85           6434 	mov	dptr,#_axradio_timer
   13AA 12s00r00           6435 	lcall	_wtimer_remove
                           6436 ;	..\COMMON\easyax5043.c:1144: axradio_sync_settimeradv(axradio_sync_xoscstartup);
   13AD 90s00r00           6437 	mov	dptr,#_axradio_sync_xoscstartup
   13B0 E4                 6438 	clr	a
   13B1 93                 6439 	movc	a,@a+dptr
   13B2 FC                 6440 	mov	r4,a
   13B3 74 01              6441 	mov	a,#0x01
   13B5 93                 6442 	movc	a,@a+dptr
   13B6 FD                 6443 	mov	r5,a
   13B7 74 02              6444 	mov	a,#0x02
   13B9 93                 6445 	movc	a,@a+dptr
   13BA FE                 6446 	mov	r6,a
   13BB 74 03              6447 	mov	a,#0x03
   13BD 93                 6448 	movc	a,@a+dptr
   13BE 8C 82              6449 	mov	dpl,r4
   13C0 8D 83              6450 	mov	dph,r5
   13C2 8E F0              6451 	mov	b,r6
   13C4 12s0Er21           6452 	lcall	_axradio_sync_settimeradv
                           6453 ;	..\COMMON\easyax5043.c:1145: wtimer0_addabsolute(&axradio_timer);
   13C7 90s02r85           6454 	mov	dptr,#_axradio_timer
   13CA 12s00r00           6455 	lcall	_wtimer0_addabsolute
                           6456 ;	..\COMMON\easyax5043.c:1146: update_timeanchor();
   13CD 12s00r00           6457 	lcall	_update_timeanchor
                           6458 ;	..\COMMON\easyax5043.c:1147: wtimer_remove_callback(&axradio_cb_transmitend.cb);
   13D0 90s02r71           6459 	mov	dptr,#_axradio_cb_transmitend
   13D3 12s00r00           6460 	lcall	_wtimer_remove_callback
                           6461 ;	..\COMMON\easyax5043.c:1148: axradio_cb_transmitend.st.error = AXRADIO_ERR_TIMEOUT;
   13D6 90s02r76           6462 	mov	dptr,#(_axradio_cb_transmitend + 0x0005)
   13D9 74 03              6463 	mov	a,#0x03
   13DB F0                 6464 	movx	@dptr,a
                           6465 ;	..\COMMON\easyax5043.c:1149: axradio_cb_transmitend.st.time.t = axradio_timeanchor.radiotimer;
   13DC 90s00r16           6466 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   13DF E0                 6467 	movx	a,@dptr
   13E0 FC                 6468 	mov	r4,a
   13E1 A3                 6469 	inc	dptr
   13E2 E0                 6470 	movx	a,@dptr
   13E3 FD                 6471 	mov	r5,a
   13E4 A3                 6472 	inc	dptr
   13E5 E0                 6473 	movx	a,@dptr
   13E6 FE                 6474 	mov	r6,a
   13E7 A3                 6475 	inc	dptr
   13E8 E0                 6476 	movx	a,@dptr
   13E9 FF                 6477 	mov	r7,a
   13EA 90s02r77           6478 	mov	dptr,#(_axradio_cb_transmitend + 0x0006)
   13ED EC                 6479 	mov	a,r4
   13EE F0                 6480 	movx	@dptr,a
   13EF A3                 6481 	inc	dptr
   13F0 ED                 6482 	mov	a,r5
   13F1 F0                 6483 	movx	@dptr,a
   13F2 A3                 6484 	inc	dptr
   13F3 EE                 6485 	mov	a,r6
   13F4 F0                 6486 	movx	@dptr,a
   13F5 A3                 6487 	inc	dptr
   13F6 EF                 6488 	mov	a,r7
   13F7 F0                 6489 	movx	@dptr,a
                           6490 ;	..\COMMON\easyax5043.c:1150: wtimer_add_callback(&axradio_cb_transmitend.cb);
   13F8 90s02r71           6491 	mov	dptr,#_axradio_cb_transmitend
                           6492 ;	..\COMMON\easyax5043.c:1153: break;
   13FB 02s00r00           6493 	ljmp	_wtimer_add_callback
                           6494 ;	..\COMMON\easyax5043.c:1155: case AXRADIO_MODE_SYNC_SLAVE:
   13FE                    6495 00150$:
                           6496 ;	..\COMMON\easyax5043.c:1156: case AXRADIO_MODE_SYNC_ACK_SLAVE:
   13FE                    6497 00151$:
                           6498 ;	..\COMMON\easyax5043.c:1157: switch (axradio_syncstate) {
   13FE 90s00r00           6499 	mov	dptr,#_axradio_syncstate
   1401 E0                 6500 	movx	a,@dptr
   1402 FF                 6501 	mov  r7,a
   1403 24 F3              6502 	add	a,#0xff - 0x0C
   1405 40 2E              6503 	jc	00153$
   1407 EF                 6504 	mov	a,r7
   1408 2F                 6505 	add	a,r7
   1409 2F                 6506 	add	a,r7
   140A 90s14r0E           6507 	mov	dptr,#00256$
   140D 73                 6508 	jmp	@a+dptr
   140E                    6509 00256$:
   140E 02s14r35           6510 	ljmp	00152$
   1411 02s14r35           6511 	ljmp	00152$
   1414 02s14r35           6512 	ljmp	00152$
   1417 02s14r35           6513 	ljmp	00152$
   141A 02s14r35           6514 	ljmp	00152$
   141D 02s14r35           6515 	ljmp	00152$
   1420 02s14r35           6516 	ljmp	00153$
   1423 02s14rC0           6517 	ljmp	00154$
   1426 02s15r4E           6518 	ljmp	00155$
   1429 02s15rA0           6519 	ljmp	00156$
   142C 02s16r51           6520 	ljmp	00159$
   142F 02s16rA9           6521 	ljmp	00162$
   1432 02s17rBE           6522 	ljmp	00169$
                           6523 ;	..\COMMON\easyax5043.c:1158: default:
   1435                    6524 00152$:
                           6525 ;	..\COMMON\easyax5043.c:1159: case syncstate_slave_synchunt:
   1435                    6526 00153$:
                           6527 ;	..\COMMON\easyax5043.c:1160: ax5043_off();
   1435 12s0Cr36           6528 	lcall	_ax5043_off
                           6529 ;	..\COMMON\easyax5043.c:1161: axradio_syncstate = syncstate_slave_syncpause;
   1438 90s00r00           6530 	mov	dptr,#_axradio_syncstate
   143B 74 07              6531 	mov	a,#0x07
   143D F0                 6532 	movx	@dptr,a
                           6533 ;	..\COMMON\easyax5043.c:1162: axradio_sync_addtime(axradio_sync_slave_syncpause);
   143E 90s00r00           6534 	mov	dptr,#_axradio_sync_slave_syncpause
   1441 E4                 6535 	clr	a
   1442 93                 6536 	movc	a,@a+dptr
   1443 FC                 6537 	mov	r4,a
   1444 74 01              6538 	mov	a,#0x01
   1446 93                 6539 	movc	a,@a+dptr
   1447 FD                 6540 	mov	r5,a
   1448 74 02              6541 	mov	a,#0x02
   144A 93                 6542 	movc	a,@a+dptr
   144B FE                 6543 	mov	r6,a
   144C 74 03              6544 	mov	a,#0x03
   144E 93                 6545 	movc	a,@a+dptr
   144F 8C 82              6546 	mov	dpl,r4
   1451 8D 83              6547 	mov	dph,r5
   1453 8E F0              6548 	mov	b,r6
   1455 12s0DrD0           6549 	lcall	_axradio_sync_addtime
                           6550 ;	..\COMMON\easyax5043.c:1163: wtimer_remove(&axradio_timer);
   1458 90s02r85           6551 	mov	dptr,#_axradio_timer
   145B 12s00r00           6552 	lcall	_wtimer_remove
                           6553 ;	..\COMMON\easyax5043.c:1164: axradio_timer.time = axradio_sync_time;
   145E 90s00r0C           6554 	mov	dptr,#_axradio_sync_time
   1461 E0                 6555 	movx	a,@dptr
   1462 FC                 6556 	mov	r4,a
   1463 A3                 6557 	inc	dptr
   1464 E0                 6558 	movx	a,@dptr
   1465 FD                 6559 	mov	r5,a
   1466 A3                 6560 	inc	dptr
   1467 E0                 6561 	movx	a,@dptr
   1468 FE                 6562 	mov	r6,a
   1469 A3                 6563 	inc	dptr
   146A E0                 6564 	movx	a,@dptr
   146B FF                 6565 	mov	r7,a
   146C 90s02r89           6566 	mov	dptr,#(_axradio_timer + 0x0004)
   146F EC                 6567 	mov	a,r4
   1470 F0                 6568 	movx	@dptr,a
   1471 A3                 6569 	inc	dptr
   1472 ED                 6570 	mov	a,r5
   1473 F0                 6571 	movx	@dptr,a
   1474 A3                 6572 	inc	dptr
   1475 EE                 6573 	mov	a,r6
   1476 F0                 6574 	movx	@dptr,a
   1477 A3                 6575 	inc	dptr
   1478 EF                 6576 	mov	a,r7
   1479 F0                 6577 	movx	@dptr,a
                           6578 ;	..\COMMON\easyax5043.c:1165: wtimer0_addabsolute(&axradio_timer);
   147A 90s02r85           6579 	mov	dptr,#_axradio_timer
   147D 12s00r00           6580 	lcall	_wtimer0_addabsolute
                           6581 ;	..\COMMON\easyax5043.c:1166: wtimer_remove_callback(&axradio_cb_receive.cb);
   1480 90s02r2E           6582 	mov	dptr,#_axradio_cb_receive
   1483 12s00r00           6583 	lcall	_wtimer_remove_callback
                           6584 ;	..\COMMON\easyax5043.c:1167: memset_xdata(&axradio_cb_receive.st, 0, sizeof(axradio_cb_receive.st));
   1486 75*00 00           6585 	mov	_memset_PARM_2,#0x00
   1489 75*00 1E           6586 	mov	_memset_PARM_3,#0x1E
   148C 75*01 00           6587 	mov	(_memset_PARM_3 + 1),#0x00
   148F 90s02r32           6588 	mov	dptr,#(_axradio_cb_receive + 0x0004)
   1492 75 F0 00           6589 	mov	b,#0x00
   1495 12s00r00           6590 	lcall	_memset
                           6591 ;	..\COMMON\easyax5043.c:1168: axradio_cb_receive.st.time.t = axradio_timeanchor.radiotimer;
   1498 90s00r16           6592 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   149B E0                 6593 	movx	a,@dptr
   149C FC                 6594 	mov	r4,a
   149D A3                 6595 	inc	dptr
   149E E0                 6596 	movx	a,@dptr
   149F FD                 6597 	mov	r5,a
   14A0 A3                 6598 	inc	dptr
   14A1 E0                 6599 	movx	a,@dptr
   14A2 FE                 6600 	mov	r6,a
   14A3 A3                 6601 	inc	dptr
   14A4 E0                 6602 	movx	a,@dptr
   14A5 FF                 6603 	mov	r7,a
   14A6 90s02r34           6604 	mov	dptr,#(_axradio_cb_receive + 0x0006)
   14A9 EC                 6605 	mov	a,r4
   14AA F0                 6606 	movx	@dptr,a
   14AB A3                 6607 	inc	dptr
   14AC ED                 6608 	mov	a,r5
   14AD F0                 6609 	movx	@dptr,a
   14AE A3                 6610 	inc	dptr
   14AF EE                 6611 	mov	a,r6
   14B0 F0                 6612 	movx	@dptr,a
   14B1 A3                 6613 	inc	dptr
   14B2 EF                 6614 	mov	a,r7
   14B3 F0                 6615 	movx	@dptr,a
                           6616 ;	..\COMMON\easyax5043.c:1169: axradio_cb_receive.st.error = AXRADIO_ERR_RESYNCTIMEOUT;
   14B4 90s02r33           6617 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   14B7 74 0A              6618 	mov	a,#0x0A
   14B9 F0                 6619 	movx	@dptr,a
                           6620 ;	..\COMMON\easyax5043.c:1170: wtimer_add_callback(&axradio_cb_receive.cb);
   14BA 90s02r2E           6621 	mov	dptr,#_axradio_cb_receive
                           6622 ;	..\COMMON\easyax5043.c:1171: break;
   14BD 02s00r00           6623 	ljmp	_wtimer_add_callback
                           6624 ;	..\COMMON\easyax5043.c:1173: case syncstate_slave_syncpause:
   14C0                    6625 00154$:
                           6626 ;	..\COMMON\easyax5043.c:1174: ax5043_receiver_on_continuous();
   14C0 12s0ArF1           6627 	lcall	_ax5043_receiver_on_continuous
                           6628 ;	..\COMMON\easyax5043.c:1175: axradio_syncstate = syncstate_slave_synchunt;
   14C3 90s00r00           6629 	mov	dptr,#_axradio_syncstate
   14C6 74 06              6630 	mov	a,#0x06
   14C8 F0                 6631 	movx	@dptr,a
                           6632 ;	..\COMMON\easyax5043.c:1176: axradio_sync_addtime(axradio_sync_slave_syncwindow);
   14C9 90s00r00           6633 	mov	dptr,#_axradio_sync_slave_syncwindow
   14CC E4                 6634 	clr	a
   14CD 93                 6635 	movc	a,@a+dptr
   14CE FC                 6636 	mov	r4,a
   14CF 74 01              6637 	mov	a,#0x01
   14D1 93                 6638 	movc	a,@a+dptr
   14D2 FD                 6639 	mov	r5,a
   14D3 74 02              6640 	mov	a,#0x02
   14D5 93                 6641 	movc	a,@a+dptr
   14D6 FE                 6642 	mov	r6,a
   14D7 74 03              6643 	mov	a,#0x03
   14D9 93                 6644 	movc	a,@a+dptr
   14DA 8C 82              6645 	mov	dpl,r4
   14DC 8D 83              6646 	mov	dph,r5
   14DE 8E F0              6647 	mov	b,r6
   14E0 12s0DrD0           6648 	lcall	_axradio_sync_addtime
                           6649 ;	..\COMMON\easyax5043.c:1177: wtimer_remove(&axradio_timer);
   14E3 90s02r85           6650 	mov	dptr,#_axradio_timer
   14E6 12s00r00           6651 	lcall	_wtimer_remove
                           6652 ;	..\COMMON\easyax5043.c:1178: axradio_timer.time = axradio_sync_time;
   14E9 90s00r0C           6653 	mov	dptr,#_axradio_sync_time
   14EC E0                 6654 	movx	a,@dptr
   14ED FC                 6655 	mov	r4,a
   14EE A3                 6656 	inc	dptr
   14EF E0                 6657 	movx	a,@dptr
   14F0 FD                 6658 	mov	r5,a
   14F1 A3                 6659 	inc	dptr
   14F2 E0                 6660 	movx	a,@dptr
   14F3 FE                 6661 	mov	r6,a
   14F4 A3                 6662 	inc	dptr
   14F5 E0                 6663 	movx	a,@dptr
   14F6 FF                 6664 	mov	r7,a
   14F7 90s02r89           6665 	mov	dptr,#(_axradio_timer + 0x0004)
   14FA EC                 6666 	mov	a,r4
   14FB F0                 6667 	movx	@dptr,a
   14FC A3                 6668 	inc	dptr
   14FD ED                 6669 	mov	a,r5
   14FE F0                 6670 	movx	@dptr,a
   14FF A3                 6671 	inc	dptr
   1500 EE                 6672 	mov	a,r6
   1501 F0                 6673 	movx	@dptr,a
   1502 A3                 6674 	inc	dptr
   1503 EF                 6675 	mov	a,r7
   1504 F0                 6676 	movx	@dptr,a
                           6677 ;	..\COMMON\easyax5043.c:1179: wtimer0_addabsolute(&axradio_timer);
   1505 90s02r85           6678 	mov	dptr,#_axradio_timer
   1508 12s00r00           6679 	lcall	_wtimer0_addabsolute
                           6680 ;	..\COMMON\easyax5043.c:1180: update_timeanchor();
   150B 12s00r00           6681 	lcall	_update_timeanchor
                           6682 ;	..\COMMON\easyax5043.c:1181: wtimer_remove_callback(&axradio_cb_receive.cb);
   150E 90s02r2E           6683 	mov	dptr,#_axradio_cb_receive
   1511 12s00r00           6684 	lcall	_wtimer_remove_callback
                           6685 ;	..\COMMON\easyax5043.c:1182: memset_xdata(&axradio_cb_receive.st, 0, sizeof(axradio_cb_receive.st));
   1514 75*00 00           6686 	mov	_memset_PARM_2,#0x00
   1517 75*00 1E           6687 	mov	_memset_PARM_3,#0x1E
   151A 75*01 00           6688 	mov	(_memset_PARM_3 + 1),#0x00
   151D 90s02r32           6689 	mov	dptr,#(_axradio_cb_receive + 0x0004)
   1520 75 F0 00           6690 	mov	b,#0x00
   1523 12s00r00           6691 	lcall	_memset
                           6692 ;	..\COMMON\easyax5043.c:1183: axradio_cb_receive.st.time.t = axradio_timeanchor.radiotimer;
   1526 90s00r16           6693 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   1529 E0                 6694 	movx	a,@dptr
   152A FC                 6695 	mov	r4,a
   152B A3                 6696 	inc	dptr
   152C E0                 6697 	movx	a,@dptr
   152D FD                 6698 	mov	r5,a
   152E A3                 6699 	inc	dptr
   152F E0                 6700 	movx	a,@dptr
   1530 FE                 6701 	mov	r6,a
   1531 A3                 6702 	inc	dptr
   1532 E0                 6703 	movx	a,@dptr
   1533 FF                 6704 	mov	r7,a
   1534 90s02r34           6705 	mov	dptr,#(_axradio_cb_receive + 0x0006)
   1537 EC                 6706 	mov	a,r4
   1538 F0                 6707 	movx	@dptr,a
   1539 A3                 6708 	inc	dptr
   153A ED                 6709 	mov	a,r5
   153B F0                 6710 	movx	@dptr,a
   153C A3                 6711 	inc	dptr
   153D EE                 6712 	mov	a,r6
   153E F0                 6713 	movx	@dptr,a
   153F A3                 6714 	inc	dptr
   1540 EF                 6715 	mov	a,r7
   1541 F0                 6716 	movx	@dptr,a
                           6717 ;	..\COMMON\easyax5043.c:1184: axradio_cb_receive.st.error = AXRADIO_ERR_RESYNC;
   1542 90s02r33           6718 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   1545 74 09              6719 	mov	a,#0x09
   1547 F0                 6720 	movx	@dptr,a
                           6721 ;	..\COMMON\easyax5043.c:1185: wtimer_add_callback(&axradio_cb_receive.cb);
   1548 90s02r2E           6722 	mov	dptr,#_axradio_cb_receive
                           6723 ;	..\COMMON\easyax5043.c:1186: break;
   154B 02s00r00           6724 	ljmp	_wtimer_add_callback
                           6725 ;	..\COMMON\easyax5043.c:1188: case syncstate_slave_rxidle:
   154E                    6726 00155$:
                           6727 ;	..\COMMON\easyax5043.c:1189: AX5043_PWRMODE = AX5043_PWRSTATE_XTAL_ON;
   154E 90 40 02           6728 	mov	dptr,#_AX5043_PWRMODE
   1551 74 05              6729 	mov	a,#0x05
   1553 F0                 6730 	movx	@dptr,a
                           6731 ;	..\COMMON\easyax5043.c:1190: axradio_syncstate = syncstate_slave_rxxosc;
   1554 90s00r00           6732 	mov	dptr,#_axradio_syncstate
   1557 74 09              6733 	mov	a,#0x09
   1559 F0                 6734 	movx	@dptr,a
                           6735 ;	..\COMMON\easyax5043.c:1191: wtimer_remove(&axradio_timer);
   155A 90s02r85           6736 	mov	dptr,#_axradio_timer
   155D 12s00r00           6737 	lcall	_wtimer_remove
                           6738 ;	..\COMMON\easyax5043.c:1192: axradio_timer.time += axradio_sync_xoscstartup;
   1560 90s02r89           6739 	mov	dptr,#(_axradio_timer + 0x0004)
   1563 E0                 6740 	movx	a,@dptr
   1564 FC                 6741 	mov	r4,a
   1565 A3                 6742 	inc	dptr
   1566 E0                 6743 	movx	a,@dptr
   1567 FD                 6744 	mov	r5,a
   1568 A3                 6745 	inc	dptr
   1569 E0                 6746 	movx	a,@dptr
   156A FE                 6747 	mov	r6,a
   156B A3                 6748 	inc	dptr
   156C E0                 6749 	movx	a,@dptr
   156D FF                 6750 	mov	r7,a
   156E 90s00r00           6751 	mov	dptr,#_axradio_sync_xoscstartup
   1571 E4                 6752 	clr	a
   1572 93                 6753 	movc	a,@a+dptr
   1573 F8                 6754 	mov	r0,a
   1574 74 01              6755 	mov	a,#0x01
   1576 93                 6756 	movc	a,@a+dptr
   1577 F9                 6757 	mov	r1,a
   1578 74 02              6758 	mov	a,#0x02
   157A 93                 6759 	movc	a,@a+dptr
   157B FA                 6760 	mov	r2,a
   157C 74 03              6761 	mov	a,#0x03
   157E 93                 6762 	movc	a,@a+dptr
   157F FB                 6763 	mov	r3,a
   1580 E8                 6764 	mov	a,r0
   1581 2C                 6765 	add	a,r4
   1582 FC                 6766 	mov	r4,a
   1583 E9                 6767 	mov	a,r1
   1584 3D                 6768 	addc	a,r5
   1585 FD                 6769 	mov	r5,a
   1586 EA                 6770 	mov	a,r2
   1587 3E                 6771 	addc	a,r6
   1588 FE                 6772 	mov	r6,a
   1589 EB                 6773 	mov	a,r3
   158A 3F                 6774 	addc	a,r7
   158B FF                 6775 	mov	r7,a
   158C 90s02r89           6776 	mov	dptr,#(_axradio_timer + 0x0004)
   158F EC                 6777 	mov	a,r4
   1590 F0                 6778 	movx	@dptr,a
   1591 A3                 6779 	inc	dptr
   1592 ED                 6780 	mov	a,r5
   1593 F0                 6781 	movx	@dptr,a
   1594 A3                 6782 	inc	dptr
   1595 EE                 6783 	mov	a,r6
   1596 F0                 6784 	movx	@dptr,a
   1597 A3                 6785 	inc	dptr
   1598 EF                 6786 	mov	a,r7
   1599 F0                 6787 	movx	@dptr,a
                           6788 ;	..\COMMON\easyax5043.c:1193: wtimer0_addabsolute(&axradio_timer);
   159A 90s02r85           6789 	mov	dptr,#_axradio_timer
                           6790 ;	..\COMMON\easyax5043.c:1194: break;
   159D 02s00r00           6791 	ljmp	_wtimer0_addabsolute
                           6792 ;	..\COMMON\easyax5043.c:1196: case syncstate_slave_rxxosc:
   15A0                    6793 00156$:
                           6794 ;	..\COMMON\easyax5043.c:1197: ax5043_receiver_on_continuous();
   15A0 12s0ArF1           6795 	lcall	_ax5043_receiver_on_continuous
                           6796 ;	..\COMMON\easyax5043.c:1198: axradio_syncstate = syncstate_slave_rxsfdwindow;
   15A3 90s00r00           6797 	mov	dptr,#_axradio_syncstate
   15A6 74 0A              6798 	mov	a,#0x0A
   15A8 F0                 6799 	movx	@dptr,a
                           6800 ;	..\COMMON\easyax5043.c:1199: update_timeanchor();
   15A9 12s00r00           6801 	lcall	_update_timeanchor
                           6802 ;	..\COMMON\easyax5043.c:1200: wtimer_remove_callback(&axradio_cb_receive.cb);
   15AC 90s02r2E           6803 	mov	dptr,#_axradio_cb_receive
   15AF 12s00r00           6804 	lcall	_wtimer_remove_callback
                           6805 ;	..\COMMON\easyax5043.c:1201: memset_xdata(&axradio_cb_receive.st, 0, sizeof(axradio_cb_receive.st));
   15B2 75*00 00           6806 	mov	_memset_PARM_2,#0x00
   15B5 75*00 1E           6807 	mov	_memset_PARM_3,#0x1E
   15B8 75*01 00           6808 	mov	(_memset_PARM_3 + 1),#0x00
   15BB 90s02r32           6809 	mov	dptr,#(_axradio_cb_receive + 0x0004)
   15BE 75 F0 00           6810 	mov	b,#0x00
   15C1 12s00r00           6811 	lcall	_memset
                           6812 ;	..\COMMON\easyax5043.c:1202: axradio_cb_receive.st.time.t = axradio_timeanchor.radiotimer;
   15C4 90s00r16           6813 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   15C7 E0                 6814 	movx	a,@dptr
   15C8 FC                 6815 	mov	r4,a
   15C9 A3                 6816 	inc	dptr
   15CA E0                 6817 	movx	a,@dptr
   15CB FD                 6818 	mov	r5,a
   15CC A3                 6819 	inc	dptr
   15CD E0                 6820 	movx	a,@dptr
   15CE FE                 6821 	mov	r6,a
   15CF A3                 6822 	inc	dptr
   15D0 E0                 6823 	movx	a,@dptr
   15D1 FF                 6824 	mov	r7,a
   15D2 90s02r34           6825 	mov	dptr,#(_axradio_cb_receive + 0x0006)
   15D5 EC                 6826 	mov	a,r4
   15D6 F0                 6827 	movx	@dptr,a
   15D7 A3                 6828 	inc	dptr
   15D8 ED                 6829 	mov	a,r5
   15D9 F0                 6830 	movx	@dptr,a
   15DA A3                 6831 	inc	dptr
   15DB EE                 6832 	mov	a,r6
   15DC F0                 6833 	movx	@dptr,a
   15DD A3                 6834 	inc	dptr
   15DE EF                 6835 	mov	a,r7
   15DF F0                 6836 	movx	@dptr,a
                           6837 ;	..\COMMON\easyax5043.c:1203: axradio_cb_receive.st.error = AXRADIO_ERR_RECEIVESTART;
   15E0 90s02r33           6838 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   15E3 74 0B              6839 	mov	a,#0x0B
   15E5 F0                 6840 	movx	@dptr,a
                           6841 ;	..\COMMON\easyax5043.c:1204: wtimer_add_callback(&axradio_cb_receive.cb);
   15E6 90s02r2E           6842 	mov	dptr,#_axradio_cb_receive
   15E9 12s00r00           6843 	lcall	_wtimer_add_callback
                           6844 ;	..\COMMON\easyax5043.c:1205: wtimer_remove(&axradio_timer);
   15EC 90s02r85           6845 	mov	dptr,#_axradio_timer
   15EF 12s00r00           6846 	lcall	_wtimer_remove
                           6847 ;	..\COMMON\easyax5043.c:1207: uint8_t __autodata idx = axradio_sync_seqnr;
   15F2 90s00r0B           6848 	mov	dptr,#_axradio_ack_seqnr
   15F5 E0                 6849 	movx	a,@dptr
   15F6 FF                 6850 	mov	r7,a
                           6851 ;	..\COMMON\easyax5043.c:1208: if (idx >= axradio_sync_slave_nrrx)
   15F7 90s00r00           6852 	mov	dptr,#_axradio_sync_slave_nrrx
   15FA E4                 6853 	clr	a
   15FB 93                 6854 	movc	a,@a+dptr
   15FC FE                 6855 	mov	r6,a
   15FD C3                 6856 	clr	c
   15FE EF                 6857 	mov	a,r7
   15FF 9E                 6858 	subb	a,r6
   1600 40 03              6859 	jc	00158$
                           6860 ;	..\COMMON\easyax5043.c:1209: idx = axradio_sync_slave_nrrx - 1;
   1602 EE                 6861 	mov	a,r6
   1603 14                 6862 	dec	a
   1604 FF                 6863 	mov	r7,a
   1605                    6864 00158$:
                           6865 ;	..\COMMON\easyax5043.c:1210: axradio_timer.time += axradio_sync_slave_rxwindow[idx];
   1605 90s02r89           6866 	mov	dptr,#(_axradio_timer + 0x0004)
   1608 E0                 6867 	movx	a,@dptr
   1609 FB                 6868 	mov	r3,a
   160A A3                 6869 	inc	dptr
   160B E0                 6870 	movx	a,@dptr
   160C FC                 6871 	mov	r4,a
   160D A3                 6872 	inc	dptr
   160E E0                 6873 	movx	a,@dptr
   160F FD                 6874 	mov	r5,a
   1610 A3                 6875 	inc	dptr
   1611 E0                 6876 	movx	a,@dptr
   1612 FE                 6877 	mov	r6,a
   1613 EF                 6878 	mov	a,r7
   1614 75 F0 04           6879 	mov	b,#0x04
   1617 A4                 6880 	mul	ab
   1618 24r00              6881 	add	a,#_axradio_sync_slave_rxwindow
   161A F5 82              6882 	mov	dpl,a
   161C 74s00              6883 	mov	a,#(_axradio_sync_slave_rxwindow >> 8)
   161E 35 F0              6884 	addc	a,b
   1620 F5 83              6885 	mov	dph,a
   1622 E4                 6886 	clr	a
   1623 93                 6887 	movc	a,@a+dptr
   1624 F8                 6888 	mov	r0,a
   1625 A3                 6889 	inc	dptr
   1626 E4                 6890 	clr	a
   1627 93                 6891 	movc	a,@a+dptr
   1628 F9                 6892 	mov	r1,a
   1629 A3                 6893 	inc	dptr
   162A E4                 6894 	clr	a
   162B 93                 6895 	movc	a,@a+dptr
   162C FA                 6896 	mov	r2,a
   162D A3                 6897 	inc	dptr
   162E E4                 6898 	clr	a
   162F 93                 6899 	movc	a,@a+dptr
   1630 FF                 6900 	mov	r7,a
   1631 E8                 6901 	mov	a,r0
   1632 2B                 6902 	add	a,r3
   1633 FB                 6903 	mov	r3,a
   1634 E9                 6904 	mov	a,r1
   1635 3C                 6905 	addc	a,r4
   1636 FC                 6906 	mov	r4,a
   1637 EA                 6907 	mov	a,r2
   1638 3D                 6908 	addc	a,r5
   1639 FD                 6909 	mov	r5,a
   163A EF                 6910 	mov	a,r7
   163B 3E                 6911 	addc	a,r6
   163C FE                 6912 	mov	r6,a
   163D 90s02r89           6913 	mov	dptr,#(_axradio_timer + 0x0004)
   1640 EB                 6914 	mov	a,r3
   1641 F0                 6915 	movx	@dptr,a
   1642 A3                 6916 	inc	dptr
   1643 EC                 6917 	mov	a,r4
   1644 F0                 6918 	movx	@dptr,a
   1645 A3                 6919 	inc	dptr
   1646 ED                 6920 	mov	a,r5
   1647 F0                 6921 	movx	@dptr,a
   1648 A3                 6922 	inc	dptr
   1649 EE                 6923 	mov	a,r6
   164A F0                 6924 	movx	@dptr,a
                           6925 ;	..\COMMON\easyax5043.c:1212: wtimer0_addabsolute(&axradio_timer);
   164B 90s02r85           6926 	mov	dptr,#_axradio_timer
                           6927 ;	..\COMMON\easyax5043.c:1213: break;
   164E 02s00r00           6928 	ljmp	_wtimer0_addabsolute
                           6929 ;	..\COMMON\easyax5043.c:1215: case syncstate_slave_rxsfdwindow:
   1651                    6930 00159$:
                           6931 ;	..\COMMON\easyax5043.c:1216: if (!(0x0F & (uint8_t)~AX5043_RADIOSTATE)) {
   1651 90 40 1C           6932 	mov	dptr,#_AX5043_RADIOSTATE
   1654 E0                 6933 	movx	a,@dptr
   1655 F4                 6934 	cpl	a
   1656 FF                 6935 	mov	r7,a
   1657 54 0F              6936 	anl	a,#0x0F
   1659 60 02              6937 	jz	00259$
   165B 80 4C              6938 	sjmp	00162$
   165D                    6939 00259$:
                           6940 ;	..\COMMON\easyax5043.c:1217: axradio_syncstate = syncstate_slave_rxpacket;
   165D 90s00r00           6941 	mov	dptr,#_axradio_syncstate
   1660 74 0B              6942 	mov	a,#0x0B
   1662 F0                 6943 	movx	@dptr,a
                           6944 ;	..\COMMON\easyax5043.c:1218: wtimer_remove(&axradio_timer);
   1663 90s02r85           6945 	mov	dptr,#_axradio_timer
   1666 12s00r00           6946 	lcall	_wtimer_remove
                           6947 ;	..\COMMON\easyax5043.c:1219: axradio_timer.time += axradio_sync_slave_rxtimeout;
   1669 90s02r89           6948 	mov	dptr,#(_axradio_timer + 0x0004)
   166C E0                 6949 	movx	a,@dptr
   166D FC                 6950 	mov	r4,a
   166E A3                 6951 	inc	dptr
   166F E0                 6952 	movx	a,@dptr
   1670 FD                 6953 	mov	r5,a
   1671 A3                 6954 	inc	dptr
   1672 E0                 6955 	movx	a,@dptr
   1673 FE                 6956 	mov	r6,a
   1674 A3                 6957 	inc	dptr
   1675 E0                 6958 	movx	a,@dptr
   1676 FF                 6959 	mov	r7,a
   1677 90s00r00           6960 	mov	dptr,#_axradio_sync_slave_rxtimeout
   167A E4                 6961 	clr	a
   167B 93                 6962 	movc	a,@a+dptr
   167C F8                 6963 	mov	r0,a
   167D 74 01              6964 	mov	a,#0x01
   167F 93                 6965 	movc	a,@a+dptr
   1680 F9                 6966 	mov	r1,a
   1681 74 02              6967 	mov	a,#0x02
   1683 93                 6968 	movc	a,@a+dptr
   1684 FA                 6969 	mov	r2,a
   1685 74 03              6970 	mov	a,#0x03
   1687 93                 6971 	movc	a,@a+dptr
   1688 FB                 6972 	mov	r3,a
   1689 E8                 6973 	mov	a,r0
   168A 2C                 6974 	add	a,r4
   168B FC                 6975 	mov	r4,a
   168C E9                 6976 	mov	a,r1
   168D 3D                 6977 	addc	a,r5
   168E FD                 6978 	mov	r5,a
   168F EA                 6979 	mov	a,r2
   1690 3E                 6980 	addc	a,r6
   1691 FE                 6981 	mov	r6,a
   1692 EB                 6982 	mov	a,r3
   1693 3F                 6983 	addc	a,r7
   1694 FF                 6984 	mov	r7,a
   1695 90s02r89           6985 	mov	dptr,#(_axradio_timer + 0x0004)
   1698 EC                 6986 	mov	a,r4
   1699 F0                 6987 	movx	@dptr,a
   169A A3                 6988 	inc	dptr
   169B ED                 6989 	mov	a,r5
   169C F0                 6990 	movx	@dptr,a
   169D A3                 6991 	inc	dptr
   169E EE                 6992 	mov	a,r6
   169F F0                 6993 	movx	@dptr,a
   16A0 A3                 6994 	inc	dptr
   16A1 EF                 6995 	mov	a,r7
   16A2 F0                 6996 	movx	@dptr,a
                           6997 ;	..\COMMON\easyax5043.c:1220: wtimer0_addabsolute(&axradio_timer);
   16A3 90s02r85           6998 	mov	dptr,#_axradio_timer
                           6999 ;	..\COMMON\easyax5043.c:1221: break;
   16A6 02s00r00           7000 	ljmp	_wtimer0_addabsolute
                           7001 ;	..\COMMON\easyax5043.c:1225: case syncstate_slave_rxpacket:
   16A9                    7002 00162$:
                           7003 ;	..\COMMON\easyax5043.c:1226: ax5043_off();
   16A9 12s0Cr36           7004 	lcall	_ax5043_off
                           7005 ;	..\COMMON\easyax5043.c:1227: if (!axradio_sync_seqnr)
   16AC 90s00r0B           7006 	mov	dptr,#_axradio_ack_seqnr
   16AF E0                 7007 	movx	a,@dptr
   16B0 FF                 7008 	mov	r7,a
   16B1 70 06              7009 	jnz	00164$
                           7010 ;	..\COMMON\easyax5043.c:1228: axradio_sync_seqnr = 1;
   16B3 90s00r0B           7011 	mov	dptr,#_axradio_ack_seqnr
   16B6 74 01              7012 	mov	a,#0x01
   16B8 F0                 7013 	movx	@dptr,a
   16B9                    7014 00164$:
                           7015 ;	..\COMMON\easyax5043.c:1229: ++axradio_sync_seqnr;
   16B9 90s00r0B           7016 	mov	dptr,#_axradio_ack_seqnr
   16BC E0                 7017 	movx	a,@dptr
   16BD 24 01              7018 	add	a,#0x01
   16BF F0                 7019 	movx	@dptr,a
                           7020 ;	..\COMMON\easyax5043.c:1230: update_timeanchor();
   16C0 12s00r00           7021 	lcall	_update_timeanchor
                           7022 ;	..\COMMON\easyax5043.c:1231: wtimer_remove_callback(&axradio_cb_receive.cb);
   16C3 90s02r2E           7023 	mov	dptr,#_axradio_cb_receive
   16C6 12s00r00           7024 	lcall	_wtimer_remove_callback
                           7025 ;	..\COMMON\easyax5043.c:1232: memset_xdata(&axradio_cb_receive.st, 0, sizeof(axradio_cb_receive.st));
   16C9 75*00 00           7026 	mov	_memset_PARM_2,#0x00
   16CC 75*00 1E           7027 	mov	_memset_PARM_3,#0x1E
   16CF 75*01 00           7028 	mov	(_memset_PARM_3 + 1),#0x00
   16D2 90s02r32           7029 	mov	dptr,#(_axradio_cb_receive + 0x0004)
   16D5 75 F0 00           7030 	mov	b,#0x00
   16D8 12s00r00           7031 	lcall	_memset
                           7032 ;	..\COMMON\easyax5043.c:1233: axradio_cb_receive.st.time.t = axradio_timeanchor.radiotimer;
   16DB 90s00r16           7033 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   16DE E0                 7034 	movx	a,@dptr
   16DF FC                 7035 	mov	r4,a
   16E0 A3                 7036 	inc	dptr
   16E1 E0                 7037 	movx	a,@dptr
   16E2 FD                 7038 	mov	r5,a
   16E3 A3                 7039 	inc	dptr
   16E4 E0                 7040 	movx	a,@dptr
   16E5 FE                 7041 	mov	r6,a
   16E6 A3                 7042 	inc	dptr
   16E7 E0                 7043 	movx	a,@dptr
   16E8 FF                 7044 	mov	r7,a
   16E9 90s02r34           7045 	mov	dptr,#(_axradio_cb_receive + 0x0006)
   16EC EC                 7046 	mov	a,r4
   16ED F0                 7047 	movx	@dptr,a
   16EE A3                 7048 	inc	dptr
   16EF ED                 7049 	mov	a,r5
   16F0 F0                 7050 	movx	@dptr,a
   16F1 A3                 7051 	inc	dptr
   16F2 EE                 7052 	mov	a,r6
   16F3 F0                 7053 	movx	@dptr,a
   16F4 A3                 7054 	inc	dptr
   16F5 EF                 7055 	mov	a,r7
   16F6 F0                 7056 	movx	@dptr,a
                           7057 ;	..\COMMON\easyax5043.c:1234: axradio_cb_receive.st.error = AXRADIO_ERR_TIMEOUT;
   16F7 90s02r33           7058 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   16FA 74 03              7059 	mov	a,#0x03
   16FC F0                 7060 	movx	@dptr,a
                           7061 ;	..\COMMON\easyax5043.c:1235: if (axradio_sync_seqnr <= axradio_sync_slave_resyncloss) {
   16FD 90s00r0B           7062 	mov	dptr,#_axradio_ack_seqnr
   1700 E0                 7063 	movx	a,@dptr
   1701 FF                 7064 	mov	r7,a
   1702 90s00r00           7065 	mov	dptr,#_axradio_sync_slave_resyncloss
   1705 E4                 7066 	clr	a
   1706 93                 7067 	movc	a,@a+dptr
   1707 FE                 7068 	mov	r6,a
   1708 C3                 7069 	clr	c
   1709 9F                 7070 	subb	a,r7
   170A 40 54              7071 	jc	00168$
                           7072 ;	..\COMMON\easyax5043.c:1236: wtimer_add_callback(&axradio_cb_receive.cb);
   170C 90s02r2E           7073 	mov	dptr,#_axradio_cb_receive
   170F 12s00r00           7074 	lcall	_wtimer_add_callback
                           7075 ;	..\COMMON\easyax5043.c:1237: axradio_sync_slave_nextperiod();
   1712 12s0Fr87           7076 	lcall	_axradio_sync_slave_nextperiod
                           7077 ;	..\COMMON\easyax5043.c:1238: axradio_syncstate = syncstate_slave_rxidle;
   1715 90s00r00           7078 	mov	dptr,#_axradio_syncstate
   1718 74 08              7079 	mov	a,#0x08
   171A F0                 7080 	movx	@dptr,a
                           7081 ;	..\COMMON\easyax5043.c:1239: wtimer_remove(&axradio_timer);
   171B 90s02r85           7082 	mov	dptr,#_axradio_timer
   171E 12s00r00           7083 	lcall	_wtimer_remove
                           7084 ;	..\COMMON\easyax5043.c:1241: uint8_t __autodata idx = axradio_sync_seqnr;
   1721 90s00r0B           7085 	mov	dptr,#_axradio_ack_seqnr
   1724 E0                 7086 	movx	a,@dptr
   1725 FF                 7087 	mov	r7,a
                           7088 ;	..\COMMON\easyax5043.c:1242: if (idx >= axradio_sync_slave_nrrx)
   1726 90s00r00           7089 	mov	dptr,#_axradio_sync_slave_nrrx
   1729 E4                 7090 	clr	a
   172A 93                 7091 	movc	a,@a+dptr
   172B FE                 7092 	mov	r6,a
   172C C3                 7093 	clr	c
   172D EF                 7094 	mov	a,r7
   172E 9E                 7095 	subb	a,r6
   172F 40 03              7096 	jc	00166$
                           7097 ;	..\COMMON\easyax5043.c:1243: idx = axradio_sync_slave_nrrx - 1;
   1731 EE                 7098 	mov	a,r6
   1732 14                 7099 	dec	a
   1733 FF                 7100 	mov	r7,a
   1734                    7101 00166$:
                           7102 ;	..\COMMON\easyax5043.c:1244: axradio_sync_settimeradv(axradio_sync_slave_rxadvance[idx]);
   1734 EF                 7103 	mov	a,r7
   1735 75 F0 04           7104 	mov	b,#0x04
   1738 A4                 7105 	mul	ab
   1739 24r00              7106 	add	a,#_axradio_sync_slave_rxadvance
   173B F5 82              7107 	mov	dpl,a
   173D 74s00              7108 	mov	a,#(_axradio_sync_slave_rxadvance >> 8)
   173F 35 F0              7109 	addc	a,b
   1741 F5 83              7110 	mov	dph,a
   1743 E4                 7111 	clr	a
   1744 93                 7112 	movc	a,@a+dptr
   1745 FC                 7113 	mov	r4,a
   1746 A3                 7114 	inc	dptr
   1747 E4                 7115 	clr	a
   1748 93                 7116 	movc	a,@a+dptr
   1749 FD                 7117 	mov	r5,a
   174A A3                 7118 	inc	dptr
   174B E4                 7119 	clr	a
   174C 93                 7120 	movc	a,@a+dptr
   174D FE                 7121 	mov	r6,a
   174E A3                 7122 	inc	dptr
   174F E4                 7123 	clr	a
   1750 93                 7124 	movc	a,@a+dptr
   1751 8C 82              7125 	mov	dpl,r4
   1753 8D 83              7126 	mov	dph,r5
   1755 8E F0              7127 	mov	b,r6
   1757 12s0Er21           7128 	lcall	_axradio_sync_settimeradv
                           7129 ;	..\COMMON\easyax5043.c:1246: wtimer0_addabsolute(&axradio_timer);
   175A 90s02r85           7130 	mov	dptr,#_axradio_timer
                           7131 ;	..\COMMON\easyax5043.c:1247: break;
   175D 02s00r00           7132 	ljmp	_wtimer0_addabsolute
   1760                    7133 00168$:
                           7134 ;	..\COMMON\easyax5043.c:1249: axradio_cb_receive.st.error = AXRADIO_ERR_RESYNC;
   1760 90s02r33           7135 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   1763 74 09              7136 	mov	a,#0x09
   1765 F0                 7137 	movx	@dptr,a
                           7138 ;	..\COMMON\easyax5043.c:1250: wtimer_add_callback(&axradio_cb_receive.cb);
   1766 90s02r2E           7139 	mov	dptr,#_axradio_cb_receive
   1769 12s00r00           7140 	lcall	_wtimer_add_callback
                           7141 ;	..\COMMON\easyax5043.c:1251: ax5043_receiver_on_continuous();
   176C 12s0ArF1           7142 	lcall	_ax5043_receiver_on_continuous
                           7143 ;	..\COMMON\easyax5043.c:1252: axradio_syncstate = syncstate_slave_synchunt;
   176F 90s00r00           7144 	mov	dptr,#_axradio_syncstate
   1772 74 06              7145 	mov	a,#0x06
   1774 F0                 7146 	movx	@dptr,a
                           7147 ;	..\COMMON\easyax5043.c:1253: wtimer_remove(&axradio_timer);
   1775 90s02r85           7148 	mov	dptr,#_axradio_timer
   1778 12s00r00           7149 	lcall	_wtimer_remove
                           7150 ;	..\COMMON\easyax5043.c:1254: axradio_timer.time = axradio_sync_slave_syncwindow;
   177B 90s00r00           7151 	mov	dptr,#_axradio_sync_slave_syncwindow
   177E E4                 7152 	clr	a
   177F 93                 7153 	movc	a,@a+dptr
   1780 FC                 7154 	mov	r4,a
   1781 74 01              7155 	mov	a,#0x01
   1783 93                 7156 	movc	a,@a+dptr
   1784 FD                 7157 	mov	r5,a
   1785 74 02              7158 	mov	a,#0x02
   1787 93                 7159 	movc	a,@a+dptr
   1788 FE                 7160 	mov	r6,a
   1789 74 03              7161 	mov	a,#0x03
   178B 93                 7162 	movc	a,@a+dptr
   178C FF                 7163 	mov	r7,a
   178D 90s02r89           7164 	mov	dptr,#(_axradio_timer + 0x0004)
   1790 EC                 7165 	mov	a,r4
   1791 F0                 7166 	movx	@dptr,a
   1792 A3                 7167 	inc	dptr
   1793 ED                 7168 	mov	a,r5
   1794 F0                 7169 	movx	@dptr,a
   1795 A3                 7170 	inc	dptr
   1796 EE                 7171 	mov	a,r6
   1797 F0                 7172 	movx	@dptr,a
   1798 A3                 7173 	inc	dptr
   1799 EF                 7174 	mov	a,r7
   179A F0                 7175 	movx	@dptr,a
                           7176 ;	..\COMMON\easyax5043.c:1255: wtimer0_addrelative(&axradio_timer);
   179B 90s02r85           7177 	mov	dptr,#_axradio_timer
   179E 12s00r00           7178 	lcall	_wtimer0_addrelative
                           7179 ;	..\COMMON\easyax5043.c:1256: axradio_sync_time = axradio_timer.time;
   17A1 90s02r89           7180 	mov	dptr,#(_axradio_timer + 0x0004)
   17A4 E0                 7181 	movx	a,@dptr
   17A5 FC                 7182 	mov	r4,a
   17A6 A3                 7183 	inc	dptr
   17A7 E0                 7184 	movx	a,@dptr
   17A8 FD                 7185 	mov	r5,a
   17A9 A3                 7186 	inc	dptr
   17AA E0                 7187 	movx	a,@dptr
   17AB FE                 7188 	mov	r6,a
   17AC A3                 7189 	inc	dptr
   17AD E0                 7190 	movx	a,@dptr
   17AE FF                 7191 	mov	r7,a
   17AF 90s00r0C           7192 	mov	dptr,#_axradio_sync_time
   17B2 EC                 7193 	mov	a,r4
   17B3 F0                 7194 	movx	@dptr,a
   17B4 A3                 7195 	inc	dptr
   17B5 ED                 7196 	mov	a,r5
   17B6 F0                 7197 	movx	@dptr,a
   17B7 A3                 7198 	inc	dptr
   17B8 EE                 7199 	mov	a,r6
   17B9 F0                 7200 	movx	@dptr,a
   17BA A3                 7201 	inc	dptr
   17BB EF                 7202 	mov	a,r7
   17BC F0                 7203 	movx	@dptr,a
                           7204 ;	..\COMMON\easyax5043.c:1257: break;
                           7205 ;	..\COMMON\easyax5043.c:1259: case syncstate_slave_rxack:
   17BD 22                 7206 	ret
   17BE                    7207 00169$:
                           7208 ;	..\COMMON\easyax5043.c:1260: axradio_syncstate = syncstate_slave_rxidle;
   17BE 90s00r00           7209 	mov	dptr,#_axradio_syncstate
   17C1 74 08              7210 	mov	a,#0x08
   17C3 F0                 7211 	movx	@dptr,a
                           7212 ;	..\COMMON\easyax5043.c:1261: wtimer_remove(&axradio_timer);
   17C4 90s02r85           7213 	mov	dptr,#_axradio_timer
   17C7 12s00r00           7214 	lcall	_wtimer_remove
                           7215 ;	..\COMMON\easyax5043.c:1262: axradio_sync_settimeradv(axradio_sync_slave_rxadvance[1]);
   17CA 90s00r04           7216 	mov	dptr,#(_axradio_sync_slave_rxadvance + 0x0004)
   17CD E4                 7217 	clr	a
   17CE 93                 7218 	movc	a,@a+dptr
   17CF FC                 7219 	mov	r4,a
   17D0 A3                 7220 	inc	dptr
   17D1 E4                 7221 	clr	a
   17D2 93                 7222 	movc	a,@a+dptr
   17D3 FD                 7223 	mov	r5,a
   17D4 A3                 7224 	inc	dptr
   17D5 E4                 7225 	clr	a
   17D6 93                 7226 	movc	a,@a+dptr
   17D7 FE                 7227 	mov	r6,a
   17D8 A3                 7228 	inc	dptr
   17D9 E4                 7229 	clr	a
   17DA 93                 7230 	movc	a,@a+dptr
   17DB 8C 82              7231 	mov	dpl,r4
   17DD 8D 83              7232 	mov	dph,r5
   17DF 8E F0              7233 	mov	b,r6
   17E1 12s0Er21           7234 	lcall	_axradio_sync_settimeradv
                           7235 ;	..\COMMON\easyax5043.c:1263: wtimer0_addabsolute(&axradio_timer);
   17E4 90s02r85           7236 	mov	dptr,#_axradio_timer
   17E7 12s00r00           7237 	lcall	_wtimer0_addabsolute
                           7238 ;	..\COMMON\easyax5043.c:1264: goto transmitack;
   17EA 02s11rD5           7239 	ljmp	00131$
                           7240 ;	..\COMMON\easyax5043.c:1268: default:
   17ED                    7241 00171$:
                           7242 ;	..\COMMON\easyax5043.c:1270: }
   17ED 22                 7243 	ret
                           7244 ;------------------------------------------------------------
                           7245 ;Allocation info for local variables in function 'axradio_callback_fwd'
                           7246 ;------------------------------------------------------------
                           7247 ;desc                      Allocated to registers r6 r7 
                           7248 ;------------------------------------------------------------
                           7249 ;	..\COMMON\easyax5043.c:1273: static __reentrantb void axradio_callback_fwd(struct wtimer_callback __xdata *desc) __reentrant
                           7250 ;	-----------------------------------------
                           7251 ;	 function axradio_callback_fwd
                           7252 ;	-----------------------------------------
   17EE                    7253 _axradio_callback_fwd:
   17EE AE 82              7254 	mov	r6,dpl
   17F0 AF 83              7255 	mov	r7,dph
                           7256 ;	..\COMMON\easyax5043.c:1275: axradio_statuschange((struct axradio_status __xdata *)(desc + 1));
   17F2 74 04              7257 	mov	a,#0x04
   17F4 2E                 7258 	add	a,r6
   17F5 FE                 7259 	mov	r6,a
   17F6 E4                 7260 	clr	a
   17F7 3F                 7261 	addc	a,r7
   17F8 FF                 7262 	mov	r7,a
   17F9 8E 82              7263 	mov	dpl,r6
   17FB 8F 83              7264 	mov	dph,r7
   17FD 02s00r00           7265 	ljmp	_axradio_statuschange
                           7266 ;------------------------------------------------------------
                           7267 ;Allocation info for local variables in function 'axradio_receive_callback_fwd'
                           7268 ;------------------------------------------------------------
                           7269 ;desc                      Allocated to registers 
                           7270 ;len                       Allocated to registers r6 r7 
                           7271 ;len                       Allocated to registers r6 r7 
                           7272 ;seqnr                     Allocated to registers r6 
                           7273 ;len_byte                  Allocated to registers r6 
                           7274 ;trxst                     Allocated to registers r6 
                           7275 ;iesave                    Allocated to registers r7 
                           7276 ;------------------------------------------------------------
                           7277 ;	..\COMMON\easyax5043.c:1278: static void axradio_receive_callback_fwd(struct wtimer_callback __xdata *desc)
                           7278 ;	-----------------------------------------
                           7279 ;	 function axradio_receive_callback_fwd
                           7280 ;	-----------------------------------------
   1800                    7281 _axradio_receive_callback_fwd:
                           7282 ;	..\COMMON\easyax5043.c:1288: if (axradio_cb_receive.st.error != AXRADIO_ERR_NOERROR) {
   1800 90s02r33           7283 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   1803 E0                 7284 	movx	a,@dptr
   1804 60 06              7285 	jz	00102$
                           7286 ;	..\COMMON\easyax5043.c:1289: axradio_statuschange((struct axradio_status __xdata *)&axradio_cb_receive.st);
   1806 90s02r32           7287 	mov	dptr,#(_axradio_cb_receive + 0x0004)
                           7288 ;	..\COMMON\easyax5043.c:1290: return;
   1809 02s00r00           7289 	ljmp	_axradio_statuschange
   180C                    7290 00102$:
                           7291 ;	..\COMMON\easyax5043.c:1292: if (axradio_phy_pn9 && !(axradio_mode == AXRADIO_MODE_STREAM_RECEIVE ||
   180C 90s00r00           7292 	mov	dptr,#_axradio_phy_pn9
   180F E4                 7293 	clr	a
   1810 93                 7294 	movc	a,@a+dptr
   1811 FF                 7295 	mov	r7,a
   1812 60 5C              7296 	jz	00104$
   1814 74 1C              7297 	mov	a,#0x1C
   1816 B5*00 02           7298 	cjne	a,_axradio_mode,00260$
   1819 80 55              7299 	sjmp	00104$
   181B                    7300 00260$:
                           7301 ;	..\COMMON\easyax5043.c:1293: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_UNENC ||
   181B 74 1D              7302 	mov	a,#0x1D
   181D B5*00 02           7303 	cjne	a,_axradio_mode,00261$
   1820 80 4E              7304 	sjmp	00104$
   1822                    7305 00261$:
                           7306 ;	..\COMMON\easyax5043.c:1294: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_SCRAM)) {
   1822 74 1E              7307 	mov	a,#0x1E
   1824 B5*00 02           7308 	cjne	a,_axradio_mode,00262$
   1827 80 47              7309 	sjmp	00104$
   1829                    7310 00262$:
                           7311 ;	..\COMMON\easyax5043.c:1295: uint16_t __autodata len = axradio_cb_receive.st.rx.pktlen;
   1829 90s02r4E           7312 	mov	dptr,#(_axradio_cb_receive + 0x0020)
   182C E0                 7313 	movx	a,@dptr
   182D FE                 7314 	mov	r6,a
   182E A3                 7315 	inc	dptr
   182F E0                 7316 	movx	a,@dptr
   1830 FF                 7317 	mov	r7,a
                           7318 ;	..\COMMON\easyax5043.c:1296: len += axradio_framing_maclen;
   1831 90s00r00           7319 	mov	dptr,#_axradio_framing_maclen
   1834 E4                 7320 	clr	a
   1835 93                 7321 	movc	a,@a+dptr
   1836 7C 00              7322 	mov	r4,#0x00
   1838 2E                 7323 	add	a,r6
   1839 FE                 7324 	mov	r6,a
   183A EC                 7325 	mov	a,r4
   183B 3F                 7326 	addc	a,r7
   183C FF                 7327 	mov	r7,a
                           7328 ;	..\COMMON\easyax5043.c:1297: pn9_buffer((__xdata uint8_t *)axradio_cb_receive.st.rx.mac.raw, len, 0x1ff, -(AX5043_ENCODING & 0x01));
   183D 90 40 11           7329 	mov	dptr,#_AX5043_ENCODING
   1840 E0                 7330 	movx	a,@dptr
   1841 FD                 7331 	mov	r5,a
   1842 53 05 01           7332 	anl	ar5,#0x01
   1845 C3                 7333 	clr	c
   1846 E4                 7334 	clr	a
   1847 9D                 7335 	subb	a,r5
   1848 FD                 7336 	mov	r5,a
   1849 90s02r4A           7337 	mov	dptr,#(_axradio_cb_receive + 0x001c)
   184C E0                 7338 	movx	a,@dptr
   184D FB                 7339 	mov	r3,a
   184E A3                 7340 	inc	dptr
   184F E0                 7341 	movx	a,@dptr
   1850 FC                 7342 	mov	r4,a
   1851 7A 00              7343 	mov	r2,#0x00
   1853 C0 05              7344 	push	ar5
   1855 74 FF              7345 	mov	a,#0xFF
   1857 C0 E0              7346 	push	acc
   1859 74 01              7347 	mov	a,#0x01
   185B C0 E0              7348 	push	acc
   185D C0 06              7349 	push	ar6
   185F C0 07              7350 	push	ar7
   1861 8B 82              7351 	mov	dpl,r3
   1863 8C 83              7352 	mov	dph,r4
   1865 8A F0              7353 	mov	b,r2
   1867 12s00r00           7354 	lcall	_pn9_buffer
   186A E5 81              7355 	mov	a,sp
   186C 24 FB              7356 	add	a,#0xfb
   186E F5 81              7357 	mov	sp,a
   1870                    7358 00104$:
                           7359 ;	..\COMMON\easyax5043.c:1299: if (axradio_framing_swcrclen && !(axradio_mode == AXRADIO_MODE_STREAM_RECEIVE ||
   1870 90s00r00           7360 	mov	dptr,#_axradio_framing_swcrclen
   1873 E4                 7361 	clr	a
   1874 93                 7362 	movc	a,@a+dptr
   1875 FF                 7363 	mov	r7,a
   1876 60 67              7364 	jz	00111$
   1878 74 1C              7365 	mov	a,#0x1C
   187A B5*00 02           7366 	cjne	a,_axradio_mode,00264$
   187D 80 60              7367 	sjmp	00111$
   187F                    7368 00264$:
                           7369 ;	..\COMMON\easyax5043.c:1300: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_UNENC ||
   187F 74 1D              7370 	mov	a,#0x1D
   1881 B5*00 02           7371 	cjne	a,_axradio_mode,00265$
   1884 80 59              7372 	sjmp	00111$
   1886                    7373 00265$:
                           7374 ;	..\COMMON\easyax5043.c:1301: axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_SCRAM)) {
   1886 74 1E              7375 	mov	a,#0x1E
   1888 B5*00 02           7376 	cjne	a,_axradio_mode,00266$
   188B 80 52              7377 	sjmp	00111$
   188D                    7378 00266$:
                           7379 ;	..\COMMON\easyax5043.c:1302: uint16_t __autodata len = axradio_cb_receive.st.rx.pktlen;
   188D 90s02r4E           7380 	mov	dptr,#(_axradio_cb_receive + 0x0020)
   1890 E0                 7381 	movx	a,@dptr
   1891 FE                 7382 	mov	r6,a
   1892 A3                 7383 	inc	dptr
   1893 E0                 7384 	movx	a,@dptr
   1894 FF                 7385 	mov	r7,a
                           7386 ;	..\COMMON\easyax5043.c:1303: len += axradio_framing_maclen;
   1895 90s00r00           7387 	mov	dptr,#_axradio_framing_maclen
   1898 E4                 7388 	clr	a
   1899 93                 7389 	movc	a,@a+dptr
   189A 7C 00              7390 	mov	r4,#0x00
   189C 2E                 7391 	add	a,r6
   189D FE                 7392 	mov	r6,a
   189E EC                 7393 	mov	a,r4
   189F 3F                 7394 	addc	a,r7
   18A0 FF                 7395 	mov	r7,a
                           7396 ;	..\COMMON\easyax5043.c:1304: if (!axradio_framing_check_crc((__xdata uint8_t *)axradio_cb_receive.st.rx.mac.raw, len)) {
   18A1 90s02r4A           7397 	mov	dptr,#(_axradio_cb_receive + 0x001c)
   18A4 E0                 7398 	movx	a,@dptr
   18A5 FC                 7399 	mov	r4,a
   18A6 A3                 7400 	inc	dptr
   18A7 E0                 7401 	movx	a,@dptr
   18A8 FD                 7402 	mov	r5,a
   18A9 C0 06              7403 	push	ar6
   18AB C0 07              7404 	push	ar7
   18AD 8C 82              7405 	mov	dpl,r4
   18AF 8D 83              7406 	mov	dph,r5
   18B1 12s00r00           7407 	lcall	_axradio_framing_check_crc
   18B4 AF 82              7408 	mov	r7,dpl
   18B6 15 81              7409 	dec	sp
   18B8 15 81              7410 	dec	sp
   18BA EF                 7411 	mov	a,r7
   18BB 70 03              7412 	jnz	00267$
   18BD 02s1CrC4           7413 	ljmp	00163$
   18C0                    7414 00267$:
                           7415 ;	..\COMMON\easyax5043.c:1308: axradio_cb_receive.st.rx.pktlen -= axradio_framing_swcrclen; // drop crc
   18C0 90s02r4E           7416 	mov	dptr,#(_axradio_cb_receive + 0x0020)
   18C3 E0                 7417 	movx	a,@dptr
   18C4 FE                 7418 	mov	r6,a
   18C5 A3                 7419 	inc	dptr
   18C6 E0                 7420 	movx	a,@dptr
   18C7 FF                 7421 	mov	r7,a
   18C8 90s00r00           7422 	mov	dptr,#_axradio_framing_swcrclen
   18CB E4                 7423 	clr	a
   18CC 93                 7424 	movc	a,@a+dptr
   18CD FD                 7425 	mov	r5,a
   18CE 7C 00              7426 	mov	r4,#0x00
   18D0 EE                 7427 	mov	a,r6
   18D1 C3                 7428 	clr	c
   18D2 9D                 7429 	subb	a,r5
   18D3 FE                 7430 	mov	r6,a
   18D4 EF                 7431 	mov	a,r7
   18D5 9C                 7432 	subb	a,r4
   18D6 FF                 7433 	mov	r7,a
   18D7 90s02r4E           7434 	mov	dptr,#(_axradio_cb_receive + 0x0020)
   18DA EE                 7435 	mov	a,r6
   18DB F0                 7436 	movx	@dptr,a
   18DC A3                 7437 	inc	dptr
   18DD EF                 7438 	mov	a,r7
   18DE F0                 7439 	movx	@dptr,a
   18DF                    7440 00111$:
                           7441 ;	..\COMMON\easyax5043.c:1312: axradio_cb_receive.st.rx.phy.timeoffset = 0;
   18DF 90s02r3E           7442 	mov	dptr,#(_axradio_cb_receive + 0x0010)
                           7443 ;	..\COMMON\easyax5043.c:1313: axradio_cb_receive.st.rx.phy.period = 0;
   18E2 E4                 7444 	clr	a
   18E3 F0                 7445 	movx	@dptr,a
   18E4 A3                 7446 	inc	dptr
   18E5 F0                 7447 	movx	@dptr,a
   18E6 90s02r40           7448 	mov	dptr,#(_axradio_cb_receive + 0x0012)
   18E9 F0                 7449 	movx	@dptr,a
   18EA A3                 7450 	inc	dptr
   18EB E4                 7451 	clr	a
   18EC F0                 7452 	movx	@dptr,a
                           7453 ;	..\COMMON\easyax5043.c:1314: if (axradio_mode == AXRADIO_MODE_ACK_TRANSMIT ||
   18ED 74 12              7454 	mov	a,#0x12
   18EF B5*00 02           7455 	cjne	a,_axradio_mode,00268$
   18F2 80 0C              7456 	sjmp	00117$
   18F4                    7457 00268$:
                           7458 ;	..\COMMON\easyax5043.c:1315: axradio_mode == AXRADIO_MODE_WOR_ACK_TRANSMIT ||
   18F4 74 13              7459 	mov	a,#0x13
   18F6 B5*00 02           7460 	cjne	a,_axradio_mode,00269$
   18F9 80 05              7461 	sjmp	00117$
   18FB                    7462 00269$:
                           7463 ;	..\COMMON\easyax5043.c:1316: axradio_mode == AXRADIO_MODE_SYNC_ACK_MASTER) {
   18FB 74 21              7464 	mov	a,#0x21
   18FD B5*00 60           7465 	cjne	a,_axradio_mode,00118$
   1900                    7466 00117$:
                           7467 ;	..\COMMON\easyax5043.c:1317: ax5043_off();
   1900 12s0Cr36           7468 	lcall	_ax5043_off
                           7469 ;	..\COMMON\easyax5043.c:1318: wtimer_remove(&axradio_timer);
   1903 90s02r85           7470 	mov	dptr,#_axradio_timer
   1906 12s00r00           7471 	lcall	_wtimer_remove
                           7472 ;	..\COMMON\easyax5043.c:1319: if (axradio_mode == AXRADIO_MODE_SYNC_ACK_MASTER) {
   1909 74 21              7473 	mov	a,#0x21
   190B B5*00 26           7474 	cjne	a,_axradio_mode,00116$
                           7475 ;	..\COMMON\easyax5043.c:1320: axradio_syncstate = syncstate_master_normal;
   190E 90s00r00           7476 	mov	dptr,#_axradio_syncstate
   1911 74 03              7477 	mov	a,#0x03
   1913 F0                 7478 	movx	@dptr,a
                           7479 ;	..\COMMON\easyax5043.c:1321: axradio_sync_settimeradv(axradio_sync_xoscstartup);
   1914 90s00r00           7480 	mov	dptr,#_axradio_sync_xoscstartup
   1917 E4                 7481 	clr	a
   1918 93                 7482 	movc	a,@a+dptr
   1919 FC                 7483 	mov	r4,a
   191A 74 01              7484 	mov	a,#0x01
   191C 93                 7485 	movc	a,@a+dptr
   191D FD                 7486 	mov	r5,a
   191E 74 02              7487 	mov	a,#0x02
   1920 93                 7488 	movc	a,@a+dptr
   1921 FE                 7489 	mov	r6,a
   1922 74 03              7490 	mov	a,#0x03
   1924 93                 7491 	movc	a,@a+dptr
   1925 8C 82              7492 	mov	dpl,r4
   1927 8D 83              7493 	mov	dph,r5
   1929 8E F0              7494 	mov	b,r6
   192B 12s0Er21           7495 	lcall	_axradio_sync_settimeradv
                           7496 ;	..\COMMON\easyax5043.c:1322: wtimer0_addabsolute(&axradio_timer);
   192E 90s02r85           7497 	mov	dptr,#_axradio_timer
   1931 12s00r00           7498 	lcall	_wtimer0_addabsolute
   1934                    7499 00116$:
                           7500 ;	..\COMMON\easyax5043.c:1324: wtimer_remove_callback(&axradio_cb_transmitend.cb);
   1934 90s02r71           7501 	mov	dptr,#_axradio_cb_transmitend
   1937 12s00r00           7502 	lcall	_wtimer_remove_callback
                           7503 ;	..\COMMON\easyax5043.c:1325: axradio_cb_transmitend.st.error = AXRADIO_ERR_NOERROR;
   193A 90s02r76           7504 	mov	dptr,#(_axradio_cb_transmitend + 0x0005)
   193D E4                 7505 	clr	a
   193E F0                 7506 	movx	@dptr,a
                           7507 ;	..\COMMON\easyax5043.c:1326: axradio_cb_transmitend.st.time.t = radio_read24((uint16_t)&AX5043_TIMER2);
   193F 90 40 59           7508 	mov	dptr,#_AX5043_TIMER2
   1942 12s00r00           7509 	lcall	_radio_read24
   1945 AC 82              7510 	mov	r4,dpl
   1947 AD 83              7511 	mov	r5,dph
   1949 AE F0              7512 	mov	r6,b
   194B FF                 7513 	mov	r7,a
   194C 90s02r77           7514 	mov	dptr,#(_axradio_cb_transmitend + 0x0006)
   194F EC                 7515 	mov	a,r4
   1950 F0                 7516 	movx	@dptr,a
   1951 A3                 7517 	inc	dptr
   1952 ED                 7518 	mov	a,r5
   1953 F0                 7519 	movx	@dptr,a
   1954 A3                 7520 	inc	dptr
   1955 EE                 7521 	mov	a,r6
   1956 F0                 7522 	movx	@dptr,a
   1957 A3                 7523 	inc	dptr
   1958 EF                 7524 	mov	a,r7
   1959 F0                 7525 	movx	@dptr,a
                           7526 ;	..\COMMON\easyax5043.c:1327: wtimer_add_callback(&axradio_cb_transmitend.cb);
   195A 90s02r71           7527 	mov	dptr,#_axradio_cb_transmitend
   195D 12s00r00           7528 	lcall	_wtimer_add_callback
   1960                    7529 00118$:
                           7530 ;	..\COMMON\easyax5043.c:1329: if (axradio_framing_destaddrpos != 0xff)
   1960 90s00r00           7531 	mov	dptr,#_axradio_framing_destaddrpos
   1963 E4                 7532 	clr	a
   1964 93                 7533 	movc	a,@a+dptr
   1965 FF                 7534 	mov	r7,a
   1966 BF FF 02           7535 	cjne	r7,#0xFF,00274$
   1969 80 29              7536 	sjmp	00122$
   196B                    7537 00274$:
                           7538 ;	..\COMMON\easyax5043.c:1330: memcpy_xdata(&axradio_cb_receive.st.rx.mac.localaddr, &axradio_cb_receive.st.rx.mac.raw[axradio_framing_destaddrpos], axradio_framing_addrlen);
   196B 90s02r4A           7539 	mov	dptr,#(_axradio_cb_receive + 0x001c)
   196E E0                 7540 	movx	a,@dptr
   196F FD                 7541 	mov	r5,a
   1970 A3                 7542 	inc	dptr
   1971 E0                 7543 	movx	a,@dptr
   1972 FE                 7544 	mov	r6,a
   1973 EF                 7545 	mov	a,r7
   1974 2D                 7546 	add	a,r5
   1975 FF                 7547 	mov	r7,a
   1976 E4                 7548 	clr	a
   1977 3E                 7549 	addc	a,r6
   1978 FC                 7550 	mov	r4,a
   1979 8F*00              7551 	mov	_memcpy_PARM_2,r7
   197B 8C*01              7552 	mov	(_memcpy_PARM_2 + 1),r4
   197D 75*02 00           7553 	mov	(_memcpy_PARM_2 + 2),#0x00
   1980 90s00r00           7554 	mov	dptr,#_axradio_framing_addrlen
   1983 E4                 7555 	clr	a
   1984 93                 7556 	movc	a,@a+dptr
   1985 FF                 7557 	mov	r7,a
   1986 8F*00              7558 	mov	_memcpy_PARM_3,r7
   1988 75*01 00           7559 	mov	(_memcpy_PARM_3 + 1),#0x00
   198B 90s02r46           7560 	mov	dptr,#(_axradio_cb_receive + 0x0018)
   198E 75 F0 00           7561 	mov	b,#0x00
   1991 12s00r00           7562 	lcall	_memcpy
   1994                    7563 00122$:
                           7564 ;	..\COMMON\easyax5043.c:1331: if (axradio_framing_sourceaddrpos != 0xff)
   1994 90s00r00           7565 	mov	dptr,#_axradio_framing_sourceaddrpos
   1997 E4                 7566 	clr	a
   1998 93                 7567 	movc	a,@a+dptr
   1999 FF                 7568 	mov	r7,a
   199A BF FF 02           7569 	cjne	r7,#0xFF,00275$
   199D 80 29              7570 	sjmp	00124$
   199F                    7571 00275$:
                           7572 ;	..\COMMON\easyax5043.c:1332: memcpy_xdata(&axradio_cb_receive.st.rx.mac.remoteaddr, &axradio_cb_receive.st.rx.mac.raw[axradio_framing_sourceaddrpos], axradio_framing_addrlen);
   199F 90s02r4A           7573 	mov	dptr,#(_axradio_cb_receive + 0x001c)
   19A2 E0                 7574 	movx	a,@dptr
   19A3 FD                 7575 	mov	r5,a
   19A4 A3                 7576 	inc	dptr
   19A5 E0                 7577 	movx	a,@dptr
   19A6 FE                 7578 	mov	r6,a
   19A7 EF                 7579 	mov	a,r7
   19A8 2D                 7580 	add	a,r5
   19A9 FF                 7581 	mov	r7,a
   19AA E4                 7582 	clr	a
   19AB 3E                 7583 	addc	a,r6
   19AC FC                 7584 	mov	r4,a
   19AD 8F*00              7585 	mov	_memcpy_PARM_2,r7
   19AF 8C*01              7586 	mov	(_memcpy_PARM_2 + 1),r4
   19B1 75*02 00           7587 	mov	(_memcpy_PARM_2 + 2),#0x00
   19B4 90s00r00           7588 	mov	dptr,#_axradio_framing_addrlen
   19B7 E4                 7589 	clr	a
   19B8 93                 7590 	movc	a,@a+dptr
   19B9 FF                 7591 	mov	r7,a
   19BA 8F*00              7592 	mov	_memcpy_PARM_3,r7
   19BC 75*01 00           7593 	mov	(_memcpy_PARM_3 + 1),#0x00
   19BF 90s02r42           7594 	mov	dptr,#(_axradio_cb_receive + 0x0014)
   19C2 75 F0 00           7595 	mov	b,#0x00
   19C5 12s00r00           7596 	lcall	_memcpy
   19C8                    7597 00124$:
                           7598 ;	..\COMMON\easyax5043.c:1333: if (axradio_mode == AXRADIO_MODE_ACK_RECEIVE ||
   19C8 74 1A              7599 	mov	a,#0x1A
   19CA B5*00 02           7600 	cjne	a,_axradio_mode,00276$
   19CD 80 11              7601 	sjmp	00146$
   19CF                    7602 00276$:
                           7603 ;	..\COMMON\easyax5043.c:1334: axradio_mode == AXRADIO_MODE_WOR_ACK_RECEIVE ||
   19CF 74 1B              7604 	mov	a,#0x1B
   19D1 B5*00 02           7605 	cjne	a,_axradio_mode,00277$
   19D4 80 0A              7606 	sjmp	00146$
   19D6                    7607 00277$:
                           7608 ;	..\COMMON\easyax5043.c:1335: axradio_mode == AXRADIO_MODE_SYNC_ACK_SLAVE) {
   19D6 74 23              7609 	mov	a,#0x23
   19D8 B5*00 02           7610 	cjne	a,_axradio_mode,00278$
   19DB 80 03              7611 	sjmp	00279$
   19DD                    7612 00278$:
   19DD 02s1BrDA           7613 	ljmp	00147$
   19E0                    7614 00279$:
   19E0                    7615 00146$:
                           7616 ;	..\COMMON\easyax5043.c:1336: axradio_ack_count = 0;
   19E0 90s00r0A           7617 	mov	dptr,#_axradio_ack_count
   19E3 E4                 7618 	clr	a
   19E4 F0                 7619 	movx	@dptr,a
                           7620 ;	..\COMMON\easyax5043.c:1337: axradio_txbuffer_len = axradio_framing_maclen + axradio_framing_minpayloadlen;
   19E5 90s00r00           7621 	mov	dptr,#_axradio_framing_maclen
   19E8 E4                 7622 	clr	a
   19E9 93                 7623 	movc	a,@a+dptr
   19EA FF                 7624 	mov	r7,a
   19EB FD                 7625 	mov	r5,a
   19EC 7E 00              7626 	mov	r6,#0x00
   19EE 90s00r00           7627 	mov	dptr,#_axradio_framing_minpayloadlen
   19F1 E4                 7628 	clr	a
   19F2 93                 7629 	movc	a,@a+dptr
   19F3 FC                 7630 	mov	r4,a
   19F4 7B 00              7631 	mov	r3,#0x00
   19F6 90s00r01           7632 	mov	dptr,#_axradio_txbuffer_len
   19F9 EC                 7633 	mov	a,r4
   19FA 2D                 7634 	add	a,r5
   19FB F0                 7635 	movx	@dptr,a
   19FC EB                 7636 	mov	a,r3
   19FD 3E                 7637 	addc	a,r6
   19FE A3                 7638 	inc	dptr
   19FF F0                 7639 	movx	@dptr,a
                           7640 ;	..\COMMON\easyax5043.c:1338: memset_xdata(axradio_txbuffer, 0, axradio_framing_maclen);
   1A00 8F*00              7641 	mov	_memset_PARM_3,r7
   1A02 75*01 00           7642 	mov	(_memset_PARM_3 + 1),#0x00
   1A05 75*00 00           7643 	mov	_memset_PARM_2,#0x00
   1A08 90s00r26           7644 	mov	dptr,#_axradio_txbuffer
   1A0B 75 F0 00           7645 	mov	b,#0x00
   1A0E 12s00r00           7646 	lcall	_memset
                           7647 ;	..\COMMON\easyax5043.c:1339: if (axradio_framing_ack_seqnrpos != 0xff) {
   1A11 90s00r00           7648 	mov	dptr,#_axradio_framing_ack_seqnrpos
   1A14 E4                 7649 	clr	a
   1A15 93                 7650 	movc	a,@a+dptr
   1A16 FF                 7651 	mov	r7,a
   1A17 BF FF 02           7652 	cjne	r7,#0xFF,00280$
   1A1A 80 35              7653 	sjmp	00129$
   1A1C                    7654 00280$:
                           7655 ;	..\COMMON\easyax5043.c:1340: uint8_t seqnr = axradio_cb_receive.st.rx.mac.raw[axradio_framing_ack_seqnrpos];
   1A1C 90s02r4A           7656 	mov	dptr,#(_axradio_cb_receive + 0x001c)
   1A1F E0                 7657 	movx	a,@dptr
   1A20 FD                 7658 	mov	r5,a
   1A21 A3                 7659 	inc	dptr
   1A22 E0                 7660 	movx	a,@dptr
   1A23 FE                 7661 	mov	r6,a
   1A24 EF                 7662 	mov	a,r7
   1A25 2D                 7663 	add	a,r5
   1A26 F5 82              7664 	mov	dpl,a
   1A28 E4                 7665 	clr	a
   1A29 3E                 7666 	addc	a,r6
   1A2A F5 83              7667 	mov	dph,a
   1A2C E0                 7668 	movx	a,@dptr
   1A2D FE                 7669 	mov	r6,a
                           7670 ;	..\COMMON\easyax5043.c:1341: axradio_txbuffer[axradio_framing_ack_seqnrpos] = seqnr;
   1A2E EF                 7671 	mov	a,r7
   1A2F 24r26              7672 	add	a,#_axradio_txbuffer
   1A31 F5 82              7673 	mov	dpl,a
   1A33 E4                 7674 	clr	a
   1A34 34s00              7675 	addc	a,#(_axradio_txbuffer >> 8)
   1A36 F5 83              7676 	mov	dph,a
   1A38 EE                 7677 	mov	a,r6
   1A39 F0                 7678 	movx	@dptr,a
                           7679 ;	..\COMMON\easyax5043.c:1342: if (axradio_ack_seqnr != seqnr)
   1A3A 90s00r0B           7680 	mov	dptr,#_axradio_ack_seqnr
   1A3D E0                 7681 	movx	a,@dptr
   1A3E FF                 7682 	mov	r7,a
   1A3F B5 06 02           7683 	cjne	a,ar6,00281$
   1A42 80 07              7684 	sjmp	00126$
   1A44                    7685 00281$:
                           7686 ;	..\COMMON\easyax5043.c:1343: axradio_ack_seqnr = seqnr;
   1A44 90s00r0B           7687 	mov	dptr,#_axradio_ack_seqnr
   1A47 EE                 7688 	mov	a,r6
   1A48 F0                 7689 	movx	@dptr,a
   1A49 80 06              7690 	sjmp	00129$
   1A4B                    7691 00126$:
                           7692 ;	..\COMMON\easyax5043.c:1345: axradio_cb_receive.st.error = AXRADIO_ERR_RETRANSMISSION;
   1A4B 90s02r33           7693 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   1A4E 74 08              7694 	mov	a,#0x08
   1A50 F0                 7695 	movx	@dptr,a
   1A51                    7696 00129$:
                           7697 ;	..\COMMON\easyax5043.c:1347: if (axradio_framing_destaddrpos != 0xff) {
   1A51 90s00r00           7698 	mov	dptr,#_axradio_framing_destaddrpos
   1A54 E4                 7699 	clr	a
   1A55 93                 7700 	movc	a,@a+dptr
   1A56 FF                 7701 	mov	r7,a
   1A57 BF FF 02           7702 	cjne	r7,#0xFF,00282$
   1A5A 80 5B              7703 	sjmp	00134$
   1A5C                    7704 00282$:
                           7705 ;	..\COMMON\easyax5043.c:1348: if (axradio_framing_sourceaddrpos != 0xff)
   1A5C 90s00r00           7706 	mov	dptr,#_axradio_framing_sourceaddrpos
   1A5F E4                 7707 	clr	a
   1A60 93                 7708 	movc	a,@a+dptr
   1A61 FE                 7709 	mov	r6,a
   1A62 BE FF 02           7710 	cjne	r6,#0xFF,00283$
   1A65 80 29              7711 	sjmp	00131$
   1A67                    7712 00283$:
                           7713 ;	..\COMMON\easyax5043.c:1349: memcpy_xdata(&axradio_txbuffer[axradio_framing_destaddrpos], &axradio_cb_receive.st.rx.mac.remoteaddr, axradio_framing_addrlen);
   1A67 EF                 7714 	mov	a,r7
   1A68 24r26              7715 	add	a,#_axradio_txbuffer
   1A6A FD                 7716 	mov	r5,a
   1A6B E4                 7717 	clr	a
   1A6C 34s00              7718 	addc	a,#(_axradio_txbuffer >> 8)
   1A6E FE                 7719 	mov	r6,a
   1A6F 7C 00              7720 	mov	r4,#0x00
   1A71 75*00r42           7721 	mov	_memcpy_PARM_2,#(_axradio_cb_receive + 0x0014)
   1A74 75*01s02           7722 	mov	(_memcpy_PARM_2 + 1),#((_axradio_cb_receive + 0x0014) >> 8)
   1A77 75*02 00           7723 	mov	(_memcpy_PARM_2 + 2),#0x00
   1A7A 90s00r00           7724 	mov	dptr,#_axradio_framing_addrlen
   1A7D E4                 7725 	clr	a
   1A7E 93                 7726 	movc	a,@a+dptr
   1A7F FB                 7727 	mov	r3,a
   1A80 8B*00              7728 	mov	_memcpy_PARM_3,r3
   1A82 75*01 00           7729 	mov	(_memcpy_PARM_3 + 1),#0x00
   1A85 8D 82              7730 	mov	dpl,r5
   1A87 8E 83              7731 	mov	dph,r6
   1A89 8C F0              7732 	mov	b,r4
   1A8B 12s00r00           7733 	lcall	_memcpy
   1A8E 80 27              7734 	sjmp	00134$
   1A90                    7735 00131$:
                           7736 ;	..\COMMON\easyax5043.c:1351: memcpy_xdata(&axradio_txbuffer[axradio_framing_destaddrpos], &axradio_default_remoteaddr, axradio_framing_addrlen);
   1A90 EF                 7737 	mov	a,r7
   1A91 24r26              7738 	add	a,#_axradio_txbuffer
   1A93 FF                 7739 	mov	r7,a
   1A94 E4                 7740 	clr	a
   1A95 34s00              7741 	addc	a,#(_axradio_txbuffer >> 8)
   1A97 FE                 7742 	mov	r6,a
   1A98 7D 00              7743 	mov	r5,#0x00
   1A9A 75*00r22           7744 	mov	_memcpy_PARM_2,#_axradio_default_remoteaddr
   1A9D 75*01s00           7745 	mov	(_memcpy_PARM_2 + 1),#(_axradio_default_remoteaddr >> 8)
   1AA0 75*02 00           7746 	mov	(_memcpy_PARM_2 + 2),#0x00
   1AA3 90s00r00           7747 	mov	dptr,#_axradio_framing_addrlen
   1AA6 E4                 7748 	clr	a
   1AA7 93                 7749 	movc	a,@a+dptr
   1AA8 FC                 7750 	mov	r4,a
   1AA9 8C*00              7751 	mov	_memcpy_PARM_3,r4
   1AAB 75*01 00           7752 	mov	(_memcpy_PARM_3 + 1),#0x00
   1AAE 8F 82              7753 	mov	dpl,r7
   1AB0 8E 83              7754 	mov	dph,r6
   1AB2 8D F0              7755 	mov	b,r5
   1AB4 12s00r00           7756 	lcall	_memcpy
   1AB7                    7757 00134$:
                           7758 ;	..\COMMON\easyax5043.c:1353: if (axradio_framing_sourceaddrpos != 0xff)
   1AB7 90s00r00           7759 	mov	dptr,#_axradio_framing_sourceaddrpos
   1ABA E4                 7760 	clr	a
   1ABB 93                 7761 	movc	a,@a+dptr
   1ABC FF                 7762 	mov	r7,a
   1ABD BF FF 02           7763 	cjne	r7,#0xFF,00284$
   1AC0 80 27              7764 	sjmp	00136$
   1AC2                    7765 00284$:
                           7766 ;	..\COMMON\easyax5043.c:1354: memcpy_xdata(&axradio_txbuffer[axradio_framing_sourceaddrpos], &axradio_localaddr.addr, axradio_framing_addrlen);
   1AC2 EF                 7767 	mov	a,r7
   1AC3 24r26              7768 	add	a,#_axradio_txbuffer
   1AC5 FF                 7769 	mov	r7,a
   1AC6 E4                 7770 	clr	a
   1AC7 34s00              7771 	addc	a,#(_axradio_txbuffer >> 8)
   1AC9 FE                 7772 	mov	r6,a
   1ACA 7D 00              7773 	mov	r5,#0x00
   1ACC 75*00r1A           7774 	mov	_memcpy_PARM_2,#_axradio_localaddr
   1ACF 75*01s00           7775 	mov	(_memcpy_PARM_2 + 1),#(_axradio_localaddr >> 8)
   1AD2 75*02 00           7776 	mov	(_memcpy_PARM_2 + 2),#0x00
   1AD5 90s00r00           7777 	mov	dptr,#_axradio_framing_addrlen
   1AD8 E4                 7778 	clr	a
   1AD9 93                 7779 	movc	a,@a+dptr
   1ADA FC                 7780 	mov	r4,a
   1ADB 8C*00              7781 	mov	_memcpy_PARM_3,r4
   1ADD 75*01 00           7782 	mov	(_memcpy_PARM_3 + 1),#0x00
   1AE0 8F 82              7783 	mov	dpl,r7
   1AE2 8E 83              7784 	mov	dph,r6
   1AE4 8D F0              7785 	mov	b,r5
   1AE6 12s00r00           7786 	lcall	_memcpy
   1AE9                    7787 00136$:
                           7788 ;	..\COMMON\easyax5043.c:1355: if (axradio_framing_lenmask) {
   1AE9 90s00r00           7789 	mov	dptr,#_axradio_framing_lenmask
   1AEC E4                 7790 	clr	a
   1AED 93                 7791 	movc	a,@a+dptr
   1AEE FF                 7792 	mov	r7,a
   1AEF 60 30              7793 	jz	00138$
                           7794 ;	..\COMMON\easyax5043.c:1356: uint8_t len_byte = (uint8_t)(axradio_txbuffer_len - axradio_framing_lenoffs) & axradio_framing_lenmask; // if you prefer not counting the len byte itself, set LENOFFS = 1
   1AF1 90s00r01           7795 	mov	dptr,#_axradio_txbuffer_len
   1AF4 E0                 7796 	movx	a,@dptr
   1AF5 FD                 7797 	mov	r5,a
   1AF6 A3                 7798 	inc	dptr
   1AF7 E0                 7799 	movx	a,@dptr
   1AF8 90s00r00           7800 	mov	dptr,#_axradio_framing_lenoffs
   1AFB E4                 7801 	clr	a
   1AFC 93                 7802 	movc	a,@a+dptr
   1AFD FE                 7803 	mov	r6,a
   1AFE ED                 7804 	mov	a,r5
   1AFF C3                 7805 	clr	c
   1B00 9E                 7806 	subb	a,r6
   1B01 5F                 7807 	anl	a,r7
   1B02 FE                 7808 	mov	r6,a
                           7809 ;	..\COMMON\easyax5043.c:1357: axradio_txbuffer[axradio_framing_lenpos] = (axradio_txbuffer[axradio_framing_lenpos] & (uint8_t)~axradio_framing_lenmask) | len_byte;
   1B03 90s00r00           7810 	mov	dptr,#_axradio_framing_lenpos
   1B06 E4                 7811 	clr	a
   1B07 93                 7812 	movc	a,@a+dptr
   1B08 24r26              7813 	add	a,#_axradio_txbuffer
   1B0A FD                 7814 	mov	r5,a
   1B0B E4                 7815 	clr	a
   1B0C 34s00              7816 	addc	a,#(_axradio_txbuffer >> 8)
   1B0E FC                 7817 	mov	r4,a
   1B0F 8D 82              7818 	mov	dpl,r5
   1B11 8C 83              7819 	mov	dph,r4
   1B13 E0                 7820 	movx	a,@dptr
   1B14 FB                 7821 	mov	r3,a
   1B15 EF                 7822 	mov	a,r7
   1B16 F4                 7823 	cpl	a
   1B17 FF                 7824 	mov	r7,a
   1B18 5B                 7825 	anl	a,r3
   1B19 42 06              7826 	orl	ar6,a
   1B1B 8D 82              7827 	mov	dpl,r5
   1B1D 8C 83              7828 	mov	dph,r4
   1B1F EE                 7829 	mov	a,r6
   1B20 F0                 7830 	movx	@dptr,a
   1B21                    7831 00138$:
                           7832 ;	..\COMMON\easyax5043.c:1359: if (axradio_framing_swcrclen) {
   1B21 90s00r00           7833 	mov	dptr,#_axradio_framing_swcrclen
   1B24 E4                 7834 	clr	a
   1B25 93                 7835 	movc	a,@a+dptr
   1B26 FF                 7836 	mov	r7,a
   1B27 60 2E              7837 	jz	00140$
                           7838 ;	..\COMMON\easyax5043.c:1360: axradio_framing_append_crc(axradio_txbuffer, axradio_txbuffer_len);
   1B29 90s00r01           7839 	mov	dptr,#_axradio_txbuffer_len
   1B2C E0                 7840 	movx	a,@dptr
   1B2D C0 E0              7841 	push	acc
   1B2F A3                 7842 	inc	dptr
   1B30 E0                 7843 	movx	a,@dptr
   1B31 C0 E0              7844 	push	acc
   1B33 90s00r26           7845 	mov	dptr,#_axradio_txbuffer
   1B36 12s00r00           7846 	lcall	_axradio_framing_append_crc
   1B39 15 81              7847 	dec	sp
   1B3B 15 81              7848 	dec	sp
                           7849 ;	..\COMMON\easyax5043.c:1361: axradio_txbuffer_len += axradio_framing_swcrclen;
   1B3D 90s00r00           7850 	mov	dptr,#_axradio_framing_swcrclen
   1B40 E4                 7851 	clr	a
   1B41 93                 7852 	movc	a,@a+dptr
   1B42 FF                 7853 	mov	r7,a
   1B43 7E 00              7854 	mov	r6,#0x00
   1B45 90s00r01           7855 	mov	dptr,#_axradio_txbuffer_len
   1B48 E0                 7856 	movx	a,@dptr
   1B49 FC                 7857 	mov	r4,a
   1B4A A3                 7858 	inc	dptr
   1B4B E0                 7859 	movx	a,@dptr
   1B4C FD                 7860 	mov	r5,a
   1B4D 90s00r01           7861 	mov	dptr,#_axradio_txbuffer_len
   1B50 EF                 7862 	mov	a,r7
   1B51 2C                 7863 	add	a,r4
   1B52 F0                 7864 	movx	@dptr,a
   1B53 EE                 7865 	mov	a,r6
   1B54 3D                 7866 	addc	a,r5
   1B55 A3                 7867 	inc	dptr
   1B56 F0                 7868 	movx	@dptr,a
   1B57                    7869 00140$:
                           7870 ;	..\COMMON\easyax5043.c:1363: if (axradio_phy_pn9) {
   1B57 90s00r00           7871 	mov	dptr,#_axradio_phy_pn9
   1B5A E4                 7872 	clr	a
   1B5B 93                 7873 	movc	a,@a+dptr
   1B5C FF                 7874 	mov	r7,a
   1B5D 60 2F              7875 	jz	00142$
                           7876 ;	..\COMMON\easyax5043.c:1364: pn9_buffer(axradio_txbuffer, axradio_txbuffer_len, 0x1ff, -(AX5043_ENCODING & 0x01));
   1B5F 90 40 11           7877 	mov	dptr,#_AX5043_ENCODING
   1B62 E0                 7878 	movx	a,@dptr
   1B63 FF                 7879 	mov	r7,a
   1B64 53 07 01           7880 	anl	ar7,#0x01
   1B67 C3                 7881 	clr	c
   1B68 E4                 7882 	clr	a
   1B69 9F                 7883 	subb	a,r7
   1B6A FF                 7884 	mov	r7,a
   1B6B C0 07              7885 	push	ar7
   1B6D 74 FF              7886 	mov	a,#0xFF
   1B6F C0 E0              7887 	push	acc
   1B71 74 01              7888 	mov	a,#0x01
   1B73 C0 E0              7889 	push	acc
   1B75 90s00r01           7890 	mov	dptr,#_axradio_txbuffer_len
   1B78 E0                 7891 	movx	a,@dptr
   1B79 C0 E0              7892 	push	acc
   1B7B A3                 7893 	inc	dptr
   1B7C E0                 7894 	movx	a,@dptr
   1B7D C0 E0              7895 	push	acc
   1B7F 90s00r26           7896 	mov	dptr,#_axradio_txbuffer
   1B82 75 F0 00           7897 	mov	b,#0x00
   1B85 12s00r00           7898 	lcall	_pn9_buffer
   1B88 E5 81              7899 	mov	a,sp
   1B8A 24 FB              7900 	add	a,#0xfb
   1B8C F5 81              7901 	mov	sp,a
   1B8E                    7902 00142$:
                           7903 ;	..\COMMON\easyax5043.c:1366: AX5043_IRQMASK1 = 0x00;
   1B8E 90 40 06           7904 	mov	dptr,#_AX5043_IRQMASK1
                           7905 ;	..\COMMON\easyax5043.c:1367: AX5043_IRQMASK0 = 0x00;
   1B91 E4                 7906 	clr	a
   1B92 F0                 7907 	movx	@dptr,a
   1B93 90 40 07           7908 	mov	dptr,#_AX5043_IRQMASK0
   1B96 F0                 7909 	movx	@dptr,a
                           7910 ;	..\COMMON\easyax5043.c:1368: AX5043_PWRMODE = AX5043_PWRSTATE_XTAL_ON;
   1B97 90 40 02           7911 	mov	dptr,#_AX5043_PWRMODE
   1B9A 74 05              7912 	mov	a,#0x05
   1B9C F0                 7913 	movx	@dptr,a
                           7914 ;	..\COMMON\easyax5043.c:1369: AX5043_FIFOSTAT = 3;
   1B9D 90 40 28           7915 	mov	dptr,#_AX5043_FIFOSTAT
   1BA0 74 03              7916 	mov	a,#0x03
   1BA2 F0                 7917 	movx	@dptr,a
                           7918 ;	..\COMMON\easyax5043.c:1370: axradio_trxstate = trxstate_tx_longpreamble; // ensure that trxstate != off, otherwise we would prematurely enable the receiver, see below
   1BA3 75*01 0A           7919 	mov	_axradio_trxstate,#0x0A
                           7920 ;	..\COMMON\easyax5043.c:1371: while (AX5043_POWSTAT & 0x08);
   1BA6                    7921 00143$:
   1BA6 90 40 03           7922 	mov	dptr,#_AX5043_POWSTAT
   1BA9 E0                 7923 	movx	a,@dptr
   1BAA FF                 7924 	mov	r7,a
   1BAB 20 E3 F8           7925 	jb	acc.3,00143$
                           7926 ;	..\COMMON\easyax5043.c:1372: wtimer_remove(&axradio_timer);
   1BAE 90s02r85           7927 	mov	dptr,#_axradio_timer
   1BB1 12s00r00           7928 	lcall	_wtimer_remove
                           7929 ;	..\COMMON\easyax5043.c:1373: axradio_timer.time = axradio_framing_ack_delay;
   1BB4 90s00r00           7930 	mov	dptr,#_axradio_framing_ack_delay
   1BB7 E4                 7931 	clr	a
   1BB8 93                 7932 	movc	a,@a+dptr
   1BB9 FC                 7933 	mov	r4,a
   1BBA 74 01              7934 	mov	a,#0x01
   1BBC 93                 7935 	movc	a,@a+dptr
   1BBD FD                 7936 	mov	r5,a
   1BBE 74 02              7937 	mov	a,#0x02
   1BC0 93                 7938 	movc	a,@a+dptr
   1BC1 FE                 7939 	mov	r6,a
   1BC2 74 03              7940 	mov	a,#0x03
   1BC4 93                 7941 	movc	a,@a+dptr
   1BC5 FF                 7942 	mov	r7,a
   1BC6 90s02r89           7943 	mov	dptr,#(_axradio_timer + 0x0004)
   1BC9 EC                 7944 	mov	a,r4
   1BCA F0                 7945 	movx	@dptr,a
   1BCB A3                 7946 	inc	dptr
   1BCC ED                 7947 	mov	a,r5
   1BCD F0                 7948 	movx	@dptr,a
   1BCE A3                 7949 	inc	dptr
   1BCF EE                 7950 	mov	a,r6
   1BD0 F0                 7951 	movx	@dptr,a
   1BD1 A3                 7952 	inc	dptr
   1BD2 EF                 7953 	mov	a,r7
   1BD3 F0                 7954 	movx	@dptr,a
                           7955 ;	..\COMMON\easyax5043.c:1374: wtimer1_addrelative(&axradio_timer);
   1BD4 90s02r85           7956 	mov	dptr,#_axradio_timer
   1BD7 12s00r00           7957 	lcall	_wtimer1_addrelative
   1BDA                    7958 00147$:
                           7959 ;	..\COMMON\easyax5043.c:1376: if (axradio_mode == AXRADIO_MODE_SYNC_SLAVE ||
   1BDA 74 22              7960 	mov	a,#0x22
   1BDC B5*00 02           7961 	cjne	a,_axradio_mode,00289$
   1BDF 80 0A              7962 	sjmp	00160$
   1BE1                    7963 00289$:
                           7964 ;	..\COMMON\easyax5043.c:1377: axradio_mode == AXRADIO_MODE_SYNC_ACK_SLAVE) {
   1BE1 74 23              7965 	mov	a,#0x23
   1BE3 B5*00 02           7966 	cjne	a,_axradio_mode,00290$
   1BE6 80 03              7967 	sjmp	00291$
   1BE8                    7968 00290$:
   1BE8 02s1CrBE           7969 	ljmp	00161$
   1BEB                    7970 00291$:
   1BEB                    7971 00160$:
                           7972 ;	..\COMMON\easyax5043.c:1378: if (axradio_mode != AXRADIO_MODE_SYNC_ACK_SLAVE)
   1BEB 74 23              7973 	mov	a,#0x23
   1BED B5*00 02           7974 	cjne	a,_axradio_mode,00292$
   1BF0 80 03              7975 	sjmp	00151$
   1BF2                    7976 00292$:
                           7977 ;	..\COMMON\easyax5043.c:1379: ax5043_off();
   1BF2 12s0Cr36           7978 	lcall	_ax5043_off
   1BF5                    7979 00151$:
                           7980 ;	..\COMMON\easyax5043.c:1380: switch (axradio_syncstate) {
   1BF5 90s00r00           7981 	mov	dptr,#_axradio_syncstate
   1BF8 E0                 7982 	movx	a,@dptr
   1BF9 FF                 7983 	mov	r7,a
   1BFA BF 08 02           7984 	cjne	r7,#0x08,00293$
   1BFD 80 45              7985 	sjmp	00155$
   1BFF                    7986 00293$:
   1BFF BF 0A 02           7987 	cjne	r7,#0x0A,00294$
   1C02 80 40              7988 	sjmp	00155$
   1C04                    7989 00294$:
   1C04 BF 0B 02           7990 	cjne	r7,#0x0B,00295$
   1C07 80 3B              7991 	sjmp	00155$
   1C09                    7992 00295$:
                           7993 ;	..\COMMON\easyax5043.c:1384: axradio_sync_time = axradio_conv_time_totimer0(axradio_cb_receive.st.time.t);
   1C09 90s02r34           7994 	mov	dptr,#(_axradio_cb_receive + 0x0006)
   1C0C E0                 7995 	movx	a,@dptr
   1C0D FC                 7996 	mov	r4,a
   1C0E A3                 7997 	inc	dptr
   1C0F E0                 7998 	movx	a,@dptr
   1C10 FD                 7999 	mov	r5,a
   1C11 A3                 8000 	inc	dptr
   1C12 E0                 8001 	movx	a,@dptr
   1C13 FE                 8002 	mov	r6,a
   1C14 A3                 8003 	inc	dptr
   1C15 E0                 8004 	movx	a,@dptr
   1C16 8C 82              8005 	mov	dpl,r4
   1C18 8D 83              8006 	mov	dph,r5
   1C1A 8E F0              8007 	mov	b,r6
   1C1C 12s00r42           8008 	lcall	_axradio_conv_time_totimer0
   1C1F AC 82              8009 	mov	r4,dpl
   1C21 AD 83              8010 	mov	r5,dph
   1C23 AE F0              8011 	mov	r6,b
   1C25 FF                 8012 	mov	r7,a
   1C26 90s00r0C           8013 	mov	dptr,#_axradio_sync_time
   1C29 EC                 8014 	mov	a,r4
   1C2A F0                 8015 	movx	@dptr,a
   1C2B A3                 8016 	inc	dptr
   1C2C ED                 8017 	mov	a,r5
   1C2D F0                 8018 	movx	@dptr,a
   1C2E A3                 8019 	inc	dptr
   1C2F EE                 8020 	mov	a,r6
   1C30 F0                 8021 	movx	@dptr,a
   1C31 A3                 8022 	inc	dptr
   1C32 EF                 8023 	mov	a,r7
   1C33 F0                 8024 	movx	@dptr,a
                           8025 ;	..\COMMON\easyax5043.c:1385: axradio_sync_periodcorr = -32768;
   1C34 90s00r10           8026 	mov	dptr,#_axradio_sync_periodcorr
   1C37 E4                 8027 	clr	a
   1C38 F0                 8028 	movx	@dptr,a
   1C39 A3                 8029 	inc	dptr
   1C3A 74 80              8030 	mov	a,#0x80
   1C3C F0                 8031 	movx	@dptr,a
                           8032 ;	..\COMMON\easyax5043.c:1386: axradio_sync_seqnr = 0;
   1C3D 90s00r0B           8033 	mov	dptr,#_axradio_ack_seqnr
   1C40 E4                 8034 	clr	a
   1C41 F0                 8035 	movx	@dptr,a
                           8036 ;	..\COMMON\easyax5043.c:1387: break;
                           8037 ;	..\COMMON\easyax5043.c:1391: case syncstate_slave_rxpacket:
   1C42 80 2D              8038 	sjmp	00156$
   1C44                    8039 00155$:
                           8040 ;	..\COMMON\easyax5043.c:1392: axradio_sync_adjustperiodcorr();
   1C44 12s0Er60           8041 	lcall	_axradio_sync_adjustperiodcorr
                           8042 ;	..\COMMON\easyax5043.c:1393: axradio_cb_receive.st.rx.phy.period = axradio_sync_periodcorr >> SYNC_K1;
   1C47 90s00r10           8043 	mov	dptr,#_axradio_sync_periodcorr
   1C4A E0                 8044 	movx	a,@dptr
   1C4B FE                 8045 	mov	r6,a
   1C4C A3                 8046 	inc	dptr
   1C4D E0                 8047 	movx	a,@dptr
   1C4E FF                 8048 	mov	r7,a
   1C4F C4                 8049 	swap	a
   1C50 03                 8050 	rr	a
   1C51 CE                 8051 	xch	a,r6
   1C52 C4                 8052 	swap	a
   1C53 03                 8053 	rr	a
   1C54 54 07              8054 	anl	a,#0x07
   1C56 6E                 8055 	xrl	a,r6
   1C57 CE                 8056 	xch	a,r6
   1C58 54 07              8057 	anl	a,#0x07
   1C5A CE                 8058 	xch	a,r6
   1C5B 6E                 8059 	xrl	a,r6
   1C5C CE                 8060 	xch	a,r6
   1C5D 30 E2 02           8061 	jnb	acc.2,00296$
   1C60 44 F8              8062 	orl	a,#0xF8
   1C62                    8063 00296$:
   1C62 FF                 8064 	mov	r7,a
   1C63 90s02r40           8065 	mov	dptr,#(_axradio_cb_receive + 0x0012)
   1C66 EE                 8066 	mov	a,r6
   1C67 F0                 8067 	movx	@dptr,a
   1C68 A3                 8068 	inc	dptr
   1C69 EF                 8069 	mov	a,r7
   1C6A F0                 8070 	movx	@dptr,a
                           8071 ;	..\COMMON\easyax5043.c:1394: axradio_sync_seqnr = 1;
   1C6B 90s00r0B           8072 	mov	dptr,#_axradio_ack_seqnr
   1C6E 74 01              8073 	mov	a,#0x01
   1C70 F0                 8074 	movx	@dptr,a
                           8075 ;	..\COMMON\easyax5043.c:1396: };
   1C71                    8076 00156$:
                           8077 ;	..\COMMON\easyax5043.c:1397: axradio_sync_slave_nextperiod();
   1C71 12s0Fr87           8078 	lcall	_axradio_sync_slave_nextperiod
                           8079 ;	..\COMMON\easyax5043.c:1398: if (axradio_mode != AXRADIO_MODE_SYNC_ACK_SLAVE) {
   1C74 74 23              8080 	mov	a,#0x23
   1C76 B5*00 02           8081 	cjne	a,_axradio_mode,00297$
   1C79 80 3D              8082 	sjmp	00158$
   1C7B                    8083 00297$:
                           8084 ;	..\COMMON\easyax5043.c:1399: axradio_syncstate = syncstate_slave_rxidle;
   1C7B 90s00r00           8085 	mov	dptr,#_axradio_syncstate
   1C7E 74 08              8086 	mov	a,#0x08
   1C80 F0                 8087 	movx	@dptr,a
                           8088 ;	..\COMMON\easyax5043.c:1400: wtimer_remove(&axradio_timer);
   1C81 90s02r85           8089 	mov	dptr,#_axradio_timer
   1C84 12s00r00           8090 	lcall	_wtimer_remove
                           8091 ;	..\COMMON\easyax5043.c:1401: axradio_sync_settimeradv(axradio_sync_slave_rxadvance[axradio_sync_seqnr]);
   1C87 90s00r0B           8092 	mov	dptr,#_axradio_ack_seqnr
   1C8A E0                 8093 	movx	a,@dptr
   1C8B 75 F0 04           8094 	mov	b,#0x04
   1C8E A4                 8095 	mul	ab
   1C8F 24r00              8096 	add	a,#_axradio_sync_slave_rxadvance
   1C91 F5 82              8097 	mov	dpl,a
   1C93 74s00              8098 	mov	a,#(_axradio_sync_slave_rxadvance >> 8)
   1C95 35 F0              8099 	addc	a,b
   1C97 F5 83              8100 	mov	dph,a
   1C99 E4                 8101 	clr	a
   1C9A 93                 8102 	movc	a,@a+dptr
   1C9B FC                 8103 	mov	r4,a
   1C9C A3                 8104 	inc	dptr
   1C9D E4                 8105 	clr	a
   1C9E 93                 8106 	movc	a,@a+dptr
   1C9F FD                 8107 	mov	r5,a
   1CA0 A3                 8108 	inc	dptr
   1CA1 E4                 8109 	clr	a
   1CA2 93                 8110 	movc	a,@a+dptr
   1CA3 FE                 8111 	mov	r6,a
   1CA4 A3                 8112 	inc	dptr
   1CA5 E4                 8113 	clr	a
   1CA6 93                 8114 	movc	a,@a+dptr
   1CA7 8C 82              8115 	mov	dpl,r4
   1CA9 8D 83              8116 	mov	dph,r5
   1CAB 8E F0              8117 	mov	b,r6
   1CAD 12s0Er21           8118 	lcall	_axradio_sync_settimeradv
                           8119 ;	..\COMMON\easyax5043.c:1402: wtimer0_addabsolute(&axradio_timer);
   1CB0 90s02r85           8120 	mov	dptr,#_axradio_timer
   1CB3 12s00r00           8121 	lcall	_wtimer0_addabsolute
   1CB6 80 06              8122 	sjmp	00161$
   1CB8                    8123 00158$:
                           8124 ;	..\COMMON\easyax5043.c:1404: axradio_syncstate = syncstate_slave_rxack;
   1CB8 90s00r00           8125 	mov	dptr,#_axradio_syncstate
   1CBB 74 0C              8126 	mov	a,#0x0C
   1CBD F0                 8127 	movx	@dptr,a
   1CBE                    8128 00161$:
                           8129 ;	..\COMMON\easyax5043.c:1407: axradio_statuschange((struct axradio_status __xdata *)&axradio_cb_receive.st);
   1CBE 90s02r32           8130 	mov	dptr,#(_axradio_cb_receive + 0x0004)
   1CC1 12s00r00           8131 	lcall	_axradio_statuschange
                           8132 ;	..\COMMON\easyax5043.c:1408: endcb:
   1CC4                    8133 00163$:
                           8134 ;	..\COMMON\easyax5043.c:1409: if (axradio_mode == AXRADIO_MODE_WOR_RECEIVE) {
   1CC4 74 19              8135 	mov	a,#0x19
   1CC6 B5*00 03           8136 	cjne	a,_axradio_mode,00178$
                           8137 ;	..\COMMON\easyax5043.c:1410: ax5043_receiver_on_wor();
   1CC9 02s0Br8B           8138 	ljmp	_ax5043_receiver_on_wor
   1CCC                    8139 00178$:
                           8140 ;	..\COMMON\easyax5043.c:1411: } else if (axradio_mode == AXRADIO_MODE_ACK_RECEIVE ||
   1CCC 74 1A              8141 	mov	a,#0x1A
   1CCE B5*00 02           8142 	cjne	a,_axradio_mode,00300$
   1CD1 80 05              8143 	sjmp	00173$
   1CD3                    8144 00300$:
                           8145 ;	..\COMMON\easyax5043.c:1412: axradio_mode == AXRADIO_MODE_WOR_ACK_RECEIVE) {
   1CD3 74 1B              8146 	mov	a,#0x1B
   1CD5 B5*00 20           8147 	cjne	a,_axradio_mode,00174$
   1CD8                    8148 00173$:
                           8149 ;	..\COMMON\easyax5043.c:1415: uint8_t __autodata iesave = IE & 0x80;
   1CD8 74 80              8150 	mov	a,#0x80
   1CDA 55 A8              8151 	anl	a,_IE
   1CDC FF                 8152 	mov	r7,a
                           8153 ;	..\COMMON\easyax5043.c:1416: EA = 0;
   1CDD C2 AF              8154 	clr	_EA
                           8155 ;	..\COMMON\easyax5043.c:1417: trxst = axradio_trxstate;
   1CDF AE*01              8156 	mov	r6,_axradio_trxstate
                           8157 ;	..\COMMON\easyax5043.c:1418: axradio_cb_receive.st.error = AXRADIO_ERR_PACKETDONE;
   1CE1 90s02r33           8158 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   1CE4 74 F0              8159 	mov	a,#0xF0
   1CE6 F0                 8160 	movx	@dptr,a
                           8161 ;	..\COMMON\easyax5043.c:1419: IE |= iesave;
   1CE7 EF                 8162 	mov	a,r7
   1CE8 42 A8              8163 	orl	_IE,a
                           8164 ;	..\COMMON\easyax5043.c:1421: if (trxst == trxstate_off) {
   1CEA EE                 8165 	mov	a,r6
   1CEB 70 1D              8166 	jnz	00180$
                           8167 ;	..\COMMON\easyax5043.c:1422: if (axradio_mode == AXRADIO_MODE_WOR_ACK_RECEIVE)
   1CED 74 1B              8168 	mov	a,#0x1B
   1CEF B5*00 03           8169 	cjne	a,_axradio_mode,00165$
                           8170 ;	..\COMMON\easyax5043.c:1423: ax5043_receiver_on_wor();
   1CF2 02s0Br8B           8171 	ljmp	_ax5043_receiver_on_wor
   1CF5                    8172 00165$:
                           8173 ;	..\COMMON\easyax5043.c:1425: ax5043_receiver_on_continuous();
   1CF5 02s0ArF1           8174 	ljmp	_ax5043_receiver_on_continuous
   1CF8                    8175 00174$:
                           8176 ;	..\COMMON\easyax5043.c:1428: switch (axradio_trxstate) {
   1CF8 AF*01              8177 	mov	r7,_axradio_trxstate
   1CFA BF 01 02           8178 	cjne	r7,#0x01,00306$
   1CFD 80 03              8179 	sjmp	00170$
   1CFF                    8180 00306$:
   1CFF BF 02 08           8181 	cjne	r7,#0x02,00180$
                           8182 ;	..\COMMON\easyax5043.c:1430: case trxstate_rxwor:
   1D02                    8183 00170$:
                           8184 ;	..\COMMON\easyax5043.c:1431: AX5043_IRQMASK0 |= 0x01; // re-enable FIFO not empty irq
   1D02 90 40 07           8185 	mov	dptr,#_AX5043_IRQMASK0
   1D05 E0                 8186 	movx	a,@dptr
   1D06 FF                 8187 	mov	r7,a
   1D07 44 01              8188 	orl	a,#0x01
   1D09 F0                 8189 	movx	@dptr,a
                           8190 ;	..\COMMON\easyax5043.c:1436: }
   1D0A                    8191 00180$:
   1D0A 22                 8192 	ret
                           8193 ;------------------------------------------------------------
                           8194 ;Allocation info for local variables in function 'axradio_killallcb'
                           8195 ;------------------------------------------------------------
                           8196 ;	..\COMMON\easyax5043.c:1440: static void axradio_killallcb(void)
                           8197 ;	-----------------------------------------
                           8198 ;	 function axradio_killallcb
                           8199 ;	-----------------------------------------
   1D0B                    8200 _axradio_killallcb:
                           8201 ;	..\COMMON\easyax5043.c:1442: wtimer_remove_callback(&axradio_cb_receive.cb);
   1D0B 90s02r2E           8202 	mov	dptr,#_axradio_cb_receive
   1D0E 12s00r00           8203 	lcall	_wtimer_remove_callback
                           8204 ;	..\COMMON\easyax5043.c:1443: wtimer_remove_callback(&axradio_cb_receivesfd.cb);
   1D11 90s02r50           8205 	mov	dptr,#_axradio_cb_receivesfd
   1D14 12s00r00           8206 	lcall	_wtimer_remove_callback
                           8207 ;	..\COMMON\easyax5043.c:1444: wtimer_remove_callback(&axradio_cb_channelstate.cb);
   1D17 90s02r5A           8208 	mov	dptr,#_axradio_cb_channelstate
   1D1A 12s00r00           8209 	lcall	_wtimer_remove_callback
                           8210 ;	..\COMMON\easyax5043.c:1445: wtimer_remove_callback(&axradio_cb_transmitstart.cb);
   1D1D 90s02r67           8211 	mov	dptr,#_axradio_cb_transmitstart
   1D20 12s00r00           8212 	lcall	_wtimer_remove_callback
                           8213 ;	..\COMMON\easyax5043.c:1446: wtimer_remove_callback(&axradio_cb_transmitend.cb);
   1D23 90s02r71           8214 	mov	dptr,#_axradio_cb_transmitend
   1D26 12s00r00           8215 	lcall	_wtimer_remove_callback
                           8216 ;	..\COMMON\easyax5043.c:1447: wtimer_remove_callback(&axradio_cb_transmitdata.cb);
   1D29 90s02r7B           8217 	mov	dptr,#_axradio_cb_transmitdata
   1D2C 12s00r00           8218 	lcall	_wtimer_remove_callback
                           8219 ;	..\COMMON\easyax5043.c:1448: wtimer_remove(&axradio_timer);
   1D2F 90s02r85           8220 	mov	dptr,#_axradio_timer
   1D32 02s00r00           8221 	ljmp	_wtimer_remove
                           8222 ;------------------------------------------------------------
                           8223 ;Allocation info for local variables in function 'axradio_init'
                           8224 ;------------------------------------------------------------
                           8225 ;i                         Allocated to registers r5 
                           8226 ;pllloop_save              Allocated to registers r7 
                           8227 ;pllcpi_save               Allocated to registers r6 
                           8228 ;iesave                    Allocated to registers r4 
                           8229 ;f                         Allocated to registers r1 r2 r3 r4 
                           8230 ;r                         Allocated to registers r3 
                           8231 ;iesave                    Allocated to registers r4 
                           8232 ;r                         Allocated to registers r3 
                           8233 ;f                         Allocated to registers r2 r3 r4 r5 
                           8234 ;------------------------------------------------------------
                           8235 ;	..\COMMON\easyax5043.c:1455: uint8_t axradio_init(void)
                           8236 ;	-----------------------------------------
                           8237 ;	 function axradio_init
                           8238 ;	-----------------------------------------
   1D35                    8239 _axradio_init:
                           8240 ;	..\COMMON\easyax5043.c:1458: axradio_mode = AXRADIO_MODE_UNINIT;
   1D35 75*00 00           8241 	mov	_axradio_mode,#0x00
                           8242 ;	..\COMMON\easyax5043.c:1459: axradio_killallcb();
   1D38 12s1Dr0B           8243 	lcall	_axradio_killallcb
                           8244 ;	..\COMMON\easyax5043.c:1460: axradio_cb_receive.cb.handler = axradio_receive_callback_fwd;
   1D3B 90s02r30           8245 	mov	dptr,#(_axradio_cb_receive + 0x0002)
   1D3E 74r00              8246 	mov	a,#_axradio_receive_callback_fwd
   1D40 F0                 8247 	movx	@dptr,a
   1D41 A3                 8248 	inc	dptr
   1D42 74s18              8249 	mov	a,#(_axradio_receive_callback_fwd >> 8)
   1D44 F0                 8250 	movx	@dptr,a
                           8251 ;	..\COMMON\easyax5043.c:1461: axradio_cb_receive.st.status = AXRADIO_STAT_RECEIVE;
   1D45 90s02r32           8252 	mov	dptr,#(_axradio_cb_receive + 0x0004)
   1D48 E4                 8253 	clr	a
   1D49 F0                 8254 	movx	@dptr,a
                           8255 ;	..\COMMON\easyax5043.c:1462: memset_xdata(axradio_cb_receive.st.rx.mac.remoteaddr, 0, sizeof(axradio_cb_receive.st.rx.mac.remoteaddr));
   1D4A 75*00 00           8256 	mov	_memset_PARM_2,#0x00
   1D4D 75*00 04           8257 	mov	_memset_PARM_3,#0x04
   1D50 75*01 00           8258 	mov	(_memset_PARM_3 + 1),#0x00
   1D53 90s02r42           8259 	mov	dptr,#(_axradio_cb_receive + 0x0014)
   1D56 75 F0 00           8260 	mov	b,#0x00
   1D59 12s00r00           8261 	lcall	_memset
                           8262 ;	..\COMMON\easyax5043.c:1463: memset_xdata(axradio_cb_receive.st.rx.mac.localaddr, 0, sizeof(axradio_cb_receive.st.rx.mac.localaddr));
   1D5C 75*00 00           8263 	mov	_memset_PARM_2,#0x00
   1D5F 75*00 04           8264 	mov	_memset_PARM_3,#0x04
   1D62 75*01 00           8265 	mov	(_memset_PARM_3 + 1),#0x00
   1D65 90s02r46           8266 	mov	dptr,#(_axradio_cb_receive + 0x0018)
   1D68 75 F0 00           8267 	mov	b,#0x00
   1D6B 12s00r00           8268 	lcall	_memset
                           8269 ;	..\COMMON\easyax5043.c:1464: axradio_cb_receivesfd.cb.handler = axradio_callback_fwd;
   1D6E 90s02r52           8270 	mov	dptr,#(_axradio_cb_receivesfd + 0x0002)
   1D71 74rEE              8271 	mov	a,#_axradio_callback_fwd
   1D73 F0                 8272 	movx	@dptr,a
   1D74 A3                 8273 	inc	dptr
   1D75 74s17              8274 	mov	a,#(_axradio_callback_fwd >> 8)
   1D77 F0                 8275 	movx	@dptr,a
                           8276 ;	..\COMMON\easyax5043.c:1465: axradio_cb_receivesfd.st.status = AXRADIO_STAT_RECEIVESFD;
   1D78 90s02r54           8277 	mov	dptr,#(_axradio_cb_receivesfd + 0x0004)
   1D7B 74 01              8278 	mov	a,#0x01
   1D7D F0                 8279 	movx	@dptr,a
                           8280 ;	..\COMMON\easyax5043.c:1466: axradio_cb_channelstate.cb.handler = axradio_callback_fwd;
   1D7E 90s02r5C           8281 	mov	dptr,#(_axradio_cb_channelstate + 0x0002)
   1D81 74rEE              8282 	mov	a,#_axradio_callback_fwd
   1D83 F0                 8283 	movx	@dptr,a
   1D84 A3                 8284 	inc	dptr
   1D85 74s17              8285 	mov	a,#(_axradio_callback_fwd >> 8)
   1D87 F0                 8286 	movx	@dptr,a
                           8287 ;	..\COMMON\easyax5043.c:1467: axradio_cb_channelstate.st.status = AXRADIO_STAT_CHANNELSTATE;
   1D88 90s02r5E           8288 	mov	dptr,#(_axradio_cb_channelstate + 0x0004)
   1D8B 74 02              8289 	mov	a,#0x02
   1D8D F0                 8290 	movx	@dptr,a
                           8291 ;	..\COMMON\easyax5043.c:1468: axradio_cb_transmitstart.cb.handler = axradio_callback_fwd;
   1D8E 90s02r69           8292 	mov	dptr,#(_axradio_cb_transmitstart + 0x0002)
   1D91 74rEE              8293 	mov	a,#_axradio_callback_fwd
   1D93 F0                 8294 	movx	@dptr,a
   1D94 A3                 8295 	inc	dptr
   1D95 74s17              8296 	mov	a,#(_axradio_callback_fwd >> 8)
   1D97 F0                 8297 	movx	@dptr,a
                           8298 ;	..\COMMON\easyax5043.c:1469: axradio_cb_transmitstart.st.status = AXRADIO_STAT_TRANSMITSTART;
   1D98 90s02r6B           8299 	mov	dptr,#(_axradio_cb_transmitstart + 0x0004)
   1D9B 74 03              8300 	mov	a,#0x03
   1D9D F0                 8301 	movx	@dptr,a
                           8302 ;	..\COMMON\easyax5043.c:1470: axradio_cb_transmitend.cb.handler = axradio_callback_fwd;
   1D9E 90s02r73           8303 	mov	dptr,#(_axradio_cb_transmitend + 0x0002)
   1DA1 74rEE              8304 	mov	a,#_axradio_callback_fwd
   1DA3 F0                 8305 	movx	@dptr,a
   1DA4 A3                 8306 	inc	dptr
   1DA5 74s17              8307 	mov	a,#(_axradio_callback_fwd >> 8)
   1DA7 F0                 8308 	movx	@dptr,a
                           8309 ;	..\COMMON\easyax5043.c:1471: axradio_cb_transmitend.st.status = AXRADIO_STAT_TRANSMITEND;
   1DA8 90s02r75           8310 	mov	dptr,#(_axradio_cb_transmitend + 0x0004)
   1DAB 74 04              8311 	mov	a,#0x04
   1DAD F0                 8312 	movx	@dptr,a
                           8313 ;	..\COMMON\easyax5043.c:1472: axradio_cb_transmitdata.cb.handler = axradio_callback_fwd;
   1DAE 90s02r7D           8314 	mov	dptr,#(_axradio_cb_transmitdata + 0x0002)
   1DB1 74rEE              8315 	mov	a,#_axradio_callback_fwd
   1DB3 F0                 8316 	movx	@dptr,a
   1DB4 A3                 8317 	inc	dptr
   1DB5 74s17              8318 	mov	a,#(_axradio_callback_fwd >> 8)
   1DB7 F0                 8319 	movx	@dptr,a
                           8320 ;	..\COMMON\easyax5043.c:1473: axradio_cb_transmitdata.st.status = AXRADIO_STAT_TRANSMITDATA;
   1DB8 90s02r7F           8321 	mov	dptr,#(_axradio_cb_transmitdata + 0x0004)
   1DBB 74 05              8322 	mov	a,#0x05
   1DBD F0                 8323 	movx	@dptr,a
                           8324 ;	..\COMMON\easyax5043.c:1474: axradio_timer.handler = axradio_timer_callback;
   1DBE 90s02r87           8325 	mov	dptr,#(_axradio_timer + 0x0002)
   1DC1 74rEF              8326 	mov	a,#_axradio_timer_callback
   1DC3 F0                 8327 	movx	@dptr,a
   1DC4 A3                 8328 	inc	dptr
   1DC5 74s0F              8329 	mov	a,#(_axradio_timer_callback >> 8)
   1DC7 F0                 8330 	movx	@dptr,a
                           8331 ;	..\COMMON\easyax5043.c:1475: axradio_curchannel = 0;
   1DC8 90s00r05           8332 	mov	dptr,#_axradio_curchannel
                           8333 ;	..\COMMON\easyax5043.c:1476: axradio_curfreqoffset = 0;
   1DCB E4                 8334 	clr	a
   1DCC F0                 8335 	movx	@dptr,a
   1DCD 90s00r06           8336 	mov	dptr,#_axradio_curfreqoffset
   1DD0 F0                 8337 	movx	@dptr,a
   1DD1 A3                 8338 	inc	dptr
   1DD2 E4                 8339 	clr	a
   1DD3 F0                 8340 	movx	@dptr,a
   1DD4 A3                 8341 	inc	dptr
   1DD5 F0                 8342 	movx	@dptr,a
   1DD6 A3                 8343 	inc	dptr
   1DD7 F0                 8344 	movx	@dptr,a
                           8345 ;	..\COMMON\easyax5043.c:1477: IE_4 = 0;
   1DD8 C2 AC              8346 	clr	_IE_4
                           8347 ;	..\COMMON\easyax5043.c:1478: axradio_trxstate = trxstate_off;
   1DDA 75*01 00           8348 	mov	_axradio_trxstate,#0x00
                           8349 ;	..\COMMON\easyax5043.c:1479: if (ax5043_reset())
   1DDD 12s00r00           8350 	lcall	_ax5043_reset
   1DE0 E5 82              8351 	mov	a,dpl
   1DE2 60 04              8352 	jz	00102$
                           8353 ;	..\COMMON\easyax5043.c:1480: return AXRADIO_ERR_NOCHIP;
   1DE4 75 82 05           8354 	mov	dpl,#0x05
   1DE7 22                 8355 	ret
   1DE8                    8356 00102$:
                           8357 ;	..\COMMON\easyax5043.c:1481: ax5043_init_registers();
   1DE8 12s0DrAD           8358 	lcall	_ax5043_init_registers
                           8359 ;	..\COMMON\easyax5043.c:1482: ax5043_set_registers_rx();
   1DEB 12s00r00           8360 	lcall	_ax5043_set_registers_rx
                           8361 ;	..\COMMON\easyax5043.c:1483: pllloop_save = AX5043_PLLLOOP;
   1DEE 90 40 30           8362 	mov	dptr,#_AX5043_PLLLOOP
   1DF1 E0                 8363 	movx	a,@dptr
   1DF2 FF                 8364 	mov	r7,a
                           8365 ;	..\COMMON\easyax5043.c:1484: pllcpi_save = AX5043_PLLCPI;
   1DF3 90 40 31           8366 	mov	dptr,#_AX5043_PLLCPI
   1DF6 E0                 8367 	movx	a,@dptr
   1DF7 FE                 8368 	mov	r6,a
                           8369 ;	..\COMMON\easyax5043.c:1485: AX5043_PLLLOOP = 0x09; // default 100kHz loop BW for ranging
   1DF8 90 40 30           8370 	mov	dptr,#_AX5043_PLLLOOP
   1DFB 74 09              8371 	mov	a,#0x09
   1DFD F0                 8372 	movx	@dptr,a
                           8373 ;	..\COMMON\easyax5043.c:1486: AX5043_PLLCPI = 0x08;
   1DFE 90 40 31           8374 	mov	dptr,#_AX5043_PLLCPI
   1E01 74 08              8375 	mov	a,#0x08
   1E03 F0                 8376 	movx	@dptr,a
                           8377 ;	..\COMMON\easyax5043.c:1488: IE_4 = 1;
   1E04 D2 AC              8378 	setb	_IE_4
                           8379 ;	..\COMMON\easyax5043.c:1490: AX5043_PWRMODE = AX5043_PWRSTATE_XTAL_ON;
   1E06 90 40 02           8380 	mov	dptr,#_AX5043_PWRMODE
   1E09 74 05              8381 	mov	a,#0x05
   1E0B F0                 8382 	movx	@dptr,a
                           8383 ;	..\COMMON\easyax5043.c:1491: axradio_wait_for_xtal();
   1E0C C0 07              8384 	push	ar7
   1E0E C0 06              8385 	push	ar6
   1E10 12s0Cr57           8386 	lcall	_axradio_wait_for_xtal
   1E13 D0 06              8387 	pop	ar6
   1E15 D0 07              8388 	pop	ar7
                           8389 ;	..\COMMON\easyax5043.c:1493: for (i = 0; i < axradio_phy_nrchannels; ++i) {
   1E17 7D 00              8390 	mov	r5,#0x00
   1E19                    8391 00127$:
   1E19 90s00r00           8392 	mov	dptr,#_axradio_phy_nrchannels
   1E1C E4                 8393 	clr	a
   1E1D 93                 8394 	movc	a,@a+dptr
   1E1E FC                 8395 	mov	r4,a
   1E1F C3                 8396 	clr	c
   1E20 ED                 8397 	mov	a,r5
   1E21 9C                 8398 	subb	a,r4
   1E22 40 03              8399 	jc	00178$
   1E24 02s1ErF4           8400 	ljmp	00130$
   1E27                    8401 00178$:
                           8402 ;	..\COMMON\easyax5043.c:1496: uint32_t __autodata f = axradio_phy_chanfreq[i];
   1E27 ED                 8403 	mov	a,r5
   1E28 75 F0 04           8404 	mov	b,#0x04
   1E2B A4                 8405 	mul	ab
   1E2C 24r00              8406 	add	a,#_axradio_phy_chanfreq
   1E2E F5 82              8407 	mov	dpl,a
   1E30 74s00              8408 	mov	a,#(_axradio_phy_chanfreq >> 8)
   1E32 35 F0              8409 	addc	a,b
   1E34 F5 83              8410 	mov	dph,a
   1E36 E4                 8411 	clr	a
   1E37 93                 8412 	movc	a,@a+dptr
   1E38 F9                 8413 	mov	r1,a
   1E39 A3                 8414 	inc	dptr
   1E3A E4                 8415 	clr	a
   1E3B 93                 8416 	movc	a,@a+dptr
   1E3C FA                 8417 	mov	r2,a
   1E3D A3                 8418 	inc	dptr
   1E3E E4                 8419 	clr	a
   1E3F 93                 8420 	movc	a,@a+dptr
   1E40 FB                 8421 	mov	r3,a
   1E41 A3                 8422 	inc	dptr
   1E42 E4                 8423 	clr	a
   1E43 93                 8424 	movc	a,@a+dptr
   1E44 FC                 8425 	mov	r4,a
                           8426 ;	..\COMMON\easyax5043.c:1497: AX5043_FREQA0 = f;
   1E45 90 40 37           8427 	mov	dptr,#_AX5043_FREQA0
   1E48 E9                 8428 	mov	a,r1
   1E49 F0                 8429 	movx	@dptr,a
                           8430 ;	..\COMMON\easyax5043.c:1498: AX5043_FREQA1 = f >> 8;
   1E4A 90 40 36           8431 	mov	dptr,#_AX5043_FREQA1
   1E4D EA                 8432 	mov	a,r2
   1E4E F0                 8433 	movx	@dptr,a
                           8434 ;	..\COMMON\easyax5043.c:1499: AX5043_FREQA2 = f >> 16;
   1E4F 90 40 35           8435 	mov	dptr,#_AX5043_FREQA2
   1E52 EB                 8436 	mov	a,r3
   1E53 F0                 8437 	movx	@dptr,a
                           8438 ;	..\COMMON\easyax5043.c:1500: AX5043_FREQA3 = f >> 24;
   1E54 90 40 34           8439 	mov	dptr,#_AX5043_FREQA3
   1E57 EC                 8440 	mov	a,r4
   1E58 F0                 8441 	movx	@dptr,a
                           8442 ;	..\COMMON\easyax5043.c:1502: iesave = IE & 0x80;
   1E59 74 80              8443 	mov	a,#0x80
   1E5B 55 A8              8444 	anl	a,_IE
   1E5D FC                 8445 	mov	r4,a
                           8446 ;	..\COMMON\easyax5043.c:1503: EA = 0;
   1E5E C2 AF              8447 	clr	_EA
                           8448 ;	..\COMMON\easyax5043.c:1504: axradio_trxstate = trxstate_pll_ranging;
   1E60 75*01 05           8449 	mov	_axradio_trxstate,#0x05
                           8450 ;	..\COMMON\easyax5043.c:1505: AX5043_IRQMASK1 = 0x10; // enable pll autoranging done interrupt
   1E63 90 40 06           8451 	mov	dptr,#_AX5043_IRQMASK1
   1E66 74 10              8452 	mov	a,#0x10
   1E68 F0                 8453 	movx	@dptr,a
                           8454 ;	..\COMMON\easyax5043.c:1508: if( !(axradio_phy_chanpllrnginit[0] & 0xF0) ) { // start values for ranging available
   1E69 90s00r00           8455 	mov	dptr,#_axradio_phy_chanpllrnginit
   1E6C E4                 8456 	clr	a
   1E6D 93                 8457 	movc	a,@a+dptr
   1E6E FB                 8458 	mov	r3,a
   1E6F 54 F0              8459 	anl	a,#0xF0
   1E71 70 0B              8460 	jnz	00108$
                           8461 ;	..\COMMON\easyax5043.c:1509: r = axradio_phy_chanpllrnginit[i] | 0x10;
   1E73 ED                 8462 	mov	a,r5
   1E74 90s00r00           8463 	mov	dptr,#_axradio_phy_chanpllrnginit
   1E77 93                 8464 	movc	a,@a+dptr
   1E78 FB                 8465 	mov	r3,a
   1E79 43 03 10           8466 	orl	ar3,#0x10
   1E7C 80 25              8467 	sjmp	00109$
   1E7E                    8468 00108$:
                           8469 ;	..\COMMON\easyax5043.c:1512: r = 0x18;
   1E7E 7B 18              8470 	mov	r3,#0x18
                           8471 ;	..\COMMON\easyax5043.c:1513: if (i) {
   1E80 ED                 8472 	mov	a,r5
   1E81 60 20              8473 	jz	00109$
                           8474 ;	..\COMMON\easyax5043.c:1514: r = axradio_phy_chanpllrng_rx[i - 1];
   1E83 8D 01              8475 	mov	ar1,r5
   1E85 7A 00              8476 	mov	r2,#0x00
   1E87 19                 8477 	dec	r1
   1E88 B9 FF 01           8478 	cjne	r1,#0xFF,00182$
   1E8B 1A                 8479 	dec	r2
   1E8C                    8480 00182$:
   1E8C E9                 8481 	mov	a,r1
   1E8D 24r00              8482 	add	a,#_axradio_phy_chanpllrng_rx
   1E8F F5 82              8483 	mov	dpl,a
   1E91 EA                 8484 	mov	a,r2
   1E92 34s00              8485 	addc	a,#(_axradio_phy_chanpllrng_rx >> 8)
   1E94 F5 83              8486 	mov	dph,a
   1E96 E0                 8487 	movx	a,@dptr
                           8488 ;	..\COMMON\easyax5043.c:1515: if (r & 0x20)
   1E97 FB                 8489 	mov	r3,a
   1E98 30 E5 02           8490 	jnb	acc.5,00104$
                           8491 ;	..\COMMON\easyax5043.c:1516: r = 0x08;
   1E9B 7B 08              8492 	mov	r3,#0x08
   1E9D                    8493 00104$:
                           8494 ;	..\COMMON\easyax5043.c:1517: r &= 0x0F;
   1E9D 53 03 0F           8495 	anl	ar3,#0x0F
                           8496 ;	..\COMMON\easyax5043.c:1518: r |= 0x10;
   1EA0 43 03 10           8497 	orl	ar3,#0x10
   1EA3                    8498 00109$:
                           8499 ;	..\COMMON\easyax5043.c:1521: AX5043_PLLRANGINGA = r; // init ranging process starting from "range"
   1EA3 90 40 33           8500 	mov	dptr,#_AX5043_PLLRANGINGA
   1EA6 EB                 8501 	mov	a,r3
   1EA7 F0                 8502 	movx	@dptr,a
   1EA8                    8503 00113$:
                           8504 ;	..\COMMON\easyax5043.c:1524: EA = 0;
   1EA8 C2 AF              8505 	clr	_EA
                           8506 ;	..\COMMON\easyax5043.c:1525: if (axradio_trxstate == trxstate_pll_ranging_done)
   1EAA 74 06              8507 	mov	a,#0x06
   1EAC B5*01 02           8508 	cjne	a,_axradio_trxstate,00184$
   1EAF 80 22              8509 	sjmp	00114$
   1EB1                    8510 00184$:
                           8511 ;	..\COMMON\easyax5043.c:1527: wtimer_idle(WTFLAG_CANSTANDBY);
   1EB1 75 82 02           8512 	mov	dpl,#0x02
   1EB4 C0 07              8513 	push	ar7
   1EB6 C0 06              8514 	push	ar6
   1EB8 C0 05              8515 	push	ar5
   1EBA C0 04              8516 	push	ar4
   1EBC 12s00r00           8517 	lcall	_wtimer_idle
   1EBF D0 04              8518 	pop	ar4
                           8519 ;	..\COMMON\easyax5043.c:1528: IE |= iesave;
   1EC1 EC                 8520 	mov	a,r4
   1EC2 42 A8              8521 	orl	_IE,a
                           8522 ;	..\COMMON\easyax5043.c:1529: wtimer_runcallbacks();
   1EC4 C0 04              8523 	push	ar4
   1EC6 12s00r00           8524 	lcall	_wtimer_runcallbacks
   1EC9 D0 04              8525 	pop	ar4
   1ECB D0 05              8526 	pop	ar5
   1ECD D0 06              8527 	pop	ar6
   1ECF D0 07              8528 	pop	ar7
   1ED1 80 D5              8529 	sjmp	00113$
   1ED3                    8530 00114$:
                           8531 ;	..\COMMON\easyax5043.c:1531: axradio_trxstate = trxstate_off;
   1ED3 75*01 00           8532 	mov	_axradio_trxstate,#0x00
                           8533 ;	..\COMMON\easyax5043.c:1532: AX5043_IRQMASK1 = 0x00;
   1ED6 90 40 06           8534 	mov	dptr,#_AX5043_IRQMASK1
   1ED9 E4                 8535 	clr	a
   1EDA F0                 8536 	movx	@dptr,a
                           8537 ;	..\COMMON\easyax5043.c:1533: axradio_phy_chanpllrng_rx[i] = AX5043_PLLRANGINGA;
   1EDB ED                 8538 	mov	a,r5
   1EDC 24r00              8539 	add	a,#_axradio_phy_chanpllrng_rx
   1EDE FA                 8540 	mov	r2,a
   1EDF E4                 8541 	clr	a
   1EE0 34s00              8542 	addc	a,#(_axradio_phy_chanpllrng_rx >> 8)
   1EE2 FB                 8543 	mov	r3,a
   1EE3 90 40 33           8544 	mov	dptr,#_AX5043_PLLRANGINGA
   1EE6 E0                 8545 	movx	a,@dptr
   1EE7 F9                 8546 	mov	r1,a
   1EE8 8A 82              8547 	mov	dpl,r2
   1EEA 8B 83              8548 	mov	dph,r3
   1EEC F0                 8549 	movx	@dptr,a
                           8550 ;	..\COMMON\easyax5043.c:1534: IE |= iesave;
   1EED EC                 8551 	mov	a,r4
   1EEE 42 A8              8552 	orl	_IE,a
                           8553 ;	..\COMMON\easyax5043.c:1493: for (i = 0; i < axradio_phy_nrchannels; ++i) {
   1EF0 0D                 8554 	inc	r5
   1EF1 02s1Er19           8555 	ljmp	00127$
   1EF4                    8556 00130$:
                           8557 ;	..\COMMON\easyax5043.c:1536: ax5043_set_registers_tx();
   1EF4 C0 07              8558 	push	ar7
   1EF6 C0 06              8559 	push	ar6
   1EF8 12s00r00           8560 	lcall	_ax5043_set_registers_tx
   1EFB D0 06              8561 	pop	ar6
   1EFD D0 07              8562 	pop	ar7
                           8563 ;	..\COMMON\easyax5043.c:1537: AX5043_PLLLOOP = 0x09; // default 100kHz loop BW for ranging
   1EFF 90 40 30           8564 	mov	dptr,#_AX5043_PLLLOOP
   1F02 74 09              8565 	mov	a,#0x09
   1F04 F0                 8566 	movx	@dptr,a
                           8567 ;	..\COMMON\easyax5043.c:1538: AX5043_PLLCPI = 0x08;
   1F05 90 40 31           8568 	mov	dptr,#_AX5043_PLLCPI
   1F08 74 08              8569 	mov	a,#0x08
   1F0A F0                 8570 	movx	@dptr,a
                           8571 ;	..\COMMON\easyax5043.c:1539: for (i = 0; i < axradio_phy_nrchannels; ++i) {
   1F0B 7D 00              8572 	mov	r5,#0x00
   1F0D                    8573 00131$:
   1F0D 90s00r00           8574 	mov	dptr,#_axradio_phy_nrchannels
   1F10 E4                 8575 	clr	a
   1F11 93                 8576 	movc	a,@a+dptr
   1F12 FC                 8577 	mov	r4,a
   1F13 C3                 8578 	clr	c
   1F14 ED                 8579 	mov	a,r5
   1F15 9C                 8580 	subb	a,r4
   1F16 40 03              8581 	jc	00185$
   1F18 02s1FrA8           8582 	ljmp	00134$
   1F1B                    8583 00185$:
                           8584 ;	..\COMMON\easyax5043.c:1540: uint8_t __autodata iesave = IE & 0x80;
   1F1B 74 80              8585 	mov	a,#0x80
   1F1D 55 A8              8586 	anl	a,_IE
   1F1F FC                 8587 	mov	r4,a
                           8588 ;	..\COMMON\easyax5043.c:1541: EA = 0;
   1F20 C2 AF              8589 	clr	_EA
                           8590 ;	..\COMMON\easyax5043.c:1542: axradio_trxstate = trxstate_pll_ranging;
   1F22 75*01 05           8591 	mov	_axradio_trxstate,#0x05
                           8592 ;	..\COMMON\easyax5043.c:1543: AX5043_IRQMASK1 = 0x10; // enable pll autoranging done interrupt
   1F25 90 40 06           8593 	mov	dptr,#_AX5043_IRQMASK1
   1F28 74 10              8594 	mov	a,#0x10
   1F2A F0                 8595 	movx	@dptr,a
                           8596 ;	..\COMMON\easyax5043.c:1546: if( !(axradio_phy_chanpllrnginit[0] & 0xF0) ) { // start values for ranging available
   1F2B 90s00r00           8597 	mov	dptr,#_axradio_phy_chanpllrnginit
   1F2E E4                 8598 	clr	a
   1F2F 93                 8599 	movc	a,@a+dptr
   1F30 FB                 8600 	mov	r3,a
   1F31 54 F0              8601 	anl	a,#0xF0
   1F33 70 0B              8602 	jnz	00118$
                           8603 ;	..\COMMON\easyax5043.c:1547: r = axradio_phy_chanpllrnginit[i] | 0x10;
   1F35 ED                 8604 	mov	a,r5
   1F36 90s00r00           8605 	mov	dptr,#_axradio_phy_chanpllrnginit
   1F39 93                 8606 	movc	a,@a+dptr
   1F3A FB                 8607 	mov	r3,a
   1F3B 43 03 10           8608 	orl	ar3,#0x10
   1F3E 80 17              8609 	sjmp	00119$
   1F40                    8610 00118$:
                           8611 ;	..\COMMON\easyax5043.c:1550: r = axradio_phy_chanpllrng_rx[i];
   1F40 ED                 8612 	mov	a,r5
   1F41 24r00              8613 	add	a,#_axradio_phy_chanpllrng_rx
   1F43 F5 82              8614 	mov	dpl,a
   1F45 E4                 8615 	clr	a
   1F46 34s00              8616 	addc	a,#(_axradio_phy_chanpllrng_rx >> 8)
   1F48 F5 83              8617 	mov	dph,a
   1F4A E0                 8618 	movx	a,@dptr
                           8619 ;	..\COMMON\easyax5043.c:1551: if (r & 0x20)
   1F4B FB                 8620 	mov	r3,a
   1F4C 30 E5 02           8621 	jnb	acc.5,00116$
                           8622 ;	..\COMMON\easyax5043.c:1552: r = 0x08;
   1F4F 7B 08              8623 	mov	r3,#0x08
   1F51                    8624 00116$:
                           8625 ;	..\COMMON\easyax5043.c:1553: r &= 0x0F;
   1F51 53 03 0F           8626 	anl	ar3,#0x0F
                           8627 ;	..\COMMON\easyax5043.c:1554: r |= 0x10;
   1F54 43 03 10           8628 	orl	ar3,#0x10
   1F57                    8629 00119$:
                           8630 ;	..\COMMON\easyax5043.c:1556: AX5043_PLLRANGINGA = r; // init ranging process starting from "range"
   1F57 90 40 33           8631 	mov	dptr,#_AX5043_PLLRANGINGA
   1F5A EB                 8632 	mov	a,r3
   1F5B F0                 8633 	movx	@dptr,a
   1F5C                    8634 00123$:
                           8635 ;	..\COMMON\easyax5043.c:1559: EA = 0;
   1F5C C2 AF              8636 	clr	_EA
                           8637 ;	..\COMMON\easyax5043.c:1560: if (axradio_trxstate == trxstate_pll_ranging_done)
   1F5E 74 06              8638 	mov	a,#0x06
   1F60 B5*01 02           8639 	cjne	a,_axradio_trxstate,00189$
   1F63 80 22              8640 	sjmp	00124$
   1F65                    8641 00189$:
                           8642 ;	..\COMMON\easyax5043.c:1562: wtimer_idle(WTFLAG_CANSTANDBY);
   1F65 75 82 02           8643 	mov	dpl,#0x02
   1F68 C0 07              8644 	push	ar7
   1F6A C0 06              8645 	push	ar6
   1F6C C0 05              8646 	push	ar5
   1F6E C0 04              8647 	push	ar4
   1F70 12s00r00           8648 	lcall	_wtimer_idle
   1F73 D0 04              8649 	pop	ar4
                           8650 ;	..\COMMON\easyax5043.c:1563: IE |= iesave;
   1F75 EC                 8651 	mov	a,r4
   1F76 42 A8              8652 	orl	_IE,a
                           8653 ;	..\COMMON\easyax5043.c:1564: wtimer_runcallbacks();
   1F78 C0 04              8654 	push	ar4
   1F7A 12s00r00           8655 	lcall	_wtimer_runcallbacks
   1F7D D0 04              8656 	pop	ar4
   1F7F D0 05              8657 	pop	ar5
   1F81 D0 06              8658 	pop	ar6
   1F83 D0 07              8659 	pop	ar7
   1F85 80 D5              8660 	sjmp	00123$
   1F87                    8661 00124$:
                           8662 ;	..\COMMON\easyax5043.c:1566: axradio_trxstate = trxstate_off;
   1F87 75*01 00           8663 	mov	_axradio_trxstate,#0x00
                           8664 ;	..\COMMON\easyax5043.c:1567: AX5043_IRQMASK1 = 0x00;
   1F8A 90 40 06           8665 	mov	dptr,#_AX5043_IRQMASK1
   1F8D E4                 8666 	clr	a
   1F8E F0                 8667 	movx	@dptr,a
                           8668 ;	..\COMMON\easyax5043.c:1568: axradio_phy_chanpllrng_tx[i] = AX5043_PLLRANGINGA;
   1F8F ED                 8669 	mov	a,r5
   1F90 24r00              8670 	add	a,#_axradio_phy_chanpllrng_tx
   1F92 FA                 8671 	mov	r2,a
   1F93 E4                 8672 	clr	a
   1F94 34s00              8673 	addc	a,#(_axradio_phy_chanpllrng_tx >> 8)
   1F96 FB                 8674 	mov	r3,a
   1F97 90 40 33           8675 	mov	dptr,#_AX5043_PLLRANGINGA
   1F9A E0                 8676 	movx	a,@dptr
   1F9B F9                 8677 	mov	r1,a
   1F9C 8A 82              8678 	mov	dpl,r2
   1F9E 8B 83              8679 	mov	dph,r3
   1FA0 F0                 8680 	movx	@dptr,a
                           8681 ;	..\COMMON\easyax5043.c:1569: IE |= iesave;
   1FA1 EC                 8682 	mov	a,r4
   1FA2 42 A8              8683 	orl	_IE,a
                           8684 ;	..\COMMON\easyax5043.c:1539: for (i = 0; i < axradio_phy_nrchannels; ++i) {
   1FA4 0D                 8685 	inc	r5
   1FA5 02s1Fr0D           8686 	ljmp	00131$
   1FA8                    8687 00134$:
                           8688 ;	..\COMMON\easyax5043.c:1571: AX5043_PWRMODE = AX5043_PWRSTATE_POWERDOWN;
   1FA8 90 40 02           8689 	mov	dptr,#_AX5043_PWRMODE
   1FAB E4                 8690 	clr	a
   1FAC F0                 8691 	movx	@dptr,a
                           8692 ;	..\COMMON\easyax5043.c:1572: AX5043_PLLRANGINGA = axradio_phy_chanpllrng_rx[0] & 0x0F;
   1FAD 90s00r00           8693 	mov	dptr,#_axradio_phy_chanpllrng_rx
   1FB0 E0                 8694 	movx	a,@dptr
   1FB1 FD                 8695 	mov	r5,a
   1FB2 90 40 33           8696 	mov	dptr,#_AX5043_PLLRANGINGA
   1FB5 74 0F              8697 	mov	a,#0x0F
   1FB7 5D                 8698 	anl	a,r5
   1FB8 F0                 8699 	movx	@dptr,a
                           8700 ;	..\COMMON\easyax5043.c:1574: uint32_t __autodata f = axradio_phy_chanfreq[0];
   1FB9 90s00r00           8701 	mov	dptr,#_axradio_phy_chanfreq
   1FBC E4                 8702 	clr	a
   1FBD 93                 8703 	movc	a,@a+dptr
   1FBE FA                 8704 	mov	r2,a
   1FBF A3                 8705 	inc	dptr
   1FC0 E4                 8706 	clr	a
   1FC1 93                 8707 	movc	a,@a+dptr
   1FC2 FB                 8708 	mov	r3,a
   1FC3 A3                 8709 	inc	dptr
   1FC4 E4                 8710 	clr	a
   1FC5 93                 8711 	movc	a,@a+dptr
   1FC6 FC                 8712 	mov	r4,a
   1FC7 A3                 8713 	inc	dptr
   1FC8 E4                 8714 	clr	a
   1FC9 93                 8715 	movc	a,@a+dptr
   1FCA FD                 8716 	mov	r5,a
                           8717 ;	..\COMMON\easyax5043.c:1575: AX5043_FREQA0 = f;
   1FCB 90 40 37           8718 	mov	dptr,#_AX5043_FREQA0
   1FCE EA                 8719 	mov	a,r2
   1FCF F0                 8720 	movx	@dptr,a
                           8721 ;	..\COMMON\easyax5043.c:1576: AX5043_FREQA1 = f >> 8;
   1FD0 90 40 36           8722 	mov	dptr,#_AX5043_FREQA1
   1FD3 EB                 8723 	mov	a,r3
   1FD4 F0                 8724 	movx	@dptr,a
                           8725 ;	..\COMMON\easyax5043.c:1577: AX5043_FREQA2 = f >> 16;
   1FD5 90 40 35           8726 	mov	dptr,#_AX5043_FREQA2
   1FD8 EC                 8727 	mov	a,r4
   1FD9 F0                 8728 	movx	@dptr,a
                           8729 ;	..\COMMON\easyax5043.c:1578: AX5043_FREQA3 = f >> 24;
   1FDA 90 40 34           8730 	mov	dptr,#_AX5043_FREQA3
   1FDD ED                 8731 	mov	a,r5
   1FDE F0                 8732 	movx	@dptr,a
                           8733 ;	..\COMMON\easyax5043.c:1580: AX5043_PLLLOOP = pllloop_save; // restore loop settings (works if they came from the common section, unimportant if the came from the rx / tx section)
   1FDF 90 40 30           8734 	mov	dptr,#_AX5043_PLLLOOP
   1FE2 EF                 8735 	mov	a,r7
   1FE3 F0                 8736 	movx	@dptr,a
                           8737 ;	..\COMMON\easyax5043.c:1581: AX5043_PLLCPI = pllcpi_save;
   1FE4 90 40 31           8738 	mov	dptr,#_AX5043_PLLCPI
   1FE7 EE                 8739 	mov	a,r6
   1FE8 F0                 8740 	movx	@dptr,a
                           8741 ;	..\COMMON\easyax5043.c:1583: axradio_mode = AXRADIO_MODE_OFF;
   1FE9 75*00 01           8742 	mov	_axradio_mode,#0x01
                           8743 ;	..\COMMON\easyax5043.c:1584: for (i = 0; i < axradio_phy_nrchannels; ++i)
   1FEC 7F 00              8744 	mov	r7,#0x00
   1FEE                    8745 00135$:
   1FEE 90s00r00           8746 	mov	dptr,#_axradio_phy_nrchannels
   1FF1 E4                 8747 	clr	a
   1FF2 93                 8748 	movc	a,@a+dptr
   1FF3 FE                 8749 	mov	r6,a
   1FF4 C3                 8750 	clr	c
   1FF5 EF                 8751 	mov	a,r7
   1FF6 9E                 8752 	subb	a,r6
   1FF7 50 23              8753 	jnc	00138$
                           8754 ;	..\COMMON\easyax5043.c:1585: if ((axradio_phy_chanpllrng_rx[i] | axradio_phy_chanpllrng_tx[i]) & 0x20)
   1FF9 EF                 8755 	mov	a,r7
   1FFA 24r00              8756 	add	a,#_axradio_phy_chanpllrng_rx
   1FFC F5 82              8757 	mov	dpl,a
   1FFE E4                 8758 	clr	a
   1FFF 34s00              8759 	addc	a,#(_axradio_phy_chanpllrng_rx >> 8)
   2001 F5 83              8760 	mov	dph,a
   2003 E0                 8761 	movx	a,@dptr
   2004 FE                 8762 	mov	r6,a
   2005 EF                 8763 	mov	a,r7
   2006 24r00              8764 	add	a,#_axradio_phy_chanpllrng_tx
   2008 F5 82              8765 	mov	dpl,a
   200A E4                 8766 	clr	a
   200B 34s00              8767 	addc	a,#(_axradio_phy_chanpllrng_tx >> 8)
   200D F5 83              8768 	mov	dph,a
   200F E0                 8769 	movx	a,@dptr
   2010 FD                 8770 	mov	r5,a
   2011 4E                 8771 	orl	a,r6
   2012 30 E5 04           8772 	jnb	acc.5,00137$
                           8773 ;	..\COMMON\easyax5043.c:1586: return AXRADIO_ERR_RANGING;
   2015 75 82 06           8774 	mov	dpl,#0x06
   2018 22                 8775 	ret
   2019                    8776 00137$:
                           8777 ;	..\COMMON\easyax5043.c:1584: for (i = 0; i < axradio_phy_nrchannels; ++i)
   2019 0F                 8778 	inc	r7
   201A 80 D2              8779 	sjmp	00135$
   201C                    8780 00138$:
                           8781 ;	..\COMMON\easyax5043.c:1588: return AXRADIO_ERR_NOERROR;
   201C 75 82 00           8782 	mov	dpl,#0x00
   201F 22                 8783 	ret
                           8784 ;------------------------------------------------------------
                           8785 ;Allocation info for local variables in function 'axradio_cansleep'
                           8786 ;------------------------------------------------------------
                           8787 ;	..\COMMON\easyax5043.c:1591: __reentrantb uint8_t axradio_cansleep(void) __reentrant
                           8788 ;	-----------------------------------------
                           8789 ;	 function axradio_cansleep
                           8790 ;	-----------------------------------------
   2020                    8791 _axradio_cansleep:
                           8792 ;	..\COMMON\easyax5043.c:1593: if (axradio_trxstate == trxstate_off || axradio_trxstate == trxstate_rxwor)
   2020 E5*01              8793 	mov	a,_axradio_trxstate
   2022 60 05              8794 	jz	00101$
   2024 74 02              8795 	mov	a,#0x02
   2026 B5*01 04           8796 	cjne	a,_axradio_trxstate,00102$
   2029                    8797 00101$:
                           8798 ;	..\COMMON\easyax5043.c:1594: return 1;
   2029 75 82 01           8799 	mov	dpl,#0x01
   202C 22                 8800 	ret
   202D                    8801 00102$:
                           8802 ;	..\COMMON\easyax5043.c:1595: return 0;
   202D 75 82 00           8803 	mov	dpl,#0x00
   2030 22                 8804 	ret
                           8805 ;------------------------------------------------------------
                           8806 ;Allocation info for local variables in function 'wtimer_cansleep_dummy'
                           8807 ;------------------------------------------------------------
                           8808 ;	..\COMMON\easyax5043.c:1599: static void wtimer_cansleep_dummy(void) __naked
                           8809 ;	-----------------------------------------
                           8810 ;	 function wtimer_cansleep_dummy
                           8811 ;	-----------------------------------------
   2031                    8812 _wtimer_cansleep_dummy:
                           8813 ;	naked function: no prologue.
                           8814 ;	..\COMMON\easyax5043.c:1613: __endasm;
                           8815 	.area WTCANSLP0 (CODE)
                           8816 	.area WTCANSLP1 (CODE)
                           8817 	.area WTCANSLP2 (CODE)
                           8818 	.area WTCANSLP1 (CODE)
   0000 12s20r20           8819 	lcall _axradio_cansleep
   0003 E5 82              8820 	mov a,dpl
   0005 70 01              8821 	jnz 00000$
   0007 22                 8822 	ret
   0008                    8823 	00000$:
                           8824 	.area CSEG (CODE)
                           8825 ;	naked function: no epilogue.
                           8826 ;------------------------------------------------------------
                           8827 ;Allocation info for local variables in function 'axradio_set_mode'
                           8828 ;------------------------------------------------------------
                           8829 ;mode                      Allocated to registers r7 
                           8830 ;r                         Allocated to registers r6 
                           8831 ;r                         Allocated to registers r6 
                           8832 ;iesave                    Allocated to registers r6 
                           8833 ;------------------------------------------------------------
                           8834 ;	..\COMMON\easyax5043.c:1617: uint8_t axradio_set_mode(uint8_t mode)
                           8835 ;	-----------------------------------------
                           8836 ;	 function axradio_set_mode
                           8837 ;	-----------------------------------------
   2031                    8838 _axradio_set_mode:
                           8839 ;	..\COMMON\easyax5043.c:1619: if (mode == axradio_mode)
   2031 E5 82              8840 	mov	a,dpl
   2033 FF                 8841 	mov	r7,a
   2034 B5*00 04           8842 	cjne	a,_axradio_mode,00102$
                           8843 ;	..\COMMON\easyax5043.c:1620: return AXRADIO_ERR_NOERROR;
   2037 75 82 00           8844 	mov	dpl,#0x00
   203A 22                 8845 	ret
   203B                    8846 00102$:
                           8847 ;	..\COMMON\easyax5043.c:1621: switch (axradio_mode) {
   203B AE*00              8848 	mov	r6,_axradio_mode
   203D BE 00 02           8849 	cjne	r6,#0x00,00213$
   2040 80 2E              8850 	sjmp	00103$
   2042                    8851 00213$:
   2042 BE 02 02           8852 	cjne	r6,#0x02,00214$
   2045 80 3B              8853 	sjmp	00106$
   2047                    8854 00214$:
   2047 BE 03 02           8855 	cjne	r6,#0x03,00215$
   204A 80 66              8856 	sjmp	00114$
   204C                    8857 00215$:
   204C BE 14 02           8858 	cjne	r6,#0x14,00216$
   204F 80 61              8859 	sjmp	00114$
   2051                    8860 00216$:
   2051 BE 15 02           8861 	cjne	r6,#0x15,00217$
   2054 80 5C              8862 	sjmp	00114$
   2056                    8863 00217$:
   2056 BE 16 02           8864 	cjne	r6,#0x16,00218$
   2059 80 57              8865 	sjmp	00114$
   205B                    8866 00218$:
   205B BE 1C 03           8867 	cjne	r6,#0x1C,00219$
   205E 02s21r0B           8868 	ljmp	00119$
   2061                    8869 00219$:
   2061 BE 1D 03           8870 	cjne	r6,#0x1D,00220$
   2064 02s21r0B           8871 	ljmp	00119$
   2067                    8872 00220$:
   2067 BE 1E 03           8873 	cjne	r6,#0x1E,00221$
   206A 02s21r0B           8874 	ljmp	00119$
   206D                    8875 00221$:
   206D 02s21r18           8876 	ljmp	00120$
                           8877 ;	..\COMMON\easyax5043.c:1622: case AXRADIO_MODE_UNINIT:
   2070                    8878 00103$:
                           8879 ;	..\COMMON\easyax5043.c:1624: uint8_t __autodata r = axradio_init();
   2070 C0 07              8880 	push	ar7
   2072 12s1Dr35           8881 	lcall	_axradio_init
   2075 AE 82              8882 	mov	r6,dpl
   2077 D0 07              8883 	pop	ar7
                           8884 ;	..\COMMON\easyax5043.c:1625: if (r != AXRADIO_ERR_NOERROR)
   2079 EE                 8885 	mov	a,r6
   207A 70 03              8886 	jnz	00222$
   207C 02s21r22           8887 	ljmp	00121$
   207F                    8888 00222$:
                           8889 ;	..\COMMON\easyax5043.c:1626: return r;
   207F 8E 82              8890 	mov	dpl,r6
   2081 22                 8891 	ret
                           8892 ;	..\COMMON\easyax5043.c:1630: case AXRADIO_MODE_DEEPSLEEP:
   2082                    8893 00106$:
                           8894 ;	..\COMMON\easyax5043.c:1632: uint8_t __autodata r = ax5043_wakeup_deepsleep();
   2082 C0 07              8895 	push	ar7
   2084 12s00r00           8896 	lcall	_ax5043_wakeup_deepsleep
   2087 AE 82              8897 	mov	r6,dpl
   2089 D0 07              8898 	pop	ar7
                           8899 ;	..\COMMON\easyax5043.c:1633: if (r)
   208B EE                 8900 	mov	a,r6
   208C 60 04              8901 	jz	00108$
                           8902 ;	..\COMMON\easyax5043.c:1634: return AXRADIO_ERR_NOCHIP;
   208E 75 82 05           8903 	mov	dpl,#0x05
   2091 22                 8904 	ret
   2092                    8905 00108$:
                           8906 ;	..\COMMON\easyax5043.c:1635: ax5043_init_registers();
   2092 C0 07              8907 	push	ar7
   2094 12s0DrAD           8908 	lcall	_ax5043_init_registers
                           8909 ;	..\COMMON\easyax5043.c:1636: r = axradio_set_channel(axradio_curchannel);
   2097 90s00r05           8910 	mov	dptr,#_axradio_curchannel
   209A E0                 8911 	movx	a,@dptr
   209B F5 82              8912 	mov	dpl,a
   209D 12s24r04           8913 	lcall	_axradio_set_channel
   20A0 AE 82              8914 	mov	r6,dpl
   20A2 D0 07              8915 	pop	ar7
                           8916 ;	..\COMMON\easyax5043.c:1637: if (r != AXRADIO_ERR_NOERROR)
   20A4 EE                 8917 	mov	a,r6
   20A5 60 03              8918 	jz	00110$
                           8919 ;	..\COMMON\easyax5043.c:1638: return r;
   20A7 8E 82              8920 	mov	dpl,r6
   20A9 22                 8921 	ret
   20AA                    8922 00110$:
                           8923 ;	..\COMMON\easyax5043.c:1639: axradio_trxstate = trxstate_off;
   20AA 75*01 00           8924 	mov	_axradio_trxstate,#0x00
                           8925 ;	..\COMMON\easyax5043.c:1640: axradio_mode = AXRADIO_MODE_OFF;
   20AD 75*00 01           8926 	mov	_axradio_mode,#0x01
                           8927 ;	..\COMMON\easyax5043.c:1641: break;
                           8928 ;	..\COMMON\easyax5043.c:1647: case AXRADIO_MODE_CW_TRANSMIT:
   20B0 80 70              8929 	sjmp	00121$
   20B2                    8930 00114$:
                           8931 ;	..\COMMON\easyax5043.c:1649: uint8_t __autodata iesave = IE & 0x80;
   20B2 74 80              8932 	mov	a,#0x80
   20B4 55 A8              8933 	anl	a,_IE
   20B6 FE                 8934 	mov	r6,a
                           8935 ;	..\COMMON\easyax5043.c:1650: EA = 0;
   20B7 C2 AF              8936 	clr	_EA
                           8937 ;	..\COMMON\easyax5043.c:1651: if (axradio_trxstate == trxstate_off) {
   20B9 E5*01              8938 	mov	a,_axradio_trxstate
   20BB 70 38              8939 	jnz	00116$
                           8940 ;	..\COMMON\easyax5043.c:1652: update_timeanchor();
   20BD C0 07              8941 	push	ar7
   20BF C0 06              8942 	push	ar6
   20C1 12s00r00           8943 	lcall	_update_timeanchor
                           8944 ;	..\COMMON\easyax5043.c:1653: wtimer_remove_callback(&axradio_cb_transmitend.cb);
   20C4 90s02r71           8945 	mov	dptr,#_axradio_cb_transmitend
   20C7 12s00r00           8946 	lcall	_wtimer_remove_callback
                           8947 ;	..\COMMON\easyax5043.c:1654: axradio_cb_transmitend.st.error = AXRADIO_ERR_NOERROR;
   20CA 90s02r76           8948 	mov	dptr,#(_axradio_cb_transmitend + 0x0005)
   20CD E4                 8949 	clr	a
   20CE F0                 8950 	movx	@dptr,a
                           8951 ;	..\COMMON\easyax5043.c:1655: axradio_cb_transmitend.st.time.t = axradio_timeanchor.radiotimer;
   20CF 90s00r16           8952 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   20D2 E0                 8953 	movx	a,@dptr
   20D3 FA                 8954 	mov	r2,a
   20D4 A3                 8955 	inc	dptr
   20D5 E0                 8956 	movx	a,@dptr
   20D6 FB                 8957 	mov	r3,a
   20D7 A3                 8958 	inc	dptr
   20D8 E0                 8959 	movx	a,@dptr
   20D9 FC                 8960 	mov	r4,a
   20DA A3                 8961 	inc	dptr
   20DB E0                 8962 	movx	a,@dptr
   20DC FD                 8963 	mov	r5,a
   20DD 90s02r77           8964 	mov	dptr,#(_axradio_cb_transmitend + 0x0006)
   20E0 EA                 8965 	mov	a,r2
   20E1 F0                 8966 	movx	@dptr,a
   20E2 A3                 8967 	inc	dptr
   20E3 EB                 8968 	mov	a,r3
   20E4 F0                 8969 	movx	@dptr,a
   20E5 A3                 8970 	inc	dptr
   20E6 EC                 8971 	mov	a,r4
   20E7 F0                 8972 	movx	@dptr,a
   20E8 A3                 8973 	inc	dptr
   20E9 ED                 8974 	mov	a,r5
   20EA F0                 8975 	movx	@dptr,a
                           8976 ;	..\COMMON\easyax5043.c:1656: wtimer_add_callback(&axradio_cb_transmitend.cb);
   20EB 90s02r71           8977 	mov	dptr,#_axradio_cb_transmitend
   20EE 12s00r00           8978 	lcall	_wtimer_add_callback
   20F1 D0 06              8979 	pop	ar6
   20F3 D0 07              8980 	pop	ar7
   20F5                    8981 00116$:
                           8982 ;	..\COMMON\easyax5043.c:1658: ax5043_off();
   20F5 C0 07              8983 	push	ar7
   20F7 C0 06              8984 	push	ar6
   20F9 12s0Cr36           8985 	lcall	_ax5043_off
   20FC D0 06              8986 	pop	ar6
                           8987 ;	..\COMMON\easyax5043.c:1659: IE |= iesave;
   20FE EE                 8988 	mov	a,r6
   20FF 42 A8              8989 	orl	_IE,a
                           8990 ;	..\COMMON\easyax5043.c:1661: ax5043_init_registers();
   2101 12s0DrAD           8991 	lcall	_ax5043_init_registers
   2104 D0 07              8992 	pop	ar7
                           8993 ;	..\COMMON\easyax5043.c:1662: axradio_mode = AXRADIO_MODE_OFF;
   2106 75*00 01           8994 	mov	_axradio_mode,#0x01
                           8995 ;	..\COMMON\easyax5043.c:1663: break;
                           8996 ;	..\COMMON\easyax5043.c:1668: case AXRADIO_MODE_STREAM_RECEIVE_SCRAM:
   2109 80 17              8997 	sjmp	00121$
   210B                    8998 00119$:
                           8999 ;	..\COMMON\easyax5043.c:1669: ax5043_off();
   210B C0 07              9000 	push	ar7
   210D 12s0Cr36           9001 	lcall	_ax5043_off
                           9002 ;	..\COMMON\easyax5043.c:1670: ax5043_init_registers();
   2110 12s0DrAD           9003 	lcall	_ax5043_init_registers
   2113 D0 07              9004 	pop	ar7
                           9005 ;	..\COMMON\easyax5043.c:1671: axradio_mode = AXRADIO_MODE_OFF;
   2115 75*00 01           9006 	mov	_axradio_mode,#0x01
                           9007 ;	..\COMMON\easyax5043.c:1673: default:
   2118                    9008 00120$:
                           9009 ;	..\COMMON\easyax5043.c:1674: ax5043_off();
   2118 C0 07              9010 	push	ar7
   211A 12s0Cr36           9011 	lcall	_ax5043_off
   211D D0 07              9012 	pop	ar7
                           9013 ;	..\COMMON\easyax5043.c:1675: axradio_mode = AXRADIO_MODE_OFF;
   211F 75*00 01           9014 	mov	_axradio_mode,#0x01
                           9015 ;	..\COMMON\easyax5043.c:1677: }
   2122                    9016 00121$:
                           9017 ;	..\COMMON\easyax5043.c:1678: axradio_killallcb();
   2122 C0 07              9018 	push	ar7
   2124 12s1Dr0B           9019 	lcall	_axradio_killallcb
   2127 D0 07              9020 	pop	ar7
                           9021 ;	..\COMMON\easyax5043.c:1679: if (mode == AXRADIO_MODE_UNINIT)
   2129 EF                 9022 	mov	a,r7
   212A 70 04              9023 	jnz	00123$
                           9024 ;	..\COMMON\easyax5043.c:1680: return AXRADIO_ERR_NOTSUPPORTED;
   212C 75 82 01           9025 	mov	dpl,#0x01
   212F 22                 9026 	ret
   2130                    9027 00123$:
                           9028 ;	..\COMMON\easyax5043.c:1681: axradio_syncstate = syncstate_off;
   2130 90s00r00           9029 	mov	dptr,#_axradio_syncstate
   2133 E4                 9030 	clr	a
   2134 F0                 9031 	movx	@dptr,a
                           9032 ;	..\COMMON\easyax5043.c:1682: switch (mode) {
   2135 EF                 9033 	mov	a,r7
   2136 24 DC              9034 	add	a,#0xff - 0x23
   2138 50 03              9035 	jnc	00227$
   213A 02s23rFC           9036 	ljmp	00159$
   213D                    9037 00227$:
   213D EF                 9038 	mov	a,r7
   213E 24 09              9039 	add	a,#(00228$-3-.)
   2140 83                 9040 	movc	a,@a+pc
   2141 C0 E0              9041 	push	acc
   2143 EF                 9042 	mov	a,r7
   2144 24 27              9043 	add	a,#(00229$-3-.)
   2146 83                 9044 	movc	a,@a+pc
   2147 C0 E0              9045 	push	acc
   2149 22                 9046 	ret
   214A                    9047 00228$:
   214ArFC                 9048 	.db	00159$
   214Br92                 9049 	.db	00124$
   214Cr96                 9050 	.db	00125$
   214DrC1                 9051 	.db	00154$
   214ErFC                 9052 	.db	00159$
   214FrFC                 9053 	.db	00159$
   2150rFC                 9054 	.db	00159$
   2151rFC                 9055 	.db	00159$
   2152rFC                 9056 	.db	00159$
   2153rFC                 9057 	.db	00159$
   2154rFC                 9058 	.db	00159$
   2155rFC                 9059 	.db	00159$
   2156rFC                 9060 	.db	00159$
   2157rFC                 9061 	.db	00159$
   2158rFC                 9062 	.db	00159$
   2159rFC                 9063 	.db	00159$
   215ArA0                 9064 	.db	00126$
   215BrB3                 9065 	.db	00128$
   215CrA0                 9066 	.db	00127$
   215DrB3                 9067 	.db	00129$
   215Er22                 9068 	.db	00137$
   215Fr22                 9069 	.db	00138$
   2160r22                 9070 	.db	00139$
   2161rFC                 9071 	.db	00159$
   2162rC6                 9072 	.db	00130$
   2163r0C                 9073 	.db	00135$
   2164rC6                 9074 	.db	00131$
   2165r0C                 9075 	.db	00136$
   2166r8D                 9076 	.db	00147$
   2167r8D                 9077 	.db	00148$
   2168r8D                 9078 	.db	00149$
   2169rFC                 9079 	.db	00159$
   216Ar07                 9080 	.db	00155$
   216Br07                 9081 	.db	00156$
   216Cr62                 9082 	.db	00157$
   216Dr62                 9083 	.db	00158$
   216E                    9084 00229$:
   216Es23                 9085 	.db	00159$>>8
   216Fs21                 9086 	.db	00124$>>8
   2170s21                 9087 	.db	00125$>>8
   2171s22                 9088 	.db	00154$>>8
   2172s23                 9089 	.db	00159$>>8
   2173s23                 9090 	.db	00159$>>8
   2174s23                 9091 	.db	00159$>>8
   2175s23                 9092 	.db	00159$>>8
   2176s23                 9093 	.db	00159$>>8
   2177s23                 9094 	.db	00159$>>8
   2178s23                 9095 	.db	00159$>>8
   2179s23                 9096 	.db	00159$>>8
   217As23                 9097 	.db	00159$>>8
   217Bs23                 9098 	.db	00159$>>8
   217Cs23                 9099 	.db	00159$>>8
   217Ds23                 9100 	.db	00159$>>8
   217Es21                 9101 	.db	00126$>>8
   217Fs21                 9102 	.db	00128$>>8
   2180s21                 9103 	.db	00127$>>8
   2181s21                 9104 	.db	00129$>>8
   2182s22                 9105 	.db	00137$>>8
   2183s22                 9106 	.db	00138$>>8
   2184s22                 9107 	.db	00139$>>8
   2185s23                 9108 	.db	00159$>>8
   2186s21                 9109 	.db	00130$>>8
   2187s22                 9110 	.db	00135$>>8
   2188s21                 9111 	.db	00131$>>8
   2189s22                 9112 	.db	00136$>>8
   218As22                 9113 	.db	00147$>>8
   218Bs22                 9114 	.db	00148$>>8
   218Cs22                 9115 	.db	00149$>>8
   218Ds23                 9116 	.db	00159$>>8
   218Es23                 9117 	.db	00155$>>8
   218Fs23                 9118 	.db	00156$>>8
   2190s23                 9119 	.db	00157$>>8
   2191s23                 9120 	.db	00158$>>8
                           9121 ;	..\COMMON\easyax5043.c:1683: case AXRADIO_MODE_OFF:
   2192                    9122 00124$:
                           9123 ;	..\COMMON\easyax5043.c:1684: return AXRADIO_ERR_NOERROR;
   2192 75 82 00           9124 	mov	dpl,#0x00
   2195 22                 9125 	ret
                           9126 ;	..\COMMON\easyax5043.c:1686: case AXRADIO_MODE_DEEPSLEEP:
   2196                    9127 00125$:
                           9128 ;	..\COMMON\easyax5043.c:1687: ax5043_enter_deepsleep();
   2196 12s00r00           9129 	lcall	_ax5043_enter_deepsleep
                           9130 ;	..\COMMON\easyax5043.c:1688: axradio_mode = AXRADIO_MODE_DEEPSLEEP;
   2199 75*00 02           9131 	mov	_axradio_mode,#0x02
                           9132 ;	..\COMMON\easyax5043.c:1689: return AXRADIO_ERR_NOERROR;
   219C 75 82 00           9133 	mov	dpl,#0x00
   219F 22                 9134 	ret
                           9135 ;	..\COMMON\easyax5043.c:1691: case AXRADIO_MODE_ASYNC_TRANSMIT:
   21A0                    9136 00126$:
                           9137 ;	..\COMMON\easyax5043.c:1692: case AXRADIO_MODE_ACK_TRANSMIT:
   21A0                    9138 00127$:
                           9139 ;	..\COMMON\easyax5043.c:1693: ax5043_init_registers_tx();
   21A0 C0 07              9140 	push	ar7
   21A2 12s00r96           9141 	lcall	_ax5043_init_registers_tx
   21A5 D0 07              9142 	pop	ar7
                           9143 ;	..\COMMON\easyax5043.c:1694: axradio_ack_seqnr = 0xff;
   21A7 90s00r0B           9144 	mov	dptr,#_axradio_ack_seqnr
   21AA 74 FF              9145 	mov	a,#0xFF
   21AC F0                 9146 	movx	@dptr,a
                           9147 ;	..\COMMON\easyax5043.c:1695: axradio_mode = mode;
   21AD 8F*00              9148 	mov	_axradio_mode,r7
                           9149 ;	..\COMMON\easyax5043.c:1696: return AXRADIO_ERR_NOERROR;
   21AF 75 82 00           9150 	mov	dpl,#0x00
   21B2 22                 9151 	ret
                           9152 ;	..\COMMON\easyax5043.c:1698: case AXRADIO_MODE_WOR_TRANSMIT:
   21B3                    9153 00128$:
                           9154 ;	..\COMMON\easyax5043.c:1699: case AXRADIO_MODE_WOR_ACK_TRANSMIT:
   21B3                    9155 00129$:
                           9156 ;	..\COMMON\easyax5043.c:1700: ax5043_init_registers_tx();
   21B3 C0 07              9157 	push	ar7
   21B5 12s00r96           9158 	lcall	_ax5043_init_registers_tx
   21B8 D0 07              9159 	pop	ar7
                           9160 ;	..\COMMON\easyax5043.c:1701: axradio_ack_seqnr = 0xff;
   21BA 90s00r0B           9161 	mov	dptr,#_axradio_ack_seqnr
   21BD 74 FF              9162 	mov	a,#0xFF
   21BF F0                 9163 	movx	@dptr,a
                           9164 ;	..\COMMON\easyax5043.c:1702: axradio_mode = mode;
   21C0 8F*00              9165 	mov	_axradio_mode,r7
                           9166 ;	..\COMMON\easyax5043.c:1703: return AXRADIO_ERR_NOERROR;
   21C2 75 82 00           9167 	mov	dpl,#0x00
   21C5 22                 9168 	ret
                           9169 ;	..\COMMON\easyax5043.c:1705: case AXRADIO_MODE_ASYNC_RECEIVE:
   21C6                    9170 00130$:
                           9171 ;	..\COMMON\easyax5043.c:1706: case AXRADIO_MODE_ACK_RECEIVE:
   21C6                    9172 00131$:
                           9173 ;	..\COMMON\easyax5043.c:1707: ax5043_init_registers_rx();
   21C6 C0 07              9174 	push	ar7
   21C8 12s00rCB           9175 	lcall	_ax5043_init_registers_rx
                           9176 ;	..\COMMON\easyax5043.c:1708: ax5043_receiver_on_continuous();
   21CB 12s0ArF1           9177 	lcall	_ax5043_receiver_on_continuous
   21CE D0 07              9178 	pop	ar7
                           9179 ;	..\COMMON\easyax5043.c:1709: axradio_ack_seqnr = 0xff;
   21D0 90s00r0B           9180 	mov	dptr,#_axradio_ack_seqnr
   21D3 74 FF              9181 	mov	a,#0xFF
   21D5 F0                 9182 	movx	@dptr,a
                           9183 ;	..\COMMON\easyax5043.c:1710: axradio_mode = mode;
   21D6 8F*00              9184 	mov	_axradio_mode,r7
                           9185 ;	..\COMMON\easyax5043.c:1711: enablecs:
   21D8                    9186 00132$:
                           9187 ;	..\COMMON\easyax5043.c:1712: if (axradio_phy_cs_enabled) {
   21D8 90s00r00           9188 	mov	dptr,#_axradio_phy_cs_enabled
   21DB E4                 9189 	clr	a
   21DC 93                 9190 	movc	a,@a+dptr
   21DD FE                 9191 	mov	r6,a
   21DE 60 28              9192 	jz	00134$
                           9193 ;	..\COMMON\easyax5043.c:1713: wtimer_remove(&axradio_timer);
   21E0 90s02r85           9194 	mov	dptr,#_axradio_timer
   21E3 12s00r00           9195 	lcall	_wtimer_remove
                           9196 ;	..\COMMON\easyax5043.c:1714: axradio_timer.time = axradio_phy_cs_period;
   21E6 90s00r00           9197 	mov	dptr,#_axradio_phy_cs_period
   21E9 E4                 9198 	clr	a
   21EA 93                 9199 	movc	a,@a+dptr
   21EB FD                 9200 	mov	r5,a
   21EC 74 01              9201 	mov	a,#0x01
   21EE 93                 9202 	movc	a,@a+dptr
   21EF FE                 9203 	mov	r6,a
   21F0 7C 00              9204 	mov	r4,#0x00
   21F2 7B 00              9205 	mov	r3,#0x00
   21F4 90s02r89           9206 	mov	dptr,#(_axradio_timer + 0x0004)
   21F7 ED                 9207 	mov	a,r5
   21F8 F0                 9208 	movx	@dptr,a
   21F9 A3                 9209 	inc	dptr
   21FA EE                 9210 	mov	a,r6
   21FB F0                 9211 	movx	@dptr,a
   21FC A3                 9212 	inc	dptr
   21FD EC                 9213 	mov	a,r4
   21FE F0                 9214 	movx	@dptr,a
   21FF A3                 9215 	inc	dptr
   2200 EB                 9216 	mov	a,r3
   2201 F0                 9217 	movx	@dptr,a
                           9218 ;	..\COMMON\easyax5043.c:1715: wtimer0_addrelative(&axradio_timer);
   2202 90s02r85           9219 	mov	dptr,#_axradio_timer
   2205 12s00r00           9220 	lcall	_wtimer0_addrelative
   2208                    9221 00134$:
                           9222 ;	..\COMMON\easyax5043.c:1717: return AXRADIO_ERR_NOERROR;
   2208 75 82 00           9223 	mov	dpl,#0x00
   220B 22                 9224 	ret
                           9225 ;	..\COMMON\easyax5043.c:1719: case AXRADIO_MODE_WOR_RECEIVE:
   220C                    9226 00135$:
                           9227 ;	..\COMMON\easyax5043.c:1720: case AXRADIO_MODE_WOR_ACK_RECEIVE:
   220C                    9228 00136$:
                           9229 ;	..\COMMON\easyax5043.c:1721: ax5043_init_registers_rx();
   220C C0 07              9230 	push	ar7
   220E 12s00rCB           9231 	lcall	_ax5043_init_registers_rx
                           9232 ;	..\COMMON\easyax5043.c:1722: ax5043_receiver_on_wor();
   2211 12s0Br8B           9233 	lcall	_ax5043_receiver_on_wor
   2214 D0 07              9234 	pop	ar7
                           9235 ;	..\COMMON\easyax5043.c:1723: axradio_ack_seqnr = 0xff;
   2216 90s00r0B           9236 	mov	dptr,#_axradio_ack_seqnr
   2219 74 FF              9237 	mov	a,#0xFF
   221B F0                 9238 	movx	@dptr,a
                           9239 ;	..\COMMON\easyax5043.c:1724: axradio_mode = mode;
   221C 8F*00              9240 	mov	_axradio_mode,r7
                           9241 ;	..\COMMON\easyax5043.c:1725: return AXRADIO_ERR_NOERROR;
   221E 75 82 00           9242 	mov	dpl,#0x00
   2221 22                 9243 	ret
                           9244 ;	..\COMMON\easyax5043.c:1727: case AXRADIO_MODE_STREAM_TRANSMIT:
   2222                    9245 00137$:
                           9246 ;	..\COMMON\easyax5043.c:1728: case AXRADIO_MODE_STREAM_TRANSMIT_UNENC:
   2222                    9247 00138$:
                           9248 ;	..\COMMON\easyax5043.c:1729: case AXRADIO_MODE_STREAM_TRANSMIT_SCRAM:
   2222                    9249 00139$:
                           9250 ;	..\COMMON\easyax5043.c:1730: axradio_mode = mode;
   2222 8F*00              9251 	mov	_axradio_mode,r7
                           9252 ;	..\COMMON\easyax5043.c:1731: if (axradio_mode == AXRADIO_MODE_STREAM_TRANSMIT_UNENC)
   2224 74 15              9253 	mov	a,#0x15
   2226 B5*00 05           9254 	cjne	a,_axradio_mode,00141$
                           9255 ;	..\COMMON\easyax5043.c:1732: AX5043_ENCODING = 0;
   2229 90 40 11           9256 	mov	dptr,#_AX5043_ENCODING
   222C E4                 9257 	clr	a
   222D F0                 9258 	movx	@dptr,a
   222E                    9259 00141$:
                           9260 ;	..\COMMON\easyax5043.c:1733: if (axradio_mode == AXRADIO_MODE_STREAM_TRANSMIT_SCRAM)
   222E 74 16              9261 	mov	a,#0x16
   2230 B5*00 06           9262 	cjne	a,_axradio_mode,00143$
                           9263 ;	..\COMMON\easyax5043.c:1734: AX5043_ENCODING = 4;
   2233 90 40 11           9264 	mov	dptr,#_AX5043_ENCODING
   2236 74 04              9265 	mov	a,#0x04
   2238 F0                 9266 	movx	@dptr,a
   2239                    9267 00143$:
                           9268 ;	..\COMMON\easyax5043.c:1735: ax5043_init_registers_tx();
   2239 12s00r96           9269 	lcall	_ax5043_init_registers_tx
                           9270 ;	..\COMMON\easyax5043.c:1736: AX5043_FRAMING = 0;
   223C 90 40 12           9271 	mov	dptr,#_AX5043_FRAMING
   223F E4                 9272 	clr	a
   2240 F0                 9273 	movx	@dptr,a
                           9274 ;	..\COMMON\easyax5043.c:1737: ax5043_prepare_tx();
   2241 12s0Cr10           9275 	lcall	_ax5043_prepare_tx
                           9276 ;	..\COMMON\easyax5043.c:1738: axradio_trxstate = trxstate_txstream_xtalwait;
   2244 75*01 0F           9277 	mov	_axradio_trxstate,#0x0F
                           9278 ;	..\COMMON\easyax5043.c:1739: while (!(AX5043_POWSTAT & 0x08)) {}; // wait for modem vdd so writing the FIFO is safe
   2247                    9279 00144$:
   2247 90 40 03           9280 	mov	dptr,#_AX5043_POWSTAT
   224A E0                 9281 	movx	a,@dptr
   224B FE                 9282 	mov	r6,a
   224C 30 E3 F8           9283 	jnb	acc.3,00144$
                           9284 ;	..\COMMON\easyax5043.c:1740: AX5043_FIFOSTAT = 3; // clear FIFO data & flags (prevent transmitting anything left over in the FIFO, this has no effect if the FIFO is not powerered, in this case it is reset any way)
   224F 90 40 28           9285 	mov	dptr,#_AX5043_FIFOSTAT
   2252 74 03              9286 	mov	a,#0x03
   2254 F0                 9287 	movx	@dptr,a
                           9288 ;	..\COMMON\easyax5043.c:1741: AX5043_RADIOEVENTREQ0; // make sure REVRDONE bit is cleared, so it is a reliable indicator that the packet is out
   2255 90 40 0F           9289 	mov	dptr,#_AX5043_RADIOEVENTREQ0
   2258 E0                 9290 	movx	a,@dptr
                           9291 ;	..\COMMON\easyax5043.c:1742: update_timeanchor();
   2259 12s00r00           9292 	lcall	_update_timeanchor
                           9293 ;	..\COMMON\easyax5043.c:1743: wtimer_remove_callback(&axradio_cb_transmitdata.cb);
   225C 90s02r7B           9294 	mov	dptr,#_axradio_cb_transmitdata
   225F 12s00r00           9295 	lcall	_wtimer_remove_callback
                           9296 ;	..\COMMON\easyax5043.c:1744: axradio_cb_transmitdata.st.error = AXRADIO_ERR_NOERROR;
   2262 90s02r80           9297 	mov	dptr,#(_axradio_cb_transmitdata + 0x0005)
   2265 E4                 9298 	clr	a
   2266 F0                 9299 	movx	@dptr,a
                           9300 ;	..\COMMON\easyax5043.c:1745: axradio_cb_transmitdata.st.time.t = axradio_timeanchor.radiotimer;
   2267 90s00r16           9301 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   226A E0                 9302 	movx	a,@dptr
   226B FB                 9303 	mov	r3,a
   226C A3                 9304 	inc	dptr
   226D E0                 9305 	movx	a,@dptr
   226E FC                 9306 	mov	r4,a
   226F A3                 9307 	inc	dptr
   2270 E0                 9308 	movx	a,@dptr
   2271 FD                 9309 	mov	r5,a
   2272 A3                 9310 	inc	dptr
   2273 E0                 9311 	movx	a,@dptr
   2274 FE                 9312 	mov	r6,a
   2275 90s02r81           9313 	mov	dptr,#(_axradio_cb_transmitdata + 0x0006)
   2278 EB                 9314 	mov	a,r3
   2279 F0                 9315 	movx	@dptr,a
   227A A3                 9316 	inc	dptr
   227B EC                 9317 	mov	a,r4
   227C F0                 9318 	movx	@dptr,a
   227D A3                 9319 	inc	dptr
   227E ED                 9320 	mov	a,r5
   227F F0                 9321 	movx	@dptr,a
   2280 A3                 9322 	inc	dptr
   2281 EE                 9323 	mov	a,r6
   2282 F0                 9324 	movx	@dptr,a
                           9325 ;	..\COMMON\easyax5043.c:1746: wtimer_add_callback(&axradio_cb_transmitdata.cb);
   2283 90s02r7B           9326 	mov	dptr,#_axradio_cb_transmitdata
   2286 12s00r00           9327 	lcall	_wtimer_add_callback
                           9328 ;	..\COMMON\easyax5043.c:1747: return AXRADIO_ERR_NOERROR;
   2289 75 82 00           9329 	mov	dpl,#0x00
   228C 22                 9330 	ret
                           9331 ;	..\COMMON\easyax5043.c:1749: case AXRADIO_MODE_STREAM_RECEIVE:
   228D                    9332 00147$:
                           9333 ;	..\COMMON\easyax5043.c:1750: case AXRADIO_MODE_STREAM_RECEIVE_UNENC:
   228D                    9334 00148$:
                           9335 ;	..\COMMON\easyax5043.c:1751: case AXRADIO_MODE_STREAM_RECEIVE_SCRAM:
   228D                    9336 00149$:
                           9337 ;	..\COMMON\easyax5043.c:1752: ax5043_init_registers_rx();
   228D C0 07              9338 	push	ar7
   228F 12s00rCB           9339 	lcall	_ax5043_init_registers_rx
   2292 D0 07              9340 	pop	ar7
                           9341 ;	..\COMMON\easyax5043.c:1753: if (axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_UNENC)
   2294 74 1D              9342 	mov	a,#0x1D
   2296 B5*00 05           9343 	cjne	a,_axradio_mode,00151$
                           9344 ;	..\COMMON\easyax5043.c:1754: AX5043_ENCODING = 0;
   2299 90 40 11           9345 	mov	dptr,#_AX5043_ENCODING
   229C E4                 9346 	clr	a
   229D F0                 9347 	movx	@dptr,a
   229E                    9348 00151$:
                           9349 ;	..\COMMON\easyax5043.c:1755: if (axradio_mode == AXRADIO_MODE_STREAM_RECEIVE_SCRAM)
   229E 74 1E              9350 	mov	a,#0x1E
   22A0 B5*00 06           9351 	cjne	a,_axradio_mode,00153$
                           9352 ;	..\COMMON\easyax5043.c:1756: AX5043_ENCODING = 4;
   22A3 90 40 11           9353 	mov	dptr,#_AX5043_ENCODING
   22A6 74 04              9354 	mov	a,#0x04
   22A8 F0                 9355 	movx	@dptr,a
   22A9                    9356 00153$:
                           9357 ;	..\COMMON\easyax5043.c:1757: AX5043_FRAMING = 0;
   22A9 90 40 12           9358 	mov	dptr,#_AX5043_FRAMING
   22AC E4                 9359 	clr	a
   22AD F0                 9360 	movx	@dptr,a
                           9361 ;	..\COMMON\easyax5043.c:1758: AX5043_PKTCHUNKSIZE = 8; // 64 byte
   22AE 90 42 30           9362 	mov	dptr,#_AX5043_PKTCHUNKSIZE
   22B1 74 08              9363 	mov	a,#0x08
   22B3 F0                 9364 	movx	@dptr,a
                           9365 ;	..\COMMON\easyax5043.c:1759: AX5043_RXPARAMSETS = 0x00;
   22B4 90 41 17           9366 	mov	dptr,#_AX5043_RXPARAMSETS
   22B7 E4                 9367 	clr	a
   22B8 F0                 9368 	movx	@dptr,a
                           9369 ;	..\COMMON\easyax5043.c:1760: axradio_mode = mode;
   22B9 8F*00              9370 	mov	_axradio_mode,r7
                           9371 ;	..\COMMON\easyax5043.c:1761: ax5043_receiver_on_continuous();
   22BB 12s0ArF1           9372 	lcall	_ax5043_receiver_on_continuous
                           9373 ;	..\COMMON\easyax5043.c:1762: goto enablecs;
   22BE 02s21rD8           9374 	ljmp	00132$
                           9375 ;	..\COMMON\easyax5043.c:1764: case AXRADIO_MODE_CW_TRANSMIT:
   22C1                    9376 00154$:
                           9377 ;	..\COMMON\easyax5043.c:1765: ax5043_init_registers_tx();
   22C1 12s00r96           9378 	lcall	_ax5043_init_registers_tx
                           9379 ;	..\COMMON\easyax5043.c:1766: AX5043_MODULATION = 8;   // Set an FSK mode
   22C4 90 40 10           9380 	mov	dptr,#_AX5043_MODULATION
   22C7 74 08              9381 	mov	a,#0x08
   22C9 F0                 9382 	movx	@dptr,a
                           9383 ;	..\COMMON\easyax5043.c:1767: AX5043_FSKDEV2 = 0x00;
   22CA 90 41 61           9384 	mov	dptr,#_AX5043_FSKDEV2
                           9385 ;	..\COMMON\easyax5043.c:1768: AX5043_FSKDEV1 = 0x00;
                           9386 ;	..\COMMON\easyax5043.c:1769: AX5043_FSKDEV0 = 0x00;
                           9387 ;	..\COMMON\easyax5043.c:1770: AX5043_TXRATE2 = 0x00;
   22CD E4                 9388 	clr	a
   22CE F0                 9389 	movx	@dptr,a
   22CF 90 41 62           9390 	mov	dptr,#_AX5043_FSKDEV1
   22D2 F0                 9391 	movx	@dptr,a
   22D3 90 41 63           9392 	mov	dptr,#_AX5043_FSKDEV0
   22D6 F0                 9393 	movx	@dptr,a
   22D7 90 41 65           9394 	mov	dptr,#_AX5043_TXRATE2
   22DA F0                 9395 	movx	@dptr,a
                           9396 ;	..\COMMON\easyax5043.c:1771: AX5043_TXRATE1 = 0x00;
   22DB 90 41 66           9397 	mov	dptr,#_AX5043_TXRATE1
   22DE E4                 9398 	clr	a
   22DF F0                 9399 	movx	@dptr,a
                           9400 ;	..\COMMON\easyax5043.c:1772: AX5043_TXRATE0 = 0x01;
   22E0 90 41 67           9401 	mov	dptr,#_AX5043_TXRATE0
   22E3 74 01              9402 	mov	a,#0x01
   22E5 F0                 9403 	movx	@dptr,a
                           9404 ;	..\COMMON\easyax5043.c:1773: AX5043_PINFUNCDATA = 0x04;
   22E6 90 40 23           9405 	mov	dptr,#_AX5043_PINFUNCDATA
   22E9 74 04              9406 	mov	a,#0x04
   22EB F0                 9407 	movx	@dptr,a
                           9408 ;	..\COMMON\easyax5043.c:1774: axradio_mode = AXRADIO_MODE_CW_TRANSMIT;
   22EC 75*00 03           9409 	mov	_axradio_mode,#0x03
                           9410 ;	..\COMMON\easyax5043.c:1775: AX5043_PWRMODE = AX5043_PWRSTATE_FIFO_ON;
   22EF 90 40 02           9411 	mov	dptr,#_AX5043_PWRMODE
   22F2 74 07              9412 	mov	a,#0x07
   22F4 F0                 9413 	movx	@dptr,a
                           9414 ;	..\COMMON\easyax5043.c:1776: axradio_trxstate = trxstate_txcw_xtalwait;
   22F5 75*01 0E           9415 	mov	_axradio_trxstate,#0x0E
                           9416 ;	..\COMMON\easyax5043.c:1777: AX5043_IRQMASK0 = 0x00;
   22F8 90 40 07           9417 	mov	dptr,#_AX5043_IRQMASK0
   22FB E4                 9418 	clr	a
   22FC F0                 9419 	movx	@dptr,a
                           9420 ;	..\COMMON\easyax5043.c:1778: AX5043_IRQMASK1 = 0x01; // enable xtal ready interrupt
   22FD 90 40 06           9421 	mov	dptr,#_AX5043_IRQMASK1
   2300 74 01              9422 	mov	a,#0x01
   2302 F0                 9423 	movx	@dptr,a
                           9424 ;	..\COMMON\easyax5043.c:1779: return AXRADIO_ERR_NOERROR;
   2303 75 82 00           9425 	mov	dpl,#0x00
   2306 22                 9426 	ret
                           9427 ;	..\COMMON\easyax5043.c:1781: case AXRADIO_MODE_SYNC_MASTER:
   2307                    9428 00155$:
                           9429 ;	..\COMMON\easyax5043.c:1782: case AXRADIO_MODE_SYNC_ACK_MASTER:
   2307                    9430 00156$:
                           9431 ;	..\COMMON\easyax5043.c:1783: axradio_mode = mode;
   2307 8F*00              9432 	mov	_axradio_mode,r7
                           9433 ;	..\COMMON\easyax5043.c:1784: axradio_syncstate = syncstate_master_normal;
   2309 90s00r00           9434 	mov	dptr,#_axradio_syncstate
   230C 74 03              9435 	mov	a,#0x03
   230E F0                 9436 	movx	@dptr,a
                           9437 ;	..\COMMON\easyax5043.c:1786: wtimer_remove(&axradio_timer);
   230F 90s02r85           9438 	mov	dptr,#_axradio_timer
   2312 12s00r00           9439 	lcall	_wtimer_remove
                           9440 ;	..\COMMON\easyax5043.c:1787: axradio_timer.time = 2;
   2315 90s02r89           9441 	mov	dptr,#(_axradio_timer + 0x0004)
   2318 74 02              9442 	mov	a,#0x02
   231A F0                 9443 	movx	@dptr,a
   231B A3                 9444 	inc	dptr
   231C E4                 9445 	clr	a
   231D F0                 9446 	movx	@dptr,a
   231E A3                 9447 	inc	dptr
   231F F0                 9448 	movx	@dptr,a
   2320 A3                 9449 	inc	dptr
   2321 F0                 9450 	movx	@dptr,a
                           9451 ;	..\COMMON\easyax5043.c:1788: wtimer0_addrelative(&axradio_timer);
   2322 90s02r85           9452 	mov	dptr,#_axradio_timer
   2325 12s00r00           9453 	lcall	_wtimer0_addrelative
                           9454 ;	..\COMMON\easyax5043.c:1789: axradio_sync_time = axradio_timer.time;
   2328 90s02r89           9455 	mov	dptr,#(_axradio_timer + 0x0004)
   232B E0                 9456 	movx	a,@dptr
   232C FB                 9457 	mov	r3,a
   232D A3                 9458 	inc	dptr
   232E E0                 9459 	movx	a,@dptr
   232F FC                 9460 	mov	r4,a
   2330 A3                 9461 	inc	dptr
   2331 E0                 9462 	movx	a,@dptr
   2332 FD                 9463 	mov	r5,a
   2333 A3                 9464 	inc	dptr
   2334 E0                 9465 	movx	a,@dptr
   2335 FE                 9466 	mov	r6,a
   2336 90s00r0C           9467 	mov	dptr,#_axradio_sync_time
   2339 EB                 9468 	mov	a,r3
   233A F0                 9469 	movx	@dptr,a
   233B A3                 9470 	inc	dptr
   233C EC                 9471 	mov	a,r4
   233D F0                 9472 	movx	@dptr,a
   233E A3                 9473 	inc	dptr
   233F ED                 9474 	mov	a,r5
   2340 F0                 9475 	movx	@dptr,a
   2341 A3                 9476 	inc	dptr
   2342 EE                 9477 	mov	a,r6
   2343 F0                 9478 	movx	@dptr,a
                           9479 ;	..\COMMON\easyax5043.c:1790: axradio_sync_addtime(axradio_sync_xoscstartup);
   2344 90s00r00           9480 	mov	dptr,#_axradio_sync_xoscstartup
   2347 E4                 9481 	clr	a
   2348 93                 9482 	movc	a,@a+dptr
   2349 FB                 9483 	mov	r3,a
   234A 74 01              9484 	mov	a,#0x01
   234C 93                 9485 	movc	a,@a+dptr
   234D FC                 9486 	mov	r4,a
   234E 74 02              9487 	mov	a,#0x02
   2350 93                 9488 	movc	a,@a+dptr
   2351 FD                 9489 	mov	r5,a
   2352 74 03              9490 	mov	a,#0x03
   2354 93                 9491 	movc	a,@a+dptr
   2355 8B 82              9492 	mov	dpl,r3
   2357 8C 83              9493 	mov	dph,r4
   2359 8D F0              9494 	mov	b,r5
   235B 12s0DrD0           9495 	lcall	_axradio_sync_addtime
                           9496 ;	..\COMMON\easyax5043.c:1791: return AXRADIO_ERR_NOERROR;
   235E 75 82 00           9497 	mov	dpl,#0x00
   2361 22                 9498 	ret
                           9499 ;	..\COMMON\easyax5043.c:1793: case AXRADIO_MODE_SYNC_SLAVE:
   2362                    9500 00157$:
                           9501 ;	..\COMMON\easyax5043.c:1794: case AXRADIO_MODE_SYNC_ACK_SLAVE:
   2362                    9502 00158$:
                           9503 ;	..\COMMON\easyax5043.c:1795: axradio_mode = mode;
   2362 8F*00              9504 	mov	_axradio_mode,r7
                           9505 ;	..\COMMON\easyax5043.c:1796: ax5043_init_registers_rx();
   2364 12s00rCB           9506 	lcall	_ax5043_init_registers_rx
                           9507 ;	..\COMMON\easyax5043.c:1797: ax5043_receiver_on_continuous();
   2367 12s0ArF1           9508 	lcall	_ax5043_receiver_on_continuous
                           9509 ;	..\COMMON\easyax5043.c:1798: axradio_syncstate = syncstate_slave_synchunt;
   236A 90s00r00           9510 	mov	dptr,#_axradio_syncstate
   236D 74 06              9511 	mov	a,#0x06
   236F F0                 9512 	movx	@dptr,a
                           9513 ;	..\COMMON\easyax5043.c:1799: wtimer_remove(&axradio_timer);
   2370 90s02r85           9514 	mov	dptr,#_axradio_timer
   2373 12s00r00           9515 	lcall	_wtimer_remove
                           9516 ;	..\COMMON\easyax5043.c:1800: axradio_timer.time = axradio_sync_slave_initialsyncwindow;
   2376 90s00r00           9517 	mov	dptr,#_axradio_sync_slave_initialsyncwindow
   2379 E4                 9518 	clr	a
   237A 93                 9519 	movc	a,@a+dptr
   237B FC                 9520 	mov	r4,a
   237C 74 01              9521 	mov	a,#0x01
   237E 93                 9522 	movc	a,@a+dptr
   237F FD                 9523 	mov	r5,a
   2380 74 02              9524 	mov	a,#0x02
   2382 93                 9525 	movc	a,@a+dptr
   2383 FE                 9526 	mov	r6,a
   2384 74 03              9527 	mov	a,#0x03
   2386 93                 9528 	movc	a,@a+dptr
   2387 FF                 9529 	mov	r7,a
   2388 90s02r89           9530 	mov	dptr,#(_axradio_timer + 0x0004)
   238B EC                 9531 	mov	a,r4
   238C F0                 9532 	movx	@dptr,a
   238D A3                 9533 	inc	dptr
   238E ED                 9534 	mov	a,r5
   238F F0                 9535 	movx	@dptr,a
   2390 A3                 9536 	inc	dptr
   2391 EE                 9537 	mov	a,r6
   2392 F0                 9538 	movx	@dptr,a
   2393 A3                 9539 	inc	dptr
   2394 EF                 9540 	mov	a,r7
   2395 F0                 9541 	movx	@dptr,a
                           9542 ;	..\COMMON\easyax5043.c:1801: wtimer0_addrelative(&axradio_timer);
   2396 90s02r85           9543 	mov	dptr,#_axradio_timer
   2399 12s00r00           9544 	lcall	_wtimer0_addrelative
                           9545 ;	..\COMMON\easyax5043.c:1802: axradio_sync_time = axradio_timer.time;
   239C 90s02r89           9546 	mov	dptr,#(_axradio_timer + 0x0004)
   239F E0                 9547 	movx	a,@dptr
   23A0 FC                 9548 	mov	r4,a
   23A1 A3                 9549 	inc	dptr
   23A2 E0                 9550 	movx	a,@dptr
   23A3 FD                 9551 	mov	r5,a
   23A4 A3                 9552 	inc	dptr
   23A5 E0                 9553 	movx	a,@dptr
   23A6 FE                 9554 	mov	r6,a
   23A7 A3                 9555 	inc	dptr
   23A8 E0                 9556 	movx	a,@dptr
   23A9 FF                 9557 	mov	r7,a
   23AA 90s00r0C           9558 	mov	dptr,#_axradio_sync_time
   23AD EC                 9559 	mov	a,r4
   23AE F0                 9560 	movx	@dptr,a
   23AF A3                 9561 	inc	dptr
   23B0 ED                 9562 	mov	a,r5
   23B1 F0                 9563 	movx	@dptr,a
   23B2 A3                 9564 	inc	dptr
   23B3 EE                 9565 	mov	a,r6
   23B4 F0                 9566 	movx	@dptr,a
   23B5 A3                 9567 	inc	dptr
   23B6 EF                 9568 	mov	a,r7
   23B7 F0                 9569 	movx	@dptr,a
                           9570 ;	..\COMMON\easyax5043.c:1803: wtimer_remove_callback(&axradio_cb_receive.cb);
   23B8 90s02r2E           9571 	mov	dptr,#_axradio_cb_receive
   23BB 12s00r00           9572 	lcall	_wtimer_remove_callback
                           9573 ;	..\COMMON\easyax5043.c:1804: memset_xdata(&axradio_cb_receive.st, 0, sizeof(axradio_cb_receive.st));
   23BE 75*00 00           9574 	mov	_memset_PARM_2,#0x00
   23C1 75*00 1E           9575 	mov	_memset_PARM_3,#0x1E
   23C4 75*01 00           9576 	mov	(_memset_PARM_3 + 1),#0x00
   23C7 90s02r32           9577 	mov	dptr,#(_axradio_cb_receive + 0x0004)
   23CA 75 F0 00           9578 	mov	b,#0x00
   23CD 12s00r00           9579 	lcall	_memset
                           9580 ;	..\COMMON\easyax5043.c:1805: axradio_cb_receive.st.time.t = axradio_timeanchor.radiotimer;
   23D0 90s00r16           9581 	mov	dptr,#(_axradio_timeanchor + 0x0004)
   23D3 E0                 9582 	movx	a,@dptr
   23D4 FC                 9583 	mov	r4,a
   23D5 A3                 9584 	inc	dptr
   23D6 E0                 9585 	movx	a,@dptr
   23D7 FD                 9586 	mov	r5,a
   23D8 A3                 9587 	inc	dptr
   23D9 E0                 9588 	movx	a,@dptr
   23DA FE                 9589 	mov	r6,a
   23DB A3                 9590 	inc	dptr
   23DC E0                 9591 	movx	a,@dptr
   23DD FF                 9592 	mov	r7,a
   23DE 90s02r34           9593 	mov	dptr,#(_axradio_cb_receive + 0x0006)
   23E1 EC                 9594 	mov	a,r4
   23E2 F0                 9595 	movx	@dptr,a
   23E3 A3                 9596 	inc	dptr
   23E4 ED                 9597 	mov	a,r5
   23E5 F0                 9598 	movx	@dptr,a
   23E6 A3                 9599 	inc	dptr
   23E7 EE                 9600 	mov	a,r6
   23E8 F0                 9601 	movx	@dptr,a
   23E9 A3                 9602 	inc	dptr
   23EA EF                 9603 	mov	a,r7
   23EB F0                 9604 	movx	@dptr,a
                           9605 ;	..\COMMON\easyax5043.c:1806: axradio_cb_receive.st.error = AXRADIO_ERR_RESYNC;
   23EC 90s02r33           9606 	mov	dptr,#(_axradio_cb_receive + 0x0005)
   23EF 74 09              9607 	mov	a,#0x09
   23F1 F0                 9608 	movx	@dptr,a
                           9609 ;	..\COMMON\easyax5043.c:1807: wtimer_add_callback(&axradio_cb_receive.cb);
   23F2 90s02r2E           9610 	mov	dptr,#_axradio_cb_receive
   23F5 12s00r00           9611 	lcall	_wtimer_add_callback
                           9612 ;	..\COMMON\easyax5043.c:1808: return AXRADIO_ERR_NOERROR;
   23F8 75 82 00           9613 	mov	dpl,#0x00
                           9614 ;	..\COMMON\easyax5043.c:1810: default:
   23FB 22                 9615 	ret
   23FC                    9616 00159$:
                           9617 ;	..\COMMON\easyax5043.c:1811: return AXRADIO_ERR_NOTSUPPORTED;
   23FC 75 82 01           9618 	mov	dpl,#0x01
                           9619 ;	..\COMMON\easyax5043.c:1812: }
   23FF 22                 9620 	ret
                           9621 ;------------------------------------------------------------
                           9622 ;Allocation info for local variables in function 'axradio_get_mode'
                           9623 ;------------------------------------------------------------
                           9624 ;	..\COMMON\easyax5043.c:1815: uint8_t axradio_get_mode(void)
                           9625 ;	-----------------------------------------
                           9626 ;	 function axradio_get_mode
                           9627 ;	-----------------------------------------
   2400                    9628 _axradio_get_mode:
                           9629 ;	..\COMMON\easyax5043.c:1817: return axradio_mode;
   2400 85*00 82           9630 	mov	dpl,_axradio_mode
   2403 22                 9631 	ret
                           9632 ;------------------------------------------------------------
                           9633 ;Allocation info for local variables in function 'axradio_set_channel'
                           9634 ;------------------------------------------------------------
                           9635 ;chnum                     Allocated to registers r7 
                           9636 ;rng                       Allocated with name '_axradio_set_channel_rng_1_370'
                           9637 ;f                         Allocated to registers r3 r4 r5 r7 
                           9638 ;------------------------------------------------------------
                           9639 ;	..\COMMON\easyax5043.c:1820: uint8_t axradio_set_channel(uint8_t chnum)
                           9640 ;	-----------------------------------------
                           9641 ;	 function axradio_set_channel
                           9642 ;	-----------------------------------------
   2404                    9643 _axradio_set_channel:
   2404 AF 82              9644 	mov	r7,dpl
                           9645 ;	..\COMMON\easyax5043.c:1823: if (chnum >= axradio_phy_nrchannels)
   2406 90s00r00           9646 	mov	dptr,#_axradio_phy_nrchannels
   2409 E4                 9647 	clr	a
   240A 93                 9648 	movc	a,@a+dptr
   240B FE                 9649 	mov	r6,a
   240C C3                 9650 	clr	c
   240D EF                 9651 	mov	a,r7
   240E 9E                 9652 	subb	a,r6
   240F 40 04              9653 	jc	00102$
                           9654 ;	..\COMMON\easyax5043.c:1824: return AXRADIO_ERR_INVALID;
   2411 75 82 04           9655 	mov	dpl,#0x04
   2414 22                 9656 	ret
   2415                    9657 00102$:
                           9658 ;	..\COMMON\easyax5043.c:1825: axradio_curchannel = chnum;
   2415 90s00r05           9659 	mov	dptr,#_axradio_curchannel
   2418 EF                 9660 	mov	a,r7
   2419 F0                 9661 	movx	@dptr,a
                           9662 ;	..\COMMON\easyax5043.c:1826: rng = axradio_phy_chanpllrng_rx[chnum];
   241A EF                 9663 	mov	a,r7
   241B 24r00              9664 	add	a,#_axradio_phy_chanpllrng_rx
   241D F5 82              9665 	mov	dpl,a
   241F E4                 9666 	clr	a
   2420 34s00              9667 	addc	a,#(_axradio_phy_chanpllrng_rx >> 8)
   2422 F5 83              9668 	mov	dph,a
   2424 E0                 9669 	movx	a,@dptr
                           9670 ;	..\COMMON\easyax5043.c:1827: if (rng & 0x20)
   2425 F5*00              9671 	mov	_axradio_set_channel_rng_1_370,a
   2427 30 E5 04           9672 	jnb	acc.5,00104$
                           9673 ;	..\COMMON\easyax5043.c:1828: return AXRADIO_ERR_RANGING;
   242A 75 82 06           9674 	mov	dpl,#0x06
   242D 22                 9675 	ret
   242E                    9676 00104$:
                           9677 ;	..\COMMON\easyax5043.c:1830: uint32_t __autodata f = axradio_phy_chanfreq[chnum];
   242E EF                 9678 	mov	a,r7
   242F 75 F0 04           9679 	mov	b,#0x04
   2432 A4                 9680 	mul	ab
   2433 24r00              9681 	add	a,#_axradio_phy_chanfreq
   2435 F5 82              9682 	mov	dpl,a
   2437 74s00              9683 	mov	a,#(_axradio_phy_chanfreq >> 8)
   2439 35 F0              9684 	addc	a,b
   243B F5 83              9685 	mov	dph,a
   243D E4                 9686 	clr	a
   243E 93                 9687 	movc	a,@a+dptr
   243F FB                 9688 	mov	r3,a
   2440 A3                 9689 	inc	dptr
   2441 E4                 9690 	clr	a
   2442 93                 9691 	movc	a,@a+dptr
   2443 FC                 9692 	mov	r4,a
   2444 A3                 9693 	inc	dptr
   2445 E4                 9694 	clr	a
   2446 93                 9695 	movc	a,@a+dptr
   2447 FD                 9696 	mov	r5,a
   2448 A3                 9697 	inc	dptr
   2449 E4                 9698 	clr	a
   244A 93                 9699 	movc	a,@a+dptr
   244B FF                 9700 	mov	r7,a
                           9701 ;	..\COMMON\easyax5043.c:1831: f += axradio_curfreqoffset;
   244C 90s00r06           9702 	mov	dptr,#_axradio_curfreqoffset
   244F E0                 9703 	movx	a,@dptr
   2450 F8                 9704 	mov	r0,a
   2451 A3                 9705 	inc	dptr
   2452 E0                 9706 	movx	a,@dptr
   2453 F9                 9707 	mov	r1,a
   2454 A3                 9708 	inc	dptr
   2455 E0                 9709 	movx	a,@dptr
   2456 FA                 9710 	mov	r2,a
   2457 A3                 9711 	inc	dptr
   2458 E0                 9712 	movx	a,@dptr
   2459 FE                 9713 	mov	r6,a
   245A E8                 9714 	mov	a,r0
   245B 2B                 9715 	add	a,r3
   245C FB                 9716 	mov	r3,a
   245D E9                 9717 	mov	a,r1
   245E 3C                 9718 	addc	a,r4
   245F FC                 9719 	mov	r4,a
   2460 EA                 9720 	mov	a,r2
   2461 3D                 9721 	addc	a,r5
   2462 FD                 9722 	mov	r5,a
   2463 EE                 9723 	mov	a,r6
   2464 3F                 9724 	addc	a,r7
   2465 FF                 9725 	mov	r7,a
                           9726 ;	..\COMMON\easyax5043.c:1832: if (AX5043_PLLLOOP & 0x80) {
   2466 90 40 30           9727 	mov	dptr,#_AX5043_PLLLOOP
   2469 E0                 9728 	movx	a,@dptr
   246A FE                 9729 	mov	r6,a
   246B 30 E7 1E           9730 	jnb	acc.7,00106$
                           9731 ;	..\COMMON\easyax5043.c:1833: AX5043_PLLRANGINGA = rng & 0x0F;
   246E 90 40 33           9732 	mov	dptr,#_AX5043_PLLRANGINGA
   2471 74 0F              9733 	mov	a,#0x0F
   2473 55*00              9734 	anl	a,_axradio_set_channel_rng_1_370
   2475 F0                 9735 	movx	@dptr,a
                           9736 ;	..\COMMON\easyax5043.c:1834: AX5043_FREQA0 = f;
   2476 90 40 37           9737 	mov	dptr,#_AX5043_FREQA0
   2479 EB                 9738 	mov	a,r3
   247A F0                 9739 	movx	@dptr,a
                           9740 ;	..\COMMON\easyax5043.c:1835: AX5043_FREQA1 = f >> 8;
   247B 90 40 36           9741 	mov	dptr,#_AX5043_FREQA1
   247E EC                 9742 	mov	a,r4
   247F F0                 9743 	movx	@dptr,a
                           9744 ;	..\COMMON\easyax5043.c:1836: AX5043_FREQA2 = f >> 16;
   2480 90 40 35           9745 	mov	dptr,#_AX5043_FREQA2
   2483 ED                 9746 	mov	a,r5
   2484 F0                 9747 	movx	@dptr,a
                           9748 ;	..\COMMON\easyax5043.c:1837: AX5043_FREQA3 = f >> 24;
   2485 90 40 34           9749 	mov	dptr,#_AX5043_FREQA3
   2488 EF                 9750 	mov	a,r7
   2489 F0                 9751 	movx	@dptr,a
   248A 80 1C              9752 	sjmp	00107$
   248C                    9753 00106$:
                           9754 ;	..\COMMON\easyax5043.c:1839: AX5043_PLLRANGINGB = rng & 0x0F;
   248C 90 40 3B           9755 	mov	dptr,#_AX5043_PLLRANGINGB
   248F 74 0F              9756 	mov	a,#0x0F
   2491 55*00              9757 	anl	a,_axradio_set_channel_rng_1_370
   2493 F0                 9758 	movx	@dptr,a
                           9759 ;	..\COMMON\easyax5043.c:1840: AX5043_FREQB0 = f;
   2494 90 40 3F           9760 	mov	dptr,#_AX5043_FREQB0
   2497 EB                 9761 	mov	a,r3
   2498 F0                 9762 	movx	@dptr,a
                           9763 ;	..\COMMON\easyax5043.c:1841: AX5043_FREQB1 = f >> 8;
   2499 90 40 3E           9764 	mov	dptr,#_AX5043_FREQB1
   249C EC                 9765 	mov	a,r4
   249D F0                 9766 	movx	@dptr,a
                           9767 ;	..\COMMON\easyax5043.c:1842: AX5043_FREQB2 = f >> 16;
   249E 90 40 3D           9768 	mov	dptr,#_AX5043_FREQB2
   24A1 ED                 9769 	mov	a,r5
   24A2 F0                 9770 	movx	@dptr,a
                           9771 ;	..\COMMON\easyax5043.c:1843: AX5043_FREQB3 = f >> 24;
   24A3 90 40 3C           9772 	mov	dptr,#_AX5043_FREQB3
   24A6 EF                 9773 	mov	a,r7
   24A7 F0                 9774 	movx	@dptr,a
   24A8                    9775 00107$:
                           9776 ;	..\COMMON\easyax5043.c:1846: AX5043_PLLLOOP ^= 0x80;
   24A8 90 40 30           9777 	mov	dptr,#_AX5043_PLLLOOP
   24AB E0                 9778 	movx	a,@dptr
   24AC 64 80              9779 	xrl	a,#0x80
   24AE F0                 9780 	movx	@dptr,a
                           9781 ;	..\COMMON\easyax5043.c:1847: return AXRADIO_ERR_NOERROR;
   24AF 75 82 00           9782 	mov	dpl,#0x00
   24B2 22                 9783 	ret
                           9784 ;------------------------------------------------------------
                           9785 ;Allocation info for local variables in function 'axradio_get_channel'
                           9786 ;------------------------------------------------------------
                           9787 ;	..\COMMON\easyax5043.c:1850: uint8_t axradio_get_channel(void)
                           9788 ;	-----------------------------------------
                           9789 ;	 function axradio_get_channel
                           9790 ;	-----------------------------------------
   24B3                    9791 _axradio_get_channel:
                           9792 ;	..\COMMON\easyax5043.c:1852: return axradio_curchannel;
   24B3 90s00r05           9793 	mov	dptr,#_axradio_curchannel
   24B6 E0                 9794 	movx	a,@dptr
   24B7 F5 82              9795 	mov	dpl,a
   24B9 22                 9796 	ret
                           9797 ;------------------------------------------------------------
                           9798 ;Allocation info for local variables in function 'axradio_get_pllrange'
                           9799 ;------------------------------------------------------------
                           9800 ;	..\COMMON\easyax5043.c:1855: uint8_t axradio_get_pllrange(void)
                           9801 ;	-----------------------------------------
                           9802 ;	 function axradio_get_pllrange
                           9803 ;	-----------------------------------------
   24BA                    9804 _axradio_get_pllrange:
                           9805 ;	..\COMMON\easyax5043.c:1857: return axradio_phy_chanpllrng_rx[axradio_curchannel] & 0x0F;
   24BA 90s00r05           9806 	mov	dptr,#_axradio_curchannel
   24BD E0                 9807 	movx	a,@dptr
   24BE 24r00              9808 	add	a,#_axradio_phy_chanpllrng_rx
   24C0 F5 82              9809 	mov	dpl,a
   24C2 E4                 9810 	clr	a
   24C3 34s00              9811 	addc	a,#(_axradio_phy_chanpllrng_rx >> 8)
   24C5 F5 83              9812 	mov	dph,a
   24C7 E0                 9813 	movx	a,@dptr
   24C8 FF                 9814 	mov	r7,a
   24C9 74 0F              9815 	mov	a,#0x0F
   24CB 5F                 9816 	anl	a,r7
   24CC F5 82              9817 	mov	dpl,a
   24CE 22                 9818 	ret
                           9819 ;------------------------------------------------------------
                           9820 ;Allocation info for local variables in function 'axradio_get_pllrange_tx'
                           9821 ;------------------------------------------------------------
                           9822 ;	..\COMMON\easyax5043.c:1860: uint8_t axradio_get_pllrange_tx(void)
                           9823 ;	-----------------------------------------
                           9824 ;	 function axradio_get_pllrange_tx
                           9825 ;	-----------------------------------------
   24CF                    9826 _axradio_get_pllrange_tx:
                           9827 ;	..\COMMON\easyax5043.c:1862: return axradio_phy_chanpllrng_tx[axradio_curchannel] & 0x0F;
   24CF 90s00r05           9828 	mov	dptr,#_axradio_curchannel
   24D2 E0                 9829 	movx	a,@dptr
   24D3 24r00              9830 	add	a,#_axradio_phy_chanpllrng_tx
   24D5 F5 82              9831 	mov	dpl,a
   24D7 E4                 9832 	clr	a
   24D8 34s00              9833 	addc	a,#(_axradio_phy_chanpllrng_tx >> 8)
   24DA F5 83              9834 	mov	dph,a
   24DC E0                 9835 	movx	a,@dptr
   24DD FF                 9836 	mov	r7,a
   24DE 74 0F              9837 	mov	a,#0x0F
   24E0 5F                 9838 	anl	a,r7
   24E1 F5 82              9839 	mov	dpl,a
   24E3 22                 9840 	ret
                           9841 ;------------------------------------------------------------
                           9842 ;Allocation info for local variables in function 'axradio_set_curfreqoffset'
                           9843 ;------------------------------------------------------------
                           9844 ;offs                      Allocated to registers r4 r5 r6 r7 
                           9845 ;------------------------------------------------------------
                           9846 ;	..\COMMON\easyax5043.c:1865: static uint8_t axradio_set_curfreqoffset(int32_t offs)
                           9847 ;	-----------------------------------------
                           9848 ;	 function axradio_set_curfreqoffset
                           9849 ;	-----------------------------------------
   24E4                    9850 _axradio_set_curfreqoffset:
   24E4 AC 82              9851 	mov	r4,dpl
   24E6 AD 83              9852 	mov	r5,dph
   24E8 AE F0              9853 	mov	r6,b
   24EA FF                 9854 	mov	r7,a
                           9855 ;	..\COMMON\easyax5043.c:1867: axradio_curfreqoffset = offs;
   24EB 90s00r06           9856 	mov	dptr,#_axradio_curfreqoffset
   24EE EC                 9857 	mov	a,r4
   24EF F0                 9858 	movx	@dptr,a
   24F0 A3                 9859 	inc	dptr
   24F1 ED                 9860 	mov	a,r5
   24F2 F0                 9861 	movx	@dptr,a
   24F3 A3                 9862 	inc	dptr
   24F4 EE                 9863 	mov	a,r6
   24F5 F0                 9864 	movx	@dptr,a
   24F6 A3                 9865 	inc	dptr
   24F7 EF                 9866 	mov	a,r7
   24F8 F0                 9867 	movx	@dptr,a
                           9868 ;	..\COMMON\easyax5043.c:1868: if (checksignedlimit32(offs, axradio_phy_maxfreqoffset))
   24F9 90s00r00           9869 	mov	dptr,#_axradio_phy_maxfreqoffset
   24FC E4                 9870 	clr	a
   24FD 93                 9871 	movc	a,@a+dptr
   24FE C0 E0              9872 	push	acc
   2500 74 01              9873 	mov	a,#0x01
   2502 93                 9874 	movc	a,@a+dptr
   2503 C0 E0              9875 	push	acc
   2505 74 02              9876 	mov	a,#0x02
   2507 93                 9877 	movc	a,@a+dptr
   2508 C0 E0              9878 	push	acc
   250A 74 03              9879 	mov	a,#0x03
   250C 93                 9880 	movc	a,@a+dptr
   250D C0 E0              9881 	push	acc
   250F 8C 82              9882 	mov	dpl,r4
   2511 8D 83              9883 	mov	dph,r5
   2513 8E F0              9884 	mov	b,r6
   2515 EF                 9885 	mov	a,r7
   2516 12s00r00           9886 	lcall	_checksignedlimit32
   2519 AF 82              9887 	mov	r7,dpl
   251B E5 81              9888 	mov	a,sp
   251D 24 FC              9889 	add	a,#0xfc
   251F F5 81              9890 	mov	sp,a
   2521 EF                 9891 	mov	a,r7
   2522 60 04              9892 	jz	00102$
                           9893 ;	..\COMMON\easyax5043.c:1869: return AXRADIO_ERR_NOERROR;
   2524 75 82 00           9894 	mov	dpl,#0x00
   2527 22                 9895 	ret
   2528                    9896 00102$:
                           9897 ;	..\COMMON\easyax5043.c:1870: if (axradio_curfreqoffset < 0)
   2528 90s00r06           9898 	mov	dptr,#_axradio_curfreqoffset
   252B E0                 9899 	movx	a,@dptr
   252C FC                 9900 	mov	r4,a
   252D A3                 9901 	inc	dptr
   252E E0                 9902 	movx	a,@dptr
   252F FD                 9903 	mov	r5,a
   2530 A3                 9904 	inc	dptr
   2531 E0                 9905 	movx	a,@dptr
   2532 FE                 9906 	mov	r6,a
   2533 A3                 9907 	inc	dptr
   2534 E0                 9908 	movx	a,@dptr
   2535 FF                 9909 	mov	r7,a
   2536 30 E7 27           9910 	jnb	acc.7,00104$
                           9911 ;	..\COMMON\easyax5043.c:1871: axradio_curfreqoffset = -axradio_phy_maxfreqoffset;
   2539 90s00r00           9912 	mov	dptr,#_axradio_phy_maxfreqoffset
   253C E4                 9913 	clr	a
   253D 93                 9914 	movc	a,@a+dptr
   253E FC                 9915 	mov	r4,a
   253F 74 01              9916 	mov	a,#0x01
   2541 93                 9917 	movc	a,@a+dptr
   2542 FD                 9918 	mov	r5,a
   2543 74 02              9919 	mov	a,#0x02
   2545 93                 9920 	movc	a,@a+dptr
   2546 FE                 9921 	mov	r6,a
   2547 74 03              9922 	mov	a,#0x03
   2549 93                 9923 	movc	a,@a+dptr
   254A FF                 9924 	mov	r7,a
   254B 90s00r06           9925 	mov	dptr,#_axradio_curfreqoffset
   254E C3                 9926 	clr	c
   254F E4                 9927 	clr	a
   2550 9C                 9928 	subb	a,r4
   2551 F0                 9929 	movx	@dptr,a
   2552 E4                 9930 	clr	a
   2553 9D                 9931 	subb	a,r5
   2554 A3                 9932 	inc	dptr
   2555 F0                 9933 	movx	@dptr,a
   2556 E4                 9934 	clr	a
   2557 9E                 9935 	subb	a,r6
   2558 A3                 9936 	inc	dptr
   2559 F0                 9937 	movx	@dptr,a
   255A E4                 9938 	clr	a
   255B 9F                 9939 	subb	a,r7
   255C A3                 9940 	inc	dptr
   255D F0                 9941 	movx	@dptr,a
   255E 80 20              9942 	sjmp	00105$
   2560                    9943 00104$:
                           9944 ;	..\COMMON\easyax5043.c:1873: axradio_curfreqoffset = axradio_phy_maxfreqoffset;
   2560 90s00r00           9945 	mov	dptr,#_axradio_phy_maxfreqoffset
   2563 E4                 9946 	clr	a
   2564 93                 9947 	movc	a,@a+dptr
   2565 FC                 9948 	mov	r4,a
   2566 74 01              9949 	mov	a,#0x01
   2568 93                 9950 	movc	a,@a+dptr
   2569 FD                 9951 	mov	r5,a
   256A 74 02              9952 	mov	a,#0x02
   256C 93                 9953 	movc	a,@a+dptr
   256D FE                 9954 	mov	r6,a
   256E 74 03              9955 	mov	a,#0x03
   2570 93                 9956 	movc	a,@a+dptr
   2571 FF                 9957 	mov	r7,a
   2572 90s00r06           9958 	mov	dptr,#_axradio_curfreqoffset
   2575 EC                 9959 	mov	a,r4
   2576 F0                 9960 	movx	@dptr,a
   2577 A3                 9961 	inc	dptr
   2578 ED                 9962 	mov	a,r5
   2579 F0                 9963 	movx	@dptr,a
   257A A3                 9964 	inc	dptr
   257B EE                 9965 	mov	a,r6
   257C F0                 9966 	movx	@dptr,a
   257D A3                 9967 	inc	dptr
   257E EF                 9968 	mov	a,r7
   257F F0                 9969 	movx	@dptr,a
   2580                    9970 00105$:
                           9971 ;	..\COMMON\easyax5043.c:1874: return AXRADIO_ERR_INVALID;
   2580 75 82 04           9972 	mov	dpl,#0x04
   2583 22                 9973 	ret
                           9974 ;------------------------------------------------------------
                           9975 ;Allocation info for local variables in function 'axradio_set_freqoffset'
                           9976 ;------------------------------------------------------------
                           9977 ;offs                      Allocated to registers r4 r5 r6 r7 
                           9978 ;ret                       Allocated to registers r7 
                           9979 ;ret2                      Allocated to registers r6 
                           9980 ;------------------------------------------------------------
                           9981 ;	..\COMMON\easyax5043.c:1877: uint8_t axradio_set_freqoffset(int32_t offs)
                           9982 ;	-----------------------------------------
                           9983 ;	 function axradio_set_freqoffset
                           9984 ;	-----------------------------------------
   2584                    9985 _axradio_set_freqoffset:
                           9986 ;	..\COMMON\easyax5043.c:1879: uint8_t __autodata ret = axradio_set_curfreqoffset(offs);
   2584 12s24rE4           9987 	lcall	_axradio_set_curfreqoffset
   2587 AF 82              9988 	mov	r7,dpl
                           9989 ;	..\COMMON\easyax5043.c:1881: uint8_t __autodata ret2 = axradio_set_channel(axradio_curchannel);
   2589 90s00r05           9990 	mov	dptr,#_axradio_curchannel
   258C E0                 9991 	movx	a,@dptr
   258D F5 82              9992 	mov	dpl,a
   258F C0 07              9993 	push	ar7
   2591 12s24r04           9994 	lcall	_axradio_set_channel
   2594 AE 82              9995 	mov	r6,dpl
   2596 D0 07              9996 	pop	ar7
                           9997 ;	..\COMMON\easyax5043.c:1882: if (ret == AXRADIO_ERR_NOERROR)
   2598 EF                 9998 	mov	a,r7
   2599 70 02              9999 	jnz	00102$
                          10000 ;	..\COMMON\easyax5043.c:1883: ret = ret2;
   259B 8E 07             10001 	mov	ar7,r6
   259D                   10002 00102$:
                          10003 ;	..\COMMON\easyax5043.c:1885: return ret;
   259D 8F 82             10004 	mov	dpl,r7
   259F 22                10005 	ret
                          10006 ;------------------------------------------------------------
                          10007 ;Allocation info for local variables in function 'axradio_get_freqoffset'
                          10008 ;------------------------------------------------------------
                          10009 ;	..\COMMON\easyax5043.c:1888: int32_t axradio_get_freqoffset(void)
                          10010 ;	-----------------------------------------
                          10011 ;	 function axradio_get_freqoffset
                          10012 ;	-----------------------------------------
   25A0                   10013 _axradio_get_freqoffset:
                          10014 ;	..\COMMON\easyax5043.c:1890: return axradio_curfreqoffset;
   25A0 90s00r06          10015 	mov	dptr,#_axradio_curfreqoffset
   25A3 E0                10016 	movx	a,@dptr
   25A4 FC                10017 	mov	r4,a
   25A5 A3                10018 	inc	dptr
   25A6 E0                10019 	movx	a,@dptr
   25A7 FD                10020 	mov	r5,a
   25A8 A3                10021 	inc	dptr
   25A9 E0                10022 	movx	a,@dptr
   25AA FE                10023 	mov	r6,a
   25AB A3                10024 	inc	dptr
   25AC E0                10025 	movx	a,@dptr
   25AD 8C 82             10026 	mov	dpl,r4
   25AF 8D 83             10027 	mov	dph,r5
   25B1 8E F0             10028 	mov	b,r6
   25B3 22                10029 	ret
                          10030 ;------------------------------------------------------------
                          10031 ;Allocation info for local variables in function 'axradio_set_local_address'
                          10032 ;------------------------------------------------------------
                          10033 ;addr                      Allocated to registers r5 r6 r7 
                          10034 ;------------------------------------------------------------
                          10035 ;	..\COMMON\easyax5043.c:1893: void axradio_set_local_address(const struct axradio_address_mask *addr)
                          10036 ;	-----------------------------------------
                          10037 ;	 function axradio_set_local_address
                          10038 ;	-----------------------------------------
   25B4                   10039 _axradio_set_local_address:
   25B4 AD 82             10040 	mov	r5,dpl
   25B6 AE 83             10041 	mov	r6,dph
   25B8 AF F0             10042 	mov	r7,b
                          10043 ;	..\COMMON\easyax5043.c:1895: memcpy_xdatageneric(&axradio_localaddr, addr, sizeof(axradio_localaddr));
   25BA 8D*00             10044 	mov	_memcpy_PARM_2,r5
   25BC 8E*01             10045 	mov	(_memcpy_PARM_2 + 1),r6
   25BE 8F*02             10046 	mov	(_memcpy_PARM_2 + 2),r7
   25C0 75*00 08          10047 	mov	_memcpy_PARM_3,#0x08
   25C3 75*01 00          10048 	mov	(_memcpy_PARM_3 + 1),#0x00
   25C6 90s00r1A          10049 	mov	dptr,#_axradio_localaddr
   25C9 75 F0 00          10050 	mov	b,#0x00
   25CC 12s00r00          10051 	lcall	_memcpy
                          10052 ;	..\COMMON\easyax5043.c:1896: axradio_setaddrregs();
   25CF 02s0Cr87          10053 	ljmp	_axradio_setaddrregs
                          10054 ;------------------------------------------------------------
                          10055 ;Allocation info for local variables in function 'axradio_get_local_address'
                          10056 ;------------------------------------------------------------
                          10057 ;addr                      Allocated to registers r5 r6 r7 
                          10058 ;------------------------------------------------------------
                          10059 ;	..\COMMON\easyax5043.c:1899: void axradio_get_local_address(struct axradio_address_mask *addr)
                          10060 ;	-----------------------------------------
                          10061 ;	 function axradio_get_local_address
                          10062 ;	-----------------------------------------
   25D2                   10063 _axradio_get_local_address:
   25D2 AD 82             10064 	mov	r5,dpl
   25D4 AE 83             10065 	mov	r6,dph
   25D6 AF F0             10066 	mov	r7,b
                          10067 ;	..\COMMON\easyax5043.c:1901: memcpy_genericxdata(addr, &axradio_localaddr, sizeof(axradio_localaddr));
   25D8 75*00r1A          10068 	mov	_memcpy_PARM_2,#_axradio_localaddr
   25DB 75*01s00          10069 	mov	(_memcpy_PARM_2 + 1),#(_axradio_localaddr >> 8)
   25DE 75*02 00          10070 	mov	(_memcpy_PARM_2 + 2),#0x00
   25E1 75*00 08          10071 	mov	_memcpy_PARM_3,#0x08
   25E4 75*01 00          10072 	mov	(_memcpy_PARM_3 + 1),#0x00
   25E7 8D 82             10073 	mov	dpl,r5
   25E9 8E 83             10074 	mov	dph,r6
   25EB 8F F0             10075 	mov	b,r7
   25ED 02s00r00          10076 	ljmp	_memcpy
                          10077 ;------------------------------------------------------------
                          10078 ;Allocation info for local variables in function 'axradio_set_default_remote_address'
                          10079 ;------------------------------------------------------------
                          10080 ;addr                      Allocated to registers r5 r6 r7 
                          10081 ;------------------------------------------------------------
                          10082 ;	..\COMMON\easyax5043.c:1904: void axradio_set_default_remote_address(const struct axradio_address *addr)
                          10083 ;	-----------------------------------------
                          10084 ;	 function axradio_set_default_remote_address
                          10085 ;	-----------------------------------------
   25F0                   10086 _axradio_set_default_remote_address:
   25F0 AD 82             10087 	mov	r5,dpl
   25F2 AE 83             10088 	mov	r6,dph
   25F4 AF F0             10089 	mov	r7,b
                          10090 ;	..\COMMON\easyax5043.c:1906: memcpy_xdatageneric(&axradio_default_remoteaddr, addr, sizeof(axradio_default_remoteaddr));
   25F6 8D*00             10091 	mov	_memcpy_PARM_2,r5
   25F8 8E*01             10092 	mov	(_memcpy_PARM_2 + 1),r6
   25FA 8F*02             10093 	mov	(_memcpy_PARM_2 + 2),r7
   25FC 75*00 04          10094 	mov	_memcpy_PARM_3,#0x04
   25FF 75*01 00          10095 	mov	(_memcpy_PARM_3 + 1),#0x00
   2602 90s00r22          10096 	mov	dptr,#_axradio_default_remoteaddr
   2605 75 F0 00          10097 	mov	b,#0x00
   2608 02s00r00          10098 	ljmp	_memcpy
                          10099 ;------------------------------------------------------------
                          10100 ;Allocation info for local variables in function 'axradio_get_default_remote_address'
                          10101 ;------------------------------------------------------------
                          10102 ;addr                      Allocated to registers r5 r6 r7 
                          10103 ;------------------------------------------------------------
                          10104 ;	..\COMMON\easyax5043.c:1909: void axradio_get_default_remote_address(struct axradio_address *addr)
                          10105 ;	-----------------------------------------
                          10106 ;	 function axradio_get_default_remote_address
                          10107 ;	-----------------------------------------
   260B                   10108 _axradio_get_default_remote_address:
   260B AD 82             10109 	mov	r5,dpl
   260D AE 83             10110 	mov	r6,dph
   260F AF F0             10111 	mov	r7,b
                          10112 ;	..\COMMON\easyax5043.c:1911: memcpy_genericxdata(addr, &axradio_default_remoteaddr, sizeof(axradio_default_remoteaddr));
   2611 75*00r22          10113 	mov	_memcpy_PARM_2,#_axradio_default_remoteaddr
   2614 75*01s00          10114 	mov	(_memcpy_PARM_2 + 1),#(_axradio_default_remoteaddr >> 8)
   2617 75*02 00          10115 	mov	(_memcpy_PARM_2 + 2),#0x00
   261A 75*00 04          10116 	mov	_memcpy_PARM_3,#0x04
   261D 75*01 00          10117 	mov	(_memcpy_PARM_3 + 1),#0x00
   2620 8D 82             10118 	mov	dpl,r5
   2622 8E 83             10119 	mov	dph,r6
   2624 8F F0             10120 	mov	b,r7
   2626 02s00r00          10121 	ljmp	_memcpy
                          10122 ;------------------------------------------------------------
                          10123 ;Allocation info for local variables in function 'axradio_transmit'
                          10124 ;------------------------------------------------------------
                          10125 ;pkt                       Allocated with name '_axradio_transmit_PARM_2'
                          10126 ;pktlen                    Allocated with name '_axradio_transmit_PARM_3'
                          10127 ;addr                      Allocated to registers r5 r6 r7 
                          10128 ;fifofree                  Allocated to registers r3 r4 
                          10129 ;i                         Allocated to registers r4 
                          10130 ;iesave                    Allocated to registers r4 
                          10131 ;len_byte                  Allocated to registers r6 
                          10132 ;------------------------------------------------------------
                          10133 ;	..\COMMON\easyax5043.c:1914: uint8_t axradio_transmit(const struct axradio_address *addr, const uint8_t *pkt, uint16_t pktlen)
                          10134 ;	-----------------------------------------
                          10135 ;	 function axradio_transmit
                          10136 ;	-----------------------------------------
   2629                   10137 _axradio_transmit:
   2629 AD 82             10138 	mov	r5,dpl
   262B AE 83             10139 	mov	r6,dph
   262D AF F0             10140 	mov	r7,b
                          10141 ;	..\COMMON\easyax5043.c:1916: switch (axradio_mode) {
   262F AC*00             10142 	mov	r4,_axradio_mode
   2631 BC 10 00          10143 	cjne	r4,#0x10,00217$
   2634                   10144 00217$:
   2634 50 03             10145 	jnc	00218$
   2636 02s29r90          10146 	ljmp	00160$
   2639                   10147 00218$:
   2639 EC                10148 	mov	a,r4
   263A 24 DE             10149 	add	a,#0xff - 0x21
   263C 50 03             10150 	jnc	00219$
   263E 02s29r90          10151 	ljmp	00160$
   2641                   10152 00219$:
   2641 EC                10153 	mov	a,r4
   2642 24 F0             10154 	add	a,#0xF0
   2644 FC                10155 	mov	r4,a
   2645 24 09             10156 	add	a,#(00220$-3-.)
   2647 83                10157 	movc	a,@a+pc
   2648 C0 E0             10158 	push	acc
   264A EC                10159 	mov	a,r4
   264B 24 15             10160 	add	a,#(00221$-3-.)
   264D 83                10161 	movc	a,@a+pc
   264E C0 E0             10162 	push	acc
   2650 22                10163 	ret
   2651                   10164 00220$:
   2651r1C                10165 	.db	00120$
   2652r1C                10166 	.db	00121$
   2653r1C                10167 	.db	00122$
   2654r1C                10168 	.db	00123$
   2655r75                10169 	.db	00101$
   2656r75                10170 	.db	00102$
   2657r75                10171 	.db	00103$
   2658r90                10172 	.db	00160$
   2659rE3                10173 	.db	00113$
   265ArE3                10174 	.db	00114$
   265Br90                10175 	.db	00160$
   265Cr90                10176 	.db	00160$
   265Dr90                10177 	.db	00160$
   265Er90                10178 	.db	00160$
   265Fr90                10179 	.db	00160$
   2660r90                10180 	.db	00160$
   2661rE1                10181 	.db	00111$
   2662rE1                10182 	.db	00112$
   2663                   10183 00221$:
   2663s27                10184 	.db	00120$>>8
   2664s27                10185 	.db	00121$>>8
   2665s27                10186 	.db	00122$>>8
   2666s27                10187 	.db	00123$>>8
   2667s26                10188 	.db	00101$>>8
   2668s26                10189 	.db	00102$>>8
   2669s26                10190 	.db	00103$>>8
   266As29                10191 	.db	00160$>>8
   266Bs26                10192 	.db	00113$>>8
   266Cs26                10193 	.db	00114$>>8
   266Ds29                10194 	.db	00160$>>8
   266Es29                10195 	.db	00160$>>8
   266Fs29                10196 	.db	00160$>>8
   2670s29                10197 	.db	00160$>>8
   2671s29                10198 	.db	00160$>>8
   2672s29                10199 	.db	00160$>>8
   2673s26                10200 	.db	00111$>>8
   2674s26                10201 	.db	00112$>>8
                          10202 ;	..\COMMON\easyax5043.c:1917: case AXRADIO_MODE_STREAM_TRANSMIT:
   2675                   10203 00101$:
                          10204 ;	..\COMMON\easyax5043.c:1918: case AXRADIO_MODE_STREAM_TRANSMIT_UNENC:
   2675                   10205 00102$:
                          10206 ;	..\COMMON\easyax5043.c:1919: case AXRADIO_MODE_STREAM_TRANSMIT_SCRAM:
   2675                   10207 00103$:
                          10208 ;	..\COMMON\easyax5043.c:1921: uint16_t __autodata fifofree = radio_read16((uint16_t)&AX5043_FIFOFREE1);
   2675 90 40 2C          10209 	mov	dptr,#_AX5043_FIFOFREE1
   2678 12s00r00          10210 	lcall	_radio_read16
   267B AB 82             10211 	mov	r3,dpl
   267D AC 83             10212 	mov	r4,dph
                          10213 ;	..\COMMON\easyax5043.c:1922: if (fifofree < pktlen + 3)
   267F 74 03             10214 	mov	a,#0x03
   2681 25*05             10215 	add	a,_axradio_transmit_PARM_3
   2683 F9                10216 	mov	r1,a
   2684 E4                10217 	clr	a
   2685 35*06             10218 	addc	a,(_axradio_transmit_PARM_3 + 1)
   2687 FA                10219 	mov	r2,a
   2688 C3                10220 	clr	c
   2689 EB                10221 	mov	a,r3
   268A 99                10222 	subb	a,r1
   268B EC                10223 	mov	a,r4
   268C 9A                10224 	subb	a,r2
   268D 50 04             10225 	jnc	00105$
                          10226 ;	..\COMMON\easyax5043.c:1923: return AXRADIO_ERR_INVALID;
   268F 75 82 04          10227 	mov	dpl,#0x04
   2692 22                10228 	ret
   2693                   10229 00105$:
                          10230 ;	..\COMMON\easyax5043.c:1925: if (pktlen) {
   2693 E5*05             10231 	mov	a,_axradio_transmit_PARM_3
   2695 45*06             10232 	orl	a,(_axradio_transmit_PARM_3 + 1)
   2697 60 2D             10233 	jz	00110$
                          10234 ;	..\COMMON\easyax5043.c:1926: uint8_t __autodata i = pktlen;
   2699 AC*05             10235 	mov	r4,_axradio_transmit_PARM_3
                          10236 ;	..\COMMON\easyax5043.c:1927: AX5043_FIFODATA = AX5043_FIFOCMD_DATA | (7 << 5);
                          10237 ;	..\COMMON\easyax5043.c:1928: AX5043_FIFODATA = i + 1;
   269B 90 40 29          10238 	mov	dptr,#_AX5043_FIFODATA
   269E 74 E1             10239 	mov	a,#0xE1
   26A0 F0                10240 	movx	@dptr,a
   26A1 EC                10241 	mov	a,r4
   26A2 04                10242 	inc	a
   26A3 F0                10243 	movx	@dptr,a
                          10244 ;	..\COMMON\easyax5043.c:1929: AX5043_FIFODATA = 0x08;
   26A4 90 40 29          10245 	mov	dptr,#_AX5043_FIFODATA
   26A7 74 08             10246 	mov	a,#0x08
   26A9 F0                10247 	movx	@dptr,a
                          10248 ;	..\COMMON\easyax5043.c:1930: do {
   26AA A9*02             10249 	mov	r1,_axradio_transmit_PARM_2
   26AC AA*03             10250 	mov	r2,(_axradio_transmit_PARM_2 + 1)
   26AE AB*04             10251 	mov	r3,(_axradio_transmit_PARM_2 + 2)
   26B0                   10252 00106$:
                          10253 ;	..\COMMON\easyax5043.c:1931: AX5043_FIFODATA = *pkt++;
   26B0 89 82             10254 	mov	dpl,r1
   26B2 8A 83             10255 	mov	dph,r2
   26B4 8B F0             10256 	mov	b,r3
   26B6 12s00r00          10257 	lcall	__gptrget
   26B9 F8                10258 	mov	r0,a
   26BA A3                10259 	inc	dptr
   26BB A9 82             10260 	mov	r1,dpl
   26BD AA 83             10261 	mov	r2,dph
   26BF 90 40 29          10262 	mov	dptr,#_AX5043_FIFODATA
   26C2 E8                10263 	mov	a,r0
   26C3 F0                10264 	movx	@dptr,a
                          10265 ;	..\COMMON\easyax5043.c:1932: } while (--i);
   26C4 DC EA             10266 	djnz	r4,00106$
   26C6                   10267 00110$:
                          10268 ;	..\COMMON\easyax5043.c:1934: AX5043_FIFOSTAT =  4; // FIFO commit
   26C6 90 40 28          10269 	mov	dptr,#_AX5043_FIFOSTAT
   26C9 74 04             10270 	mov	a,#0x04
   26CB F0                10271 	movx	@dptr,a
                          10272 ;	..\COMMON\easyax5043.c:1936: uint8_t __autodata iesave = IE & 0x80;
   26CC 74 80             10273 	mov	a,#0x80
   26CE 55 A8             10274 	anl	a,_IE
   26D0 FC                10275 	mov	r4,a
                          10276 ;	..\COMMON\easyax5043.c:1937: EA = 0;
   26D1 C2 AF             10277 	clr	_EA
                          10278 ;	..\COMMON\easyax5043.c:1938: AX5043_IRQMASK0 |= 0x08;
   26D3 90 40 07          10279 	mov	dptr,#_AX5043_IRQMASK0
   26D6 E0                10280 	movx	a,@dptr
   26D7 44 08             10281 	orl	a,#0x08
   26D9 F0                10282 	movx	@dptr,a
                          10283 ;	..\COMMON\easyax5043.c:1939: IE |= iesave;
   26DA EC                10284 	mov	a,r4
   26DB 42 A8             10285 	orl	_IE,a
                          10286 ;	..\COMMON\easyax5043.c:1941: return AXRADIO_ERR_NOERROR;
   26DD 75 82 00          10287 	mov	dpl,#0x00
   26E0 22                10288 	ret
                          10289 ;	..\COMMON\easyax5043.c:1943: case AXRADIO_MODE_SYNC_MASTER:
   26E1                   10290 00111$:
                          10291 ;	..\COMMON\easyax5043.c:1944: case AXRADIO_MODE_SYNC_ACK_MASTER:
   26E1                   10292 00112$:
                          10293 ;	..\COMMON\easyax5043.c:1945: goto dotx;
                          10294 ;	..\COMMON\easyax5043.c:1947: case AXRADIO_MODE_ASYNC_RECEIVE:
   26E1 80 44             10295 	sjmp	00126$
   26E3                   10296 00113$:
                          10297 ;	..\COMMON\easyax5043.c:1948: case AXRADIO_MODE_WOR_RECEIVE:
   26E3                   10298 00114$:
                          10299 ;	..\COMMON\easyax5043.c:1949: if (axradio_syncstate != syncstate_off)
   26E3 90s00r00          10300 	mov	dptr,#_axradio_syncstate
   26E6 E0                10301 	movx	a,@dptr
   26E7 FC                10302 	mov	r4,a
   26E8 60 04             10303 	jz	00116$
                          10304 ;	..\COMMON\easyax5043.c:1950: return AXRADIO_ERR_BUSY;
   26EA 75 82 02          10305 	mov	dpl,#0x02
   26ED 22                10306 	ret
   26EE                   10307 00116$:
                          10308 ;	..\COMMON\easyax5043.c:1951: AX5043_IRQMASK1 = 0x00;
   26EE 90 40 06          10309 	mov	dptr,#_AX5043_IRQMASK1
                          10310 ;	..\COMMON\easyax5043.c:1952: AX5043_IRQMASK0 = 0x00;
   26F1 E4                10311 	clr	a
   26F2 F0                10312 	movx	@dptr,a
   26F3 90 40 07          10313 	mov	dptr,#_AX5043_IRQMASK0
   26F6 F0                10314 	movx	@dptr,a
                          10315 ;	..\COMMON\easyax5043.c:1953: AX5043_PWRMODE = AX5043_PWRSTATE_XTAL_ON;
   26F7 90 40 02          10316 	mov	dptr,#_AX5043_PWRMODE
   26FA 74 05             10317 	mov	a,#0x05
   26FC F0                10318 	movx	@dptr,a
                          10319 ;	..\COMMON\easyax5043.c:1954: AX5043_FIFOSTAT = 3;
   26FD 90 40 28          10320 	mov	dptr,#_AX5043_FIFOSTAT
   2700 74 03             10321 	mov	a,#0x03
   2702 F0                10322 	movx	@dptr,a
                          10323 ;	..\COMMON\easyax5043.c:1955: while (AX5043_POWSTAT & 0x08);
   2703                   10324 00117$:
   2703 90 40 03          10325 	mov	dptr,#_AX5043_POWSTAT
   2706 E0                10326 	movx	a,@dptr
   2707 FC                10327 	mov	r4,a
   2708 20 E3 F8          10328 	jb	acc.3,00117$
                          10329 ;	..\COMMON\easyax5043.c:1956: ax5043_init_registers_tx();
   270B C0 07             10330 	push	ar7
   270D C0 06             10331 	push	ar6
   270F C0 05             10332 	push	ar5
   2711 12s00r96          10333 	lcall	_ax5043_init_registers_tx
   2714 D0 05             10334 	pop	ar5
   2716 D0 06             10335 	pop	ar6
   2718 D0 07             10336 	pop	ar7
                          10337 ;	..\COMMON\easyax5043.c:1957: goto dotx;
                          10338 ;	..\COMMON\easyax5043.c:1959: case AXRADIO_MODE_ASYNC_TRANSMIT:
   271A 80 0B             10339 	sjmp	00126$
   271C                   10340 00120$:
                          10341 ;	..\COMMON\easyax5043.c:1960: case AXRADIO_MODE_WOR_TRANSMIT:
   271C                   10342 00121$:
                          10343 ;	..\COMMON\easyax5043.c:1961: case AXRADIO_MODE_ACK_TRANSMIT:
   271C                   10344 00122$:
                          10345 ;	..\COMMON\easyax5043.c:1962: case AXRADIO_MODE_WOR_ACK_TRANSMIT:
   271C                   10346 00123$:
                          10347 ;	..\COMMON\easyax5043.c:1963: if (axradio_syncstate != syncstate_off)
   271C 90s00r00          10348 	mov	dptr,#_axradio_syncstate
   271F E0                10349 	movx	a,@dptr
   2720 FC                10350 	mov	r4,a
   2721 60 04             10351 	jz	00126$
                          10352 ;	..\COMMON\easyax5043.c:1964: return AXRADIO_ERR_BUSY;
   2723 75 82 02          10353 	mov	dpl,#0x02
   2726 22                10354 	ret
                          10355 ;	..\COMMON\easyax5043.c:1965: dotx:
   2727                   10356 00126$:
                          10357 ;	..\COMMON\easyax5043.c:1966: axradio_ack_count = axradio_framing_ack_retransmissions;
   2727 90s00r00          10358 	mov	dptr,#_axradio_framing_ack_retransmissions
   272A E4                10359 	clr	a
   272B 93                10360 	movc	a,@a+dptr
   272C 90s00r0A          10361 	mov	dptr,#_axradio_ack_count
   272F F0                10362 	movx	@dptr,a
                          10363 ;	..\COMMON\easyax5043.c:1967: ++axradio_ack_seqnr;
   2730 90s00r0B          10364 	mov	dptr,#_axradio_ack_seqnr
   2733 E0                10365 	movx	a,@dptr
   2734 24 01             10366 	add	a,#0x01
   2736 F0                10367 	movx	@dptr,a
                          10368 ;	..\COMMON\easyax5043.c:1968: axradio_txbuffer_len = pktlen + axradio_framing_maclen;
   2737 90s00r00          10369 	mov	dptr,#_axradio_framing_maclen
   273A E4                10370 	clr	a
   273B 93                10371 	movc	a,@a+dptr
   273C FC                10372 	mov	r4,a
   273D 7B 00             10373 	mov	r3,#0x00
   273F 25*05             10374 	add	a,_axradio_transmit_PARM_3
   2741 FA                10375 	mov	r2,a
   2742 EB                10376 	mov	a,r3
   2743 35*06             10377 	addc	a,(_axradio_transmit_PARM_3 + 1)
   2745 FB                10378 	mov	r3,a
   2746 90s00r01          10379 	mov	dptr,#_axradio_txbuffer_len
   2749 EA                10380 	mov	a,r2
   274A F0                10381 	movx	@dptr,a
   274B A3                10382 	inc	dptr
   274C EB                10383 	mov	a,r3
   274D F0                10384 	movx	@dptr,a
                          10385 ;	..\COMMON\easyax5043.c:1969: if (axradio_txbuffer_len > sizeof(axradio_txbuffer))
   274E C3                10386 	clr	c
   274F 74 04             10387 	mov	a,#0x04
   2751 9A                10388 	subb	a,r2
   2752 74 01             10389 	mov	a,#0x01
   2754 9B                10390 	subb	a,r3
   2755 50 04             10391 	jnc	00128$
                          10392 ;	..\COMMON\easyax5043.c:1970: return AXRADIO_ERR_INVALID;
   2757 75 82 04          10393 	mov	dpl,#0x04
   275A 22                10394 	ret
   275B                   10395 00128$:
                          10396 ;	..\COMMON\easyax5043.c:1971: memset_xdata(axradio_txbuffer, 0, axradio_framing_maclen);
   275B 8C*00             10397 	mov	_memset_PARM_3,r4
   275D 75*01 00          10398 	mov	(_memset_PARM_3 + 1),#0x00
   2760 75*00 00          10399 	mov	_memset_PARM_2,#0x00
   2763 90s00r26          10400 	mov	dptr,#_axradio_txbuffer
   2766 75 F0 00          10401 	mov	b,#0x00
   2769 C0 07             10402 	push	ar7
   276B C0 06             10403 	push	ar6
   276D C0 05             10404 	push	ar5
   276F 12s00r00          10405 	lcall	_memset
                          10406 ;	..\COMMON\easyax5043.c:1972: memcpy_xdatageneric(&axradio_txbuffer[axradio_framing_maclen], pkt, pktlen);
   2772 90s00r00          10407 	mov	dptr,#_axradio_framing_maclen
   2775 E4                10408 	clr	a
   2776 93                10409 	movc	a,@a+dptr
   2777 24r26             10410 	add	a,#_axradio_txbuffer
   2779 FC                10411 	mov	r4,a
   277A E4                10412 	clr	a
   277B 34s00             10413 	addc	a,#(_axradio_txbuffer >> 8)
   277D FB                10414 	mov	r3,a
   277E 7A 00             10415 	mov	r2,#0x00
   2780 85*02*00          10416 	mov	_memcpy_PARM_2,_axradio_transmit_PARM_2
   2783 85*03*01          10417 	mov	(_memcpy_PARM_2 + 1),(_axradio_transmit_PARM_2 + 1)
   2786 85*04*02          10418 	mov	(_memcpy_PARM_2 + 2),(_axradio_transmit_PARM_2 + 2)
   2789 85*05*00          10419 	mov	_memcpy_PARM_3,_axradio_transmit_PARM_3
   278C 85*06*01          10420 	mov	(_memcpy_PARM_3 + 1),(_axradio_transmit_PARM_3 + 1)
   278F 8C 82             10421 	mov	dpl,r4
   2791 8B 83             10422 	mov	dph,r3
   2793 8A F0             10423 	mov	b,r2
   2795 12s00r00          10424 	lcall	_memcpy
   2798 D0 05             10425 	pop	ar5
   279A D0 06             10426 	pop	ar6
   279C D0 07             10427 	pop	ar7
                          10428 ;	..\COMMON\easyax5043.c:1973: if (axradio_framing_ack_seqnrpos != 0xff)
   279E 90s00r00          10429 	mov	dptr,#_axradio_framing_ack_seqnrpos
   27A1 E4                10430 	clr	a
   27A2 93                10431 	movc	a,@a+dptr
   27A3 FC                10432 	mov	r4,a
   27A4 BC FF 02          10433 	cjne	r4,#0xFF,00230$
   27A7 80 12             10434 	sjmp	00130$
   27A9                   10435 00230$:
                          10436 ;	..\COMMON\easyax5043.c:1974: axradio_txbuffer[axradio_framing_ack_seqnrpos] = axradio_ack_seqnr;
   27A9 EC                10437 	mov	a,r4
   27AA 24r26             10438 	add	a,#_axradio_txbuffer
   27AC FC                10439 	mov	r4,a
   27AD E4                10440 	clr	a
   27AE 34s00             10441 	addc	a,#(_axradio_txbuffer >> 8)
   27B0 FB                10442 	mov	r3,a
   27B1 90s00r0B          10443 	mov	dptr,#_axradio_ack_seqnr
   27B4 E0                10444 	movx	a,@dptr
   27B5 FA                10445 	mov	r2,a
   27B6 8C 82             10446 	mov	dpl,r4
   27B8 8B 83             10447 	mov	dph,r3
   27BA F0                10448 	movx	@dptr,a
   27BB                   10449 00130$:
                          10450 ;	..\COMMON\easyax5043.c:1975: if (axradio_framing_destaddrpos != 0xff)
   27BB 90s00r00          10451 	mov	dptr,#_axradio_framing_destaddrpos
   27BE E4                10452 	clr	a
   27BF 93                10453 	movc	a,@a+dptr
   27C0 FC                10454 	mov	r4,a
   27C1 BC FF 02          10455 	cjne	r4,#0xFF,00231$
   27C4 80 24             10456 	sjmp	00132$
   27C6                   10457 00231$:
                          10458 ;	..\COMMON\easyax5043.c:1976: memcpy_xdatageneric(&axradio_txbuffer[axradio_framing_destaddrpos], &addr->addr, axradio_framing_addrlen);
   27C6 EC                10459 	mov	a,r4
   27C7 24r26             10460 	add	a,#_axradio_txbuffer
   27C9 FC                10461 	mov	r4,a
   27CA E4                10462 	clr	a
   27CB 34s00             10463 	addc	a,#(_axradio_txbuffer >> 8)
   27CD FB                10464 	mov	r3,a
   27CE 7A 00             10465 	mov	r2,#0x00
   27D0 8D*00             10466 	mov	_memcpy_PARM_2,r5
   27D2 8E*01             10467 	mov	(_memcpy_PARM_2 + 1),r6
   27D4 8F*02             10468 	mov	(_memcpy_PARM_2 + 2),r7
   27D6 90s00r00          10469 	mov	dptr,#_axradio_framing_addrlen
   27D9 E4                10470 	clr	a
   27DA 93                10471 	movc	a,@a+dptr
   27DB FF                10472 	mov	r7,a
   27DC 8F*00             10473 	mov	_memcpy_PARM_3,r7
   27DE 75*01 00          10474 	mov	(_memcpy_PARM_3 + 1),#0x00
   27E1 8C 82             10475 	mov	dpl,r4
   27E3 8B 83             10476 	mov	dph,r3
   27E5 8A F0             10477 	mov	b,r2
   27E7 12s00r00          10478 	lcall	_memcpy
   27EA                   10479 00132$:
                          10480 ;	..\COMMON\easyax5043.c:1977: if (axradio_framing_sourceaddrpos != 0xff)
   27EA 90s00r00          10481 	mov	dptr,#_axradio_framing_sourceaddrpos
   27ED E4                10482 	clr	a
   27EE 93                10483 	movc	a,@a+dptr
   27EF FF                10484 	mov	r7,a
   27F0 BF FF 02          10485 	cjne	r7,#0xFF,00232$
   27F3 80 27             10486 	sjmp	00134$
   27F5                   10487 00232$:
                          10488 ;	..\COMMON\easyax5043.c:1978: memcpy_xdata(&axradio_txbuffer[axradio_framing_sourceaddrpos], &axradio_localaddr.addr, axradio_framing_addrlen);
   27F5 EF                10489 	mov	a,r7
   27F6 24r26             10490 	add	a,#_axradio_txbuffer
   27F8 FF                10491 	mov	r7,a
   27F9 E4                10492 	clr	a
   27FA 34s00             10493 	addc	a,#(_axradio_txbuffer >> 8)
   27FC FE                10494 	mov	r6,a
   27FD 7D 00             10495 	mov	r5,#0x00
   27FF 75*00r1A          10496 	mov	_memcpy_PARM_2,#_axradio_localaddr
   2802 75*01s00          10497 	mov	(_memcpy_PARM_2 + 1),#(_axradio_localaddr >> 8)
   2805 75*02 00          10498 	mov	(_memcpy_PARM_2 + 2),#0x00
   2808 90s00r00          10499 	mov	dptr,#_axradio_framing_addrlen
   280B E4                10500 	clr	a
   280C 93                10501 	movc	a,@a+dptr
   280D FC                10502 	mov	r4,a
   280E 8C*00             10503 	mov	_memcpy_PARM_3,r4
   2810 75*01 00          10504 	mov	(_memcpy_PARM_3 + 1),#0x00
   2813 8F 82             10505 	mov	dpl,r7
   2815 8E 83             10506 	mov	dph,r6
   2817 8D F0             10507 	mov	b,r5
   2819 12s00r00          10508 	lcall	_memcpy
   281C                   10509 00134$:
                          10510 ;	..\COMMON\easyax5043.c:1979: if (axradio_framing_lenmask) {
   281C 90s00r00          10511 	mov	dptr,#_axradio_framing_lenmask
   281F E4                10512 	clr	a
   2820 93                10513 	movc	a,@a+dptr
   2821 FF                10514 	mov	r7,a
   2822 60 30             10515 	jz	00136$
                          10516 ;	..\COMMON\easyax5043.c:1980: uint8_t __autodata len_byte = (uint8_t)(axradio_txbuffer_len - axradio_framing_lenoffs) & axradio_framing_lenmask; // if you prefer not counting the len byte itself, set LENOFFS = 1
   2824 90s00r01          10517 	mov	dptr,#_axradio_txbuffer_len
   2827 E0                10518 	movx	a,@dptr
   2828 FD                10519 	mov	r5,a
   2829 A3                10520 	inc	dptr
   282A E0                10521 	movx	a,@dptr
   282B 90s00r00          10522 	mov	dptr,#_axradio_framing_lenoffs
   282E E4                10523 	clr	a
   282F 93                10524 	movc	a,@a+dptr
   2830 FE                10525 	mov	r6,a
   2831 ED                10526 	mov	a,r5
   2832 C3                10527 	clr	c
   2833 9E                10528 	subb	a,r6
   2834 5F                10529 	anl	a,r7
   2835 FE                10530 	mov	r6,a
                          10531 ;	..\COMMON\easyax5043.c:1981: axradio_txbuffer[axradio_framing_lenpos] = (axradio_txbuffer[axradio_framing_lenpos] & (uint8_t)~axradio_framing_lenmask) | len_byte;
   2836 90s00r00          10532 	mov	dptr,#_axradio_framing_lenpos
   2839 E4                10533 	clr	a
   283A 93                10534 	movc	a,@a+dptr
   283B 24r26             10535 	add	a,#_axradio_txbuffer
   283D FD                10536 	mov	r5,a
   283E E4                10537 	clr	a
   283F 34s00             10538 	addc	a,#(_axradio_txbuffer >> 8)
   2841 FC                10539 	mov	r4,a
   2842 8D 82             10540 	mov	dpl,r5
   2844 8C 83             10541 	mov	dph,r4
   2846 E0                10542 	movx	a,@dptr
   2847 FB                10543 	mov	r3,a
   2848 EF                10544 	mov	a,r7
   2849 F4                10545 	cpl	a
   284A FF                10546 	mov	r7,a
   284B 5B                10547 	anl	a,r3
   284C 42 06             10548 	orl	ar6,a
   284E 8D 82             10549 	mov	dpl,r5
   2850 8C 83             10550 	mov	dph,r4
   2852 EE                10551 	mov	a,r6
   2853 F0                10552 	movx	@dptr,a
   2854                   10553 00136$:
                          10554 ;	..\COMMON\easyax5043.c:1983: if (axradio_framing_swcrclen) {
   2854 90s00r00          10555 	mov	dptr,#_axradio_framing_swcrclen
   2857 E4                10556 	clr	a
   2858 93                10557 	movc	a,@a+dptr
   2859 FF                10558 	mov	r7,a
   285A 60 2E             10559 	jz	00138$
                          10560 ;	..\COMMON\easyax5043.c:1984: axradio_framing_append_crc(axradio_txbuffer, axradio_txbuffer_len);
   285C 90s00r01          10561 	mov	dptr,#_axradio_txbuffer_len
   285F E0                10562 	movx	a,@dptr
   2860 C0 E0             10563 	push	acc
   2862 A3                10564 	inc	dptr
   2863 E0                10565 	movx	a,@dptr
   2864 C0 E0             10566 	push	acc
   2866 90s00r26          10567 	mov	dptr,#_axradio_txbuffer
   2869 12s00r00          10568 	lcall	_axradio_framing_append_crc
   286C 15 81             10569 	dec	sp
   286E 15 81             10570 	dec	sp
                          10571 ;	..\COMMON\easyax5043.c:1985: axradio_txbuffer_len += axradio_framing_swcrclen;
   2870 90s00r00          10572 	mov	dptr,#_axradio_framing_swcrclen
   2873 E4                10573 	clr	a
   2874 93                10574 	movc	a,@a+dptr
   2875 FF                10575 	mov	r7,a
   2876 7E 00             10576 	mov	r6,#0x00
   2878 90s00r01          10577 	mov	dptr,#_axradio_txbuffer_len
   287B E0                10578 	movx	a,@dptr
   287C FC                10579 	mov	r4,a
   287D A3                10580 	inc	dptr
   287E E0                10581 	movx	a,@dptr
   287F FD                10582 	mov	r5,a
   2880 90s00r01          10583 	mov	dptr,#_axradio_txbuffer_len
   2883 EF                10584 	mov	a,r7
   2884 2C                10585 	add	a,r4
   2885 F0                10586 	movx	@dptr,a
   2886 EE                10587 	mov	a,r6
   2887 3D                10588 	addc	a,r5
   2888 A3                10589 	inc	dptr
   2889 F0                10590 	movx	@dptr,a
   288A                   10591 00138$:
                          10592 ;	..\COMMON\easyax5043.c:1987: if (axradio_phy_pn9)
   288A 90s00r00          10593 	mov	dptr,#_axradio_phy_pn9
   288D E4                10594 	clr	a
   288E 93                10595 	movc	a,@a+dptr
   288F FF                10596 	mov	r7,a
   2890 60 2F             10597 	jz	00140$
                          10598 ;	..\COMMON\easyax5043.c:1988: pn9_buffer(axradio_txbuffer, axradio_txbuffer_len, 0x1ff, -(AX5043_ENCODING & 0x01));
   2892 90 40 11          10599 	mov	dptr,#_AX5043_ENCODING
   2895 E0                10600 	movx	a,@dptr
   2896 FF                10601 	mov	r7,a
   2897 53 07 01          10602 	anl	ar7,#0x01
   289A C3                10603 	clr	c
   289B E4                10604 	clr	a
   289C 9F                10605 	subb	a,r7
   289D FF                10606 	mov	r7,a
   289E C0 07             10607 	push	ar7
   28A0 74 FF             10608 	mov	a,#0xFF
   28A2 C0 E0             10609 	push	acc
   28A4 74 01             10610 	mov	a,#0x01
   28A6 C0 E0             10611 	push	acc
   28A8 90s00r01          10612 	mov	dptr,#_axradio_txbuffer_len
   28AB E0                10613 	movx	a,@dptr
   28AC C0 E0             10614 	push	acc
   28AE A3                10615 	inc	dptr
   28AF E0                10616 	movx	a,@dptr
   28B0 C0 E0             10617 	push	acc
   28B2 90s00r26          10618 	mov	dptr,#_axradio_txbuffer
   28B5 75 F0 00          10619 	mov	b,#0x00
   28B8 12s00r00          10620 	lcall	_pn9_buffer
   28BB E5 81             10621 	mov	a,sp
   28BD 24 FB             10622 	add	a,#0xfb
   28BF F5 81             10623 	mov	sp,a
   28C1                   10624 00140$:
                          10625 ;	..\COMMON\easyax5043.c:1989: if (axradio_mode == AXRADIO_MODE_SYNC_MASTER ||
   28C1 74 20             10626 	mov	a,#0x20
   28C3 B5*00 02          10627 	cjne	a,_axradio_mode,00236$
   28C6 80 05             10628 	sjmp	00141$
   28C8                   10629 00236$:
                          10630 ;	..\COMMON\easyax5043.c:1990: axradio_mode == AXRADIO_MODE_SYNC_ACK_MASTER)
   28C8 74 21             10631 	mov	a,#0x21
   28CA B5*00 04          10632 	cjne	a,_axradio_mode,00142$
   28CD                   10633 00141$:
                          10634 ;	..\COMMON\easyax5043.c:1991: return AXRADIO_ERR_NOERROR;
   28CD 75 82 00          10635 	mov	dpl,#0x00
   28D0 22                10636 	ret
   28D1                   10637 00142$:
                          10638 ;	..\COMMON\easyax5043.c:1992: if (axradio_mode == AXRADIO_MODE_WOR_TRANSMIT ||
   28D1 74 11             10639 	mov	a,#0x11
   28D3 B5*00 02          10640 	cjne	a,_axradio_mode,00239$
   28D6 80 05             10641 	sjmp	00144$
   28D8                   10642 00239$:
                          10643 ;	..\COMMON\easyax5043.c:1993: axradio_mode == AXRADIO_MODE_WOR_ACK_TRANSMIT)
   28D8 74 13             10644 	mov	a,#0x13
   28DA B5*00 14          10645 	cjne	a,_axradio_mode,00145$
   28DD                   10646 00144$:
                          10647 ;	..\COMMON\easyax5043.c:1994: axradio_txbuffer_cnt = axradio_phy_preamble_wor_longlen;
   28DD 90s00r00          10648 	mov	dptr,#_axradio_phy_preamble_wor_longlen
   28E0 E4                10649 	clr	a
   28E1 93                10650 	movc	a,@a+dptr
   28E2 FE                10651 	mov	r6,a
   28E3 74 01             10652 	mov	a,#0x01
   28E5 93                10653 	movc	a,@a+dptr
   28E6 FF                10654 	mov	r7,a
   28E7 90s00r03          10655 	mov	dptr,#_axradio_txbuffer_cnt
   28EA EE                10656 	mov	a,r6
   28EB F0                10657 	movx	@dptr,a
   28EC A3                10658 	inc	dptr
   28ED EF                10659 	mov	a,r7
   28EE F0                10660 	movx	@dptr,a
   28EF 80 12             10661 	sjmp	00146$
   28F1                   10662 00145$:
                          10663 ;	..\COMMON\easyax5043.c:1996: axradio_txbuffer_cnt = axradio_phy_preamble_longlen;
   28F1 90s00r00          10664 	mov	dptr,#_axradio_phy_preamble_longlen
   28F4 E4                10665 	clr	a
   28F5 93                10666 	movc	a,@a+dptr
   28F6 FE                10667 	mov	r6,a
   28F7 74 01             10668 	mov	a,#0x01
   28F9 93                10669 	movc	a,@a+dptr
   28FA FF                10670 	mov	r7,a
   28FB 90s00r03          10671 	mov	dptr,#_axradio_txbuffer_cnt
   28FE EE                10672 	mov	a,r6
   28FF F0                10673 	movx	@dptr,a
   2900 A3                10674 	inc	dptr
   2901 EF                10675 	mov	a,r7
   2902 F0                10676 	movx	@dptr,a
   2903                   10677 00146$:
                          10678 ;	..\COMMON\easyax5043.c:1997: if (axradio_phy_lbt_retries) {
   2903 90s00r00          10679 	mov	dptr,#_axradio_phy_lbt_retries
   2906 E4                10680 	clr	a
   2907 93                10681 	movc	a,@a+dptr
   2908 FF                10682 	mov	r7,a
   2909 60 78             10683 	jz	00159$
                          10684 ;	..\COMMON\easyax5043.c:1998: switch (axradio_mode) {
   290B AF*00             10685 	mov	r7,_axradio_mode
   290D BF 10 02          10686 	cjne	r7,#0x10,00243$
   2910 80 21             10687 	sjmp	00155$
   2912                   10688 00243$:
   2912 BF 11 02          10689 	cjne	r7,#0x11,00244$
   2915 80 1C             10690 	sjmp	00155$
   2917                   10691 00244$:
   2917 BF 12 02          10692 	cjne	r7,#0x12,00245$
   291A 80 17             10693 	sjmp	00155$
   291C                   10694 00245$:
   291C BF 13 02          10695 	cjne	r7,#0x13,00246$
   291F 80 12             10696 	sjmp	00155$
   2921                   10697 00246$:
   2921 BF 18 02          10698 	cjne	r7,#0x18,00247$
   2924 80 0D             10699 	sjmp	00155$
   2926                   10700 00247$:
   2926 BF 19 02          10701 	cjne	r7,#0x19,00248$
   2929 80 08             10702 	sjmp	00155$
   292B                   10703 00248$:
   292B BF 1A 02          10704 	cjne	r7,#0x1A,00249$
   292E 80 03             10705 	sjmp	00155$
   2930                   10706 00249$:
   2930 BF 1B 50          10707 	cjne	r7,#0x1B,00159$
                          10708 ;	..\COMMON\easyax5043.c:2006: case AXRADIO_MODE_ACK_RECEIVE:
   2933                   10709 00155$:
                          10710 ;	..\COMMON\easyax5043.c:2007: ax5043_off_xtal();
   2933 12s0Cr3F          10711 	lcall	_ax5043_off_xtal
                          10712 ;	..\COMMON\easyax5043.c:2008: ax5043_init_registers_rx();
   2936 12s00rCB          10713 	lcall	_ax5043_init_registers_rx
                          10714 ;	..\COMMON\easyax5043.c:2009: AX5043_RSSIREFERENCE = axradio_phy_rssireference;
   2939 90s00r00          10715 	mov	dptr,#_axradio_phy_rssireference
   293C E4                10716 	clr	a
   293D 93                10717 	movc	a,@a+dptr
   293E 90 42 2C          10718 	mov	dptr,#_AX5043_RSSIREFERENCE
   2941 F0                10719 	movx	@dptr,a
                          10720 ;	..\COMMON\easyax5043.c:2010: AX5043_PWRMODE = AX5043_PWRSTATE_FULL_RX;
   2942 90 40 02          10721 	mov	dptr,#_AX5043_PWRMODE
   2945 74 09             10722 	mov	a,#0x09
   2947 F0                10723 	movx	@dptr,a
                          10724 ;	..\COMMON\easyax5043.c:2011: axradio_ack_count = axradio_phy_lbt_retries;
   2948 90s00r00          10725 	mov	dptr,#_axradio_phy_lbt_retries
   294B E4                10726 	clr	a
   294C 93                10727 	movc	a,@a+dptr
   294D 90s00r0A          10728 	mov	dptr,#_axradio_ack_count
   2950 F0                10729 	movx	@dptr,a
                          10730 ;	..\COMMON\easyax5043.c:2012: axradio_syncstate = syncstate_lbt;
   2951 90s00r00          10731 	mov	dptr,#_axradio_syncstate
   2954 74 01             10732 	mov	a,#0x01
   2956 F0                10733 	movx	@dptr,a
                          10734 ;	..\COMMON\easyax5043.c:2013: wtimer_remove(&axradio_timer);
   2957 90s02r85          10735 	mov	dptr,#_axradio_timer
   295A 12s00r00          10736 	lcall	_wtimer_remove
                          10737 ;	..\COMMON\easyax5043.c:2014: axradio_timer.time = axradio_phy_cs_period;
   295D 90s00r00          10738 	mov	dptr,#_axradio_phy_cs_period
   2960 E4                10739 	clr	a
   2961 93                10740 	movc	a,@a+dptr
   2962 FE                10741 	mov	r6,a
   2963 74 01             10742 	mov	a,#0x01
   2965 93                10743 	movc	a,@a+dptr
   2966 FF                10744 	mov	r7,a
   2967 7D 00             10745 	mov	r5,#0x00
   2969 7C 00             10746 	mov	r4,#0x00
   296B 90s02r89          10747 	mov	dptr,#(_axradio_timer + 0x0004)
   296E EE                10748 	mov	a,r6
   296F F0                10749 	movx	@dptr,a
   2970 A3                10750 	inc	dptr
   2971 EF                10751 	mov	a,r7
   2972 F0                10752 	movx	@dptr,a
   2973 A3                10753 	inc	dptr
   2974 ED                10754 	mov	a,r5
   2975 F0                10755 	movx	@dptr,a
   2976 A3                10756 	inc	dptr
   2977 EC                10757 	mov	a,r4
   2978 F0                10758 	movx	@dptr,a
                          10759 ;	..\COMMON\easyax5043.c:2015: wtimer0_addrelative(&axradio_timer);
   2979 90s02r85          10760 	mov	dptr,#_axradio_timer
   297C 12s00r00          10761 	lcall	_wtimer0_addrelative
                          10762 ;	..\COMMON\easyax5043.c:2016: return AXRADIO_ERR_NOERROR;
   297F 75 82 00          10763 	mov	dpl,#0x00
                          10764 ;	..\COMMON\easyax5043.c:2020: }
   2982 22                10765 	ret
   2983                   10766 00159$:
                          10767 ;	..\COMMON\easyax5043.c:2022: axradio_syncstate = syncstate_asynctx;
   2983 90s00r00          10768 	mov	dptr,#_axradio_syncstate
   2986 74 02             10769 	mov	a,#0x02
   2988 F0                10770 	movx	@dptr,a
                          10771 ;	..\COMMON\easyax5043.c:2023: ax5043_prepare_tx();
   2989 12s0Cr10          10772 	lcall	_ax5043_prepare_tx
                          10773 ;	..\COMMON\easyax5043.c:2024: return AXRADIO_ERR_NOERROR;
   298C 75 82 00          10774 	mov	dpl,#0x00
                          10775 ;	..\COMMON\easyax5043.c:2026: default:
   298F 22                10776 	ret
   2990                   10777 00160$:
                          10778 ;	..\COMMON\easyax5043.c:2027: return AXRADIO_ERR_NOTSUPPORTED;
   2990 75 82 01          10779 	mov	dpl,#0x01
                          10780 ;	..\COMMON\easyax5043.c:2028: }
   2993 22                10781 	ret
                          10782 ;------------------------------------------------------------
                          10783 ;Allocation info for local variables in function 'axradio_set_paramsets'
                          10784 ;------------------------------------------------------------
                          10785 ;val                       Allocated to registers r7 
                          10786 ;------------------------------------------------------------
                          10787 ;	..\COMMON\easyax5043.c:2031: static __reentrantb uint8_t axradio_set_paramsets(uint8_t val) __reentrant
                          10788 ;	-----------------------------------------
                          10789 ;	 function axradio_set_paramsets
                          10790 ;	-----------------------------------------
   2994                   10791 _axradio_set_paramsets:
   2994 AF 82             10792 	mov	r7,dpl
                          10793 ;	..\COMMON\easyax5043.c:2033: if (axradio_mode != AXRADIO_MODE_STREAM_RECEIVE &&
   2996 74 1C             10794 	mov	a,#0x1C
   2998 B5*00 02          10795 	cjne	a,_axradio_mode,00113$
   299B 80 12             10796 	sjmp	00102$
   299D                   10797 00113$:
                          10798 ;	..\COMMON\easyax5043.c:2034: axradio_mode != AXRADIO_MODE_STREAM_RECEIVE_UNENC &&
   299D 74 1D             10799 	mov	a,#0x1D
   299F B5*00 02          10800 	cjne	a,_axradio_mode,00114$
   29A2 80 0B             10801 	sjmp	00102$
   29A4                   10802 00114$:
                          10803 ;	..\COMMON\easyax5043.c:2035: axradio_mode != AXRADIO_MODE_STREAM_RECEIVE_SCRAM)
   29A4 74 1E             10804 	mov	a,#0x1E
   29A6 B5*00 02          10805 	cjne	a,_axradio_mode,00115$
   29A9 80 04             10806 	sjmp	00102$
   29AB                   10807 00115$:
                          10808 ;	..\COMMON\easyax5043.c:2036: return AXRADIO_ERR_NOTSUPPORTED;
   29AB 75 82 01          10809 	mov	dpl,#0x01
   29AE 22                10810 	ret
   29AF                   10811 00102$:
                          10812 ;	..\COMMON\easyax5043.c:2037: AX5043_RXPARAMSETS = val;
   29AF 90 41 17          10813 	mov	dptr,#_AX5043_RXPARAMSETS
   29B2 EF                10814 	mov	a,r7
   29B3 F0                10815 	movx	@dptr,a
                          10816 ;	..\COMMON\easyax5043.c:2038: return AXRADIO_ERR_NOERROR;
   29B4 75 82 00          10817 	mov	dpl,#0x00
   29B7 22                10818 	ret
                          10819 ;------------------------------------------------------------
                          10820 ;Allocation info for local variables in function 'axradio_agc_freeze'
                          10821 ;------------------------------------------------------------
                          10822 ;	..\COMMON\easyax5043.c:2041: uint8_t axradio_agc_freeze(void)
                          10823 ;	-----------------------------------------
                          10824 ;	 function axradio_agc_freeze
                          10825 ;	-----------------------------------------
   29B8                   10826 _axradio_agc_freeze:
                          10827 ;	..\COMMON\easyax5043.c:2043: return axradio_set_paramsets(0xff);
   29B8 75 82 FF          10828 	mov	dpl,#0xFF
   29BB 02s29r94          10829 	ljmp	_axradio_set_paramsets
                          10830 ;------------------------------------------------------------
                          10831 ;Allocation info for local variables in function 'axradio_agc_thaw'
                          10832 ;------------------------------------------------------------
                          10833 ;	..\COMMON\easyax5043.c:2046: uint8_t axradio_agc_thaw(void)
                          10834 ;	-----------------------------------------
                          10835 ;	 function axradio_agc_thaw
                          10836 ;	-----------------------------------------
   29BE                   10837 _axradio_agc_thaw:
                          10838 ;	..\COMMON\easyax5043.c:2048: return axradio_set_paramsets(0x00);
   29BE 75 82 00          10839 	mov	dpl,#0x00
   29C1 02s29r94          10840 	ljmp	_axradio_set_paramsets
                          10841 	.area CSEG    (CODE)
                          10842 	.area CONST   (CODE)
                          10843 	.area XINIT   (CODE)
   0000                   10844 __xinit__f30_saved:
   0000 3F                10845 	.db #0x3F	; 63
   0001                   10846 __xinit__f31_saved:
   0001 F0                10847 	.db #0xF0	; 240
   0002                   10848 __xinit__f32_saved:
   0002 3F                10849 	.db #0x3F	; 63
   0003                   10850 __xinit__f33_saved:
   0003 F0                10851 	.db #0xF0	; 240
                          10852 	.area CABS    (ABS,CODE)
